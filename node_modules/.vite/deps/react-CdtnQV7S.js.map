{"version":3,"file":"react-CdtnQV7S.js","names":["#isDefined","#define","#init","#standinEl","#loadComplete","#isLoaded","#nativeEl","#isInit","#initStandinEl","#initNativeEl","#upgradeProperty","#loadSrc","#forwardAttribute","#hasLoaded","_a","_b","React","CustomMediaElement"],"sources":["../../super-media-element/super-media-element.js","../../wistia-video-element/dist/wistia-video-element.js","../../wistia-video-element/dist/react.js"],"sourcesContent":["/**\n * Super Media Element\n * Based on https://github.com/muxinc/custom-video-element - Mux - MIT License\n *\n * The goal is to create an element that works just like the video element\n * but can be extended/sub-classed, because native elements cannot be\n * extended today across browsers. Support for extending async loaded video\n * like API's. e.g. video players.\n */\n\n// The onevent like props are weirdly set on the HTMLElement prototype with other\n// generic events making it impossible to pick these specific to HTMLMediaElement.\nexport const Events = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  'timeupdate',\n  'volumechange',\n  'waiting',\n  'waitingforkey',\n  'resize',\n  'enterpictureinpicture',\n  'leavepictureinpicture',\n  'webkitbeginfullscreen',\n  'webkitendfullscreen',\n  'webkitpresentationmodechanged',\n];\n\nexport const template = globalThis.document?.createElement('template');\n\nif (template) {\n  template.innerHTML = /*html*/`\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video,\n      audio {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n      }\n    </style>\n    <slot></slot>\n  `;\n}\n\n/**\n * @see https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\n */\nexport const SuperMediaMixin = (superclass, { tag, is }) => {\n\n  const nativeElTest = globalThis.document?.createElement(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n\n  return class SuperMedia extends superclass {\n    static Events = Events;\n    static template = template;\n    static skipAttributes = [];\n    static #isDefined;\n\n    static get observedAttributes() {\n      SuperMedia.#define();\n\n      // Include any attributes from the custom built-in.\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n\n      return [\n        ...natAttrs,\n        'autopictureinpicture',\n        'disablepictureinpicture',\n        'disableremoteplayback',\n        'autoplay',\n        'controls',\n        'controlslist',\n        'crossorigin',\n        'loop',\n        'muted',\n        'playsinline',\n        'poster',\n        'preload',\n        'src',\n      ];\n    }\n\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n\n      const propsToAttrs = new Set(this.observedAttributes);\n      // defaultMuted maps to the muted attribute, handled manually below.\n      propsToAttrs.delete('muted');\n\n      // Passthrough native el functions from the custom el to the native el\n      for (let prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n\n        const type = typeof nativeElTest[prop];\n        if (type == 'function') {\n          // Function\n          this.prototype[prop] = function (...args) {\n            this.#init();\n\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              return this.nativeEl[prop].apply(this.nativeEl, args);\n            };\n\n            if (this.loadComplete && !this.isLoaded) {\n              return this.loadComplete.then(fn);\n            }\n            return fn();\n          };\n        } else {\n          // Some properties like src, preload, defaultMuted are handled manually.\n\n          // Getter\n          let config = {\n            get() {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === '' ? true : val;\n              }\n\n              return this.get?.(prop) ?? this.nativeEl?.[prop] ?? this.#standinEl[prop];\n            },\n          };\n\n          if (prop !== prop.toUpperCase()) {\n            // Setter (not a CONSTANT)\n            config.set = async function (val) {\n              this.#init();\n\n              let attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n\n              if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n\n              this.nativeEl[prop] = val;\n            };\n          }\n\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n\n    #isInit;\n    #loadComplete;\n    #hasLoaded = false;\n    #isLoaded = false;\n    #nativeEl;\n    #standinEl;\n\n    constructor() {\n      super();\n\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.append(this.constructor.template.content.cloneNode(true));\n      }\n\n      // If a load method is provided in the child class create a load promise.\n      if (this.load !== SuperMedia.prototype.load) {\n        this.loadComplete = new PublicPromise();\n      }\n\n      // If the custom element is defined before the custom element's HTML is parsed\n      // no attributes will be available in the constructor (construction process).\n      // Wait until initializing in the attributeChangedCallback or\n      // connectedCallback or accessing any properties.\n    }\n\n    get loadComplete() {\n      return this.#loadComplete;\n    }\n\n    set loadComplete(promise) {\n      this.#isLoaded = false;\n      this.#loadComplete = promise;\n      promise?.then(() => {\n        this.#isLoaded = true;\n      });\n    }\n\n    get isLoaded() {\n      return this.#isLoaded;\n    }\n\n    get nativeEl() {\n      return this.#nativeEl\n        ?? this.shadowRoot.querySelector(tag)\n        ?? this.querySelector(tag);\n    }\n\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n\n    get defaultMuted() {\n      return this.hasAttribute('muted');\n    }\n\n    set defaultMuted(val) {\n      this.toggleAttribute('muted', Boolean(val));\n    }\n\n    get src() {\n      return this.getAttribute('src');\n    }\n\n    set src(val) {\n      this.setAttribute('src', `${val}`);\n    }\n\n    get preload() {\n      return this.getAttribute('preload') ?? this.nativeEl?.preload;\n    }\n\n    set preload(val) {\n      this.setAttribute('preload', `${val}`);\n    }\n\n    async #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n\n      this.#initStandinEl();\n      this.#initNativeEl();\n\n      for (let prop of nativeElProps)\n        this.#upgradeProperty(prop);\n\n      // Keep some native child elements like track and source in sync.\n      const childMap = new Map();\n      // An unnamed <slot> will be filled with all of the custom element's\n      // top-level child nodes that do not have the slot attribute.\n      const slotEl = this.shadowRoot.querySelector('slot:not([name])');\n      slotEl?.addEventListener('slotchange', () => {\n        const removeNativeChildren = new Map(childMap);\n        slotEl\n          .assignedElements()\n          .filter((el) => ['track', 'source'].includes(el.localName))\n          .forEach(async (el) => {\n            // If the source or track is still in the assigned elements keep it.\n            removeNativeChildren.delete(el);\n            // Re-use clones if possible.\n            let clone = childMap.get(el);\n            if (!clone) {\n              clone = el.cloneNode();\n              childMap.set(el, clone);\n            }\n            if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n            this.nativeEl.append?.(clone);\n          });\n        removeNativeChildren.forEach((el) => el.remove());\n      });\n\n      // The video events are dispatched on the SuperMediaElement instance.\n      // This makes it possible to add event listeners before the element is upgraded.\n      for (let type of this.constructor.Events) {\n        this.shadowRoot.addEventListener?.(type, (evt) => {\n          if (evt.target !== this.nativeEl) return;\n          this.dispatchEvent(new CustomEvent(evt.type, { detail: evt.detail }));\n        }, true);\n      }\n    }\n\n    #upgradeProperty(prop) {\n      // Sets properties that are set before the custom element is upgraded.\n      // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        // Delete the set property from this instance.\n        delete this[prop];\n        // Set the value again via the (prototype) setter on this class.\n        this[prop] = value;\n      }\n    }\n\n    #initStandinEl() {\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      const dummyEl = document.createElement(tag, { is });\n      dummyEl.muted = this.hasAttribute('muted');\n\n      for (let { name, value } of this.attributes) {\n        dummyEl.setAttribute(name, value);\n      }\n\n      this.#standinEl = {};\n      for (let name of getNativeElProps(dummyEl)) {\n        this.#standinEl[name] = dummyEl[name];\n      }\n\n      // unload dummy video element\n      dummyEl.removeAttribute('src');\n      dummyEl.load();\n    }\n\n    async #initNativeEl() {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // If there is no nativeEl by now, create it our bloody selves.\n      if (!this.nativeEl) {\n        const nativeEl = document.createElement(tag, { is });\n        nativeEl.part = tag;\n        this.shadowRoot.append(nativeEl);\n      }\n\n      // Neither Chrome or Firefox support setting the muted attribute\n      // after using document.createElement.\n      // Get around this by setting the muted property manually.\n      this.nativeEl.muted = this.hasAttribute('muted');\n    }\n\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      // Initialize right after construction when the attributes become available.\n      this.#init();\n\n      // Only call loadSrc when the super class has a load method.\n      if (attrName === 'src' && this.load !== SuperMedia.prototype.load) {\n        this.#loadSrc();\n      }\n\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n\n    async #loadSrc() {\n      // The first time we use the Promise created in the constructor.\n      if (this.#hasLoaded) this.loadComplete = new PublicPromise();\n      this.#hasLoaded = true;\n\n      // Wait 1 tick to allow other attributes to be set.\n      await Promise.resolve();\n      await this.load();\n\n      this.loadComplete?.resolve();\n      await this.loadComplete;\n    }\n\n    async #forwardAttribute(attrName, oldValue, newValue) {\n      if (this.loadComplete && !this.isLoaded) await this.loadComplete;\n\n      // Ignore a few that don't need to be passed & skipped attributes.\n      // e.g. src: native element is using MSE and has a blob url as src attribute.\n      if (['id', 'class', ...this.constructor.skipAttributes].includes(attrName)) {\n        return;\n      }\n\n      if (newValue === null) {\n        this.nativeEl.removeAttribute?.(attrName);\n      } else {\n        this.nativeEl.setAttribute?.(attrName, newValue);\n      }\n    }\n\n    connectedCallback() {\n      this.#init();\n    }\n  };\n};\n\nfunction getNativeElProps(nativeElTest) {\n  // Map all native element properties to the custom element\n  // so that they're applied to the native element.\n  // Skipping HTMLElement because of things like \"attachShadow\"\n  // causing issues. Most of those props still need to apply to\n  // the custom element.\n  let nativeElProps = [];\n\n  // Walk the prototype chain up to HTMLElement.\n  // This will grab all super class props in between.\n  // i.e. VideoElement and MediaElement\n  for (\n    let proto = Object.getPrototypeOf(nativeElTest);\n    proto && proto !== HTMLElement.prototype;\n    proto = Object.getPrototypeOf(proto)\n  ) {\n    nativeElProps.push(...Object.getOwnPropertyNames(proto));\n  }\n\n  return nativeElProps;\n}\n\n/**\n * A utility to create Promises with convenient public resolve and reject methods.\n * @return {Promise}\n */\nclass PublicPromise extends Promise {\n  constructor(executor = () => {}) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\n\nexport const SuperVideoElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'video' }) : class {};\n\nexport const SuperAudioElement = globalThis.document ? SuperMediaMixin(HTMLElement, { tag: 'audio' }) : class {};\n","var _a, _b;\nimport { SuperVideoElement } from \"super-media-element\";\nconst templateLightDOM = (_a = globalThis.document) == null ? void 0 : _a.createElement(\"template\");\nif (templateLightDOM) {\n  templateLightDOM.innerHTML = /*html*/\n  `\n  <div class=\"wistia_embed\"></div>\n  `;\n}\nconst templateShadowDOM = (_b = globalThis.document) == null ? void 0 : _b.createElement(\"template\");\nif (templateShadowDOM) {\n  templateShadowDOM.innerHTML = /*html*/\n  `\n  <style>\n    :host {\n      display: inline-block;\n      min-width: 300px;\n      min-height: 150px;\n      position: relative;\n    }\n    ::slotted(.wistia_embed) {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n  </style>\n  <slot></slot>\n  `;\n}\nclass WistiaVideoElement extends SuperVideoElement {\n  static template = templateShadowDOM;\n  static skipAttributes = [\"src\"];\n  get nativeEl() {\n    var _a2;\n    return ((_a2 = this.api) == null ? void 0 : _a2.elem()) ?? this.querySelector(\"video\");\n  }\n  async load() {\n    var _a2;\n    (_a2 = this.querySelector(\".wistia_embed\")) == null ? void 0 : _a2.remove();\n    if (!this.src) {\n      return;\n    }\n    await new Promise((resolve) => setTimeout(resolve, 50));\n    const MATCH_SRC = /(?:wistia\\.com|wi\\.st)\\/(?:medias|embed)\\/(.*)$/i;\n    const id = this.src.match(MATCH_SRC)[1];\n    const options = {\n      autoPlay: this.autoplay,\n      preload: this.preload ?? \"metadata\",\n      playsinline: this.playsInline,\n      endVideoBehavior: this.loop && \"loop\",\n      chromeless: !this.controls,\n      playButton: this.controls,\n      muted: this.defaultMuted\n    };\n    this.append(templateLightDOM.content.cloneNode(true));\n    const div = this.querySelector(\".wistia_embed\");\n    if (!div.id) div.id = uniqueId(id);\n    div.classList.add(`wistia_async_${id}`);\n    const scriptUrl = \"https://fast.wistia.com/assets/external/E-v1.js\";\n    await loadScript(scriptUrl, \"Wistia\");\n    this.api = await new Promise((onReady) => {\n      globalThis._wq.push({\n        id: div.id,\n        onReady,\n        options\n      });\n    });\n  }\n  async attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === \"controls\") {\n      await this.loadComplete;\n      switch (attrName) {\n        case \"controls\":\n          this.api.bigPlayButtonEnabled(this.controls);\n          this.controls ? this.api.releaseChromeless() : this.api.requestChromeless();\n          break;\n      }\n      return;\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n  // Override some methods w/ defaults if the video element is not ready yet when called.\n  // Some methods require the Wistia API instead of the native video element API.\n  get duration() {\n    var _a2;\n    return (_a2 = this.api) == null ? void 0 : _a2.duration();\n  }\n  play() {\n    this.api.play();\n    return new Promise((resolve) => this.addEventListener(\"playing\", resolve));\n  }\n}\nconst loadScriptCache = {};\nasync function loadScript(src, globalName) {\n  if (!globalName) return import(\n    /* webpackIgnore: true */\n    src\n  );\n  if (loadScriptCache[src]) return loadScriptCache[src];\n  if (self[globalName]) return self[globalName];\n  return loadScriptCache[src] = new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.defer = true;\n    script.src = src;\n    script.onload = () => resolve(self[globalName]);\n    script.onerror = reject;\n    document.head.append(script);\n  });\n}\nlet idCounter = 0;\nfunction uniqueId(prefix) {\n  const id = ++idCounter;\n  return `${prefix}${id}`;\n}\nif (globalThis.customElements && !globalThis.customElements.get(\"wistia-video\")) {\n  globalThis.customElements.define(\"wistia-video\", WistiaVideoElement);\n}\nvar wistia_video_element_default = WistiaVideoElement;\nexport {\n  wistia_video_element_default as default,\n  uniqueId\n};\n","\"use client\";\n\n// dist/react.ts\nimport React from \"react\";\nimport CustomMediaElement from \"./wistia-video-element.js\";\n\n// ../../node_modules/ce-la-react/dist/ce-la-react.js\nvar reservedReactProps = /* @__PURE__ */ new Set([\n  \"style\",\n  \"children\",\n  \"ref\",\n  \"key\",\n  \"suppressContentEditableWarning\",\n  \"suppressHydrationWarning\",\n  \"dangerouslySetInnerHTML\"\n]);\nvar reactPropToAttrNameMap = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nfunction defaultToAttributeName(propName) {\n  return propName.toLowerCase();\n}\nfunction defaultToAttributeValue(propValue) {\n  if (typeof propValue === \"boolean\") return propValue ? \"\" : void 0;\n  if (typeof propValue === \"function\") return void 0;\n  if (typeof propValue === \"object\" && propValue !== null) return void 0;\n  return propValue;\n}\nfunction createComponent({\n  react: React2,\n  tagName,\n  elementClass,\n  events,\n  displayName,\n  defaultProps,\n  toAttributeName = defaultToAttributeName,\n  toAttributeValue = defaultToAttributeValue\n}) {\n  const IS_REACT_19_OR_NEWER = Number.parseInt(React2.version) >= 19;\n  const ReactComponent = React2.forwardRef((props, ref) => {\n    var _a, _b;\n    const elementRef = React2.useRef(null);\n    const prevElemPropsRef = React2.useRef(/* @__PURE__ */ new Map());\n    const eventProps = {};\n    const attrs = {};\n    const reactProps = {};\n    const elementProps = {};\n    for (const [k, v] of Object.entries(props)) {\n      if (reservedReactProps.has(k)) {\n        reactProps[k] = v;\n        continue;\n      }\n      const attrName = toAttributeName(reactPropToAttrNameMap[k] ?? k);\n      if (elementClass.prototype && k in elementClass.prototype && !(k in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) && !((_b = elementClass.observedAttributes) == null ? void 0 : _b.some((attr) => attr === attrName))) {\n        elementProps[k] = v;\n        continue;\n      }\n      if (k.startsWith(\"on\")) {\n        eventProps[k] = v;\n        continue;\n      }\n      const attrValue = toAttributeValue(v);\n      if (attrName && attrValue != null) {\n        attrs[attrName] = String(attrValue);\n        if (!IS_REACT_19_OR_NEWER) {\n          reactProps[attrName] = attrValue;\n        }\n      }\n      if (attrName && IS_REACT_19_OR_NEWER) {\n        const attrValueFromDefault = defaultToAttributeValue(v);\n        if (attrValue !== attrValueFromDefault) {\n          reactProps[attrName] = attrValue;\n        } else {\n          reactProps[attrName] = v;\n        }\n      }\n    }\n    if (typeof window !== \"undefined\") {\n      for (const propName in eventProps) {\n        const callback = eventProps[propName];\n        const useCapture = propName.endsWith(\"Capture\");\n        const eventName = ((events == null ? void 0 : events[propName]) ?? propName.slice(2).toLowerCase()).slice(\n          0,\n          useCapture ? -7 : void 0\n        );\n        React2.useLayoutEffect(() => {\n          const eventTarget = elementRef == null ? void 0 : elementRef.current;\n          if (!eventTarget || typeof callback !== \"function\") return;\n          eventTarget.addEventListener(eventName, callback, useCapture);\n          return () => {\n            eventTarget.removeEventListener(eventName, callback, useCapture);\n          };\n        }, [elementRef == null ? void 0 : elementRef.current, callback]);\n      }\n      React2.useLayoutEffect(() => {\n        if (elementRef.current === null) return;\n        const newElemProps = /* @__PURE__ */ new Map();\n        for (const key in elementProps) {\n          setProperty(elementRef.current, key, elementProps[key]);\n          prevElemPropsRef.current.delete(key);\n          newElemProps.set(key, elementProps[key]);\n        }\n        for (const [key, _value] of prevElemPropsRef.current) {\n          setProperty(elementRef.current, key, void 0);\n        }\n        prevElemPropsRef.current = newElemProps;\n      });\n    }\n    if (typeof window === \"undefined\" && (elementClass == null ? void 0 : elementClass.getTemplateHTML) && (elementClass == null ? void 0 : elementClass.shadowRootOptions)) {\n      const { mode, delegatesFocus } = elementClass.shadowRootOptions;\n      const templateShadowRoot = React2.createElement(\"template\", {\n        shadowrootmode: mode,\n        shadowrootdelegatesfocus: delegatesFocus,\n        dangerouslySetInnerHTML: {\n          __html: elementClass.getTemplateHTML(attrs, props)\n        }\n      });\n      reactProps.children = [templateShadowRoot, reactProps.children];\n    }\n    return React2.createElement(tagName, {\n      ...defaultProps,\n      ...reactProps,\n      ref: React2.useCallback(\n        (node) => {\n          elementRef.current = node;\n          if (typeof ref === \"function\") {\n            ref(node);\n          } else if (ref !== null) {\n            ref.current = node;\n          }\n        },\n        [ref]\n      )\n    });\n  });\n  ReactComponent.displayName = displayName ?? elementClass.name;\n  return ReactComponent;\n}\nfunction setProperty(node, name, value) {\n  var _a;\n  node[name] = value;\n  if (value == null && name in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) {\n    node.removeAttribute(name);\n  }\n}\n\n// dist/react.ts\nvar react_default = createComponent({\n  react: React,\n  tagName: \"wistia-video\",\n  elementClass: CustomMediaElement,\n  toAttributeName(propName) {\n    if (propName === \"muted\") return \"\";\n    if (propName === \"defaultMuted\") return \"muted\";\n    return defaultToAttributeName(propName);\n  }\n});\nexport {\n  react_default as default\n};\n/*! Bundled license information:\n\nce-la-react/dist/ce-la-react.js:\n  (**\n   * @license\n   * Copyright 2018 Google LLC\n   * SPDX-License-Identifier: BSD-3-Clause\n   *\n   * Modified version of `@lit/react` for vanilla custom elements with support for SSR.\n   *)\n*/\n"],"mappings":"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"}