{"version":3,"file":"react-UJhg_Bm4.js","names":["#upgradeProperty","#config","#airplaySourceEl","#toggleHlsLoad","#destroy","React","CustomMediaElement"],"sources":["../../hls-video-element/dist/hls-video-element.js","../../hls-video-element/dist/react.js"],"sourcesContent":["import { CustomVideoElement } from \"custom-media-element\";\nimport { MediaTracksMixin } from \"media-tracks\";\nimport Hls from \"hls.js/dist/hls.mjs\";\nconst HlsVideoMixin = (superclass) => {\n  return class HlsVideo extends superclass {\n    static shadowRootOptions = { ...superclass.shadowRootOptions };\n    static getTemplateHTML = (attrs, props = {}) => {\n      const { src, ...rest } = attrs;\n      return `\n        <script type=\"application/json\" id=\"config\">\n          ${JSON.stringify(props.config || {})}\n        </script>\n        ${superclass.getTemplateHTML(rest)}\n      `;\n    };\n    #airplaySourceEl = null;\n    #config = null;\n    constructor() {\n      super();\n      this.#upgradeProperty(\"config\");\n    }\n    get config() {\n      return this.#config;\n    }\n    set config(value) {\n      this.#config = value;\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (attrName !== \"src\") {\n        super.attributeChangedCallback(attrName, oldValue, newValue);\n      }\n      if (attrName === \"src\" && oldValue != newValue) {\n        this.load();\n      }\n    }\n    #destroy() {\n      var _a, _b;\n      (_a = this.#airplaySourceEl) == null ? void 0 : _a.remove();\n      (_b = this.nativeEl) == null ? void 0 : _b.removeEventListener(\n        \"webkitcurrentplaybacktargetiswirelesschanged\",\n        this.#toggleHlsLoad\n      );\n      if (this.api) {\n        this.api.detachMedia();\n        this.api.destroy();\n        this.api = null;\n      }\n    }\n    async load() {\n      var _a, _b;\n      const isFirstLoad = !this.api;\n      this.#destroy();\n      if (!this.src) {\n        return;\n      }\n      if (isFirstLoad && !this.#config) {\n        this.#config = JSON.parse(((_a = this.shadowRoot.getElementById(\"config\")) == null ? void 0 : _a.textContent) || \"{}\");\n      }\n      if (Hls.isSupported()) {\n        await Promise.resolve();\n        this.api = new Hls({\n          // Mimic the media element with an Infinity duration for live streams.\n          liveDurationInfinity: true,\n          // Disable auto quality level/fragment loading.\n          autoStartLoad: false,\n          // Custom configuration for hls.js.\n          ...this.config\n        });\n        this.api.loadSource(this.src);\n        this.api.attachMedia(this.nativeEl);\n        switch (this.nativeEl.preload) {\n          case \"none\": {\n            const loadSourceOnPlay = () => this.api.startLoad();\n            this.nativeEl.addEventListener(\"play\", loadSourceOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", loadSourceOnPlay);\n            });\n            break;\n          }\n          case \"metadata\": {\n            const originalLength = this.api.config.maxBufferLength;\n            const originalSize = this.api.config.maxBufferSize;\n            this.api.config.maxBufferLength = 1;\n            this.api.config.maxBufferSize = 1;\n            const increaseBufferOnPlay = () => {\n              this.api.config.maxBufferLength = originalLength;\n              this.api.config.maxBufferSize = originalSize;\n            };\n            this.nativeEl.addEventListener(\"play\", increaseBufferOnPlay, {\n              once: true\n            });\n            this.api.on(Hls.Events.DESTROYING, () => {\n              this.nativeEl.removeEventListener(\"play\", increaseBufferOnPlay);\n            });\n            this.api.startLoad();\n            break;\n          }\n          default:\n            this.api.startLoad();\n        }\n        if (this.nativeEl.webkitCurrentPlaybackTargetIsWireless) {\n          this.api.stopLoad();\n        }\n        this.nativeEl.addEventListener(\n          \"webkitcurrentplaybacktargetiswirelesschanged\",\n          this.#toggleHlsLoad\n        );\n        this.#airplaySourceEl = document.createElement(\"source\");\n        this.#airplaySourceEl.setAttribute(\"type\", \"application/x-mpegURL\");\n        this.#airplaySourceEl.setAttribute(\"src\", this.src);\n        this.nativeEl.disableRemotePlayback = false;\n        this.nativeEl.append(this.#airplaySourceEl);\n        const levelIdMap = /* @__PURE__ */ new WeakMap();\n        this.api.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n          if (this.nativeEl.autoplay && this.nativeEl.paused) {\n            this.nativeEl.play().catch((err) => {\n              console.warn(\"Autoplay failed:\", err);\n            });\n          }\n          removeAllMediaTracks();\n          let videoTrack = this.videoTracks.getTrackById(\"main\");\n          if (!videoTrack) {\n            videoTrack = this.addVideoTrack(\"main\");\n            videoTrack.id = \"main\";\n            videoTrack.selected = true;\n          }\n          for (const [id, level] of data.levels.entries()) {\n            const videoRendition = videoTrack.addRendition(\n              level.url[0],\n              level.width,\n              level.height,\n              level.videoCodec,\n              level.bitrate\n            );\n            levelIdMap.set(level, `${id}`);\n            videoRendition.id = `${id}`;\n          }\n          for (let [id, a] of data.audioTracks.entries()) {\n            const kind = a.default ? \"main\" : \"alternative\";\n            const audioTrack = this.addAudioTrack(kind, a.name, a.lang);\n            audioTrack.id = `${id}`;\n            if (a.default) {\n              audioTrack.enabled = true;\n            }\n          }\n        });\n        this.audioTracks.addEventListener(\"change\", () => {\n          var _a2;\n          const audioTrackId = +((_a2 = [...this.audioTracks].find((t) => t.enabled)) == null ? void 0 : _a2.id);\n          const availableIds = this.api.audioTracks.map((t) => t.id);\n          if (audioTrackId != this.api.audioTrack && availableIds.includes(audioTrackId)) {\n            this.api.audioTrack = audioTrackId;\n          }\n        });\n        this.api.on(Hls.Events.LEVELS_UPDATED, (event, data) => {\n          const videoTrack = this.videoTracks[this.videoTracks.selectedIndex ?? 0];\n          if (!videoTrack) return;\n          const levelIds = data.levels.map((l) => levelIdMap.get(l));\n          for (const rendition of this.videoRenditions) {\n            if (rendition.id && !levelIds.includes(rendition.id)) {\n              videoTrack.removeRendition(rendition);\n            }\n          }\n        });\n        const switchRendition = (event) => {\n          const level = event.target.selectedIndex;\n          if (level != this.api.nextLevel) {\n            this.api.nextLevel = level;\n          }\n        };\n        (_b = this.videoRenditions) == null ? void 0 : _b.addEventListener(\"change\", switchRendition);\n        const removeAllMediaTracks = () => {\n          for (const videoTrack of this.videoTracks) {\n            this.removeVideoTrack(videoTrack);\n          }\n          for (const audioTrack of this.audioTracks) {\n            this.removeAudioTrack(audioTrack);\n          }\n        };\n        this.api.once(Hls.Events.DESTROYING, removeAllMediaTracks);\n        return;\n      }\n      await Promise.resolve();\n      if (this.nativeEl.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        this.nativeEl.src = this.src;\n      }\n    }\n    #toggleHlsLoad = () => {\n      var _a, _b, _c;\n      if ((_a = this.nativeEl) == null ? void 0 : _a.webkitCurrentPlaybackTargetIsWireless) {\n        (_b = this.api) == null ? void 0 : _b.stopLoad();\n      } else {\n        (_c = this.api) == null ? void 0 : _c.startLoad();\n      }\n    };\n    // This is a pattern to update property values that are set before\n    // the custom element is upgraded.\n    // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n  };\n};\nconst HlsVideoElement = HlsVideoMixin(MediaTracksMixin(CustomVideoElement));\nif (globalThis.customElements && !globalThis.customElements.get(\"hls-video\")) {\n  globalThis.customElements.define(\"hls-video\", HlsVideoElement);\n}\nvar hls_video_element_default = HlsVideoElement;\nexport {\n  Hls,\n  HlsVideoElement,\n  HlsVideoMixin,\n  hls_video_element_default as default\n};\n","\"use client\";\n\n// dist/react.ts\nimport React from \"react\";\nimport CustomMediaElement from \"./hls-video-element.js\";\n\n// ../../node_modules/ce-la-react/dist/ce-la-react.js\nvar reservedReactProps = /* @__PURE__ */ new Set([\n  \"style\",\n  \"children\",\n  \"ref\",\n  \"key\",\n  \"suppressContentEditableWarning\",\n  \"suppressHydrationWarning\",\n  \"dangerouslySetInnerHTML\"\n]);\nvar reactPropToAttrNameMap = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nfunction defaultToAttributeName(propName) {\n  return propName.toLowerCase();\n}\nfunction defaultToAttributeValue(propValue) {\n  if (typeof propValue === \"boolean\") return propValue ? \"\" : void 0;\n  if (typeof propValue === \"function\") return void 0;\n  if (typeof propValue === \"object\" && propValue !== null) return void 0;\n  return propValue;\n}\nfunction createComponent({\n  react: React2,\n  tagName,\n  elementClass,\n  events,\n  displayName,\n  defaultProps,\n  toAttributeName = defaultToAttributeName,\n  toAttributeValue = defaultToAttributeValue\n}) {\n  const IS_REACT_19_OR_NEWER = Number.parseInt(React2.version) >= 19;\n  const ReactComponent = React2.forwardRef((props, ref) => {\n    var _a, _b;\n    const elementRef = React2.useRef(null);\n    const prevElemPropsRef = React2.useRef(/* @__PURE__ */ new Map());\n    const eventProps = {};\n    const attrs = {};\n    const reactProps = {};\n    const elementProps = {};\n    for (const [k, v] of Object.entries(props)) {\n      if (reservedReactProps.has(k)) {\n        reactProps[k] = v;\n        continue;\n      }\n      const attrName = toAttributeName(reactPropToAttrNameMap[k] ?? k);\n      if (elementClass.prototype && k in elementClass.prototype && !(k in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) && !((_b = elementClass.observedAttributes) == null ? void 0 : _b.some((attr) => attr === attrName))) {\n        elementProps[k] = v;\n        continue;\n      }\n      if (k.startsWith(\"on\")) {\n        eventProps[k] = v;\n        continue;\n      }\n      const attrValue = toAttributeValue(v);\n      if (attrName && attrValue != null) {\n        attrs[attrName] = String(attrValue);\n        if (!IS_REACT_19_OR_NEWER) {\n          reactProps[attrName] = attrValue;\n        }\n      }\n      if (attrName && IS_REACT_19_OR_NEWER) {\n        const attrValueFromDefault = defaultToAttributeValue(v);\n        if (attrValue !== attrValueFromDefault) {\n          reactProps[attrName] = attrValue;\n        } else {\n          reactProps[attrName] = v;\n        }\n      }\n    }\n    if (typeof window !== \"undefined\") {\n      for (const propName in eventProps) {\n        const callback = eventProps[propName];\n        const useCapture = propName.endsWith(\"Capture\");\n        const eventName = ((events == null ? void 0 : events[propName]) ?? propName.slice(2).toLowerCase()).slice(\n          0,\n          useCapture ? -7 : void 0\n        );\n        React2.useLayoutEffect(() => {\n          const eventTarget = elementRef == null ? void 0 : elementRef.current;\n          if (!eventTarget || typeof callback !== \"function\") return;\n          eventTarget.addEventListener(eventName, callback, useCapture);\n          return () => {\n            eventTarget.removeEventListener(eventName, callback, useCapture);\n          };\n        }, [elementRef == null ? void 0 : elementRef.current, callback]);\n      }\n      React2.useLayoutEffect(() => {\n        if (elementRef.current === null) return;\n        const newElemProps = /* @__PURE__ */ new Map();\n        for (const key in elementProps) {\n          setProperty(elementRef.current, key, elementProps[key]);\n          prevElemPropsRef.current.delete(key);\n          newElemProps.set(key, elementProps[key]);\n        }\n        for (const [key, _value] of prevElemPropsRef.current) {\n          setProperty(elementRef.current, key, void 0);\n        }\n        prevElemPropsRef.current = newElemProps;\n      });\n    }\n    if (typeof window === \"undefined\" && (elementClass == null ? void 0 : elementClass.getTemplateHTML) && (elementClass == null ? void 0 : elementClass.shadowRootOptions)) {\n      const { mode, delegatesFocus } = elementClass.shadowRootOptions;\n      const templateShadowRoot = React2.createElement(\"template\", {\n        shadowrootmode: mode,\n        shadowrootdelegatesfocus: delegatesFocus,\n        dangerouslySetInnerHTML: {\n          __html: elementClass.getTemplateHTML(attrs, props)\n        }\n      });\n      reactProps.children = [templateShadowRoot, reactProps.children];\n    }\n    return React2.createElement(tagName, {\n      ...defaultProps,\n      ...reactProps,\n      ref: React2.useCallback(\n        (node) => {\n          elementRef.current = node;\n          if (typeof ref === \"function\") {\n            ref(node);\n          } else if (ref !== null) {\n            ref.current = node;\n          }\n        },\n        [ref]\n      )\n    });\n  });\n  ReactComponent.displayName = displayName ?? elementClass.name;\n  return ReactComponent;\n}\nfunction setProperty(node, name, value) {\n  var _a;\n  node[name] = value;\n  if (value == null && name in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) {\n    node.removeAttribute(name);\n  }\n}\n\n// dist/react.ts\nvar react_default = createComponent({\n  react: React,\n  tagName: \"hls-video\",\n  elementClass: CustomMediaElement,\n  toAttributeName(propName) {\n    if (propName === \"muted\") return \"\";\n    if (propName === \"defaultMuted\") return \"muted\";\n    return defaultToAttributeName(propName);\n  }\n});\nexport {\n  react_default as default\n};\n/*! Bundled license information:\n\nce-la-react/dist/ce-la-react.js:\n  (**\n   * @license\n   * Copyright 2018 Google LLC\n   * SPDX-License-Identifier: BSD-3-Clause\n   *\n   * Modified version of `@lit/react` for vanilla custom elements with support for SSR.\n   *)\n*/\n"],"mappings":"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"}