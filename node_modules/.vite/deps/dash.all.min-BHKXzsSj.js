//#region node_modules/dashjs/dist/modern/esm/dash.all.min.js
/*! For license information please see dash.all.min.js.LICENSE.txt */
var t = {
	7267: function(t$1, e$1) {
		e$1.byteLength = function(t$2) {
			var e$2 = o$1(t$2), n$2 = e$2[0], a$2 = e$2[1];
			return 3 * (n$2 + a$2) / 4 - a$2;
		}, e$1.toByteArray = function(t$2) {
			var e$2, n$2, i$2 = o$1(t$2), l$2 = i$2[0], s$2 = i$2[1], u$1 = new r$1(function(t$3, e$3, n$3) {
				return 3 * (e$3 + n$3) / 4 - n$3;
			}(0, l$2, s$2)), d$1 = 0, c$1 = s$2 > 0 ? l$2 - 4 : l$2;
			for (n$2 = 0; n$2 < c$1; n$2 += 4) e$2 = a$1[t$2.charCodeAt(n$2)] << 18 | a$1[t$2.charCodeAt(n$2 + 1)] << 12 | a$1[t$2.charCodeAt(n$2 + 2)] << 6 | a$1[t$2.charCodeAt(n$2 + 3)], u$1[d$1++] = e$2 >> 16 & 255, u$1[d$1++] = e$2 >> 8 & 255, u$1[d$1++] = 255 & e$2;
			return 2 === s$2 && (e$2 = a$1[t$2.charCodeAt(n$2)] << 2 | a$1[t$2.charCodeAt(n$2 + 1)] >> 4, u$1[d$1++] = 255 & e$2), 1 === s$2 && (e$2 = a$1[t$2.charCodeAt(n$2)] << 10 | a$1[t$2.charCodeAt(n$2 + 1)] << 4 | a$1[t$2.charCodeAt(n$2 + 2)] >> 2, u$1[d$1++] = e$2 >> 8 & 255, u$1[d$1++] = 255 & e$2), u$1;
		}, e$1.fromByteArray = function(t$2) {
			for (var e$2, a$2 = t$2.length, r$2 = a$2 % 3, i$2 = [], l$2 = 16383, o$2 = 0, u$1 = a$2 - r$2; o$2 < u$1; o$2 += l$2) i$2.push(s$1(t$2, o$2, o$2 + l$2 > u$1 ? u$1 : o$2 + l$2));
			return 1 === r$2 ? (e$2 = t$2[a$2 - 1], i$2.push(n$1[e$2 >> 2] + n$1[e$2 << 4 & 63] + "==")) : 2 === r$2 && (e$2 = (t$2[a$2 - 2] << 8) + t$2[a$2 - 1], i$2.push(n$1[e$2 >> 10] + n$1[e$2 >> 4 & 63] + n$1[e$2 << 2 & 63] + "=")), i$2.join("");
		};
		for (var n$1 = [], a$1 = [], r$1 = "undefined" != typeof Uint8Array ? Uint8Array : Array, i$1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", l$1 = 0; l$1 < 64; ++l$1) n$1[l$1] = i$1[l$1], a$1[i$1.charCodeAt(l$1)] = l$1;
		function o$1(t$2) {
			var e$2 = t$2.length;
			if (e$2 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
			var n$2 = t$2.indexOf("=");
			return -1 === n$2 && (n$2 = e$2), [n$2, n$2 === e$2 ? 0 : 4 - n$2 % 4];
		}
		function s$1(t$2, e$2, a$2) {
			for (var r$2, i$2, l$2 = [], o$2 = e$2; o$2 < a$2; o$2 += 3) r$2 = (t$2[o$2] << 16 & 16711680) + (t$2[o$2 + 1] << 8 & 65280) + (255 & t$2[o$2 + 2]), l$2.push(n$1[(i$2 = r$2) >> 18 & 63] + n$1[i$2 >> 12 & 63] + n$1[i$2 >> 6 & 63] + n$1[63 & i$2]);
			return l$2.join("");
		}
		a$1["-".charCodeAt(0)] = 62, a$1["_".charCodeAt(0)] = 63;
	},
	44: function(t$1, e$1, n$1) {
		var a$1 = n$1(7267), r$1 = n$1(7986), i$1 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
		e$1.Buffer = s$1, e$1.SlowBuffer = function(t$2) {
			return +t$2 != t$2 && (t$2 = 0), s$1.alloc(+t$2);
		}, e$1.INSPECT_MAX_BYTES = 50;
		var l$1 = 2147483647;
		function o$1(t$2) {
			if (t$2 > l$1) throw new RangeError("The value \"" + t$2 + "\" is invalid for option \"size\"");
			var e$2 = new Uint8Array(t$2);
			return Object.setPrototypeOf(e$2, s$1.prototype), e$2;
		}
		function s$1(t$2, e$2, n$2) {
			if ("number" == typeof t$2) {
				if ("string" == typeof e$2) throw new TypeError("The \"string\" argument must be of type string. Received type number");
				return c$1(t$2);
			}
			return u$1(t$2, e$2, n$2);
		}
		function u$1(t$2, e$2, n$2) {
			if ("string" == typeof t$2) return function(t$3, e$3) {
				if ("string" == typeof e$3 && "" !== e$3 || (e$3 = "utf8"), !s$1.isEncoding(e$3)) throw new TypeError("Unknown encoding: " + e$3);
				var n$3 = 0 | h$1(t$3, e$3), a$3 = o$1(n$3), r$3 = a$3.write(t$3, e$3);
				return r$3 !== n$3 && (a$3 = a$3.slice(0, r$3)), a$3;
			}(t$2, e$2);
			if (ArrayBuffer.isView(t$2)) return function(t$3) {
				if (q(t$3, Uint8Array)) {
					var e$3 = new Uint8Array(t$3);
					return g$1(e$3.buffer, e$3.byteOffset, e$3.byteLength);
				}
				return f$1(t$3);
			}(t$2);
			if (null == t$2) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t$2);
			if (q(t$2, ArrayBuffer) || t$2 && q(t$2.buffer, ArrayBuffer)) return g$1(t$2, e$2, n$2);
			if ("undefined" != typeof SharedArrayBuffer && (q(t$2, SharedArrayBuffer) || t$2 && q(t$2.buffer, SharedArrayBuffer))) return g$1(t$2, e$2, n$2);
			if ("number" == typeof t$2) throw new TypeError("The \"value\" argument must not be of type number. Received type number");
			var a$2 = t$2.valueOf && t$2.valueOf();
			if (null != a$2 && a$2 !== t$2) return s$1.from(a$2, e$2, n$2);
			var r$2 = function(t$3) {
				if (s$1.isBuffer(t$3)) {
					var e$3 = 0 | m$1(t$3.length), n$3 = o$1(e$3);
					return 0 === n$3.length || t$3.copy(n$3, 0, 0, e$3), n$3;
				}
				return void 0 !== t$3.length ? "number" != typeof t$3.length || B(t$3.length) ? o$1(0) : f$1(t$3) : "Buffer" === t$3.type && Array.isArray(t$3.data) ? f$1(t$3.data) : void 0;
			}(t$2);
			if (r$2) return r$2;
			if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t$2[Symbol.toPrimitive]) return s$1.from(t$2[Symbol.toPrimitive]("string"), e$2, n$2);
			throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t$2);
		}
		function d$1(t$2) {
			if ("number" != typeof t$2) throw new TypeError("\"size\" argument must be of type number");
			if (t$2 < 0) throw new RangeError("The value \"" + t$2 + "\" is invalid for option \"size\"");
		}
		function c$1(t$2) {
			return d$1(t$2), o$1(t$2 < 0 ? 0 : 0 | m$1(t$2));
		}
		function f$1(t$2) {
			for (var e$2 = t$2.length < 0 ? 0 : 0 | m$1(t$2.length), n$2 = o$1(e$2), a$2 = 0; a$2 < e$2; a$2 += 1) n$2[a$2] = 255 & t$2[a$2];
			return n$2;
		}
		function g$1(t$2, e$2, n$2) {
			if (e$2 < 0 || t$2.byteLength < e$2) throw new RangeError("\"offset\" is outside of buffer bounds");
			if (t$2.byteLength < e$2 + (n$2 || 0)) throw new RangeError("\"length\" is outside of buffer bounds");
			var a$2;
			return a$2 = void 0 === e$2 && void 0 === n$2 ? new Uint8Array(t$2) : void 0 === n$2 ? new Uint8Array(t$2, e$2) : new Uint8Array(t$2, e$2, n$2), Object.setPrototypeOf(a$2, s$1.prototype), a$2;
		}
		function m$1(t$2) {
			if (t$2 >= l$1) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + l$1.toString(16) + " bytes");
			return 0 | t$2;
		}
		function h$1(t$2, e$2) {
			if (s$1.isBuffer(t$2)) return t$2.length;
			if (ArrayBuffer.isView(t$2) || q(t$2, ArrayBuffer)) return t$2.byteLength;
			if ("string" != typeof t$2) throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof t$2);
			var n$2 = t$2.length, a$2 = arguments.length > 2 && !0 === arguments[2];
			if (!a$2 && 0 === n$2) return 0;
			for (var r$2 = !1;;) switch (e$2) {
				case "ascii":
				case "latin1":
				case "binary": return n$2;
				case "utf8":
				case "utf-8": return F(t$2).length;
				case "ucs2":
				case "ucs-2":
				case "utf16le":
				case "utf-16le": return 2 * n$2;
				case "hex": return n$2 >>> 1;
				case "base64": return U(t$2).length;
				default:
					if (r$2) return a$2 ? -1 : F(t$2).length;
					e$2 = ("" + e$2).toLowerCase(), r$2 = !0;
			}
		}
		function p$1(t$2, e$2, n$2) {
			var a$2 = !1;
			if ((void 0 === e$2 || e$2 < 0) && (e$2 = 0), e$2 > this.length) return "";
			if ((void 0 === n$2 || n$2 > this.length) && (n$2 = this.length), n$2 <= 0) return "";
			if ((n$2 >>>= 0) <= (e$2 >>>= 0)) return "";
			for (t$2 || (t$2 = "utf8");;) switch (t$2) {
				case "hex": return C(this, e$2, n$2);
				case "utf8":
				case "utf-8": return k(this, e$2, n$2);
				case "ascii": return R(this, e$2, n$2);
				case "latin1":
				case "binary": return N(this, e$2, n$2);
				case "base64": return I(this, e$2, n$2);
				case "ucs2":
				case "ucs-2":
				case "utf16le":
				case "utf-16le": return D(this, e$2, n$2);
				default:
					if (a$2) throw new TypeError("Unknown encoding: " + t$2);
					t$2 = (t$2 + "").toLowerCase(), a$2 = !0;
			}
		}
		function b$1(t$2, e$2, n$2) {
			var a$2 = t$2[e$2];
			t$2[e$2] = t$2[n$2], t$2[n$2] = a$2;
		}
		function y$1(t$2, e$2, n$2, a$2, r$2) {
			if (0 === t$2.length) return -1;
			if ("string" == typeof n$2 ? (a$2 = n$2, n$2 = 0) : n$2 > 2147483647 ? n$2 = 2147483647 : n$2 < -2147483648 && (n$2 = -2147483648), B(n$2 = +n$2) && (n$2 = r$2 ? 0 : t$2.length - 1), n$2 < 0 && (n$2 = t$2.length + n$2), n$2 >= t$2.length) {
				if (r$2) return -1;
				n$2 = t$2.length - 1;
			} else if (n$2 < 0) {
				if (!r$2) return -1;
				n$2 = 0;
			}
			if ("string" == typeof e$2 && (e$2 = s$1.from(e$2, a$2)), s$1.isBuffer(e$2)) return 0 === e$2.length ? -1 : E$1(t$2, e$2, n$2, a$2, r$2);
			if ("number" == typeof e$2) return e$2 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? r$2 ? Uint8Array.prototype.indexOf.call(t$2, e$2, n$2) : Uint8Array.prototype.lastIndexOf.call(t$2, e$2, n$2) : E$1(t$2, [e$2], n$2, a$2, r$2);
			throw new TypeError("val must be string, number or Buffer");
		}
		function E$1(t$2, e$2, n$2, a$2, r$2) {
			var i$2, l$2 = 1, o$2 = t$2.length, s$2 = e$2.length;
			if (void 0 !== a$2 && ("ucs2" === (a$2 = String(a$2).toLowerCase()) || "ucs-2" === a$2 || "utf16le" === a$2 || "utf-16le" === a$2)) {
				if (t$2.length < 2 || e$2.length < 2) return -1;
				l$2 = 2, o$2 /= 2, s$2 /= 2, n$2 /= 2;
			}
			function u$2(t$3, e$3) {
				return 1 === l$2 ? t$3[e$3] : t$3.readUInt16BE(e$3 * l$2);
			}
			if (r$2) {
				var d$2 = -1;
				for (i$2 = n$2; i$2 < o$2; i$2++) if (u$2(t$2, i$2) === u$2(e$2, -1 === d$2 ? 0 : i$2 - d$2)) {
					if (-1 === d$2 && (d$2 = i$2), i$2 - d$2 + 1 === s$2) return d$2 * l$2;
				} else -1 !== d$2 && (i$2 -= i$2 - d$2), d$2 = -1;
			} else for (n$2 + s$2 > o$2 && (n$2 = o$2 - s$2), i$2 = n$2; i$2 >= 0; i$2--) {
				for (var c$2 = !0, f$2 = 0; f$2 < s$2; f$2++) if (u$2(t$2, i$2 + f$2) !== u$2(e$2, f$2)) {
					c$2 = !1;
					break;
				}
				if (c$2) return i$2;
			}
			return -1;
		}
		function _$1(t$2, e$2, n$2, a$2) {
			n$2 = Number(n$2) || 0;
			var r$2 = t$2.length - n$2;
			a$2 ? (a$2 = Number(a$2)) > r$2 && (a$2 = r$2) : a$2 = r$2;
			var i$2 = e$2.length;
			a$2 > i$2 / 2 && (a$2 = i$2 / 2);
			for (var l$2 = 0; l$2 < a$2; ++l$2) {
				var o$2 = parseInt(e$2.substr(2 * l$2, 2), 16);
				if (B(o$2)) return l$2;
				t$2[n$2 + l$2] = o$2;
			}
			return l$2;
		}
		function T$1(t$2, e$2, n$2, a$2) {
			return j(F(e$2, t$2.length - n$2), t$2, n$2, a$2);
		}
		function v$1(t$2, e$2, n$2, a$2) {
			return j(function(t$3) {
				for (var e$3 = [], n$3 = 0; n$3 < t$3.length; ++n$3) e$3.push(255 & t$3.charCodeAt(n$3));
				return e$3;
			}(e$2), t$2, n$2, a$2);
		}
		function w$1(t$2, e$2, n$2, a$2) {
			return j(U(e$2), t$2, n$2, a$2);
		}
		function S$1(t$2, e$2, n$2, a$2) {
			return j(function(t$3, e$3) {
				for (var n$3, a$3, r$2, i$2 = [], l$2 = 0; l$2 < t$3.length && !((e$3 -= 2) < 0); ++l$2) a$3 = (n$3 = t$3.charCodeAt(l$2)) >> 8, r$2 = n$3 % 256, i$2.push(r$2), i$2.push(a$3);
				return i$2;
			}(e$2, t$2.length - n$2), t$2, n$2, a$2);
		}
		function I(t$2, e$2, n$2) {
			return 0 === e$2 && n$2 === t$2.length ? a$1.fromByteArray(t$2) : a$1.fromByteArray(t$2.slice(e$2, n$2));
		}
		function k(t$2, e$2, n$2) {
			n$2 = Math.min(t$2.length, n$2);
			for (var a$2 = [], r$2 = e$2; r$2 < n$2;) {
				var i$2, l$2, o$2, s$2, u$2 = t$2[r$2], d$2 = null, c$2 = u$2 > 239 ? 4 : u$2 > 223 ? 3 : u$2 > 191 ? 2 : 1;
				if (r$2 + c$2 <= n$2) switch (c$2) {
					case 1:
						u$2 < 128 && (d$2 = u$2);
						break;
					case 2:
						128 == (192 & (i$2 = t$2[r$2 + 1])) && (s$2 = (31 & u$2) << 6 | 63 & i$2) > 127 && (d$2 = s$2);
						break;
					case 3:
						i$2 = t$2[r$2 + 1], l$2 = t$2[r$2 + 2], 128 == (192 & i$2) && 128 == (192 & l$2) && (s$2 = (15 & u$2) << 12 | (63 & i$2) << 6 | 63 & l$2) > 2047 && (s$2 < 55296 || s$2 > 57343) && (d$2 = s$2);
						break;
					case 4: i$2 = t$2[r$2 + 1], l$2 = t$2[r$2 + 2], o$2 = t$2[r$2 + 3], 128 == (192 & i$2) && 128 == (192 & l$2) && 128 == (192 & o$2) && (s$2 = (15 & u$2) << 18 | (63 & i$2) << 12 | (63 & l$2) << 6 | 63 & o$2) > 65535 && s$2 < 1114112 && (d$2 = s$2);
				}
				null === d$2 ? (d$2 = 65533, c$2 = 1) : d$2 > 65535 && (d$2 -= 65536, a$2.push(d$2 >>> 10 & 1023 | 55296), d$2 = 56320 | 1023 & d$2), a$2.push(d$2), r$2 += c$2;
			}
			return function(t$3) {
				var e$3 = t$3.length;
				if (e$3 <= A) return String.fromCharCode.apply(String, t$3);
				for (var n$3 = "", a$3 = 0; a$3 < e$3;) n$3 += String.fromCharCode.apply(String, t$3.slice(a$3, a$3 += A));
				return n$3;
			}(a$2);
		}
		e$1.kMaxLength = l$1, s$1.TYPED_ARRAY_SUPPORT = function() {
			try {
				var t$2 = new Uint8Array(1), e$2 = { foo: function() {
					return 42;
				} };
				return Object.setPrototypeOf(e$2, Uint8Array.prototype), Object.setPrototypeOf(t$2, e$2), 42 === t$2.foo();
			} catch (t$3) {
				return !1;
			}
		}(), s$1.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(s$1.prototype, "parent", {
			enumerable: !0,
			get: function() {
				if (s$1.isBuffer(this)) return this.buffer;
			}
		}), Object.defineProperty(s$1.prototype, "offset", {
			enumerable: !0,
			get: function() {
				if (s$1.isBuffer(this)) return this.byteOffset;
			}
		}), s$1.poolSize = 8192, s$1.from = function(t$2, e$2, n$2) {
			return u$1(t$2, e$2, n$2);
		}, Object.setPrototypeOf(s$1.prototype, Uint8Array.prototype), Object.setPrototypeOf(s$1, Uint8Array), s$1.alloc = function(t$2, e$2, n$2) {
			return function(t$3, e$3, n$3) {
				return d$1(t$3), t$3 <= 0 ? o$1(t$3) : void 0 !== e$3 ? "string" == typeof n$3 ? o$1(t$3).fill(e$3, n$3) : o$1(t$3).fill(e$3) : o$1(t$3);
			}(t$2, e$2, n$2);
		}, s$1.allocUnsafe = function(t$2) {
			return c$1(t$2);
		}, s$1.allocUnsafeSlow = function(t$2) {
			return c$1(t$2);
		}, s$1.isBuffer = function(t$2) {
			return null != t$2 && !0 === t$2._isBuffer && t$2 !== s$1.prototype;
		}, s$1.compare = function(t$2, e$2) {
			if (q(t$2, Uint8Array) && (t$2 = s$1.from(t$2, t$2.offset, t$2.byteLength)), q(e$2, Uint8Array) && (e$2 = s$1.from(e$2, e$2.offset, e$2.byteLength)), !s$1.isBuffer(t$2) || !s$1.isBuffer(e$2)) throw new TypeError("The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array");
			if (t$2 === e$2) return 0;
			for (var n$2 = t$2.length, a$2 = e$2.length, r$2 = 0, i$2 = Math.min(n$2, a$2); r$2 < i$2; ++r$2) if (t$2[r$2] !== e$2[r$2]) {
				n$2 = t$2[r$2], a$2 = e$2[r$2];
				break;
			}
			return n$2 < a$2 ? -1 : a$2 < n$2 ? 1 : 0;
		}, s$1.isEncoding = function(t$2) {
			switch (String(t$2).toLowerCase()) {
				case "hex":
				case "utf8":
				case "utf-8":
				case "ascii":
				case "latin1":
				case "binary":
				case "base64":
				case "ucs2":
				case "ucs-2":
				case "utf16le":
				case "utf-16le": return !0;
				default: return !1;
			}
		}, s$1.concat = function(t$2, e$2) {
			if (!Array.isArray(t$2)) throw new TypeError("\"list\" argument must be an Array of Buffers");
			if (0 === t$2.length) return s$1.alloc(0);
			var n$2;
			if (void 0 === e$2) for (e$2 = 0, n$2 = 0; n$2 < t$2.length; ++n$2) e$2 += t$2[n$2].length;
			var a$2 = s$1.allocUnsafe(e$2), r$2 = 0;
			for (n$2 = 0; n$2 < t$2.length; ++n$2) {
				var i$2 = t$2[n$2];
				if (q(i$2, Uint8Array)) r$2 + i$2.length > a$2.length ? s$1.from(i$2).copy(a$2, r$2) : Uint8Array.prototype.set.call(a$2, i$2, r$2);
				else {
					if (!s$1.isBuffer(i$2)) throw new TypeError("\"list\" argument must be an Array of Buffers");
					i$2.copy(a$2, r$2);
				}
				r$2 += i$2.length;
			}
			return a$2;
		}, s$1.byteLength = h$1, s$1.prototype._isBuffer = !0, s$1.prototype.swap16 = function() {
			var t$2 = this.length;
			if (t$2 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
			for (var e$2 = 0; e$2 < t$2; e$2 += 2) b$1(this, e$2, e$2 + 1);
			return this;
		}, s$1.prototype.swap32 = function() {
			var t$2 = this.length;
			if (t$2 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
			for (var e$2 = 0; e$2 < t$2; e$2 += 4) b$1(this, e$2, e$2 + 3), b$1(this, e$2 + 1, e$2 + 2);
			return this;
		}, s$1.prototype.swap64 = function() {
			var t$2 = this.length;
			if (t$2 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
			for (var e$2 = 0; e$2 < t$2; e$2 += 8) b$1(this, e$2, e$2 + 7), b$1(this, e$2 + 1, e$2 + 6), b$1(this, e$2 + 2, e$2 + 5), b$1(this, e$2 + 3, e$2 + 4);
			return this;
		}, s$1.prototype.toString = function() {
			var t$2 = this.length;
			return 0 === t$2 ? "" : 0 === arguments.length ? k(this, 0, t$2) : p$1.apply(this, arguments);
		}, s$1.prototype.toLocaleString = s$1.prototype.toString, s$1.prototype.equals = function(t$2) {
			if (!s$1.isBuffer(t$2)) throw new TypeError("Argument must be a Buffer");
			return this === t$2 || 0 === s$1.compare(this, t$2);
		}, s$1.prototype.inspect = function() {
			var t$2 = "", n$2 = e$1.INSPECT_MAX_BYTES;
			return t$2 = this.toString("hex", 0, n$2).replace(/(.{2})/g, "$1 ").trim(), this.length > n$2 && (t$2 += " ... "), "<Buffer " + t$2 + ">";
		}, i$1 && (s$1.prototype[i$1] = s$1.prototype.inspect), s$1.prototype.compare = function(t$2, e$2, n$2, a$2, r$2) {
			if (q(t$2, Uint8Array) && (t$2 = s$1.from(t$2, t$2.offset, t$2.byteLength)), !s$1.isBuffer(t$2)) throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof t$2);
			if (void 0 === e$2 && (e$2 = 0), void 0 === n$2 && (n$2 = t$2 ? t$2.length : 0), void 0 === a$2 && (a$2 = 0), void 0 === r$2 && (r$2 = this.length), e$2 < 0 || n$2 > t$2.length || a$2 < 0 || r$2 > this.length) throw new RangeError("out of range index");
			if (a$2 >= r$2 && e$2 >= n$2) return 0;
			if (a$2 >= r$2) return -1;
			if (e$2 >= n$2) return 1;
			if (this === t$2) return 0;
			for (var i$2 = (r$2 >>>= 0) - (a$2 >>>= 0), l$2 = (n$2 >>>= 0) - (e$2 >>>= 0), o$2 = Math.min(i$2, l$2), u$2 = this.slice(a$2, r$2), d$2 = t$2.slice(e$2, n$2), c$2 = 0; c$2 < o$2; ++c$2) if (u$2[c$2] !== d$2[c$2]) {
				i$2 = u$2[c$2], l$2 = d$2[c$2];
				break;
			}
			return i$2 < l$2 ? -1 : l$2 < i$2 ? 1 : 0;
		}, s$1.prototype.includes = function(t$2, e$2, n$2) {
			return -1 !== this.indexOf(t$2, e$2, n$2);
		}, s$1.prototype.indexOf = function(t$2, e$2, n$2) {
			return y$1(this, t$2, e$2, n$2, !0);
		}, s$1.prototype.lastIndexOf = function(t$2, e$2, n$2) {
			return y$1(this, t$2, e$2, n$2, !1);
		}, s$1.prototype.write = function(t$2, e$2, n$2, a$2) {
			if (void 0 === e$2) a$2 = "utf8", n$2 = this.length, e$2 = 0;
			else if (void 0 === n$2 && "string" == typeof e$2) a$2 = e$2, n$2 = this.length, e$2 = 0;
			else {
				if (!isFinite(e$2)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
				e$2 >>>= 0, isFinite(n$2) ? (n$2 >>>= 0, void 0 === a$2 && (a$2 = "utf8")) : (a$2 = n$2, n$2 = void 0);
			}
			var r$2 = this.length - e$2;
			if ((void 0 === n$2 || n$2 > r$2) && (n$2 = r$2), t$2.length > 0 && (n$2 < 0 || e$2 < 0) || e$2 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
			a$2 || (a$2 = "utf8");
			for (var i$2 = !1;;) switch (a$2) {
				case "hex": return _$1(this, t$2, e$2, n$2);
				case "utf8":
				case "utf-8": return T$1(this, t$2, e$2, n$2);
				case "ascii":
				case "latin1":
				case "binary": return v$1(this, t$2, e$2, n$2);
				case "base64": return w$1(this, t$2, e$2, n$2);
				case "ucs2":
				case "ucs-2":
				case "utf16le":
				case "utf-16le": return S$1(this, t$2, e$2, n$2);
				default:
					if (i$2) throw new TypeError("Unknown encoding: " + a$2);
					a$2 = ("" + a$2).toLowerCase(), i$2 = !0;
			}
		}, s$1.prototype.toJSON = function() {
			return {
				type: "Buffer",
				data: Array.prototype.slice.call(this._arr || this, 0)
			};
		};
		var A = 4096;
		function R(t$2, e$2, n$2) {
			var a$2 = "";
			n$2 = Math.min(t$2.length, n$2);
			for (var r$2 = e$2; r$2 < n$2; ++r$2) a$2 += String.fromCharCode(127 & t$2[r$2]);
			return a$2;
		}
		function N(t$2, e$2, n$2) {
			var a$2 = "";
			n$2 = Math.min(t$2.length, n$2);
			for (var r$2 = e$2; r$2 < n$2; ++r$2) a$2 += String.fromCharCode(t$2[r$2]);
			return a$2;
		}
		function C(t$2, e$2, n$2) {
			var a$2 = t$2.length;
			(!e$2 || e$2 < 0) && (e$2 = 0), (!n$2 || n$2 < 0 || n$2 > a$2) && (n$2 = a$2);
			for (var r$2 = "", i$2 = e$2; i$2 < n$2; ++i$2) r$2 += G[t$2[i$2]];
			return r$2;
		}
		function D(t$2, e$2, n$2) {
			for (var a$2 = t$2.slice(e$2, n$2), r$2 = "", i$2 = 0; i$2 < a$2.length - 1; i$2 += 2) r$2 += String.fromCharCode(a$2[i$2] + 256 * a$2[i$2 + 1]);
			return r$2;
		}
		function x(t$2, e$2, n$2) {
			if (t$2 % 1 != 0 || t$2 < 0) throw new RangeError("offset is not uint");
			if (t$2 + e$2 > n$2) throw new RangeError("Trying to access beyond buffer length");
		}
		function M(t$2, e$2, n$2, a$2, r$2, i$2) {
			if (!s$1.isBuffer(t$2)) throw new TypeError("\"buffer\" argument must be a Buffer instance");
			if (e$2 > r$2 || e$2 < i$2) throw new RangeError("\"value\" argument is out of bounds");
			if (n$2 + a$2 > t$2.length) throw new RangeError("Index out of range");
		}
		function z(t$2, e$2, n$2, a$2, r$2, i$2) {
			if (n$2 + a$2 > t$2.length) throw new RangeError("Index out of range");
			if (n$2 < 0) throw new RangeError("Index out of range");
		}
		function O(t$2, e$2, n$2, a$2, i$2) {
			return e$2 = +e$2, n$2 >>>= 0, i$2 || z(t$2, 0, n$2, 4), r$1.write(t$2, e$2, n$2, a$2, 23, 4), n$2 + 4;
		}
		function P(t$2, e$2, n$2, a$2, i$2) {
			return e$2 = +e$2, n$2 >>>= 0, i$2 || z(t$2, 0, n$2, 8), r$1.write(t$2, e$2, n$2, a$2, 52, 8), n$2 + 8;
		}
		s$1.prototype.slice = function(t$2, e$2) {
			var n$2 = this.length;
			(t$2 = ~~t$2) < 0 ? (t$2 += n$2) < 0 && (t$2 = 0) : t$2 > n$2 && (t$2 = n$2), (e$2 = void 0 === e$2 ? n$2 : ~~e$2) < 0 ? (e$2 += n$2) < 0 && (e$2 = 0) : e$2 > n$2 && (e$2 = n$2), e$2 < t$2 && (e$2 = t$2);
			var a$2 = this.subarray(t$2, e$2);
			return Object.setPrototypeOf(a$2, s$1.prototype), a$2;
		}, s$1.prototype.readUintLE = s$1.prototype.readUIntLE = function(t$2, e$2, n$2) {
			t$2 >>>= 0, e$2 >>>= 0, n$2 || x(t$2, e$2, this.length);
			for (var a$2 = this[t$2], r$2 = 1, i$2 = 0; ++i$2 < e$2 && (r$2 *= 256);) a$2 += this[t$2 + i$2] * r$2;
			return a$2;
		}, s$1.prototype.readUintBE = s$1.prototype.readUIntBE = function(t$2, e$2, n$2) {
			t$2 >>>= 0, e$2 >>>= 0, n$2 || x(t$2, e$2, this.length);
			for (var a$2 = this[t$2 + --e$2], r$2 = 1; e$2 > 0 && (r$2 *= 256);) a$2 += this[t$2 + --e$2] * r$2;
			return a$2;
		}, s$1.prototype.readUint8 = s$1.prototype.readUInt8 = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 1, this.length), this[t$2];
		}, s$1.prototype.readUint16LE = s$1.prototype.readUInt16LE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 2, this.length), this[t$2] | this[t$2 + 1] << 8;
		}, s$1.prototype.readUint16BE = s$1.prototype.readUInt16BE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 2, this.length), this[t$2] << 8 | this[t$2 + 1];
		}, s$1.prototype.readUint32LE = s$1.prototype.readUInt32LE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 4, this.length), (this[t$2] | this[t$2 + 1] << 8 | this[t$2 + 2] << 16) + 16777216 * this[t$2 + 3];
		}, s$1.prototype.readUint32BE = s$1.prototype.readUInt32BE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 4, this.length), 16777216 * this[t$2] + (this[t$2 + 1] << 16 | this[t$2 + 2] << 8 | this[t$2 + 3]);
		}, s$1.prototype.readIntLE = function(t$2, e$2, n$2) {
			t$2 >>>= 0, e$2 >>>= 0, n$2 || x(t$2, e$2, this.length);
			for (var a$2 = this[t$2], r$2 = 1, i$2 = 0; ++i$2 < e$2 && (r$2 *= 256);) a$2 += this[t$2 + i$2] * r$2;
			return a$2 >= (r$2 *= 128) && (a$2 -= Math.pow(2, 8 * e$2)), a$2;
		}, s$1.prototype.readIntBE = function(t$2, e$2, n$2) {
			t$2 >>>= 0, e$2 >>>= 0, n$2 || x(t$2, e$2, this.length);
			for (var a$2 = e$2, r$2 = 1, i$2 = this[t$2 + --a$2]; a$2 > 0 && (r$2 *= 256);) i$2 += this[t$2 + --a$2] * r$2;
			return i$2 >= (r$2 *= 128) && (i$2 -= Math.pow(2, 8 * e$2)), i$2;
		}, s$1.prototype.readInt8 = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 1, this.length), 128 & this[t$2] ? -1 * (255 - this[t$2] + 1) : this[t$2];
		}, s$1.prototype.readInt16LE = function(t$2, e$2) {
			t$2 >>>= 0, e$2 || x(t$2, 2, this.length);
			var n$2 = this[t$2] | this[t$2 + 1] << 8;
			return 32768 & n$2 ? 4294901760 | n$2 : n$2;
		}, s$1.prototype.readInt16BE = function(t$2, e$2) {
			t$2 >>>= 0, e$2 || x(t$2, 2, this.length);
			var n$2 = this[t$2 + 1] | this[t$2] << 8;
			return 32768 & n$2 ? 4294901760 | n$2 : n$2;
		}, s$1.prototype.readInt32LE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 4, this.length), this[t$2] | this[t$2 + 1] << 8 | this[t$2 + 2] << 16 | this[t$2 + 3] << 24;
		}, s$1.prototype.readInt32BE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 4, this.length), this[t$2] << 24 | this[t$2 + 1] << 16 | this[t$2 + 2] << 8 | this[t$2 + 3];
		}, s$1.prototype.readFloatLE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 4, this.length), r$1.read(this, t$2, !0, 23, 4);
		}, s$1.prototype.readFloatBE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 4, this.length), r$1.read(this, t$2, !1, 23, 4);
		}, s$1.prototype.readDoubleLE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 8, this.length), r$1.read(this, t$2, !0, 52, 8);
		}, s$1.prototype.readDoubleBE = function(t$2, e$2) {
			return t$2 >>>= 0, e$2 || x(t$2, 8, this.length), r$1.read(this, t$2, !1, 52, 8);
		}, s$1.prototype.writeUintLE = s$1.prototype.writeUIntLE = function(t$2, e$2, n$2, a$2) {
			t$2 = +t$2, e$2 >>>= 0, n$2 >>>= 0, a$2 || M(this, t$2, e$2, n$2, Math.pow(2, 8 * n$2) - 1, 0);
			var r$2 = 1, i$2 = 0;
			for (this[e$2] = 255 & t$2; ++i$2 < n$2 && (r$2 *= 256);) this[e$2 + i$2] = t$2 / r$2 & 255;
			return e$2 + n$2;
		}, s$1.prototype.writeUintBE = s$1.prototype.writeUIntBE = function(t$2, e$2, n$2, a$2) {
			t$2 = +t$2, e$2 >>>= 0, n$2 >>>= 0, a$2 || M(this, t$2, e$2, n$2, Math.pow(2, 8 * n$2) - 1, 0);
			var r$2 = n$2 - 1, i$2 = 1;
			for (this[e$2 + r$2] = 255 & t$2; --r$2 >= 0 && (i$2 *= 256);) this[e$2 + r$2] = t$2 / i$2 & 255;
			return e$2 + n$2;
		}, s$1.prototype.writeUint8 = s$1.prototype.writeUInt8 = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 1, 255, 0), this[e$2] = 255 & t$2, e$2 + 1;
		}, s$1.prototype.writeUint16LE = s$1.prototype.writeUInt16LE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 2, 65535, 0), this[e$2] = 255 & t$2, this[e$2 + 1] = t$2 >>> 8, e$2 + 2;
		}, s$1.prototype.writeUint16BE = s$1.prototype.writeUInt16BE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 2, 65535, 0), this[e$2] = t$2 >>> 8, this[e$2 + 1] = 255 & t$2, e$2 + 2;
		}, s$1.prototype.writeUint32LE = s$1.prototype.writeUInt32LE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 4, 4294967295, 0), this[e$2 + 3] = t$2 >>> 24, this[e$2 + 2] = t$2 >>> 16, this[e$2 + 1] = t$2 >>> 8, this[e$2] = 255 & t$2, e$2 + 4;
		}, s$1.prototype.writeUint32BE = s$1.prototype.writeUInt32BE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 4, 4294967295, 0), this[e$2] = t$2 >>> 24, this[e$2 + 1] = t$2 >>> 16, this[e$2 + 2] = t$2 >>> 8, this[e$2 + 3] = 255 & t$2, e$2 + 4;
		}, s$1.prototype.writeIntLE = function(t$2, e$2, n$2, a$2) {
			if (t$2 = +t$2, e$2 >>>= 0, !a$2) {
				var r$2 = Math.pow(2, 8 * n$2 - 1);
				M(this, t$2, e$2, n$2, r$2 - 1, -r$2);
			}
			var i$2 = 0, l$2 = 1, o$2 = 0;
			for (this[e$2] = 255 & t$2; ++i$2 < n$2 && (l$2 *= 256);) t$2 < 0 && 0 === o$2 && 0 !== this[e$2 + i$2 - 1] && (o$2 = 1), this[e$2 + i$2] = (t$2 / l$2 | 0) - o$2 & 255;
			return e$2 + n$2;
		}, s$1.prototype.writeIntBE = function(t$2, e$2, n$2, a$2) {
			if (t$2 = +t$2, e$2 >>>= 0, !a$2) {
				var r$2 = Math.pow(2, 8 * n$2 - 1);
				M(this, t$2, e$2, n$2, r$2 - 1, -r$2);
			}
			var i$2 = n$2 - 1, l$2 = 1, o$2 = 0;
			for (this[e$2 + i$2] = 255 & t$2; --i$2 >= 0 && (l$2 *= 256);) t$2 < 0 && 0 === o$2 && 0 !== this[e$2 + i$2 + 1] && (o$2 = 1), this[e$2 + i$2] = (t$2 / l$2 | 0) - o$2 & 255;
			return e$2 + n$2;
		}, s$1.prototype.writeInt8 = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 1, 127, -128), t$2 < 0 && (t$2 = 255 + t$2 + 1), this[e$2] = 255 & t$2, e$2 + 1;
		}, s$1.prototype.writeInt16LE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 2, 32767, -32768), this[e$2] = 255 & t$2, this[e$2 + 1] = t$2 >>> 8, e$2 + 2;
		}, s$1.prototype.writeInt16BE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 2, 32767, -32768), this[e$2] = t$2 >>> 8, this[e$2 + 1] = 255 & t$2, e$2 + 2;
		}, s$1.prototype.writeInt32LE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 4, 2147483647, -2147483648), this[e$2] = 255 & t$2, this[e$2 + 1] = t$2 >>> 8, this[e$2 + 2] = t$2 >>> 16, this[e$2 + 3] = t$2 >>> 24, e$2 + 4;
		}, s$1.prototype.writeInt32BE = function(t$2, e$2, n$2) {
			return t$2 = +t$2, e$2 >>>= 0, n$2 || M(this, t$2, e$2, 4, 2147483647, -2147483648), t$2 < 0 && (t$2 = 4294967295 + t$2 + 1), this[e$2] = t$2 >>> 24, this[e$2 + 1] = t$2 >>> 16, this[e$2 + 2] = t$2 >>> 8, this[e$2 + 3] = 255 & t$2, e$2 + 4;
		}, s$1.prototype.writeFloatLE = function(t$2, e$2, n$2) {
			return O(this, t$2, e$2, !0, n$2);
		}, s$1.prototype.writeFloatBE = function(t$2, e$2, n$2) {
			return O(this, t$2, e$2, !1, n$2);
		}, s$1.prototype.writeDoubleLE = function(t$2, e$2, n$2) {
			return P(this, t$2, e$2, !0, n$2);
		}, s$1.prototype.writeDoubleBE = function(t$2, e$2, n$2) {
			return P(this, t$2, e$2, !1, n$2);
		}, s$1.prototype.copy = function(t$2, e$2, n$2, a$2) {
			if (!s$1.isBuffer(t$2)) throw new TypeError("argument should be a Buffer");
			if (n$2 || (n$2 = 0), a$2 || 0 === a$2 || (a$2 = this.length), e$2 >= t$2.length && (e$2 = t$2.length), e$2 || (e$2 = 0), a$2 > 0 && a$2 < n$2 && (a$2 = n$2), a$2 === n$2) return 0;
			if (0 === t$2.length || 0 === this.length) return 0;
			if (e$2 < 0) throw new RangeError("targetStart out of bounds");
			if (n$2 < 0 || n$2 >= this.length) throw new RangeError("Index out of range");
			if (a$2 < 0) throw new RangeError("sourceEnd out of bounds");
			a$2 > this.length && (a$2 = this.length), t$2.length - e$2 < a$2 - n$2 && (a$2 = t$2.length - e$2 + n$2);
			var r$2 = a$2 - n$2;
			return this === t$2 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(e$2, n$2, a$2) : Uint8Array.prototype.set.call(t$2, this.subarray(n$2, a$2), e$2), r$2;
		}, s$1.prototype.fill = function(t$2, e$2, n$2, a$2) {
			if ("string" == typeof t$2) {
				if ("string" == typeof e$2 ? (a$2 = e$2, e$2 = 0, n$2 = this.length) : "string" == typeof n$2 && (a$2 = n$2, n$2 = this.length), void 0 !== a$2 && "string" != typeof a$2) throw new TypeError("encoding must be a string");
				if ("string" == typeof a$2 && !s$1.isEncoding(a$2)) throw new TypeError("Unknown encoding: " + a$2);
				if (1 === t$2.length) {
					var r$2 = t$2.charCodeAt(0);
					("utf8" === a$2 && r$2 < 128 || "latin1" === a$2) && (t$2 = r$2);
				}
			} else "number" == typeof t$2 ? t$2 &= 255 : "boolean" == typeof t$2 && (t$2 = Number(t$2));
			if (e$2 < 0 || this.length < e$2 || this.length < n$2) throw new RangeError("Out of range index");
			if (n$2 <= e$2) return this;
			var i$2;
			if (e$2 >>>= 0, n$2 = void 0 === n$2 ? this.length : n$2 >>> 0, t$2 || (t$2 = 0), "number" == typeof t$2) for (i$2 = e$2; i$2 < n$2; ++i$2) this[i$2] = t$2;
			else {
				var l$2 = s$1.isBuffer(t$2) ? t$2 : s$1.from(t$2, a$2), o$2 = l$2.length;
				if (0 === o$2) throw new TypeError("The value \"" + t$2 + "\" is invalid for argument \"value\"");
				for (i$2 = 0; i$2 < n$2 - e$2; ++i$2) this[i$2 + e$2] = l$2[i$2 % o$2];
			}
			return this;
		};
		var L = /[^+/0-9A-Za-z-_]/g;
		function F(t$2, e$2) {
			var n$2;
			e$2 = e$2 || Infinity;
			for (var a$2 = t$2.length, r$2 = null, i$2 = [], l$2 = 0; l$2 < a$2; ++l$2) {
				if ((n$2 = t$2.charCodeAt(l$2)) > 55295 && n$2 < 57344) {
					if (!r$2) {
						if (n$2 > 56319) {
							(e$2 -= 3) > -1 && i$2.push(239, 191, 189);
							continue;
						}
						if (l$2 + 1 === a$2) {
							(e$2 -= 3) > -1 && i$2.push(239, 191, 189);
							continue;
						}
						r$2 = n$2;
						continue;
					}
					if (n$2 < 56320) {
						(e$2 -= 3) > -1 && i$2.push(239, 191, 189), r$2 = n$2;
						continue;
					}
					n$2 = 65536 + (r$2 - 55296 << 10 | n$2 - 56320);
				} else r$2 && (e$2 -= 3) > -1 && i$2.push(239, 191, 189);
				if (r$2 = null, n$2 < 128) {
					if ((e$2 -= 1) < 0) break;
					i$2.push(n$2);
				} else if (n$2 < 2048) {
					if ((e$2 -= 2) < 0) break;
					i$2.push(n$2 >> 6 | 192, 63 & n$2 | 128);
				} else if (n$2 < 65536) {
					if ((e$2 -= 3) < 0) break;
					i$2.push(n$2 >> 12 | 224, n$2 >> 6 & 63 | 128, 63 & n$2 | 128);
				} else {
					if (!(n$2 < 1114112)) throw new Error("Invalid code point");
					if ((e$2 -= 4) < 0) break;
					i$2.push(n$2 >> 18 | 240, n$2 >> 12 & 63 | 128, n$2 >> 6 & 63 | 128, 63 & n$2 | 128);
				}
			}
			return i$2;
		}
		function U(t$2) {
			return a$1.toByteArray(function(t$3) {
				if ((t$3 = (t$3 = t$3.split("=")[0]).trim().replace(L, "")).length < 2) return "";
				for (; t$3.length % 4 != 0;) t$3 += "=";
				return t$3;
			}(t$2));
		}
		function j(t$2, e$2, n$2, a$2) {
			for (var r$2 = 0; r$2 < a$2 && !(r$2 + n$2 >= e$2.length || r$2 >= t$2.length); ++r$2) e$2[r$2 + n$2] = t$2[r$2];
			return r$2;
		}
		function q(t$2, e$2) {
			return t$2 instanceof e$2 || null != t$2 && null != t$2.constructor && null != t$2.constructor.name && t$2.constructor.name === e$2.name;
		}
		function B(t$2) {
			return t$2 != t$2;
		}
		var G = function() {
			for (var t$2 = "0123456789abcdef", e$2 = new Array(256), n$2 = 0; n$2 < 16; ++n$2) for (var a$2 = 16 * n$2, r$2 = 0; r$2 < 16; ++r$2) e$2[a$2 + r$2] = t$2[n$2] + t$2[r$2];
			return e$2;
		}();
	},
	6877: function(t$1, e$1) {
		var n$1 = {
			parseBuffer: function(t$2) {
				return new a$1(t$2).parse();
			},
			addBoxProcessor: function(t$2, e$2) {
				"string" == typeof t$2 && "function" == typeof e$2 && (r$1.prototype._boxProcessors[t$2] = e$2);
			},
			createFile: function() {
				return new a$1();
			},
			createBox: function(t$2, e$2, n$2) {
				var a$2 = r$1.create(t$2);
				return e$2 && e$2.append(a$2, n$2), a$2;
			},
			createFullBox: function(t$2, e$2, a$2) {
				var r$2 = n$1.createBox(t$2, e$2, a$2);
				return r$2.version = 0, r$2.flags = 0, r$2;
			},
			Utils: {}
		};
		n$1.Utils.dataViewToString = function(t$2, e$2) {
			var n$2 = e$2 || "utf-8";
			if ("undefined" != typeof TextDecoder) return new TextDecoder(n$2).decode(t$2);
			var a$2 = [], r$2 = 0;
			if ("utf-8" === n$2) for (; r$2 < t$2.byteLength;) {
				var i$1 = t$2.getUint8(r$2++);
				i$1 < 128 || (i$1 < 224 ? (i$1 = (31 & i$1) << 6, i$1 |= 63 & t$2.getUint8(r$2++)) : i$1 < 240 ? (i$1 = (15 & i$1) << 12, i$1 |= (63 & t$2.getUint8(r$2++)) << 6, i$1 |= 63 & t$2.getUint8(r$2++)) : (i$1 = (7 & i$1) << 18, i$1 |= (63 & t$2.getUint8(r$2++)) << 12, i$1 |= (63 & t$2.getUint8(r$2++)) << 6, i$1 |= 63 & t$2.getUint8(r$2++))), a$2.push(String.fromCharCode(i$1));
			}
			else for (; r$2 < t$2.byteLength;) a$2.push(String.fromCharCode(t$2.getUint8(r$2++)));
			return a$2.join("");
		}, n$1.Utils.utf8ToByteArray = function(t$2) {
			var e$2, n$2;
			if ("undefined" != typeof TextEncoder) e$2 = new TextEncoder().encode(t$2);
			else for (e$2 = [], n$2 = 0; n$2 < t$2.length; ++n$2) {
				var a$2 = t$2.charCodeAt(n$2);
				a$2 < 128 ? e$2.push(a$2) : a$2 < 2048 ? (e$2.push(192 | a$2 >> 6), e$2.push(128 | 63 & a$2)) : a$2 < 65536 ? (e$2.push(224 | a$2 >> 12), e$2.push(128 | 63 & a$2 >> 6), e$2.push(128 | 63 & a$2)) : (e$2.push(240 | a$2 >> 18), e$2.push(128 | 63 & a$2 >> 12), e$2.push(128 | 63 & a$2 >> 6), e$2.push(128 | 63 & a$2));
			}
			return e$2;
		}, n$1.Utils.appendBox = function(t$2, e$2, n$2) {
			if (e$2._offset = t$2._cursor.offset, e$2._root = t$2._root ? t$2._root : t$2, e$2._raw = t$2._raw, e$2._parent = t$2, -1 !== n$2) if (null != n$2) {
				var a$2, r$2 = -1;
				if ("number" == typeof n$2) r$2 = n$2;
				else {
					if ("string" == typeof n$2) a$2 = n$2;
					else {
						if ("object" != typeof n$2 || !n$2.type) return void t$2.boxes.push(e$2);
						a$2 = n$2.type;
					}
					for (var i$1 = 0; i$1 < t$2.boxes.length; i$1++) if (a$2 === t$2.boxes[i$1].type) {
						r$2 = i$1 + 1;
						break;
					}
				}
				t$2.boxes.splice(r$2, 0, e$2);
			} else t$2.boxes.push(e$2);
		}, e$1.parseBuffer = n$1.parseBuffer, e$1.addBoxProcessor = n$1.addBoxProcessor, e$1.createFile = n$1.createFile, e$1.createBox = n$1.createBox, e$1.createFullBox = n$1.createFullBox, e$1.Utils = n$1.Utils, n$1.Cursor = function(t$2) {
			this.offset = void 0 === t$2 ? 0 : t$2;
		};
		var a$1 = function(t$2) {
			this._cursor = new n$1.Cursor(), this.boxes = [], t$2 && (this._raw = new DataView(t$2));
		};
		a$1.prototype.fetch = function(t$2) {
			var e$2 = this.fetchAll(t$2, !0);
			return e$2.length ? e$2[0] : null;
		}, a$1.prototype.fetchAll = function(t$2, e$2) {
			var n$2 = [];
			return a$1._sweep.call(this, t$2, n$2, e$2), n$2;
		}, a$1.prototype.parse = function() {
			for (this._cursor.offset = 0, this.boxes = []; this._cursor.offset < this._raw.byteLength;) {
				var t$2 = r$1.parse(this);
				if (void 0 === t$2.type) break;
				this.boxes.push(t$2);
			}
			return this;
		}, a$1._sweep = function(t$2, e$2, n$2) {
			for (var r$2 in this.type && this.type == t$2 && e$2.push(this), this.boxes) {
				if (e$2.length && n$2) return;
				a$1._sweep.call(this.boxes[r$2], t$2, e$2, n$2);
			}
		}, a$1.prototype.write = function() {
			var t$2, e$2 = 0;
			for (t$2 = 0; t$2 < this.boxes.length; t$2++) e$2 += this.boxes[t$2].getLength(!1);
			var n$2 = new Uint8Array(e$2);
			for (this._rawo = new DataView(n$2.buffer), this.bytes = n$2, this._cursor.offset = 0, t$2 = 0; t$2 < this.boxes.length; t$2++) this.boxes[t$2].write();
			return n$2.buffer;
		}, a$1.prototype.append = function(t$2, e$2) {
			n$1.Utils.appendBox(this, t$2, e$2);
		};
		var r$1 = function() {
			this._cursor = new n$1.Cursor();
		};
		r$1.parse = function(t$2) {
			var e$2 = new r$1();
			return e$2._offset = t$2._cursor.offset, e$2._root = t$2._root ? t$2._root : t$2, e$2._raw = t$2._raw, e$2._parent = t$2, e$2._parseBox(), t$2._cursor.offset = e$2._raw.byteOffset + e$2._raw.byteLength, e$2;
		}, r$1.create = function(t$2) {
			var e$2 = new r$1();
			return e$2.type = t$2, e$2.boxes = [], e$2;
		}, r$1.prototype._boxContainers = [
			"dinf",
			"edts",
			"mdia",
			"meco",
			"mfra",
			"minf",
			"moof",
			"moov",
			"mvex",
			"stbl",
			"strk",
			"traf",
			"trak",
			"tref",
			"udta",
			"vttc",
			"sinf",
			"schi",
			"encv",
			"enca",
			"meta",
			"grpl",
			"prsl"
		], r$1.prototype._boxProcessors = {}, r$1.prototype._procField = function(t$2, e$2, n$2) {
			this._parsing ? this[t$2] = this._readField(e$2, n$2) : this._writeField(e$2, n$2, this[t$2]);
		}, r$1.prototype._procFieldArray = function(t$2, e$2, n$2, a$2) {
			var r$2;
			if (this._parsing) for (this[t$2] = [], r$2 = 0; r$2 < e$2; r$2++) this[t$2][r$2] = this._readField(n$2, a$2);
			else for (r$2 = 0; r$2 < this[t$2].length; r$2++) this._writeField(n$2, a$2, this[t$2][r$2]);
		}, r$1.prototype._procFullBox = function() {
			this._procField("version", "uint", 8), this._procField("flags", "uint", 24);
		}, r$1.prototype._procEntries = function(t$2, e$2, n$2) {
			var a$2;
			if (this._parsing) for (this[t$2] = [], a$2 = 0; a$2 < e$2; a$2++) this[t$2].push({}), n$2.call(this, this[t$2][a$2]);
			else for (a$2 = 0; a$2 < e$2; a$2++) n$2.call(this, this[t$2][a$2]);
		}, r$1.prototype._procSubEntries = function(t$2, e$2, n$2, a$2) {
			var r$2;
			if (this._parsing) for (t$2[e$2] = [], r$2 = 0; r$2 < n$2; r$2++) t$2[e$2].push({}), a$2.call(this, t$2[e$2][r$2]);
			else for (r$2 = 0; r$2 < n$2; r$2++) a$2.call(this, t$2[e$2][r$2]);
		}, r$1.prototype._procEntryField = function(t$2, e$2, n$2, a$2) {
			this._parsing ? t$2[e$2] = this._readField(n$2, a$2) : this._writeField(n$2, a$2, t$2[e$2]);
		}, r$1.prototype._procSubBoxes = function(t$2, e$2) {
			var n$2;
			if (this._parsing) for (this[t$2] = [], n$2 = 0; n$2 < e$2; n$2++) this[t$2].push(r$1.parse(this));
			else for (n$2 = 0; n$2 < e$2; n$2++) this._rawo ? this[t$2][n$2].write() : this.size += this[t$2][n$2].getLength();
		}, r$1.prototype._readField = function(t$2, e$2) {
			switch (t$2) {
				case "uint": return this._readUint(e$2);
				case "int": return this._readInt(e$2);
				case "template": return this._readTemplate(e$2);
				case "string": return -1 === e$2 ? this._readTerminatedString() : this._readString(e$2);
				case "data": return this._readData(e$2);
				case "utf8": return this._readUTF8String();
				case "utf8string": return this._readUTF8TerminatedString();
				default: return -1;
			}
		}, r$1.prototype._readInt = function(t$2) {
			var e$2 = null, n$2 = this._cursor.offset - this._raw.byteOffset;
			switch (t$2) {
				case 8:
					e$2 = this._raw.getInt8(n$2);
					break;
				case 16:
					e$2 = this._raw.getInt16(n$2);
					break;
				case 32:
					e$2 = this._raw.getInt32(n$2);
					break;
				case 64:
					var a$2 = this._raw.getInt32(n$2), r$2 = this._raw.getInt32(n$2 + 4);
					e$2 = a$2 * Math.pow(2, 32) + r$2;
			}
			return this._cursor.offset += t$2 >> 3, e$2;
		}, r$1.prototype._readUint = function(t$2) {
			var e$2, n$2, a$2 = null, r$2 = this._cursor.offset - this._raw.byteOffset;
			switch (t$2) {
				case 8:
					a$2 = this._raw.getUint8(r$2);
					break;
				case 16:
					a$2 = this._raw.getUint16(r$2);
					break;
				case 24:
					a$2 = ((e$2 = this._raw.getUint16(r$2)) << 8) + (n$2 = this._raw.getUint8(r$2 + 2));
					break;
				case 32:
					a$2 = this._raw.getUint32(r$2);
					break;
				case 64: e$2 = this._raw.getUint32(r$2), n$2 = this._raw.getUint32(r$2 + 4), a$2 = e$2 * Math.pow(2, 32) + n$2;
			}
			return this._cursor.offset += t$2 >> 3, a$2;
		}, r$1.prototype._readString = function(t$2) {
			for (var e$2 = "", n$2 = 0; n$2 < t$2; n$2++) {
				var a$2 = this._readUint(8);
				e$2 += String.fromCharCode(a$2);
			}
			return e$2;
		}, r$1.prototype._readTemplate = function(t$2) {
			return this._readUint(t$2 / 2) + this._readUint(t$2 / 2) / Math.pow(2, t$2 / 2);
		}, r$1.prototype._readTerminatedString = function() {
			for (var t$2 = ""; this._cursor.offset - this._offset < this._raw.byteLength;) {
				var e$2 = this._readUint(8);
				if (0 === e$2) break;
				t$2 += String.fromCharCode(e$2);
			}
			return t$2;
		}, r$1.prototype._readData = function(t$2) {
			var e$2 = t$2 > 0 ? t$2 : this._raw.byteLength - (this._cursor.offset - this._offset);
			if (e$2 > 0) {
				var n$2 = new Uint8Array(this._raw.buffer, this._cursor.offset, e$2);
				return this._cursor.offset += e$2, n$2;
			}
			return null;
		}, r$1.prototype._readUTF8String = function() {
			var t$2 = this._raw.byteLength - (this._cursor.offset - this._offset), e$2 = null;
			return t$2 > 0 && (e$2 = new DataView(this._raw.buffer, this._cursor.offset, t$2), this._cursor.offset += t$2), e$2 ? n$1.Utils.dataViewToString(e$2) : e$2;
		}, r$1.prototype._readUTF8TerminatedString = function() {
			var t$2 = this._raw.byteLength - (this._cursor.offset - this._offset), e$2 = null;
			if (t$2 > 0) {
				var a$2;
				for (e$2 = new DataView(this._raw.buffer, this._cursor.offset, t$2), a$2 = 0; a$2 < t$2 && 0 !== e$2.getUint8(a$2); a$2++);
				e$2 = new DataView(this._raw.buffer, this._cursor.offset, a$2), this._cursor.offset += Math.min(a$2 + 1, t$2);
			}
			return e$2 ? n$1.Utils.dataViewToString(e$2) : e$2;
		}, r$1.prototype._parseBox = function() {
			if (this._parsing = !0, this._cursor.offset = this._offset, this._offset + 8 > this._raw.buffer.byteLength) this._root._incomplete = !0;
			else {
				switch (this._procField("size", "uint", 32), this._procField("type", "string", 4), 1 === this.size && this._procField("largesize", "uint", 64), "uuid" === this.type && this._procFieldArray("usertype", 16, "uint", 8), this.size) {
					case 0:
						this._raw = new DataView(this._raw.buffer, this._offset);
						break;
					case 1:
						this._offset + this.size > this._raw.buffer.byteLength ? (this._incomplete = !0, this._root._incomplete = !0) : this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);
						break;
					default: this._offset + this.size > this._raw.buffer.byteLength ? (this._incomplete = !0, this._root._incomplete = !0) : this._raw = new DataView(this._raw.buffer, this._offset, this.size);
				}
				this._incomplete || (this._boxProcessors[this.type] && this._boxProcessors[this.type].call(this), -1 !== this._boxContainers.indexOf(this.type) ? this._parseContainerBox() : this._data = this._readData());
			}
		}, r$1.prototype._parseFullBox = function() {
			this.version = this._readUint(8), this.flags = this._readUint(24);
		}, r$1.prototype._parseContainerBox = function() {
			for (this.boxes = []; this._cursor.offset - this._raw.byteOffset < this._raw.byteLength;) this.boxes.push(r$1.parse(this));
		}, r$1.prototype.append = function(t$2, e$2) {
			n$1.Utils.appendBox(this, t$2, e$2);
		}, r$1.prototype.getLength = function() {
			if (this._parsing = !1, this._rawo = null, this.size = 0, this._procField("size", "uint", 32), this._procField("type", "string", 4), 1 === this.size && this._procField("largesize", "uint", 64), "uuid" === this.type && this._procFieldArray("usertype", 16, "uint", 8), this._boxProcessors[this.type] && this._boxProcessors[this.type].call(this), -1 !== this._boxContainers.indexOf(this.type)) for (var t$2 = 0; t$2 < this.boxes.length; t$2++) this.size += this.boxes[t$2].getLength();
			return this._data && this._writeData(this._data), this.size;
		}, r$1.prototype.write = function() {
			switch (this._parsing = !1, this._cursor.offset = this._parent._cursor.offset, this.size) {
				case 0:
					this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.parent._rawo.byteLength - this._cursor.offset);
					break;
				case 1:
					this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);
					break;
				default: this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);
			}
			if (this._procField("size", "uint", 32), this._procField("type", "string", 4), 1 === this.size && this._procField("largesize", "uint", 64), "uuid" === this.type && this._procFieldArray("usertype", 16, "uint", 8), this._boxProcessors[this.type] && this._boxProcessors[this.type].call(this), -1 !== this._boxContainers.indexOf(this.type)) for (var t$2 = 0; t$2 < this.boxes.length; t$2++) this.boxes[t$2].write();
			return this._data && this._writeData(this._data), this._parent._cursor.offset += this.size, this.size;
		}, r$1.prototype._writeInt = function(t$2, e$2) {
			if (this._rawo) {
				var n$2 = this._cursor.offset - this._rawo.byteOffset;
				switch (t$2) {
					case 8:
						this._rawo.setInt8(n$2, e$2);
						break;
					case 16:
						this._rawo.setInt16(n$2, e$2);
						break;
					case 32:
						this._rawo.setInt32(n$2, e$2);
						break;
					case 64:
						var a$2 = Math.floor(e$2 / Math.pow(2, 32)), r$2 = e$2 - a$2 * Math.pow(2, 32);
						this._rawo.setUint32(n$2, a$2), this._rawo.setUint32(n$2 + 4, r$2);
				}
				this._cursor.offset += t$2 >> 3;
			} else this.size += t$2 >> 3;
		}, r$1.prototype._writeUint = function(t$2, e$2) {
			if (this._rawo) {
				var n$2, a$2, r$2 = this._cursor.offset - this._rawo.byteOffset;
				switch (t$2) {
					case 8:
						this._rawo.setUint8(r$2, e$2);
						break;
					case 16:
						this._rawo.setUint16(r$2, e$2);
						break;
					case 24:
						n$2 = (16776960 & e$2) >> 8, a$2 = 255 & e$2, this._rawo.setUint16(r$2, n$2), this._rawo.setUint8(r$2 + 2, a$2);
						break;
					case 32:
						this._rawo.setUint32(r$2, e$2);
						break;
					case 64: a$2 = e$2 - (n$2 = Math.floor(e$2 / Math.pow(2, 32))) * Math.pow(2, 32), this._rawo.setUint32(r$2, n$2), this._rawo.setUint32(r$2 + 4, a$2);
				}
				this._cursor.offset += t$2 >> 3;
			} else this.size += t$2 >> 3;
		}, r$1.prototype._writeString = function(t$2, e$2) {
			for (var n$2 = 0; n$2 < t$2; n$2++) this._writeUint(8, e$2.charCodeAt(n$2));
		}, r$1.prototype._writeTerminatedString = function(t$2) {
			if (0 !== t$2.length) {
				for (var e$2 = 0; e$2 < t$2.length; e$2++) this._writeUint(8, t$2.charCodeAt(e$2));
				this._writeUint(8, 0);
			}
		}, r$1.prototype._writeTemplate = function(t$2, e$2) {
			var n$2 = Math.floor(e$2), a$2 = (e$2 - n$2) * Math.pow(2, t$2 / 2);
			this._writeUint(t$2 / 2, n$2), this._writeUint(t$2 / 2, a$2);
		}, r$1.prototype._writeData = function(t$2) {
			if (t$2) if (this._rawo) {
				if (t$2 instanceof Array) {
					for (var e$2 = this._cursor.offset - this._rawo.byteOffset, n$2 = 0; n$2 < t$2.length; n$2++) this._rawo.setInt8(e$2 + n$2, t$2[n$2]);
					this._cursor.offset += t$2.length;
				}
				t$2 instanceof Uint8Array && (this._root.bytes.set(t$2, this._cursor.offset), this._cursor.offset += t$2.length);
			} else this.size += t$2.length;
		}, r$1.prototype._writeUTF8String = function(t$2) {
			var e$2 = n$1.Utils.utf8ToByteArray(t$2);
			if (this._rawo) for (var a$2 = new DataView(this._rawo.buffer, this._cursor.offset, e$2.length), r$2 = 0; r$2 < e$2.length; r$2++) a$2.setUint8(r$2, e$2[r$2]);
			else this.size += e$2.length;
		}, r$1.prototype._writeField = function(t$2, e$2, n$2) {
			switch (t$2) {
				case "uint":
					this._writeUint(e$2, n$2);
					break;
				case "int":
					this._writeInt(e$2, n$2);
					break;
				case "template":
					this._writeTemplate(e$2, n$2);
					break;
				case "string":
					-1 == e$2 ? this._writeTerminatedString(n$2) : this._writeString(e$2, n$2);
					break;
				case "data":
					this._writeData(n$2);
					break;
				case "utf8": this._writeUTF8String(n$2);
			}
		}, r$1.prototype._boxProcessors.ardi = function() {
			this._procFullBox(), this._procField("audio_rendering_indication", "uint", 8);
		}, r$1.prototype._boxProcessors.avc1 = r$1.prototype._boxProcessors.avc2 = r$1.prototype._boxProcessors.avc3 = r$1.prototype._boxProcessors.avc4 = r$1.prototype._boxProcessors.hvc1 = r$1.prototype._boxProcessors.hev1 = r$1.prototype._boxProcessors.encv = function() {
			this._procFieldArray("reserved1", 6, "uint", 8), this._procField("data_reference_index", "uint", 16), this._procField("pre_defined1", "uint", 16), this._procField("reserved2", "uint", 16), this._procFieldArray("pre_defined2", 3, "uint", 32), this._procField("width", "uint", 16), this._procField("height", "uint", 16), this._procField("horizresolution", "template", 32), this._procField("vertresolution", "template", 32), this._procField("reserved3", "uint", 32), this._procField("frame_count", "uint", 16), this._procFieldArray("compressorname", 32, "uint", 8), this._procField("depth", "uint", 16), this._procField("pre_defined3", "int", 16), this._procField("config", "data", -1);
		}, r$1.prototype._boxProcessors.ctts = function() {
			this._procFullBox(), this._procField("entry_count", "uint", 32), this._procEntries("entries", this.entry_count, (function(t$2) {
				this._procEntryField(t$2, "sample_count", "uint", 32), this._procEntryField(t$2, "sample_offset", 1 === this.version ? "int" : "uint", 32);
			}));
		}, r$1.prototype._boxProcessors.dref = function() {
			this._procFullBox(), this._procField("entry_count", "uint", 32), this._procSubBoxes("entries", this.entry_count);
		}, r$1.prototype._boxProcessors.elng = function() {
			this._procFullBox(), this._procField("extended_language", "utf8string");
		}, r$1.prototype._boxProcessors.elst = function() {
			this._procFullBox(), this._procField("entry_count", "uint", 32), this._procEntries("entries", this.entry_count, (function(t$2) {
				this._procEntryField(t$2, "segment_duration", "uint", 1 === this.version ? 64 : 32), this._procEntryField(t$2, "media_time", "int", 1 === this.version ? 64 : 32), this._procEntryField(t$2, "media_rate_integer", "int", 16), this._procEntryField(t$2, "media_rate_fraction", "int", 16);
			}));
		}, r$1.prototype._boxProcessors.emsg = function() {
			this._procFullBox(), 1 == this.version ? (this._procField("timescale", "uint", 32), this._procField("presentation_time", "uint", 64), this._procField("event_duration", "uint", 32), this._procField("id", "uint", 32), this._procField("scheme_id_uri", "string", -1), this._procField("value", "string", -1)) : (this._procField("scheme_id_uri", "string", -1), this._procField("value", "string", -1), this._procField("timescale", "uint", 32), this._procField("presentation_time_delta", "uint", 32), this._procField("event_duration", "uint", 32), this._procField("id", "uint", 32)), this._procField("message_data", "data", -1);
		}, r$1.prototype._boxProcessors.free = r$1.prototype._boxProcessors.skip = function() {
			this._procField("data", "data", -1);
		}, r$1.prototype._boxProcessors.frma = function() {
			this._procField("data_format", "uint", 32);
		}, r$1.prototype._boxProcessors.ftyp = r$1.prototype._boxProcessors.styp = function() {
			this._procField("major_brand", "string", 4), this._procField("minor_version", "uint", 32);
			var t$2 = -1;
			this._parsing && (t$2 = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4), this._procFieldArray("compatible_brands", t$2, "string", 4);
		}, r$1.prototype._boxProcessors.hdlr = function() {
			this._procFullBox(), this._procField("pre_defined", "uint", 32), this._procField("handler_type", "string", 4), this._procFieldArray("reserved", 3, "uint", 32), this._procField("name", "string", -1);
		}, r$1.prototype._boxProcessors.imda = function() {
			this._procField("imda_identifier", "uint", 32), this._procField("data", "data", -1);
		}, r$1.prototype._boxProcessors.kind = function() {
			this._procFullBox(), this._procField("schemeURI", "utf8string"), this._procField("value", "utf8string");
		}, r$1.prototype._boxProcessors.labl = function() {
			this._procFullBox(), this.is_group_label = !!(1 & this.flags), this._procField("label_id", "uint", 16), this._procField("language", "utf8string"), this._procField("label", "utf8string");
		}, r$1.prototype._boxProcessors.mdat = function() {
			this._procField("data", "data", -1);
		}, r$1.prototype._boxProcessors.mdhd = function() {
			this._procFullBox(), this._procField("creation_time", "uint", 1 == this.version ? 64 : 32), this._procField("modification_time", "uint", 1 == this.version ? 64 : 32), this._procField("timescale", "uint", 32), this._procField("duration", "uint", 1 == this.version ? 64 : 32), this._parsing || "string" != typeof this.language || (this.language = this.language.charCodeAt(0) - 96 << 10 | this.language.charCodeAt(1) - 96 << 5 | this.language.charCodeAt(2) - 96), this._procField("language", "uint", 16), this._parsing && (this.language = String.fromCharCode(96 + (this.language >> 10 & 31), 96 + (this.language >> 5 & 31), 96 + (31 & this.language))), this._procField("pre_defined", "uint", 16);
		}, r$1.prototype._boxProcessors.mehd = function() {
			this._procFullBox(), this._procField("fragment_duration", "uint", 1 == this.version ? 64 : 32);
		}, r$1.prototype._boxProcessors.meta = function() {
			this._procFullBox();
		}, r$1.prototype._boxProcessors.mfhd = function() {
			this._procFullBox(), this._procField("sequence_number", "uint", 32);
		}, r$1.prototype._boxProcessors.mfro = function() {
			this._procFullBox(), this._procField("mfra_size", "uint", 32);
		}, r$1.prototype._boxProcessors.mp4a = r$1.prototype._boxProcessors.enca = function() {
			this._procFieldArray("reserved1", 6, "uint", 8), this._procField("data_reference_index", "uint", 16), this._procFieldArray("reserved2", 2, "uint", 32), this._procField("channelcount", "uint", 16), this._procField("samplesize", "uint", 16), this._procField("pre_defined", "uint", 16), this._procField("reserved3", "uint", 16), this._procField("samplerate", "template", 32), this._procField("esds", "data", -1);
		}, r$1.prototype._boxProcessors.mvhd = function() {
			this._procFullBox(), this._procField("creation_time", "uint", 1 == this.version ? 64 : 32), this._procField("modification_time", "uint", 1 == this.version ? 64 : 32), this._procField("timescale", "uint", 32), this._procField("duration", "uint", 1 == this.version ? 64 : 32), this._procField("rate", "template", 32), this._procField("volume", "template", 16), this._procField("reserved1", "uint", 16), this._procFieldArray("reserved2", 2, "uint", 32), this._procFieldArray("matrix", 9, "template", 32), this._procFieldArray("pre_defined", 6, "uint", 32), this._procField("next_track_ID", "uint", 32);
		}, r$1.prototype._boxProcessors.payl = function() {
			this._procField("cue_text", "utf8");
		}, r$1.prototype._boxProcessors.prft = function() {
			this._procFullBox(), this._procField("reference_track_ID", "uint", 32), this._procField("ntp_timestamp_sec", "uint", 32), this._procField("ntp_timestamp_frac", "uint", 32), this._procField("media_time", "uint", 1 == this.version ? 64 : 32);
		}, r$1.prototype._boxProcessors.prsl = function() {
			this._procFullBox(), this._procField("group_id", "uint", 32), this._procField("num_entities_in_group", "uint", 32), this._procEntries("entities", this.num_entities_in_group, (function(t$2) {
				this._procEntryField(t$2, "entity_id", "uint", 32);
			})), 4096 & this.flags && this._procField("preselection_tag", "utf8string"), 8192 & this.flags && this._procField("selection_priority", "uint", 8), 16384 & this.flags && this._procField("interleaving_tag", "utf8string");
		}, r$1.prototype._boxProcessors.pssh = function() {
			this._procFullBox(), this._procFieldArray("SystemID", 16, "uint", 8), this._procField("DataSize", "uint", 32), this._procFieldArray("Data", this.DataSize, "uint", 8);
		}, r$1.prototype._boxProcessors.schm = function() {
			this._procFullBox(), this._procField("scheme_type", "uint", 32), this._procField("scheme_version", "uint", 32), 1 & this.flags && this._procField("scheme_uri", "string", -1);
		}, r$1.prototype._boxProcessors.sdtp = function() {
			this._procFullBox();
			var t$2 = -1;
			this._parsing && (t$2 = this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)), this._procFieldArray("sample_dependency_table", t$2, "uint", 8);
		}, r$1.prototype._boxProcessors.sidx = function() {
			this._procFullBox(), this._procField("reference_ID", "uint", 32), this._procField("timescale", "uint", 32), this._procField("earliest_presentation_time", "uint", 1 == this.version ? 64 : 32), this._procField("first_offset", "uint", 1 == this.version ? 64 : 32), this._procField("reserved", "uint", 16), this._procField("reference_count", "uint", 16), this._procEntries("references", this.reference_count, (function(t$2) {
				this._parsing || (t$2.reference = (1 & t$2.reference_type) << 31, t$2.reference |= 2147483647 & t$2.referenced_size, t$2.sap = (1 & t$2.starts_with_SAP) << 31, t$2.sap |= (3 & t$2.SAP_type) << 28, t$2.sap |= 268435455 & t$2.SAP_delta_time), this._procEntryField(t$2, "reference", "uint", 32), this._procEntryField(t$2, "subsegment_duration", "uint", 32), this._procEntryField(t$2, "sap", "uint", 32), this._parsing && (t$2.reference_type = t$2.reference >> 31 & 1, t$2.referenced_size = 2147483647 & t$2.reference, t$2.starts_with_SAP = t$2.sap >> 31 & 1, t$2.SAP_type = t$2.sap >> 28 & 7, t$2.SAP_delta_time = 268435455 & t$2.sap);
			}));
		}, r$1.prototype._boxProcessors.smhd = function() {
			this._procFullBox(), this._procField("balance", "uint", 16), this._procField("reserved", "uint", 16);
		}, r$1.prototype._boxProcessors.ssix = function() {
			this._procFullBox(), this._procField("subsegment_count", "uint", 32), this._procEntries("subsegments", this.subsegment_count, (function(t$2) {
				this._procEntryField(t$2, "ranges_count", "uint", 32), this._procSubEntries(t$2, "ranges", t$2.ranges_count, (function(t$3) {
					this._procEntryField(t$3, "level", "uint", 8), this._procEntryField(t$3, "range_size", "uint", 24);
				}));
			}));
		}, r$1.prototype._boxProcessors.stsd = function() {
			this._procFullBox(), this._procField("entry_count", "uint", 32), this._procSubBoxes("entries", this.entry_count);
		}, r$1.prototype._boxProcessors.sttg = function() {
			this._procField("settings", "utf8");
		}, r$1.prototype._boxProcessors.stts = function() {
			this._procFullBox(), this._procField("entry_count", "uint", 32), this._procEntries("entries", this.entry_count, (function(t$2) {
				this._procEntryField(t$2, "sample_count", "uint", 32), this._procEntryField(t$2, "sample_delta", "uint", 32);
			}));
		}, r$1.prototype._boxProcessors.subs = function() {
			this._procFullBox(), this._procField("entry_count", "uint", 32), this._procEntries("entries", this.entry_count, (function(t$2) {
				this._procEntryField(t$2, "sample_delta", "uint", 32), this._procEntryField(t$2, "subsample_count", "uint", 16), this._procSubEntries(t$2, "subsamples", t$2.subsample_count, (function(t$3) {
					this._procEntryField(t$3, "subsample_size", "uint", 1 === this.version ? 32 : 16), this._procEntryField(t$3, "subsample_priority", "uint", 8), this._procEntryField(t$3, "discardable", "uint", 8), this._procEntryField(t$3, "codec_specific_parameters", "uint", 32);
				}));
			}));
		}, r$1.prototype._boxProcessors.tenc = function() {
			this._procFullBox(), this._procField("default_IsEncrypted", "uint", 24), this._procField("default_IV_size", "uint", 8), this._procFieldArray("default_KID", 16, "uint", 8);
		}, r$1.prototype._boxProcessors.tfdt = function() {
			this._procFullBox(), this._procField("baseMediaDecodeTime", "uint", 1 == this.version ? 64 : 32);
		}, r$1.prototype._boxProcessors.tfhd = function() {
			this._procFullBox(), this._procField("track_ID", "uint", 32), 1 & this.flags && this._procField("base_data_offset", "uint", 64), 2 & this.flags && this._procField("sample_description_offset", "uint", 32), 8 & this.flags && this._procField("default_sample_duration", "uint", 32), 16 & this.flags && this._procField("default_sample_size", "uint", 32), 32 & this.flags && this._procField("default_sample_flags", "uint", 32);
		}, r$1.prototype._boxProcessors.tfra = function() {
			this._procFullBox(), this._procField("track_ID", "uint", 32), this._parsing || (this.reserved = 0, this.reserved |= (48 & this.length_size_of_traf_num) << 4, this.reserved |= (12 & this.length_size_of_trun_num) << 2, this.reserved |= 3 & this.length_size_of_sample_num), this._procField("reserved", "uint", 32), this._parsing && (this.length_size_of_traf_num = (48 & this.reserved) >> 4, this.length_size_of_trun_num = (12 & this.reserved) >> 2, this.length_size_of_sample_num = 3 & this.reserved), this._procField("number_of_entry", "uint", 32), this._procEntries("entries", this.number_of_entry, (function(t$2) {
				this._procEntryField(t$2, "time", "uint", 1 === this.version ? 64 : 32), this._procEntryField(t$2, "moof_offset", "uint", 1 === this.version ? 64 : 32), this._procEntryField(t$2, "traf_number", "uint", 8 * (this.length_size_of_traf_num + 1)), this._procEntryField(t$2, "trun_number", "uint", 8 * (this.length_size_of_trun_num + 1)), this._procEntryField(t$2, "sample_number", "uint", 8 * (this.length_size_of_sample_num + 1));
			}));
		}, r$1.prototype._boxProcessors.tkhd = function() {
			this._procFullBox(), this._procField("creation_time", "uint", 1 == this.version ? 64 : 32), this._procField("modification_time", "uint", 1 == this.version ? 64 : 32), this._procField("track_ID", "uint", 32), this._procField("reserved1", "uint", 32), this._procField("duration", "uint", 1 == this.version ? 64 : 32), this._procFieldArray("reserved2", 2, "uint", 32), this._procField("layer", "uint", 16), this._procField("alternate_group", "uint", 16), this._procField("volume", "template", 16), this._procField("reserved3", "uint", 16), this._procFieldArray("matrix", 9, "template", 32), this._procField("width", "template", 32), this._procField("height", "template", 32);
		}, r$1.prototype._boxProcessors.trex = function() {
			this._procFullBox(), this._procField("track_ID", "uint", 32), this._procField("default_sample_description_index", "uint", 32), this._procField("default_sample_duration", "uint", 32), this._procField("default_sample_size", "uint", 32), this._procField("default_sample_flags", "uint", 32);
		}, r$1.prototype._boxProcessors.trun = function() {
			this._procFullBox(), this._procField("sample_count", "uint", 32), 1 & this.flags && this._procField("data_offset", "int", 32), 4 & this.flags && this._procField("first_sample_flags", "uint", 32), this._procEntries("samples", this.sample_count, (function(t$2) {
				256 & this.flags && this._procEntryField(t$2, "sample_duration", "uint", 32), 512 & this.flags && this._procEntryField(t$2, "sample_size", "uint", 32), 1024 & this.flags && this._procEntryField(t$2, "sample_flags", "uint", 32), 2048 & this.flags && this._procEntryField(t$2, "sample_composition_time_offset", 1 === this.version ? "int" : "uint", 32);
			}));
		}, r$1.prototype._boxProcessors["url "] = r$1.prototype._boxProcessors["urn "] = function() {
			this._procFullBox(), "urn " === this.type && this._procField("name", "string", -1), this._procField("location", "string", -1);
		}, r$1.prototype._boxProcessors.vlab = function() {
			this._procField("source_label", "utf8");
		}, r$1.prototype._boxProcessors.vmhd = function() {
			this._procFullBox(), this._procField("graphicsmode", "uint", 16), this._procFieldArray("opcolor", 3, "uint", 16);
		}, r$1.prototype._boxProcessors.vttC = function() {
			this._procField("config", "utf8");
		}, r$1.prototype._boxProcessors.vtte = function() {};
	},
	9826: function(t$1) {
		var e$1, n$1 = "object" == typeof Reflect ? Reflect : null, a$1 = n$1 && "function" == typeof n$1.apply ? n$1.apply : function(t$2, e$2, n$2) {
			return Function.prototype.apply.call(t$2, e$2, n$2);
		};
		e$1 = n$1 && "function" == typeof n$1.ownKeys ? n$1.ownKeys : Object.getOwnPropertySymbols ? function(t$2) {
			return Object.getOwnPropertyNames(t$2).concat(Object.getOwnPropertySymbols(t$2));
		} : function(t$2) {
			return Object.getOwnPropertyNames(t$2);
		};
		var r$1 = Number.isNaN || function(t$2) {
			return t$2 != t$2;
		};
		function i$1() {
			i$1.init.call(this);
		}
		t$1.exports = i$1, t$1.exports.once = function(t$2, e$2) {
			return new Promise((function(n$2, a$2) {
				function r$2(n$3) {
					t$2.removeListener(e$2, i$2), a$2(n$3);
				}
				function i$2() {
					"function" == typeof t$2.removeListener && t$2.removeListener("error", r$2), n$2([].slice.call(arguments));
				}
				h$1(t$2, e$2, i$2, { once: !0 }), "error" !== e$2 && function(t$3, e$3) {
					"function" == typeof t$3.on && h$1(t$3, "error", e$3, { once: !0 });
				}(t$2, r$2);
			}));
		}, i$1.EventEmitter = i$1, i$1.prototype._events = void 0, i$1.prototype._eventsCount = 0, i$1.prototype._maxListeners = void 0;
		var l$1 = 10;
		function o$1(t$2) {
			if ("function" != typeof t$2) throw new TypeError("The \"listener\" argument must be of type Function. Received type " + typeof t$2);
		}
		function s$1(t$2) {
			return void 0 === t$2._maxListeners ? i$1.defaultMaxListeners : t$2._maxListeners;
		}
		function u$1(t$2, e$2, n$2, a$2) {
			var r$2, i$2, l$2, u$2;
			if (o$1(n$2), void 0 === (i$2 = t$2._events) ? (i$2 = t$2._events = Object.create(null), t$2._eventsCount = 0) : (void 0 !== i$2.newListener && (t$2.emit("newListener", e$2, n$2.listener ? n$2.listener : n$2), i$2 = t$2._events), l$2 = i$2[e$2]), void 0 === l$2) l$2 = i$2[e$2] = n$2, ++t$2._eventsCount;
			else if ("function" == typeof l$2 ? l$2 = i$2[e$2] = a$2 ? [n$2, l$2] : [l$2, n$2] : a$2 ? l$2.unshift(n$2) : l$2.push(n$2), (r$2 = s$1(t$2)) > 0 && l$2.length > r$2 && !l$2.warned) {
				l$2.warned = !0;
				var d$2 = /* @__PURE__ */ new Error("Possible EventEmitter memory leak detected. " + l$2.length + " " + String(e$2) + " listeners added. Use emitter.setMaxListeners() to increase limit");
				d$2.name = "MaxListenersExceededWarning", d$2.emitter = t$2, d$2.type = e$2, d$2.count = l$2.length, u$2 = d$2, console && console.warn && console.warn(u$2);
			}
			return t$2;
		}
		function d$1() {
			if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
		}
		function c$1(t$2, e$2, n$2) {
			var a$2 = {
				fired: !1,
				wrapFn: void 0,
				target: t$2,
				type: e$2,
				listener: n$2
			}, r$2 = d$1.bind(a$2);
			return r$2.listener = n$2, a$2.wrapFn = r$2, r$2;
		}
		function f$1(t$2, e$2, n$2) {
			var a$2 = t$2._events;
			if (void 0 === a$2) return [];
			var r$2 = a$2[e$2];
			return void 0 === r$2 ? [] : "function" == typeof r$2 ? n$2 ? [r$2.listener || r$2] : [r$2] : n$2 ? function(t$3) {
				for (var e$3 = new Array(t$3.length), n$3 = 0; n$3 < e$3.length; ++n$3) e$3[n$3] = t$3[n$3].listener || t$3[n$3];
				return e$3;
			}(r$2) : m$1(r$2, r$2.length);
		}
		function g$1(t$2) {
			var e$2 = this._events;
			if (void 0 !== e$2) {
				var n$2 = e$2[t$2];
				if ("function" == typeof n$2) return 1;
				if (void 0 !== n$2) return n$2.length;
			}
			return 0;
		}
		function m$1(t$2, e$2) {
			for (var n$2 = new Array(e$2), a$2 = 0; a$2 < e$2; ++a$2) n$2[a$2] = t$2[a$2];
			return n$2;
		}
		function h$1(t$2, e$2, n$2, a$2) {
			if ("function" == typeof t$2.on) a$2.once ? t$2.once(e$2, n$2) : t$2.on(e$2, n$2);
			else {
				if ("function" != typeof t$2.addEventListener) throw new TypeError("The \"emitter\" argument must be of type EventEmitter. Received type " + typeof t$2);
				t$2.addEventListener(e$2, (function r$2(i$2) {
					a$2.once && t$2.removeEventListener(e$2, r$2), n$2(i$2);
				}));
			}
		}
		Object.defineProperty(i$1, "defaultMaxListeners", {
			enumerable: !0,
			get: function() {
				return l$1;
			},
			set: function(t$2) {
				if ("number" != typeof t$2 || t$2 < 0 || r$1(t$2)) throw new RangeError("The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received " + t$2 + ".");
				l$1 = t$2;
			}
		}), i$1.init = function() {
			void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
		}, i$1.prototype.setMaxListeners = function(t$2) {
			if ("number" != typeof t$2 || t$2 < 0 || r$1(t$2)) throw new RangeError("The value of \"n\" is out of range. It must be a non-negative number. Received " + t$2 + ".");
			return this._maxListeners = t$2, this;
		}, i$1.prototype.getMaxListeners = function() {
			return s$1(this);
		}, i$1.prototype.emit = function(t$2) {
			for (var e$2 = [], n$2 = 1; n$2 < arguments.length; n$2++) e$2.push(arguments[n$2]);
			var r$2 = "error" === t$2, i$2 = this._events;
			if (void 0 !== i$2) r$2 = r$2 && void 0 === i$2.error;
			else if (!r$2) return !1;
			if (r$2) {
				var l$2;
				if (e$2.length > 0 && (l$2 = e$2[0]), l$2 instanceof Error) throw l$2;
				var o$2 = /* @__PURE__ */ new Error("Unhandled error." + (l$2 ? " (" + l$2.message + ")" : ""));
				throw o$2.context = l$2, o$2;
			}
			var s$2 = i$2[t$2];
			if (void 0 === s$2) return !1;
			if ("function" == typeof s$2) a$1(s$2, this, e$2);
			else {
				var u$2 = s$2.length, d$2 = m$1(s$2, u$2);
				for (n$2 = 0; n$2 < u$2; ++n$2) a$1(d$2[n$2], this, e$2);
			}
			return !0;
		}, i$1.prototype.addListener = function(t$2, e$2) {
			return u$1(this, t$2, e$2, !1);
		}, i$1.prototype.on = i$1.prototype.addListener, i$1.prototype.prependListener = function(t$2, e$2) {
			return u$1(this, t$2, e$2, !0);
		}, i$1.prototype.once = function(t$2, e$2) {
			return o$1(e$2), this.on(t$2, c$1(this, t$2, e$2)), this;
		}, i$1.prototype.prependOnceListener = function(t$2, e$2) {
			return o$1(e$2), this.prependListener(t$2, c$1(this, t$2, e$2)), this;
		}, i$1.prototype.removeListener = function(t$2, e$2) {
			var n$2, a$2, r$2, i$2, l$2;
			if (o$1(e$2), void 0 === (a$2 = this._events)) return this;
			if (void 0 === (n$2 = a$2[t$2])) return this;
			if (n$2 === e$2 || n$2.listener === e$2) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete a$2[t$2], a$2.removeListener && this.emit("removeListener", t$2, n$2.listener || e$2));
			else if ("function" != typeof n$2) {
				for (r$2 = -1, i$2 = n$2.length - 1; i$2 >= 0; i$2--) if (n$2[i$2] === e$2 || n$2[i$2].listener === e$2) {
					l$2 = n$2[i$2].listener, r$2 = i$2;
					break;
				}
				if (r$2 < 0) return this;
				0 === r$2 ? n$2.shift() : function(t$3, e$3) {
					for (; e$3 + 1 < t$3.length; e$3++) t$3[e$3] = t$3[e$3 + 1];
					t$3.pop();
				}(n$2, r$2), 1 === n$2.length && (a$2[t$2] = n$2[0]), void 0 !== a$2.removeListener && this.emit("removeListener", t$2, l$2 || e$2);
			}
			return this;
		}, i$1.prototype.off = i$1.prototype.removeListener, i$1.prototype.removeAllListeners = function(t$2) {
			var e$2, n$2, a$2;
			if (void 0 === (n$2 = this._events)) return this;
			if (void 0 === n$2.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== n$2[t$2] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete n$2[t$2]), this;
			if (0 === arguments.length) {
				var r$2, i$2 = Object.keys(n$2);
				for (a$2 = 0; a$2 < i$2.length; ++a$2) "removeListener" !== (r$2 = i$2[a$2]) && this.removeAllListeners(r$2);
				return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
			}
			if ("function" == typeof (e$2 = n$2[t$2])) this.removeListener(t$2, e$2);
			else if (void 0 !== e$2) for (a$2 = e$2.length - 1; a$2 >= 0; a$2--) this.removeListener(t$2, e$2[a$2]);
			return this;
		}, i$1.prototype.listeners = function(t$2) {
			return f$1(this, t$2, !0);
		}, i$1.prototype.rawListeners = function(t$2) {
			return f$1(this, t$2, !1);
		}, i$1.listenerCount = function(t$2, e$2) {
			return "function" == typeof t$2.listenerCount ? t$2.listenerCount(e$2) : g$1.call(t$2, e$2);
		}, i$1.prototype.listenerCount = g$1, i$1.prototype.eventNames = function() {
			return this._eventsCount > 0 ? e$1(this._events) : [];
		};
	},
	7316: function(t$1) {
		t$1.exports = function t$2(e$1, n$1) {
			if (e$1 === n$1) return !0;
			if (e$1 && n$1 && "object" == typeof e$1 && "object" == typeof n$1) {
				if (e$1.constructor !== n$1.constructor) return !1;
				var a$1, r$1, i$1;
				if (Array.isArray(e$1)) {
					if ((a$1 = e$1.length) != n$1.length) return !1;
					for (r$1 = a$1; 0 != r$1--;) if (!t$2(e$1[r$1], n$1[r$1])) return !1;
					return !0;
				}
				if (e$1.constructor === RegExp) return e$1.source === n$1.source && e$1.flags === n$1.flags;
				if (e$1.valueOf !== Object.prototype.valueOf) return e$1.valueOf() === n$1.valueOf();
				if (e$1.toString !== Object.prototype.toString) return e$1.toString() === n$1.toString();
				if ((a$1 = (i$1 = Object.keys(e$1)).length) !== Object.keys(n$1).length) return !1;
				for (r$1 = a$1; 0 != r$1--;) if (!Object.prototype.hasOwnProperty.call(n$1, i$1[r$1])) return !1;
				for (r$1 = a$1; 0 != r$1--;) {
					var l$1 = i$1[r$1];
					if (!t$2(e$1[l$1], n$1[l$1])) return !1;
				}
				return !0;
			}
			return e$1 != e$1 && n$1 != n$1;
		};
	},
	7986: function(t$1, e$1) {
		e$1.read = function(t$2, e$2, n$1, a$1, r$1) {
			var i$1, l$1, o$1 = 8 * r$1 - a$1 - 1, s$1 = (1 << o$1) - 1, u$1 = s$1 >> 1, d$1 = -7, c$1 = n$1 ? r$1 - 1 : 0, f$1 = n$1 ? -1 : 1, g$1 = t$2[e$2 + c$1];
			for (c$1 += f$1, i$1 = g$1 & (1 << -d$1) - 1, g$1 >>= -d$1, d$1 += o$1; d$1 > 0; i$1 = 256 * i$1 + t$2[e$2 + c$1], c$1 += f$1, d$1 -= 8);
			for (l$1 = i$1 & (1 << -d$1) - 1, i$1 >>= -d$1, d$1 += a$1; d$1 > 0; l$1 = 256 * l$1 + t$2[e$2 + c$1], c$1 += f$1, d$1 -= 8);
			if (0 === i$1) i$1 = 1 - u$1;
			else {
				if (i$1 === s$1) return l$1 ? NaN : Infinity * (g$1 ? -1 : 1);
				l$1 += Math.pow(2, a$1), i$1 -= u$1;
			}
			return (g$1 ? -1 : 1) * l$1 * Math.pow(2, i$1 - a$1);
		}, e$1.write = function(t$2, e$2, n$1, a$1, r$1, i$1) {
			var l$1, o$1, s$1, u$1 = 8 * i$1 - r$1 - 1, d$1 = (1 << u$1) - 1, c$1 = d$1 >> 1, f$1 = 23 === r$1 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, g$1 = a$1 ? 0 : i$1 - 1, m$1 = a$1 ? 1 : -1, h$1 = e$2 < 0 || 0 === e$2 && 1 / e$2 < 0 ? 1 : 0;
			for (e$2 = Math.abs(e$2), isNaN(e$2) || e$2 === Infinity ? (o$1 = isNaN(e$2) ? 1 : 0, l$1 = d$1) : (l$1 = Math.floor(Math.log(e$2) / Math.LN2), e$2 * (s$1 = Math.pow(2, -l$1)) < 1 && (l$1--, s$1 *= 2), (e$2 += l$1 + c$1 >= 1 ? f$1 / s$1 : f$1 * Math.pow(2, 1 - c$1)) * s$1 >= 2 && (l$1++, s$1 /= 2), l$1 + c$1 >= d$1 ? (o$1 = 0, l$1 = d$1) : l$1 + c$1 >= 1 ? (o$1 = (e$2 * s$1 - 1) * Math.pow(2, r$1), l$1 += c$1) : (o$1 = e$2 * Math.pow(2, c$1 - 1) * Math.pow(2, r$1), l$1 = 0)); r$1 >= 8; t$2[n$1 + g$1] = 255 & o$1, g$1 += m$1, o$1 /= 256, r$1 -= 8);
			for (l$1 = l$1 << r$1 | o$1, u$1 += r$1; u$1 > 0; t$2[n$1 + g$1] = 255 & l$1, g$1 += m$1, l$1 /= 256, u$1 -= 8);
			t$2[n$1 + g$1 - m$1] |= 128 * h$1;
		};
	},
	5474: function(t$1, e$1, n$1) {
		(function(t$2) {
			t$2.parser = function(t$3, e$3) {
				return new r$1(t$3, e$3);
			}, t$2.SAXParser = r$1, t$2.SAXStream = l$1, t$2.createStream = function(t$3, e$3) {
				return new l$1(t$3, e$3);
			}, t$2.MAX_BUFFER_LENGTH = 65536;
			var e$2, a$1 = [
				"comment",
				"sgmlDecl",
				"textNode",
				"tagName",
				"doctype",
				"procInstName",
				"procInstBody",
				"entity",
				"attribName",
				"attribValue",
				"cdata",
				"script"
			];
			function r$1(e$3, n$2) {
				if (!(this instanceof r$1)) return new r$1(e$3, n$2);
				var i$2 = this;
				(function(t$3) {
					for (var e$4 = 0, n$3 = a$1.length; e$4 < n$3; e$4++) t$3[a$1[e$4]] = "";
				})(i$2), i$2.q = i$2.c = "", i$2.bufferCheckPosition = t$2.MAX_BUFFER_LENGTH, i$2.opt = n$2 || {}, i$2.opt.lowercase = i$2.opt.lowercase || i$2.opt.lowercasetags, i$2.looseCase = i$2.opt.lowercase ? "toLowerCase" : "toUpperCase", i$2.tags = [], i$2.closed = i$2.closedRoot = i$2.sawRoot = !1, i$2.tag = i$2.error = null, i$2.strict = !!e$3, i$2.noscript = !(!e$3 && !i$2.opt.noscript), i$2.state = A.BEGIN, i$2.strictEntities = i$2.opt.strictEntities, i$2.ENTITIES = i$2.strictEntities ? Object.create(t$2.XML_ENTITIES) : Object.create(t$2.ENTITIES), i$2.attribList = [], i$2.opt.xmlns && (i$2.ns = Object.create(p$1)), i$2.trackPosition = !1 !== i$2.opt.position, i$2.trackPosition && (i$2.position = i$2.line = i$2.column = 0), N(i$2, "onready");
			}
			t$2.EVENTS = [
				"text",
				"processinginstruction",
				"sgmldeclaration",
				"doctype",
				"comment",
				"opentagstart",
				"attribute",
				"opentag",
				"closetag",
				"opencdata",
				"cdata",
				"closecdata",
				"error",
				"end",
				"ready",
				"script",
				"opennamespace",
				"closenamespace"
			], Object.create || (Object.create = function(t$3) {
				function e$3() {}
				return e$3.prototype = t$3, new e$3();
			}), Object.keys || (Object.keys = function(t$3) {
				var e$3 = [];
				for (var n$2 in t$3) t$3.hasOwnProperty(n$2) && e$3.push(n$2);
				return e$3;
			}), r$1.prototype = {
				end: function() {
					z(this);
				},
				write: function(e$3) {
					var n$2 = this;
					if (this.error) throw this.error;
					if (n$2.closed) return M(n$2, "Cannot write after close. Assign an onready handler.");
					if (null === e$3) return z(n$2);
					"object" == typeof e$3 && (e$3 = e$3.toString());
					for (var r$2 = 0, i$2 = ""; i$2 = G(e$3, r$2++), n$2.c = i$2, i$2;) switch (n$2.trackPosition && (n$2.position++, "\n" === i$2 ? (n$2.line++, n$2.column = 0) : n$2.column++), n$2.state) {
						case A.BEGIN:
							if (n$2.state = A.BEGIN_WHITESPACE, "﻿" === i$2) continue;
							B(n$2, i$2);
							continue;
						case A.BEGIN_WHITESPACE:
							B(n$2, i$2);
							continue;
						case A.TEXT:
							if (n$2.sawRoot && !n$2.closedRoot) {
								for (var l$2 = r$2 - 1; i$2 && "<" !== i$2 && "&" !== i$2;) (i$2 = G(e$3, r$2++)) && n$2.trackPosition && (n$2.position++, "\n" === i$2 ? (n$2.line++, n$2.column = 0) : n$2.column++);
								n$2.textNode += e$3.substring(l$2, r$2 - 1);
							}
							"<" !== i$2 || n$2.sawRoot && n$2.closedRoot && !n$2.strict ? (!w$1(o$1, i$2) || n$2.sawRoot && !n$2.closedRoot || O(n$2, "Text data outside of root node."), "&" === i$2 ? n$2.state = A.TEXT_ENTITY : n$2.textNode += i$2) : (n$2.state = A.OPEN_WAKA, n$2.startTagPosition = n$2.position);
							continue;
						case A.SCRIPT:
							"<" === i$2 ? n$2.state = A.SCRIPT_ENDING : n$2.script += i$2;
							continue;
						case A.SCRIPT_ENDING:
							"/" === i$2 ? n$2.state = A.CLOSE_TAG : (n$2.script += "<" + i$2, n$2.state = A.SCRIPT);
							continue;
						case A.OPEN_WAKA:
							if ("!" === i$2) n$2.state = A.SGML_DECL, n$2.sgmlDecl = "";
							else if (v$1(o$1, i$2));
							else if (v$1(b$1, i$2)) n$2.state = A.OPEN_TAG, n$2.tagName = i$2;
							else if ("/" === i$2) n$2.state = A.CLOSE_TAG, n$2.tagName = "";
							else if ("?" === i$2) n$2.state = A.PROC_INST, n$2.procInstName = n$2.procInstBody = "";
							else {
								if (O(n$2, "Unencoded <"), n$2.startTagPosition + 1 < n$2.position) {
									var s$2 = n$2.position - n$2.startTagPosition;
									i$2 = new Array(s$2).join(" ") + i$2;
								}
								n$2.textNode += "<" + i$2, n$2.state = A.TEXT;
							}
							continue;
						case A.SGML_DECL:
							(n$2.sgmlDecl + i$2).toUpperCase() === f$1 ? (C(n$2, "onopencdata"), n$2.state = A.CDATA, n$2.sgmlDecl = "", n$2.cdata = "") : n$2.sgmlDecl + i$2 === "--" ? (n$2.state = A.COMMENT, n$2.comment = "", n$2.sgmlDecl = "") : (n$2.sgmlDecl + i$2).toUpperCase() === g$1 ? (n$2.state = A.DOCTYPE, (n$2.doctype || n$2.sawRoot) && O(n$2, "Inappropriately located doctype declaration"), n$2.doctype = "", n$2.sgmlDecl = "") : ">" === i$2 ? (C(n$2, "onsgmldeclaration", n$2.sgmlDecl), n$2.sgmlDecl = "", n$2.state = A.TEXT) : v$1(d$1, i$2) ? (n$2.state = A.SGML_DECL_QUOTED, n$2.sgmlDecl += i$2) : n$2.sgmlDecl += i$2;
							continue;
						case A.SGML_DECL_QUOTED:
							i$2 === n$2.q && (n$2.state = A.SGML_DECL, n$2.q = ""), n$2.sgmlDecl += i$2;
							continue;
						case A.DOCTYPE:
							">" === i$2 ? (n$2.state = A.TEXT, C(n$2, "ondoctype", n$2.doctype), n$2.doctype = !0) : (n$2.doctype += i$2, "[" === i$2 ? n$2.state = A.DOCTYPE_DTD : v$1(d$1, i$2) && (n$2.state = A.DOCTYPE_QUOTED, n$2.q = i$2));
							continue;
						case A.DOCTYPE_QUOTED:
							n$2.doctype += i$2, i$2 === n$2.q && (n$2.q = "", n$2.state = A.DOCTYPE);
							continue;
						case A.DOCTYPE_DTD:
							n$2.doctype += i$2, "]" === i$2 ? n$2.state = A.DOCTYPE : v$1(d$1, i$2) && (n$2.state = A.DOCTYPE_DTD_QUOTED, n$2.q = i$2);
							continue;
						case A.DOCTYPE_DTD_QUOTED:
							n$2.doctype += i$2, i$2 === n$2.q && (n$2.state = A.DOCTYPE_DTD, n$2.q = "");
							continue;
						case A.COMMENT:
							"-" === i$2 ? n$2.state = A.COMMENT_ENDING : n$2.comment += i$2;
							continue;
						case A.COMMENT_ENDING:
							"-" === i$2 ? (n$2.state = A.COMMENT_ENDED, n$2.comment = x(n$2.opt, n$2.comment), n$2.comment && C(n$2, "oncomment", n$2.comment), n$2.comment = "") : (n$2.comment += "-" + i$2, n$2.state = A.COMMENT);
							continue;
						case A.COMMENT_ENDED:
							">" !== i$2 ? (O(n$2, "Malformed comment"), n$2.comment += "--" + i$2, n$2.state = A.COMMENT) : n$2.state = A.TEXT;
							continue;
						case A.CDATA:
							"]" === i$2 ? n$2.state = A.CDATA_ENDING : n$2.cdata += i$2;
							continue;
						case A.CDATA_ENDING:
							"]" === i$2 ? n$2.state = A.CDATA_ENDING_2 : (n$2.cdata += "]" + i$2, n$2.state = A.CDATA);
							continue;
						case A.CDATA_ENDING_2:
							">" === i$2 ? (n$2.cdata && C(n$2, "oncdata", n$2.cdata), C(n$2, "onclosecdata"), n$2.cdata = "", n$2.state = A.TEXT) : "]" === i$2 ? n$2.cdata += "]" : (n$2.cdata += "]]" + i$2, n$2.state = A.CDATA);
							continue;
						case A.PROC_INST:
							"?" === i$2 ? n$2.state = A.PROC_INST_ENDING : v$1(o$1, i$2) ? n$2.state = A.PROC_INST_BODY : n$2.procInstName += i$2;
							continue;
						case A.PROC_INST_BODY:
							if (!n$2.procInstBody && v$1(o$1, i$2)) continue;
							"?" === i$2 ? n$2.state = A.PROC_INST_ENDING : n$2.procInstBody += i$2;
							continue;
						case A.PROC_INST_ENDING:
							">" === i$2 ? (C(n$2, "onprocessinginstruction", {
								name: n$2.procInstName,
								body: n$2.procInstBody
							}), n$2.procInstName = n$2.procInstBody = "", n$2.state = A.TEXT) : (n$2.procInstBody += "?" + i$2, n$2.state = A.PROC_INST_BODY);
							continue;
						case A.OPEN_TAG:
							v$1(y$1, i$2) ? n$2.tagName += i$2 : (P(n$2), ">" === i$2 ? U(n$2) : "/" === i$2 ? n$2.state = A.OPEN_TAG_SLASH : (w$1(o$1, i$2) && O(n$2, "Invalid character in tag name"), n$2.state = A.ATTRIB));
							continue;
						case A.OPEN_TAG_SLASH:
							">" === i$2 ? (U(n$2, !0), j(n$2)) : (O(n$2, "Forward-slash in opening tag not followed by >"), n$2.state = A.ATTRIB);
							continue;
						case A.ATTRIB:
							if (v$1(o$1, i$2)) continue;
							">" === i$2 ? U(n$2) : "/" === i$2 ? n$2.state = A.OPEN_TAG_SLASH : v$1(b$1, i$2) ? (n$2.attribName = i$2, n$2.attribValue = "", n$2.state = A.ATTRIB_NAME) : O(n$2, "Invalid attribute name");
							continue;
						case A.ATTRIB_NAME:
							"=" === i$2 ? n$2.state = A.ATTRIB_VALUE : ">" === i$2 ? (O(n$2, "Attribute without value"), n$2.attribValue = n$2.attribName, F(n$2), U(n$2)) : v$1(o$1, i$2) ? n$2.state = A.ATTRIB_NAME_SAW_WHITE : v$1(y$1, i$2) ? n$2.attribName += i$2 : O(n$2, "Invalid attribute name");
							continue;
						case A.ATTRIB_NAME_SAW_WHITE:
							if ("=" === i$2) n$2.state = A.ATTRIB_VALUE;
							else {
								if (v$1(o$1, i$2)) continue;
								O(n$2, "Attribute without value"), n$2.tag.attributes[n$2.attribName] = "", n$2.attribValue = "", C(n$2, "onattribute", {
									name: n$2.attribName,
									value: ""
								}), n$2.attribName = "", ">" === i$2 ? U(n$2) : v$1(b$1, i$2) ? (n$2.attribName = i$2, n$2.state = A.ATTRIB_NAME) : (O(n$2, "Invalid attribute name"), n$2.state = A.ATTRIB);
							}
							continue;
						case A.ATTRIB_VALUE:
							if (v$1(o$1, i$2)) continue;
							v$1(d$1, i$2) ? (n$2.q = i$2, n$2.state = A.ATTRIB_VALUE_QUOTED) : (O(n$2, "Unquoted attribute value"), n$2.state = A.ATTRIB_VALUE_UNQUOTED, n$2.attribValue = i$2);
							continue;
						case A.ATTRIB_VALUE_QUOTED:
							if (i$2 !== n$2.q) {
								"&" === i$2 ? n$2.state = A.ATTRIB_VALUE_ENTITY_Q : n$2.attribValue += i$2;
								continue;
							}
							F(n$2), n$2.q = "", n$2.state = A.ATTRIB_VALUE_CLOSED;
							continue;
						case A.ATTRIB_VALUE_CLOSED:
							v$1(o$1, i$2) ? n$2.state = A.ATTRIB : ">" === i$2 ? U(n$2) : "/" === i$2 ? n$2.state = A.OPEN_TAG_SLASH : v$1(b$1, i$2) ? (O(n$2, "No whitespace between attributes"), n$2.attribName = i$2, n$2.attribValue = "", n$2.state = A.ATTRIB_NAME) : O(n$2, "Invalid attribute name");
							continue;
						case A.ATTRIB_VALUE_UNQUOTED:
							if (w$1(c$1, i$2)) {
								"&" === i$2 ? n$2.state = A.ATTRIB_VALUE_ENTITY_U : n$2.attribValue += i$2;
								continue;
							}
							F(n$2), ">" === i$2 ? U(n$2) : n$2.state = A.ATTRIB;
							continue;
						case A.CLOSE_TAG:
							if (n$2.tagName) ">" === i$2 ? j(n$2) : v$1(y$1, i$2) ? n$2.tagName += i$2 : n$2.script ? (n$2.script += "</" + n$2.tagName, n$2.tagName = "", n$2.state = A.SCRIPT) : (w$1(o$1, i$2) && O(n$2, "Invalid tagname in closing tag"), n$2.state = A.CLOSE_TAG_SAW_WHITE);
							else {
								if (v$1(o$1, i$2)) continue;
								w$1(b$1, i$2) ? n$2.script ? (n$2.script += "</" + i$2, n$2.state = A.SCRIPT) : O(n$2, "Invalid tagname in closing tag.") : n$2.tagName = i$2;
							}
							continue;
						case A.CLOSE_TAG_SAW_WHITE:
							if (v$1(o$1, i$2)) continue;
							">" === i$2 ? j(n$2) : O(n$2, "Invalid characters in closing tag");
							continue;
						case A.TEXT_ENTITY:
						case A.ATTRIB_VALUE_ENTITY_Q:
						case A.ATTRIB_VALUE_ENTITY_U:
							var u$2, m$2;
							switch (n$2.state) {
								case A.TEXT_ENTITY:
									u$2 = A.TEXT, m$2 = "textNode";
									break;
								case A.ATTRIB_VALUE_ENTITY_Q:
									u$2 = A.ATTRIB_VALUE_QUOTED, m$2 = "attribValue";
									break;
								case A.ATTRIB_VALUE_ENTITY_U: u$2 = A.ATTRIB_VALUE_UNQUOTED, m$2 = "attribValue";
							}
							";" === i$2 ? (n$2[m$2] += q(n$2), n$2.entity = "", n$2.state = u$2) : v$1(n$2.entity.length ? _$1 : E$1, i$2) ? n$2.entity += i$2 : (O(n$2, "Invalid character in entity name"), n$2[m$2] += "&" + n$2.entity + i$2, n$2.entity = "", n$2.state = u$2);
							continue;
						default: throw new Error(n$2, "Unknown state: " + n$2.state);
					}
					return n$2.position >= n$2.bufferCheckPosition && function(e$4) {
						for (var n$3 = Math.max(t$2.MAX_BUFFER_LENGTH, 10), r$3 = 0, i$3 = 0, l$3 = a$1.length; i$3 < l$3; i$3++) {
							var o$2 = e$4[a$1[i$3]].length;
							if (o$2 > n$3) switch (a$1[i$3]) {
								case "textNode":
									D(e$4);
									break;
								case "cdata":
									C(e$4, "oncdata", e$4.cdata), e$4.cdata = "";
									break;
								case "script":
									C(e$4, "onscript", e$4.script), e$4.script = "";
									break;
								default: M(e$4, "Max buffer length exceeded: " + a$1[i$3]);
							}
							r$3 = Math.max(r$3, o$2);
						}
						e$4.bufferCheckPosition = t$2.MAX_BUFFER_LENGTH - r$3 + e$4.position;
					}(n$2), n$2;
				},
				resume: function() {
					return this.error = null, this;
				},
				close: function() {
					return this.write(null);
				},
				flush: function() {
					var t$3;
					D(t$3 = this), "" !== t$3.cdata && (C(t$3, "oncdata", t$3.cdata), t$3.cdata = ""), "" !== t$3.script && (C(t$3, "onscript", t$3.script), t$3.script = "");
				}
			};
			try {
				e$2 = n$1(3515).Stream;
			} catch (t$3) {
				e$2 = function() {};
			}
			var i$1 = t$2.EVENTS.filter((function(t$3) {
				return "error" !== t$3 && "end" !== t$3;
			}));
			function l$1(t$3, n$2) {
				if (!(this instanceof l$1)) return new l$1(t$3, n$2);
				e$2.apply(this), this._parser = new r$1(t$3, n$2), this.writable = !0, this.readable = !0;
				var a$2 = this;
				this._parser.onend = function() {
					a$2.emit("end");
				}, this._parser.onerror = function(t$4) {
					a$2.emit("error", t$4), a$2._parser.error = null;
				}, this._decoder = null, i$1.forEach((function(t$4) {
					Object.defineProperty(a$2, "on" + t$4, {
						get: function() {
							return a$2._parser["on" + t$4];
						},
						set: function(e$3) {
							if (!e$3) return a$2.removeAllListeners(t$4), a$2._parser["on" + t$4] = e$3, e$3;
							a$2.on(t$4, e$3);
						},
						enumerable: !0,
						configurable: !1
					});
				}));
			}
			l$1.prototype = Object.create(e$2.prototype, { constructor: { value: l$1 } }), l$1.prototype.write = function(t$3) {
				if ("function" == typeof Buffer && "function" == typeof Buffer.isBuffer && Buffer.isBuffer(t$3)) {
					if (!this._decoder) {
						var e$3 = n$1(748).StringDecoder;
						this._decoder = new e$3("utf8");
					}
					t$3 = this._decoder.write(t$3);
				}
				return this._parser.write(t$3.toString()), this.emit("data", t$3), !0;
			}, l$1.prototype.end = function(t$3) {
				return t$3 && t$3.length && this.write(t$3), this._parser.end(), !0;
			}, l$1.prototype.on = function(t$3, n$2) {
				var a$2 = this;
				return a$2._parser["on" + t$3] || -1 === i$1.indexOf(t$3) || (a$2._parser["on" + t$3] = function() {
					var e$3 = 1 === arguments.length ? [arguments[0]] : Array.apply(null, arguments);
					e$3.splice(0, 0, t$3), a$2.emit.apply(a$2, e$3);
				}), e$2.prototype.on.call(a$2, t$3, n$2);
			};
			var o$1 = "\r\n	 ", s$1 = "0124356789", u$1 = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ", d$1 = "'\"", c$1 = o$1 + ">", f$1 = "[CDATA[", g$1 = "DOCTYPE", m$1 = "http://www.w3.org/XML/1998/namespace", h$1 = "http://www.w3.org/2000/xmlns/", p$1 = {
				xml: m$1,
				xmlns: h$1
			};
			o$1 = T$1(o$1), s$1 = T$1(s$1), u$1 = T$1(u$1);
			var b$1 = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, y$1 = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/, E$1 = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, _$1 = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/;
			function T$1(t$3) {
				return t$3.split("").reduce((function(t$4, e$3) {
					return t$4[e$3] = !0, t$4;
				}), {});
			}
			function v$1(t$3, e$3) {
				return function(t$4) {
					return "[object RegExp]" === Object.prototype.toString.call(t$4);
				}(t$3) ? !!e$3.match(t$3) : t$3[e$3];
			}
			function w$1(t$3, e$3) {
				return !v$1(t$3, e$3);
			}
			d$1 = T$1(d$1), c$1 = T$1(c$1);
			var S$1, I, k, A = 0;
			for (var R in t$2.STATE = {
				BEGIN: A++,
				BEGIN_WHITESPACE: A++,
				TEXT: A++,
				TEXT_ENTITY: A++,
				OPEN_WAKA: A++,
				SGML_DECL: A++,
				SGML_DECL_QUOTED: A++,
				DOCTYPE: A++,
				DOCTYPE_QUOTED: A++,
				DOCTYPE_DTD: A++,
				DOCTYPE_DTD_QUOTED: A++,
				COMMENT_STARTING: A++,
				COMMENT: A++,
				COMMENT_ENDING: A++,
				COMMENT_ENDED: A++,
				CDATA: A++,
				CDATA_ENDING: A++,
				CDATA_ENDING_2: A++,
				PROC_INST: A++,
				PROC_INST_BODY: A++,
				PROC_INST_ENDING: A++,
				OPEN_TAG: A++,
				OPEN_TAG_SLASH: A++,
				ATTRIB: A++,
				ATTRIB_NAME: A++,
				ATTRIB_NAME_SAW_WHITE: A++,
				ATTRIB_VALUE: A++,
				ATTRIB_VALUE_QUOTED: A++,
				ATTRIB_VALUE_CLOSED: A++,
				ATTRIB_VALUE_UNQUOTED: A++,
				ATTRIB_VALUE_ENTITY_Q: A++,
				ATTRIB_VALUE_ENTITY_U: A++,
				CLOSE_TAG: A++,
				CLOSE_TAG_SAW_WHITE: A++,
				SCRIPT: A++,
				SCRIPT_ENDING: A++
			}, t$2.XML_ENTITIES = {
				amp: "&",
				gt: ">",
				lt: "<",
				quot: "\"",
				apos: "'"
			}, t$2.ENTITIES = {
				amp: "&",
				gt: ">",
				lt: "<",
				quot: "\"",
				apos: "'",
				AElig: 198,
				Aacute: 193,
				Acirc: 194,
				Agrave: 192,
				Aring: 197,
				Atilde: 195,
				Auml: 196,
				Ccedil: 199,
				ETH: 208,
				Eacute: 201,
				Ecirc: 202,
				Egrave: 200,
				Euml: 203,
				Iacute: 205,
				Icirc: 206,
				Igrave: 204,
				Iuml: 207,
				Ntilde: 209,
				Oacute: 211,
				Ocirc: 212,
				Ograve: 210,
				Oslash: 216,
				Otilde: 213,
				Ouml: 214,
				THORN: 222,
				Uacute: 218,
				Ucirc: 219,
				Ugrave: 217,
				Uuml: 220,
				Yacute: 221,
				aacute: 225,
				acirc: 226,
				aelig: 230,
				agrave: 224,
				aring: 229,
				atilde: 227,
				auml: 228,
				ccedil: 231,
				eacute: 233,
				ecirc: 234,
				egrave: 232,
				eth: 240,
				euml: 235,
				iacute: 237,
				icirc: 238,
				igrave: 236,
				iuml: 239,
				ntilde: 241,
				oacute: 243,
				ocirc: 244,
				ograve: 242,
				oslash: 248,
				otilde: 245,
				ouml: 246,
				szlig: 223,
				thorn: 254,
				uacute: 250,
				ucirc: 251,
				ugrave: 249,
				uuml: 252,
				yacute: 253,
				yuml: 255,
				copy: 169,
				reg: 174,
				nbsp: 160,
				iexcl: 161,
				cent: 162,
				pound: 163,
				curren: 164,
				yen: 165,
				brvbar: 166,
				sect: 167,
				uml: 168,
				ordf: 170,
				laquo: 171,
				not: 172,
				shy: 173,
				macr: 175,
				deg: 176,
				plusmn: 177,
				sup1: 185,
				sup2: 178,
				sup3: 179,
				acute: 180,
				micro: 181,
				para: 182,
				middot: 183,
				cedil: 184,
				ordm: 186,
				raquo: 187,
				frac14: 188,
				frac12: 189,
				frac34: 190,
				iquest: 191,
				times: 215,
				divide: 247,
				OElig: 338,
				oelig: 339,
				Scaron: 352,
				scaron: 353,
				Yuml: 376,
				fnof: 402,
				circ: 710,
				tilde: 732,
				Alpha: 913,
				Beta: 914,
				Gamma: 915,
				Delta: 916,
				Epsilon: 917,
				Zeta: 918,
				Eta: 919,
				Theta: 920,
				Iota: 921,
				Kappa: 922,
				Lambda: 923,
				Mu: 924,
				Nu: 925,
				Xi: 926,
				Omicron: 927,
				Pi: 928,
				Rho: 929,
				Sigma: 931,
				Tau: 932,
				Upsilon: 933,
				Phi: 934,
				Chi: 935,
				Psi: 936,
				Omega: 937,
				alpha: 945,
				beta: 946,
				gamma: 947,
				delta: 948,
				epsilon: 949,
				zeta: 950,
				eta: 951,
				theta: 952,
				iota: 953,
				kappa: 954,
				lambda: 955,
				mu: 956,
				nu: 957,
				xi: 958,
				omicron: 959,
				pi: 960,
				rho: 961,
				sigmaf: 962,
				sigma: 963,
				tau: 964,
				upsilon: 965,
				phi: 966,
				chi: 967,
				psi: 968,
				omega: 969,
				thetasym: 977,
				upsih: 978,
				piv: 982,
				ensp: 8194,
				emsp: 8195,
				thinsp: 8201,
				zwnj: 8204,
				zwj: 8205,
				lrm: 8206,
				rlm: 8207,
				ndash: 8211,
				mdash: 8212,
				lsquo: 8216,
				rsquo: 8217,
				sbquo: 8218,
				ldquo: 8220,
				rdquo: 8221,
				bdquo: 8222,
				dagger: 8224,
				Dagger: 8225,
				bull: 8226,
				hellip: 8230,
				permil: 8240,
				prime: 8242,
				Prime: 8243,
				lsaquo: 8249,
				rsaquo: 8250,
				oline: 8254,
				frasl: 8260,
				euro: 8364,
				image: 8465,
				weierp: 8472,
				real: 8476,
				trade: 8482,
				alefsym: 8501,
				larr: 8592,
				uarr: 8593,
				rarr: 8594,
				darr: 8595,
				harr: 8596,
				crarr: 8629,
				lArr: 8656,
				uArr: 8657,
				rArr: 8658,
				dArr: 8659,
				hArr: 8660,
				forall: 8704,
				part: 8706,
				exist: 8707,
				empty: 8709,
				nabla: 8711,
				isin: 8712,
				notin: 8713,
				ni: 8715,
				prod: 8719,
				sum: 8721,
				minus: 8722,
				lowast: 8727,
				radic: 8730,
				prop: 8733,
				infin: 8734,
				ang: 8736,
				and: 8743,
				or: 8744,
				cap: 8745,
				cup: 8746,
				int: 8747,
				there4: 8756,
				sim: 8764,
				cong: 8773,
				asymp: 8776,
				ne: 8800,
				equiv: 8801,
				le: 8804,
				ge: 8805,
				sub: 8834,
				sup: 8835,
				nsub: 8836,
				sube: 8838,
				supe: 8839,
				oplus: 8853,
				otimes: 8855,
				perp: 8869,
				sdot: 8901,
				lceil: 8968,
				rceil: 8969,
				lfloor: 8970,
				rfloor: 8971,
				lang: 9001,
				rang: 9002,
				loz: 9674,
				spades: 9824,
				clubs: 9827,
				hearts: 9829,
				diams: 9830
			}, Object.keys(t$2.ENTITIES).forEach((function(e$3) {
				var n$2 = t$2.ENTITIES[e$3], a$2 = "number" == typeof n$2 ? String.fromCharCode(n$2) : n$2;
				t$2.ENTITIES[e$3] = a$2;
			})), t$2.STATE) t$2.STATE[t$2.STATE[R]] = R;
			function N(t$3, e$3, n$2) {
				t$3[e$3] && t$3[e$3](n$2);
			}
			function C(t$3, e$3, n$2) {
				t$3.textNode && D(t$3), N(t$3, e$3, n$2);
			}
			function D(t$3) {
				t$3.textNode = x(t$3.opt, t$3.textNode), t$3.textNode && N(t$3, "ontext", t$3.textNode), t$3.textNode = "";
			}
			function x(t$3, e$3) {
				return t$3.trim && (e$3 = e$3.trim()), t$3.normalize && (e$3 = e$3.replace(/\s+/g, " ")), e$3;
			}
			function M(t$3, e$3) {
				return D(t$3), t$3.trackPosition && (e$3 += "\nLine: " + t$3.line + "\nColumn: " + t$3.column + "\nChar: " + t$3.c), e$3 = new Error(e$3), t$3.error = e$3, N(t$3, "onerror", e$3), t$3;
			}
			function z(t$3) {
				return t$3.sawRoot && !t$3.closedRoot && O(t$3, "Unclosed root tag"), t$3.state !== A.BEGIN && t$3.state !== A.BEGIN_WHITESPACE && t$3.state !== A.TEXT && M(t$3, "Unexpected end"), D(t$3), t$3.c = "", t$3.closed = !0, N(t$3, "onend"), r$1.call(t$3, t$3.strict, t$3.opt), t$3;
			}
			function O(t$3, e$3) {
				if ("object" != typeof t$3 || !(t$3 instanceof r$1)) throw new Error("bad call to strictFail");
				t$3.strict && M(t$3, e$3);
			}
			function P(t$3) {
				t$3.strict || (t$3.tagName = t$3.tagName[t$3.looseCase]());
				var e$3 = t$3.tags[t$3.tags.length - 1] || t$3, n$2 = t$3.tag = {
					name: t$3.tagName,
					attributes: {}
				};
				t$3.opt.xmlns && (n$2.ns = e$3.ns), t$3.attribList.length = 0, C(t$3, "onopentagstart", n$2);
			}
			function L(t$3, e$3) {
				var n$2 = t$3.indexOf(":") < 0 ? ["", t$3] : t$3.split(":"), a$2 = n$2[0], r$2 = n$2[1];
				return e$3 && "xmlns" === t$3 && (a$2 = "xmlns", r$2 = ""), {
					prefix: a$2,
					local: r$2
				};
			}
			function F(t$3) {
				if (t$3.strict || (t$3.attribName = t$3.attribName[t$3.looseCase]()), -1 !== t$3.attribList.indexOf(t$3.attribName) || t$3.tag.attributes.hasOwnProperty(t$3.attribName)) t$3.attribName = t$3.attribValue = "";
				else {
					if (t$3.opt.xmlns) {
						var e$3 = L(t$3.attribName, !0), n$2 = e$3.prefix, a$2 = e$3.local;
						if ("xmlns" === n$2) if ("xml" === a$2 && t$3.attribValue !== m$1) O(t$3, "xml: prefix must be bound to " + m$1 + "\nActual: " + t$3.attribValue);
						else if ("xmlns" === a$2 && t$3.attribValue !== h$1) O(t$3, "xmlns: prefix must be bound to " + h$1 + "\nActual: " + t$3.attribValue);
						else {
							var r$2 = t$3.tag, i$2 = t$3.tags[t$3.tags.length - 1] || t$3;
							r$2.ns === i$2.ns && (r$2.ns = Object.create(i$2.ns)), r$2.ns[a$2] = t$3.attribValue;
						}
						t$3.attribList.push([t$3.attribName, t$3.attribValue]);
					} else t$3.tag.attributes[t$3.attribName] = t$3.attribValue, C(t$3, "onattribute", {
						name: t$3.attribName,
						value: t$3.attribValue
					});
					t$3.attribName = t$3.attribValue = "";
				}
			}
			function U(t$3, e$3) {
				if (t$3.opt.xmlns) {
					var n$2 = t$3.tag, a$2 = L(t$3.tagName);
					n$2.prefix = a$2.prefix, n$2.local = a$2.local, n$2.uri = n$2.ns[a$2.prefix] || "", n$2.prefix && !n$2.uri && (O(t$3, "Unbound namespace prefix: " + JSON.stringify(t$3.tagName)), n$2.uri = a$2.prefix);
					var r$2 = t$3.tags[t$3.tags.length - 1] || t$3;
					n$2.ns && r$2.ns !== n$2.ns && Object.keys(n$2.ns).forEach((function(e$4) {
						C(t$3, "onopennamespace", {
							prefix: e$4,
							uri: n$2.ns[e$4]
						});
					}));
					for (var i$2 = 0, l$2 = t$3.attribList.length; i$2 < l$2; i$2++) {
						var o$2 = t$3.attribList[i$2], s$2 = o$2[0], u$2 = o$2[1], d$2 = L(s$2, !0), c$2 = d$2.prefix, f$2 = d$2.local, g$2 = "" === c$2 ? "" : n$2.ns[c$2] || "", m$2 = {
							name: s$2,
							value: u$2,
							prefix: c$2,
							local: f$2,
							uri: g$2
						};
						c$2 && "xmlns" !== c$2 && !g$2 && (O(t$3, "Unbound namespace prefix: " + JSON.stringify(c$2)), m$2.uri = c$2), t$3.tag.attributes[s$2] = m$2, C(t$3, "onattribute", m$2);
					}
					t$3.attribList.length = 0;
				}
				t$3.tag.isSelfClosing = !!e$3, t$3.sawRoot = !0, t$3.tags.push(t$3.tag), C(t$3, "onopentag", t$3.tag), e$3 || (t$3.noscript || "script" !== t$3.tagName.toLowerCase() ? t$3.state = A.TEXT : t$3.state = A.SCRIPT, t$3.tag = null, t$3.tagName = ""), t$3.attribName = t$3.attribValue = "", t$3.attribList.length = 0;
			}
			function j(t$3) {
				if (!t$3.tagName) return O(t$3, "Weird empty close tag."), t$3.textNode += "</>", void (t$3.state = A.TEXT);
				if (t$3.script) {
					if ("script" !== t$3.tagName) return t$3.script += "</" + t$3.tagName + ">", t$3.tagName = "", void (t$3.state = A.SCRIPT);
					C(t$3, "onscript", t$3.script), t$3.script = "";
				}
				var e$3 = t$3.tags.length, n$2 = t$3.tagName;
				t$3.strict || (n$2 = n$2[t$3.looseCase]());
				for (var a$2 = n$2; e$3-- && t$3.tags[e$3].name !== a$2;) O(t$3, "Unexpected close tag");
				if (e$3 < 0) return O(t$3, "Unmatched closing tag: " + t$3.tagName), t$3.textNode += "</" + t$3.tagName + ">", void (t$3.state = A.TEXT);
				t$3.tagName = n$2;
				for (var r$2 = t$3.tags.length; r$2-- > e$3;) {
					var i$2 = t$3.tag = t$3.tags.pop();
					t$3.tagName = t$3.tag.name, C(t$3, "onclosetag", t$3.tagName);
					var l$2 = {};
					for (var o$2 in i$2.ns) l$2[o$2] = i$2.ns[o$2];
					var s$2 = t$3.tags[t$3.tags.length - 1] || t$3;
					t$3.opt.xmlns && i$2.ns !== s$2.ns && Object.keys(i$2.ns).forEach((function(e$4) {
						var n$3 = i$2.ns[e$4];
						C(t$3, "onclosenamespace", {
							prefix: e$4,
							uri: n$3
						});
					}));
				}
				0 === e$3 && (t$3.closedRoot = !0), t$3.tagName = t$3.attribValue = t$3.attribName = "", t$3.attribList.length = 0, t$3.state = A.TEXT;
			}
			function q(t$3) {
				var e$3, n$2 = t$3.entity, a$2 = n$2.toLowerCase(), r$2 = "";
				return t$3.ENTITIES[n$2] ? t$3.ENTITIES[n$2] : t$3.ENTITIES[a$2] ? t$3.ENTITIES[a$2] : ("#" === (n$2 = a$2).charAt(0) && ("x" === n$2.charAt(1) ? (n$2 = n$2.slice(2), r$2 = (e$3 = parseInt(n$2, 16)).toString(16)) : (n$2 = n$2.slice(1), r$2 = (e$3 = parseInt(n$2, 10)).toString(10))), n$2 = n$2.replace(/^0+/, ""), r$2.toLowerCase() !== n$2 ? (O(t$3, "Invalid character entity"), "&" + t$3.entity + ";") : String.fromCodePoint(e$3));
			}
			function B(t$3, e$3) {
				"<" === e$3 ? (t$3.state = A.OPEN_WAKA, t$3.startTagPosition = t$3.position) : w$1(o$1, e$3) && (O(t$3, "Non-whitespace before first tag."), t$3.textNode = e$3, t$3.state = A.TEXT);
			}
			function G(t$3, e$3) {
				var n$2 = "";
				return e$3 < t$3.length && (n$2 = t$3.charAt(e$3)), n$2;
			}
			A = t$2.STATE, String.fromCodePoint || (S$1 = String.fromCharCode, I = Math.floor, k = function() {
				var t$3, e$3, n$2 = [], a$2 = -1, r$2 = arguments.length;
				if (!r$2) return "";
				for (var i$2 = ""; ++a$2 < r$2;) {
					var l$2 = Number(arguments[a$2]);
					if (!isFinite(l$2) || l$2 < 0 || l$2 > 1114111 || I(l$2) !== l$2) throw RangeError("Invalid code point: " + l$2);
					l$2 <= 65535 ? n$2.push(l$2) : (t$3 = 55296 + ((l$2 -= 65536) >> 10), e$3 = l$2 % 1024 + 56320, n$2.push(t$3, e$3)), (a$2 + 1 === r$2 || n$2.length > 16384) && (i$2 += S$1.apply(null, n$2), n$2.length = 0);
				}
				return i$2;
			}, Object.defineProperty ? Object.defineProperty(String, "fromCodePoint", {
				value: k,
				configurable: !0,
				writable: !0
			}) : String.fromCodePoint = k);
		})(e$1);
	},
	6739: function(t$1, e$1, n$1) {
		(function(t$2, e$2, n$2, a$1, r$1) {
			function i$1(t$3) {
				if ("contents" in t$3) for (var e$3 = ("styleAttrs" in t$3) ? t$3.styleAttrs[a$1.byName.ruby.qname] : null, n$3 = "span" === t$3.kind && ("container" === e$3 || "textContainer" === e$3 || "baseContainer" === e$3), r$2 = t$3.contents.length - 1; r$2 >= 0; r$2--) !n$3 || "styleAttrs" in t$3.contents[r$2] && a$1.byName.ruby.qname in t$3.contents[r$2].styleAttrs ? i$1(t$3.contents[r$2]) : delete t$3.contents[r$2];
			}
			function l$1(t$3, e$3, n$3, a$2) {
				var r$2 = a$2 && "seq" === a$2.timeContainer, i$2 = 0;
				a$2 && (i$2 = r$2 && n$3 ? n$3.end : a$2.begin), e$3.begin = e$3.explicit_begin ? e$3.explicit_begin + i$2 : i$2;
				var o$2 = e$3.begin, s$2 = null;
				if ("sets" in e$3) for (var u$2 = 0; u$2 < e$3.sets.length; u$2++) l$1(t$3, e$3.sets[u$2], s$2, e$3), o$2 = "seq" === e$3.timeContainer ? e$3.sets[u$2].end : Math.max(o$2, e$3.sets[u$2].end), s$2 = e$3.sets[u$2];
				if ("contents" in e$3) {
					if ("contents" in e$3) for (var d$2 = 0; d$2 < e$3.contents.length; d$2++) l$1(t$3, e$3.contents[d$2], s$2, e$3), o$2 = "seq" === e$3.timeContainer ? e$3.contents[d$2].end : Math.max(o$2, e$3.contents[d$2].end), s$2 = e$3.contents[d$2];
				} else o$2 = r$2 ? e$3.begin : Number.POSITIVE_INFINITY;
				null !== e$3.explicit_end && null !== e$3.explicit_dur ? e$3.end = Math.min(e$3.begin + e$3.explicit_dur, i$2 + e$3.explicit_end) : null === e$3.explicit_end && null !== e$3.explicit_dur ? e$3.end = e$3.begin + e$3.explicit_dur : null !== e$3.explicit_end && null === e$3.explicit_dur ? e$3.end = i$2 + e$3.explicit_end : e$3.end = o$2, delete e$3.explicit_begin, delete e$3.explicit_dur, delete e$3.explicit_end, t$3._registerEvent(e$3);
			}
			function o$1(t$3) {
				this.node = t$3;
			}
			function s$1() {
				this.events = [], this.head = new u$1(), this.body = null;
			}
			function u$1() {
				this.styling = new d$1(), this.layout = new g$1();
			}
			function d$1() {
				this.styles = {}, this.initials = {};
			}
			function c$1() {
				this.id = null, this.styleAttrs = null, this.styleRefs = null;
			}
			function f$1() {
				this.styleAttrs = null;
			}
			function g$1() {
				this.regions = {};
			}
			function m$1(t$3, e$3) {
				h$1.call(this, "image"), this.src = t$3, this.type = e$3;
			}
			function h$1(t$3) {
				this.kind = t$3;
			}
			function p$1(t$3) {
				this.id = t$3;
			}
			function b$1(t$3) {
				this.regionID = t$3;
			}
			function y$1(t$3) {
				this.styleAttrs = t$3;
			}
			function E$1(t$3) {
				this.sets = t$3;
			}
			function _$1(t$3) {
				this.contents = t$3;
			}
			function T$1(t$3, e$3, n$3) {
				this.explicit_begin = t$3, this.explicit_end = e$3, this.explicit_dur = n$3;
			}
			function v$1() {
				h$1.call(this, "body");
			}
			function w$1() {
				h$1.call(this, "div");
			}
			function S$1() {
				h$1.call(this, "p");
			}
			function I() {
				h$1.call(this, "span");
			}
			function k() {
				h$1.call(this, "span");
			}
			function A() {
				h$1.call(this, "br");
			}
			function R() {}
			function N() {}
			function C(t$3) {
				return t$3 && "xml:id" in t$3.attributes && t$3.attributes["xml:id"].value || null;
			}
			function D(t$3) {
				return t$3 && "style" in t$3.attributes ? t$3.attributes.style.value.split(" ") : [];
			}
			function x(t$3, e$3) {
				var n$3 = {};
				if (null !== t$3) for (var r$2 in t$3.attributes) {
					var i$2 = t$3.attributes[r$2].uri + " " + t$3.attributes[r$2].local, l$2 = a$1.byQName[i$2];
					if (void 0 !== l$2) {
						var o$2 = l$2.parse(t$3.attributes[r$2].value);
						null !== o$2 ? (n$3[i$2] = o$2, l$2 === a$1.byName.zIndex && F(e$3, "zIndex attribute present but not used by IMSC1 since regions do not overlap")) : U(e$3, "Cannot parse styling attribute " + i$2 + " --> " + t$3.attributes[r$2].value);
					}
				}
				return n$3;
			}
			function M(t$3, e$3, n$3) {
				for (var a$2 in t$3.attributes) if (t$3.attributes[a$2].uri === e$3 && t$3.attributes[a$2].local === n$3) return t$3.attributes[a$2].value;
				return null;
			}
			function z(t$3, e$3, n$3) {
				var a$2, r$2 = null;
				return null !== (a$2 = /^(\d+(?:\.\d+)?)f$/.exec(n$3)) ? null !== e$3 && (r$2 = parseFloat(a$2[1]) / e$3) : null !== (a$2 = /^(\d+(?:\.\d+)?)t$/.exec(n$3)) ? null !== t$3 && (r$2 = parseFloat(a$2[1]) / t$3) : null !== (a$2 = /^(\d+(?:\.\d+)?)ms$/.exec(n$3)) ? r$2 = parseFloat(a$2[1]) / 1e3 : null !== (a$2 = /^(\d+(?:\.\d+)?)s$/.exec(n$3)) ? r$2 = parseFloat(a$2[1]) : null !== (a$2 = /^(\d+(?:\.\d+)?)h$/.exec(n$3)) ? r$2 = 3600 * parseFloat(a$2[1]) : null !== (a$2 = /^(\d+(?:\.\d+)?)m$/.exec(n$3)) ? r$2 = 60 * parseFloat(a$2[1]) : null !== (a$2 = /^(\d{2,}):(\d\d):(\d\d(?:\.\d+)?)$/.exec(n$3)) ? r$2 = 3600 * parseInt(a$2[1]) + 60 * parseInt(a$2[2]) + parseFloat(a$2[3]) : null !== (a$2 = /^(\d{2,}):(\d\d):(\d\d)\:(\d{2,})$/.exec(n$3)) && null !== e$3 && (r$2 = 3600 * parseInt(a$2[1]) + 60 * parseInt(a$2[2]) + parseInt(a$2[3]) + (null === a$2[4] ? 0 : parseInt(a$2[4]) / e$3)), r$2;
			}
			function O(t$3, e$3, n$3) {
				for (; e$3.styleRefs.length > 0;) {
					var a$2 = e$3.styleRefs.pop();
					a$2 in t$3.styles ? (O(t$3, t$3.styles[a$2], n$3), L(t$3.styles[a$2].styleAttrs, e$3.styleAttrs)) : U(n$3, "Non-existant style id referenced");
				}
			}
			function P(t$3, e$3, n$3, a$2) {
				for (var r$2 = e$3.length - 1; r$2 >= 0; r$2--) {
					var i$2 = e$3[r$2];
					i$2 in t$3.styles ? L(t$3.styles[i$2].styleAttrs, n$3) : U(a$2, "Non-existant style id referenced");
				}
			}
			function L(t$3, e$3) {
				for (var n$3 in t$3) t$3.hasOwnProperty(n$3) && (n$3 in e$3 || (e$3[n$3] = t$3[n$3]));
			}
			function F(t$3, e$3) {
				if (t$3 && t$3.warn && t$3.warn(e$3)) throw e$3;
			}
			function U(t$3, e$3) {
				if (t$3 && t$3.error && t$3.error(e$3)) throw e$3;
			}
			function j(t$3, e$3) {
				throw t$3 && t$3.fatal && t$3.fatal(e$3), e$3;
			}
			function q(t$3, e$3) {
				for (var n$3, a$2 = 0, r$2 = t$3.length - 1; a$2 <= r$2;) {
					var i$2 = t$3[n$3 = Math.floor((a$2 + r$2) / 2)];
					if (i$2 < e$3) a$2 = n$3 + 1;
					else {
						if (!(i$2 > e$3)) return {
							found: !0,
							index: n$3
						};
						r$2 = n$3 - 1;
					}
				}
				return {
					found: !1,
					index: a$2
				};
			}
			t$2.fromXML = function(t$3, r$2, h$2) {
				var p$2 = e$2.parser(!0, { xmlns: !0 }), b$2 = [], y$2 = [], E$2 = [], _$2 = 0, T$2 = null;
				p$2.onclosetag = function(t$4) {
					if (b$2[0] instanceof R) null !== T$2.head && null !== T$2.head.styling && P(T$2.head.styling, b$2[0].styleRefs, b$2[0].styleAttrs, r$2), delete b$2[0].styleRefs;
					else if (b$2[0] instanceof d$1) for (var e$3 in b$2[0].styles) b$2[0].styles.hasOwnProperty(e$3) && O(b$2[0], b$2[0].styles[e$3], r$2);
					else if (b$2[0] instanceof S$1 || b$2[0] instanceof I) {
						if (b$2[0].contents.length > 1) {
							var a$2, i$2 = [b$2[0].contents[0]];
							for (a$2 = 1; a$2 < b$2[0].contents.length; a$2++) b$2[0].contents[a$2] instanceof k && i$2[i$2.length - 1] instanceof k ? i$2[i$2.length - 1].text += b$2[0].contents[a$2].text : i$2.push(b$2[0].contents[a$2]);
							b$2[0].contents = i$2;
						}
						b$2[0] instanceof I && 1 === b$2[0].contents.length && b$2[0].contents[0] instanceof k && (b$2[0].text = b$2[0].contents[0].text, delete b$2[0].contents);
					} else b$2[0] instanceof o$1 && (b$2[0].node.uri === n$2.ns_tt && "metadata" === b$2[0].node.local ? _$2-- : _$2 > 0 && h$2 && "onCloseTag" in h$2 && h$2.onCloseTag());
					E$2.shift(), y$2.shift(), b$2.shift();
				}, p$2.ontext = function(t$4) {
					if (void 0 === b$2[0]);
					else if (b$2[0] instanceof I || b$2[0] instanceof S$1) {
						if (b$2[0] instanceof I) {
							var e$3 = b$2[0].styleAttrs[a$1.byName.ruby.qname];
							if ("container" === e$3 || "textContainer" === e$3 || "baseContainer" === e$3) return;
						}
						var n$3 = new k();
						n$3.initFromText(T$2, b$2[0], t$4, y$2[0], E$2[0], r$2), b$2[0].contents.push(n$3);
					} else b$2[0] instanceof o$1 && _$2 > 0 && h$2 && "onText" in h$2 && h$2.onText(t$4);
				}, p$2.onopentag = function(t$4) {
					var e$3 = t$4.attributes["xml:space"];
					e$3 ? E$2.unshift(e$3.value) : 0 === E$2.length ? E$2.unshift("default") : E$2.unshift(E$2[0]);
					var i$2 = t$4.attributes["xml:lang"];
					if (i$2 ? y$2.unshift(i$2.value) : 0 === y$2.length ? y$2.unshift("") : y$2.unshift(y$2[0]), t$4.uri === n$2.ns_tt) if ("tt" === t$4.local) null !== T$2 && j(r$2, "Two <tt> elements at (" + this.line + "," + this.column + ")"), (T$2 = new s$1()).initFromNode(t$4, y$2[0], r$2), b$2.unshift(T$2);
					else if ("head" === t$4.local) b$2[0] instanceof s$1 || j(r$2, "Parent of <head> element is not <tt> at (" + this.line + "," + this.column + ")"), b$2.unshift(T$2.head);
					else if ("styling" === t$4.local) b$2[0] instanceof u$1 || j(r$2, "Parent of <styling> element is not <head> at (" + this.line + "," + this.column + ")"), b$2.unshift(T$2.head.styling);
					else if ("style" === t$4.local) {
						var l$2;
						b$2[0] instanceof d$1 ? ((l$2 = new c$1()).initFromNode(t$4, r$2), l$2.id ? T$2.head.styling.styles[l$2.id] = l$2 : U(r$2, "<style> element missing @id attribute"), b$2.unshift(l$2)) : b$2[0] instanceof R ? ((l$2 = new c$1()).initFromNode(t$4, r$2), L(l$2.styleAttrs, b$2[0].styleAttrs), b$2.unshift(l$2)) : j(r$2, "Parent of <style> element is not <styling> or <region> at (" + this.line + "," + this.column + ")");
					} else if ("initial" === t$4.local) {
						var p$3;
						if (b$2[0] instanceof d$1) {
							for (var k$1 in (p$3 = new f$1()).initFromNode(t$4, r$2), p$3.styleAttrs) p$3.styleAttrs.hasOwnProperty(k$1) && (T$2.head.styling.initials[k$1] = p$3.styleAttrs[k$1]);
							b$2.unshift(p$3);
						} else j(r$2, "Parent of <initial> element is not <styling> at (" + this.line + "," + this.column + ")");
					} else if ("layout" === t$4.local) b$2[0] instanceof u$1 || j(r$2, "Parent of <layout> element is not <head> at " + this.line + "," + this.column + ")"), b$2.unshift(T$2.head.layout);
					else if ("region" === t$4.local) {
						b$2[0] instanceof g$1 || j(r$2, "Parent of <region> element is not <layout> at " + this.line + "," + this.column + ")");
						var C$2 = new R();
						C$2.initFromNode(T$2, t$4, y$2[0], r$2), !C$2.id || C$2.id in T$2.head.layout.regions ? U(r$2, "Ignoring <region> with duplicate or missing @id at " + this.line + "," + this.column + ")") : T$2.head.layout.regions[C$2.id] = C$2, b$2.unshift(C$2);
					} else if ("body" === t$4.local) {
						b$2[0] instanceof s$1 || j(r$2, "Parent of <body> element is not <tt> at " + this.line + "," + this.column + ")"), null !== T$2.body && j(r$2, "Second <body> element at " + this.line + "," + this.column + ")");
						var D$2 = new v$1();
						D$2.initFromNode(T$2, t$4, y$2[0], r$2), T$2.body = D$2, b$2.unshift(D$2);
					} else if ("div" === t$4.local) {
						b$2[0] instanceof w$1 || b$2[0] instanceof v$1 || j(r$2, "Parent of <div> element is not <body> or <div> at " + this.line + "," + this.column + ")");
						var x$2 = new w$1();
						x$2.initFromNode(T$2, b$2[0], t$4, y$2[0], r$2);
						var M$2 = x$2.styleAttrs[a$1.byName.backgroundImage.qname];
						M$2 && (x$2.contents.push(new m$1(M$2)), delete x$2.styleAttrs[a$1.byName.backgroundImage.qname]), b$2[0].contents.push(x$2), b$2.unshift(x$2);
					} else if ("image" === t$4.local) {
						b$2[0] instanceof w$1 || j(r$2, "Parent of <image> element is not <div> at " + this.line + "," + this.column + ")");
						var z$1 = new m$1();
						z$1.initFromNode(T$2, b$2[0], t$4, y$2[0], r$2), b$2[0].contents.push(z$1), b$2.unshift(z$1);
					} else if ("p" === t$4.local) {
						b$2[0] instanceof w$1 || j(r$2, "Parent of <p> element is not <div> at " + this.line + "," + this.column + ")");
						var O$1 = new S$1();
						O$1.initFromNode(T$2, b$2[0], t$4, y$2[0], r$2), b$2[0].contents.push(O$1), b$2.unshift(O$1);
					} else if ("span" === t$4.local) {
						b$2[0] instanceof I || b$2[0] instanceof S$1 || j(r$2, "Parent of <span> element is not <span> or <p> at " + this.line + "," + this.column + ")");
						var P$1 = new I();
						P$1.initFromNode(T$2, b$2[0], t$4, y$2[0], E$2[0], r$2), b$2[0].contents.push(P$1), b$2.unshift(P$1);
					} else if ("br" === t$4.local) {
						b$2[0] instanceof I || b$2[0] instanceof S$1 || j(r$2, "Parent of <br> element is not <span> or <p> at " + this.line + "," + this.column + ")");
						var F$1 = new A();
						F$1.initFromNode(T$2, b$2[0], t$4, y$2[0], r$2), b$2[0].contents.push(F$1), b$2.unshift(F$1);
					} else if ("set" === t$4.local) {
						b$2[0] instanceof I || b$2[0] instanceof S$1 || b$2[0] instanceof w$1 || b$2[0] instanceof v$1 || b$2[0] instanceof R || b$2[0] instanceof A || j(r$2, "Parent of <set> element is not a content element or a region at " + this.line + "," + this.column + ")");
						var q$1 = new N();
						q$1.initFromNode(T$2, b$2[0], t$4, r$2), b$2[0].sets.push(q$1), b$2.unshift(q$1);
					} else b$2.unshift(new o$1(t$4));
					else b$2.unshift(new o$1(t$4));
					if (b$2[0] instanceof o$1) {
						if (t$4.uri === n$2.ns_tt && "metadata" === t$4.local) _$2++;
						else if (_$2 > 0 && h$2 && "onOpenTag" in h$2) {
							var B = [];
							for (var G in t$4.attributes) B[t$4.attributes[G].uri + " " + t$4.attributes[G].local] = {
								uri: t$4.attributes[G].uri,
								local: t$4.attributes[G].local,
								value: t$4.attributes[G].value
							};
							h$2.onOpenTag(t$4.uri, t$4.local, B);
						}
					}
				}, p$2.write(t$3).close(), delete T$2.head.styling.styles;
				var C$1 = !1;
				for (var D$1 in T$2.head.layout.regions) if (T$2.head.layout.regions.hasOwnProperty(D$1)) {
					C$1 = !0;
					break;
				}
				if (!C$1) {
					var x$1 = R.prototype.createDefaultRegion(T$2.lang);
					T$2.head.layout.regions[x$1.id] = x$1;
				}
				for (var M$1 in T$2.head.layout.regions) T$2.head.layout.regions.hasOwnProperty(M$1) && l$1(T$2, T$2.head.layout.regions[M$1], null, null);
				return T$2.body && l$1(T$2, T$2.body, null, null), T$2.body && i$1(T$2.body), T$2;
			}, s$1.prototype.initFromNode = function(t$3, e$3, a$2) {
				var i$2 = function(t$4, e$4) {
					var a$3 = M(t$4, n$2.ns_ttp, "cellResolution"), r$2 = 15, i$3 = 32;
					if (null !== a$3) {
						var l$3 = /(\d+) (\d+)/.exec(a$3);
						null !== l$3 ? (i$3 = parseInt(l$3[1]), r$2 = parseInt(l$3[2])) : F(e$4, "Malformed cellResolution value (using initial value instead)");
					}
					return {
						w: i$3,
						h: r$2
					};
				}(t$3, a$2);
				this.cellLength = {
					h: new r$1.ComputedLength(0, 1 / i$2.h),
					w: new r$1.ComputedLength(1 / i$2.w, 0)
				};
				var l$2 = function(t$4, e$4) {
					var a$3, r$2 = M(t$4, n$2.ns_ttp, "frameRate"), i$3 = 30;
					null !== r$2 && (null !== (a$3 = /(\d+)/.exec(r$2)) ? i$3 = parseInt(a$3[1]) : F(e$4, "Malformed frame rate attribute (using initial value instead)"));
					var l$3 = M(t$4, n$2.ns_ttp, "frameRateMultiplier"), o$3 = 1;
					null !== l$3 && (null !== (a$3 = /(\d+) (\d+)/.exec(l$3)) ? o$3 = parseInt(a$3[1]) / parseInt(a$3[2]) : F(e$4, "Malformed frame rate multiplier attribute (using initial value instead)"));
					var s$3 = o$3 * i$3, u$2 = 1, d$2 = M(t$4, n$2.ns_ttp, "tickRate");
					return null === d$2 ? null !== r$2 && (u$2 = s$3) : null !== (a$3 = /(\d+)/.exec(d$2)) ? u$2 = parseInt(a$3[1]) : F(e$4, "Malformed tick rate attribute (using initial value instead)"), {
						effectiveFrameRate: s$3,
						tickRate: u$2
					};
				}(t$3, a$2);
				this.effectiveFrameRate = l$2.effectiveFrameRate, this.tickRate = l$2.tickRate, this.aspectRatio = function(t$4, e$4) {
					var a$3 = M(t$4, n$2.ns_ittp, "aspectRatio");
					null === a$3 && (a$3 = M(t$4, n$2.ns_ttp, "displayAspectRatio"));
					var r$2 = null;
					if (null !== a$3) {
						var i$3 = /(\d+)\s+(\d+)/.exec(a$3);
						if (null !== i$3) {
							var l$3 = parseInt(i$3[1]), o$3 = parseInt(i$3[2]);
							0 !== l$3 && 0 !== o$3 ? r$2 = l$3 / o$3 : U(e$4, "Illegal aspectRatio values (ignoring)");
						} else U(e$4, "Malformed aspectRatio attribute (ignoring)");
					}
					return r$2;
				}(t$3, a$2);
				var o$2 = M(t$3, n$2.ns_ttp, "timeBase");
				null !== o$2 && "media" !== o$2 && j(a$2, "Unsupported time base");
				var s$2 = function(t$4, e$4) {
					var a$3 = M(t$4, n$2.ns_tts, "extent");
					if (null === a$3) return null;
					var i$3 = a$3.split(" ");
					if (2 !== i$3.length) return F(e$4, "Malformed extent (ignoring)"), null;
					var l$3 = r$1.parseLength(i$3[0]), o$3 = r$1.parseLength(i$3[1]);
					return o$3 && l$3 ? {
						h: o$3,
						w: l$3
					} : (F(e$4, "Malformed extent values (ignoring)"), null);
				}(t$3, a$2);
				null === s$2 ? this.pxLength = {
					h: null,
					w: null
				} : ("px" === s$2.h.unit && "px" === s$2.w.unit || j(a$2, "Extent on TT must be in px or absent"), this.pxLength = {
					h: new r$1.ComputedLength(0, 1 / s$2.h.value),
					w: new r$1.ComputedLength(1 / s$2.w.value, 0)
				}), this.dimensions = {
					h: new r$1.ComputedLength(0, 1),
					w: new r$1.ComputedLength(1, 0)
				}, this.lang = e$3;
			}, s$1.prototype._registerEvent = function(t$3) {
				if (!(t$3.end <= t$3.begin)) {
					var e$3 = q(this.events, t$3.begin);
					if (e$3.found || this.events.splice(e$3.index, 0, t$3.begin), t$3.end !== Number.POSITIVE_INFINITY) {
						var n$3 = q(this.events, t$3.end);
						n$3.found || this.events.splice(n$3.index, 0, t$3.end);
					}
				}
			}, s$1.prototype.getMediaTimeRange = function() {
				return [this.events[0], this.events[this.events.length - 1]];
			}, s$1.prototype.getMediaTimeEvents = function() {
				return this.events;
			}, c$1.prototype.initFromNode = function(t$3, e$3) {
				this.id = C(t$3), this.styleAttrs = x(t$3, e$3), this.styleRefs = D(t$3);
			}, f$1.prototype.initFromNode = function(t$3, e$3) {
				for (var a$2 in this.styleAttrs = {}, t$3.attributes) if (t$3.attributes[a$2].uri === n$2.ns_itts || t$3.attributes[a$2].uri === n$2.ns_ebutts || t$3.attributes[a$2].uri === n$2.ns_tts) {
					var r$2 = t$3.attributes[a$2].uri + " " + t$3.attributes[a$2].local;
					this.styleAttrs[r$2] = t$3.attributes[a$2].value;
				}
			}, m$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2, r$2) {
				this.src = "src" in n$3.attributes ? n$3.attributes.src.value : null, this.src || U(r$2, "Invalid image@src attribute"), this.type = "type" in n$3.attributes ? n$3.attributes.type.value : null, this.type || U(r$2, "Invalid image@type attribute"), y$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), T$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), E$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), b$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), this.lang = a$2;
			}, p$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				this.id = C(n$3);
			}, b$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				this.regionID = function(t$4) {
					return t$4 && "region" in t$4.attributes ? t$4.attributes.region.value : "";
				}(n$3);
			}, y$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				this.styleAttrs = x(n$3, a$2), null !== t$3.head && null !== t$3.head.styling && P(t$3.head.styling, D(n$3), this.styleAttrs, a$2);
			}, E$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				this.sets = [];
			}, _$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				this.contents = [];
			}, T$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				var r$2 = function(t$4, e$4, n$4, a$3) {
					var r$3 = null;
					n$4 && "begin" in n$4.attributes && null === (r$3 = z(t$4.tickRate, t$4.effectiveFrameRate, n$4.attributes.begin.value)) && F(a$3, "Malformed begin value " + n$4.attributes.begin.value + " (using 0)");
					var i$2 = null;
					n$4 && "dur" in n$4.attributes && null === (i$2 = z(t$4.tickRate, t$4.effectiveFrameRate, n$4.attributes.dur.value)) && F(a$3, "Malformed dur value " + n$4.attributes.dur.value + " (ignoring)");
					var l$2 = null;
					return n$4 && "end" in n$4.attributes && null === (l$2 = z(t$4.tickRate, t$4.effectiveFrameRate, n$4.attributes.end.value)) && F(a$3, "Malformed end value (ignoring)"), {
						explicit_begin: r$3,
						explicit_end: l$2,
						explicit_dur: i$2
					};
				}(t$3, 0, n$3, a$2);
				this.explicit_begin = r$2.explicit_begin, this.explicit_end = r$2.explicit_end, this.explicit_dur = r$2.explicit_dur, this.timeContainer = function(t$4, e$4) {
					var n$4 = t$4 && "timeContainer" in t$4.attributes ? t$4.attributes.timeContainer.value : null;
					return n$4 && "par" !== n$4 ? "seq" === n$4 ? "seq" : (U(e$4, "Illegal value of timeContainer (assuming 'par')"), "par") : "par";
				}(n$3, a$2);
			}, v$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				y$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), T$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), E$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), b$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), _$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), this.lang = n$3;
			}, w$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2, r$2) {
				y$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), T$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), E$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), b$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), _$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), this.lang = a$2;
			}, S$1.prototype.initFromNode = function(t$3, e$3, n$3, a$2, r$2) {
				y$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), T$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), E$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), b$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), _$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), this.lang = a$2;
			}, I.prototype.initFromNode = function(t$3, e$3, n$3, a$2, r$2, i$2) {
				y$1.prototype.initFromNode.call(this, t$3, e$3, n$3, i$2), T$1.prototype.initFromNode.call(this, t$3, e$3, n$3, i$2), E$1.prototype.initFromNode.call(this, t$3, e$3, n$3, i$2), b$1.prototype.initFromNode.call(this, t$3, e$3, n$3, i$2), _$1.prototype.initFromNode.call(this, t$3, e$3, n$3, i$2), this.space = r$2, this.lang = a$2;
			}, k.prototype.initFromText = function(t$3, e$3, n$3, a$2, r$2, i$2) {
				T$1.prototype.initFromNode.call(this, t$3, e$3, null, i$2), this.text = n$3, this.space = r$2, this.lang = a$2;
			}, A.prototype.initFromNode = function(t$3, e$3, n$3, a$2, r$2) {
				b$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), T$1.prototype.initFromNode.call(this, t$3, e$3, n$3, r$2), this.lang = a$2;
			}, R.prototype.createDefaultRegion = function(t$3) {
				var e$3 = new R();
				return p$1.call(e$3, ""), y$1.call(e$3, {}), E$1.call(e$3, []), T$1.call(e$3, 0, Number.POSITIVE_INFINITY, null), this.lang = t$3, e$3;
			}, R.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				p$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), T$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), E$1.prototype.initFromNode.call(this, t$3, null, e$3, a$2), this.styleAttrs = x(e$3, a$2), this.styleRefs = D(e$3), this.lang = n$3;
			}, N.prototype.initFromNode = function(t$3, e$3, n$3, a$2) {
				T$1.prototype.initFromNode.call(this, t$3, e$3, n$3, a$2);
				var r$2 = x(n$3, a$2);
				for (var i$2 in this.qname = null, this.value = null, r$2) if (r$2.hasOwnProperty(i$2)) {
					if (this.qname) {
						U(a$2, "More than one style specified on set");
						break;
					}
					this.qname = i$2, this.value = r$2[i$2];
				}
			};
		})(e$1, "undefined" == typeof sax ? n$1(5474) : sax, "undefined" == typeof imscNames ? n$1(977) : imscNames, "undefined" == typeof imscStyles ? n$1(1219) : imscStyles, "undefined" == typeof imscUtils ? n$1(6404) : imscUtils);
	},
	1612: function(t$1, e$1, n$1) {
		var a$1 = /firefox/i.test(navigator.userAgent);
		(function(t$2, e$2, n$2) {
			function r$1(t$3, e$3, c$2, g$2) {
				var m$2;
				if ("region" === c$2.kind) (m$2 = document.createElement("div")).style.position = "absolute";
				else if ("body" === c$2.kind) m$2 = document.createElement("div");
				else if ("div" === c$2.kind) m$2 = document.createElement("div");
				else if ("image" === c$2.kind) {
					if (m$2 = document.createElement("img"), null !== t$3.imgResolver && null !== c$2.src) {
						var b$2 = t$3.imgResolver(c$2.src, m$2);
						b$2 && (m$2.src = b$2), m$2.height = t$3.regionH, m$2.width = t$3.regionW;
					}
				} else if ("p" === c$2.kind) m$2 = document.createElement("p");
				else if ("span" === c$2.kind) if ("container" === c$2.styleAttrs[n$2.byName.ruby.qname]) m$2 = document.createElement("ruby"), t$3.ruby = !0;
				else if ("base" === c$2.styleAttrs[n$2.byName.ruby.qname]) m$2 = document.createElement("span");
				else if ("text" === c$2.styleAttrs[n$2.byName.ruby.qname]) m$2 = document.createElement("rt");
				else if ("baseContainer" === c$2.styleAttrs[n$2.byName.ruby.qname]) m$2 = document.createElement("rbc");
				else if ("textContainer" === c$2.styleAttrs[n$2.byName.ruby.qname]) m$2 = document.createElement("rtc");
				else {
					if ("delimiter" === c$2.styleAttrs[n$2.byName.ruby.qname]) return;
					m$2 = document.createElement("span");
				}
				else "br" === c$2.kind && (m$2 = document.createElement("br"));
				if (m$2) {
					if (c$2.lang && ("region" !== c$2.kind && c$2.lang === g$2.lang || (m$2.lang = c$2.lang)), e$3.appendChild(m$2), m$2.style.margin = "0", "region" === c$2.kind) {
						var _$1 = c$2.styleAttrs[n$2.byName.writingMode.qname];
						"lrtb" === _$1 || "lr" === _$1 ? (t$3.ipd = "lr", t$3.bpd = "tb") : "rltb" === _$1 || "rl" === _$1 ? (t$3.ipd = "rl", t$3.bpd = "tb") : "tblr" === _$1 ? (t$3.ipd = "tb", t$3.bpd = "lr") : "tbrl" !== _$1 && "tb" !== _$1 || (t$3.ipd = "tb", t$3.bpd = "rl");
					} else if ("p" === c$2.kind && "tb" === t$3.bpd) t$3.ipd = "ltr" === c$2.styleAttrs[n$2.byName.direction.qname] ? "lr" : "rl";
					for (var v$1 = 0; v$1 < f$1.length; v$1++) {
						var w$1 = f$1[v$1], S$1 = c$2.styleAttrs[w$1.qname];
						void 0 !== S$1 && null !== w$1.map && w$1.map(t$3, m$2, c$2, S$1);
					}
					var I = m$2, k = c$2.styleAttrs[n$2.byName.linePadding.qname];
					if (k && !k.isZero()) {
						var A = k.toUsedLength(t$3.w, t$3.h);
						if (A > 0) {
							var R = Math.ceil(A) + "px";
							"tb" === t$3.bpd ? (I.style.paddingLeft = R, I.style.paddingRight = R) : (I.style.paddingTop = R, I.style.paddingBottom = R), t$3.lp = k;
						}
					}
					var N = c$2.styleAttrs[n$2.byName.multiRowAlign.qname];
					if (N && "auto" !== N) {
						var C = document.createElement("span");
						C.style.display = "inline-block", C.style.textAlign = N, m$2.appendChild(C), I = C, t$3.mra = N;
					}
					var D = c$2.styleAttrs[n$2.byName.rubyReserve.qname];
					if (D && "none" !== D[0] && (t$3.rubyReserve = D), c$2.styleAttrs[n$2.byName.fillLineGap.qname] && (t$3.flg = !0), "span" === c$2.kind && c$2.text) {
						var x = c$2.styleAttrs[n$2.byName.textEmphasis.qname];
						if (x && "none" !== x.style && (t$3.textEmphasis = !0), n$2.byName.textCombine.qname in c$2.styleAttrs && "all" === c$2.styleAttrs[n$2.byName.textCombine.qname]) m$2.textContent = c$2.text, m$2._isd_element = c$2, x && d$1(t$3, m$2, 0, x);
						else for (var M = "", z = 0; z < c$2.text.length; z++) {
							M += c$2.text.charAt(z);
							var O = c$2.text.charCodeAt(z);
							if (O < 55296 || O > 56319 || z === c$2.text.length - 1) {
								var P = document.createElement("span");
								P.textContent = M, x && d$1(t$3, P, 0, x), m$2.appendChild(P), M = "", P._isd_element = c$2;
							}
						}
					}
					if ("contents" in c$2) for (var L = 0; L < c$2.contents.length; L++) r$1(t$3, I, c$2.contents[L], c$2);
					var F = [];
					if ("p" === c$2.kind && (u$1(t$3, I, F, null), t$3.rubyReserve && (function(t$4, e$4) {
						for (var n$3 = 0; n$3 < t$4.length; n$3++) {
							var a$2, r$2, i$2 = document.createElement("ruby"), l$2 = document.createElement("span");
							l$2.textContent = "​", i$2.appendChild(l$2);
							var o$2, s$2 = e$4.rubyReserve[1].toUsedLength(e$4.w, e$4.h) + "px";
							"both" === e$4.rubyReserve[0] || "outside" === e$4.rubyReserve[0] && 1 == t$4.length ? ((a$2 = document.createElement("rtc")).style[p$1] = h$1 ? "after" : "under", a$2.textContent = "​", a$2.style.fontSize = s$2, (r$2 = document.createElement("rtc")).style[p$1] = h$1 ? "before" : "over", r$2.textContent = "​", r$2.style.fontSize = s$2, i$2.appendChild(a$2), i$2.appendChild(r$2)) : ((a$2 = document.createElement("rtc")).textContent = "​", a$2.style.fontSize = s$2, o$2 = "after" === e$4.rubyReserve[0] || "outside" === e$4.rubyReserve[0] && n$3 > 0 ? h$1 ? "after" : "tb" === e$4.bpd || "rl" === e$4.bpd ? "under" : "over" : h$1 ? "before" : "tb" === e$4.bpd || "rl" === e$4.bpd ? "over" : "under", a$2.style[p$1] = o$2, i$2.appendChild(a$2));
							for (var u$2 = null, d$2 = 0; d$2 < t$4[n$3].rbc.length; d$2++) if ("ruby" === t$4[n$3].rbc[d$2].localName) {
								u$2 = t$4[n$3].rbc[d$2];
								for (var c$3 = 0; c$3 < u$2.style.length; c$3++) i$2.style.setProperty(u$2.style.item(c$3), u$2.style.getPropertyValue(u$2.style.item(c$3)));
								break;
							}
							(u$2 = u$2 || t$4[n$3].elements[0].node).parentElement.insertBefore(i$2, u$2);
						}
					}(F, t$3), t$3.rubyReserve = null), (t$3.ruby || t$3.rubyReserve) && (function(t$4, e$4) {
						for (var n$3 = 0; n$3 < t$4.length; n$3++) for (var a$2 = 0; a$2 < t$4[n$3].rbc.length; a$2++) {
							var r$2;
							t$4[n$3].rbc[a$2].style[p$1] || (r$2 = h$1 ? 0 === n$3 ? "before" : "after" : "tb" === e$4.bpd || "rl" === e$4.bpd ? 0 === n$3 ? "over" : "under" : 0 === n$3 ? "under" : "over", t$4[n$3].rbc[a$2].style[p$1] = r$2);
						}
					}(F, t$3), t$3.ruby = null), t$3.textEmphasis && (function(t$4, e$4) {
						for (var n$3 = 0; n$3 < t$4.length; n$3++) for (var a$2 = 0; a$2 < t$4[n$3].te.length; a$2++) {
							var r$2;
							t$4[n$3].te[a$2].style[y$1] && "none" !== t$4[n$3].te[a$2].style[y$1] || (r$2 = "tb" === e$4.bpd ? 0 === n$3 ? "left over" : "left under" : "rl" === e$4.bpd ? 0 === n$3 ? "right under" : "left under" : 0 === n$3 ? "left under" : "right under", t$4[n$3].te[a$2].style[y$1] = r$2);
						}
					}(F, t$3), t$3.textEmphasis = null), t$3.mra && (function(t$4) {
						for (var e$4 = 0; e$4 < t$4.length - 1; e$4++) {
							var n$3 = t$4[e$4].elements.length;
							if (0 !== n$3 && !1 === t$4[e$4].br) {
								var a$2 = document.createElement("br"), r$2 = t$4[e$4].elements[n$3 - 1].node;
								r$2.parentElement.insertBefore(a$2, r$2.nextSibling);
							}
						}
					}(F), t$3.mra = null), t$3.lp && (function(t$4, e$4, n$3) {
						if (null !== t$4) for (var r$2 = 0; r$2 < t$4.length; r$2++) {
							var i$2 = t$4[r$2].elements.length, l$2 = Math.ceil(e$4) + "px", o$2 = "-" + Math.ceil(e$4) + "px";
							if (0 !== i$2) {
								var s$2 = t$4[r$2].elements[t$4[r$2].start_elem], u$2 = t$4[r$2].elements[t$4[r$2].end_elem];
								if (s$2 === u$2) {
									var d$2 = s$2.node.getBoundingClientRect();
									if (0 == d$2.width || 0 == d$2.height) continue;
								}
								"lr" === n$3.ipd ? (s$2.node.style.marginLeft = o$2, s$2.node.style.paddingLeft = l$2) : "rl" === n$3.ipd ? (s$2.node.style.paddingRight = l$2, s$2.node.style.marginRight = o$2) : "tb" === n$3.ipd && (s$2.node.style.paddingTop = l$2, s$2.node.style.marginTop = o$2), "lr" === n$3.ipd ? (a$1 || (u$2.node.style.marginRight = o$2), u$2.node.style.paddingRight = l$2) : "rl" === n$3.ipd ? (u$2.node.style.paddingLeft = l$2, a$1 || (u$2.node.style.marginLeft = o$2)) : "tb" === n$3.ipd && (u$2.node.style.paddingBottom = l$2, u$2.node.style.marginBottom = o$2);
							}
						}
					}(F, t$3.lp.toUsedLength(t$3.w, t$3.h), t$3), t$3.lp = null), function(t$4, e$4) {
						for (var n$3 = 0; n$3 < t$4.length; n$3++) for (var a$2 = t$4[n$3], r$2 = 1; r$2 < a$2.elements.length;) {
							var o$2 = a$2.elements[r$2 - 1], s$2 = a$2.elements[r$2];
							l$1(o$2.node, s$2.node, e$4) ? a$2.elements.splice(r$2, 1) : r$2++;
						}
						for (var u$2, d$2, c$3 = [], f$2 = 0; f$2 < t$4.length; f$2++) for (var g$3 = 0; g$3 < t$4[f$2].elements.length; g$3++) (d$2 = i$1(u$2 = t$4[f$2].elements[g$3].node, c$3, !1)) && (u$2.style.backgroundColor = d$2);
						for (var m$3 = 0; m$3 < c$3.length; m$3++) c$3[m$3].style.backgroundColor = "";
					}(F, t$3), t$3.flg)) {
						var U = s$1(I.getBoundingClientRect(), t$3);
						(function(t$4, e$4, n$3, a$2) {
							for (var r$2 = Math.sign(n$3 - e$4), i$2 = 0; i$2 <= t$4.length; i$2++) {
								var l$2, o$2, s$2, u$2;
								if (l$2 = 0 === i$2 ? Math.round(e$4) : i$2 === t$4.length ? Math.round(n$3) : Math.round((t$4[i$2 - 1].after + t$4[i$2].before) / 2), i$2 > 0 && t$4[i$2 - 1]) for (s$2 = 0; s$2 < t$4[i$2 - 1].elements.length; s$2++) o$2 = r$2 * (l$2 - (u$2 = t$4[i$2 - 1].elements[s$2]).after) + "px", "lr" === a$2.bpd ? u$2.node.style.paddingRight = o$2 : "rl" === a$2.bpd ? u$2.node.style.paddingLeft = o$2 : "tb" === a$2.bpd && (u$2.node.style.paddingBottom = o$2);
								if (i$2 < t$4.length) for (s$2 = 0; s$2 < t$4[i$2].elements.length; s$2++) o$2 = r$2 * ((u$2 = t$4[i$2].elements[s$2]).before - l$2) + "px", "lr" === a$2.bpd ? u$2.node.style.paddingLeft = o$2 : "rl" === a$2.bpd ? u$2.node.style.paddingRight = o$2 : "tb" === a$2.bpd && (u$2.node.style.paddingTop = o$2);
							}
						})(F, U.before, U.after, t$3), t$3.flg = null;
					}
					if ("region" === c$2.kind && "tb" === t$3.bpd && t$3.enableRollUp && c$2.contents.length > 0 && "after" === c$2.styleAttrs[n$2.byName.displayAlign.qname]) {
						u$1(t$3, I, F, null);
						var j = new o$1("" === c$2.id ? "_" : c$2.id, F);
						if (t$3.currentISDState[j.id] = j, t$3.previousISDState && j.id in t$3.previousISDState && t$3.previousISDState[j.id].plist.length > 0 && j.plist.length > 1 && j.plist[j.plist.length - 2].text === t$3.previousISDState[j.id].plist[t$3.previousISDState[j.id].plist.length - 1].text) {
							var q = m$2.firstElementChild, B = j.plist[j.plist.length - 1].after - j.plist[j.plist.length - 1].before;
							q.style.bottom = "-" + B + "px", q.style.transition = "transform 0.4s", q.style.position = "relative", q.style.transform = "translateY(-" + B + "px)";
						}
					}
				} else E$1(t$3.errorHandler, "Error processing ISD element kind: " + c$2.kind);
			}
			function i$1(t$3, e$3, n$3) {
				return t$3.style.backgroundColor ? (n$3 && !e$3.includes(t$3) && e$3.push(t$3), t$3.style.backgroundColor) : "SPAN" === t$3.parentElement.nodeName || "RUBY" === t$3.parentElement.nodeName || "RBC" === t$3.parentElement.nodeName || "RTC" === t$3.parentElement.nodeName || "RT" === t$3.parentElement.nodeName ? i$1(t$3.parentElement, e$3, !0) : void 0;
			}
			function l$1(t$3, e$3, n$3) {
				if ("SPAN" === t$3.tagName && "SPAN" === e$3.tagName && t$3._isd_element === e$3._isd_element) {
					if (!t$3._isd_element) return E$1(n$3.errorHandler, "Internal error: HTML span is not linked to a source element; cannot merge spans."), !1;
					t$3.textContent += e$3.textContent;
					for (var a$2 = 0; a$2 < e$3.style.length; a$2++) {
						var r$2 = e$3.style[a$2];
						(r$2.indexOf("border") >= 0 || r$2.indexOf("padding") >= 0 || r$2.indexOf("margin") >= 0) && (t$3.style[r$2] = e$3.style[r$2]);
					}
					return e$3.parentElement.removeChild(e$3), !0;
				}
				return !1;
			}
			function o$1(t$3, e$3) {
				this.id = t$3, this.plist = e$3;
			}
			function s$1(t$3, e$3) {
				var n$3 = {
					before: null,
					after: null,
					start: null,
					end: null
				};
				return "tb" === e$3.bpd ? (n$3.before = t$3.top, n$3.after = t$3.bottom, "lr" === e$3.ipd ? (n$3.start = t$3.left, n$3.end = t$3.right) : (n$3.start = t$3.right, n$3.end = t$3.left)) : "lr" === e$3.bpd ? (n$3.before = t$3.left, n$3.after = t$3.right, n$3.start = t$3.top, n$3.end = t$3.bottom) : "rl" === e$3.bpd && (n$3.before = t$3.right, n$3.after = t$3.left, n$3.start = t$3.top, n$3.end = t$3.bottom), n$3;
			}
			function u$1(t$3, e$3, n$3, a$2) {
				if ("rt" !== e$3.localName && "rtc" !== e$3.localName) {
					var r$2, i$2, l$2, o$2, d$2 = e$3.style.backgroundColor || a$2;
					if (0 === e$3.childElementCount) if ("span" === e$3.localName || "rb" === e$3.localName) {
						var c$2 = s$1(e$3.getBoundingClientRect(), t$3);
						if (0 !== n$3.length && (r$2 = c$2.before, i$2 = c$2.after, l$2 = n$3[n$3.length - 1].before, i$2 < (o$2 = n$3[n$3.length - 1].after) && r$2 > l$2 || o$2 <= i$2 && l$2 >= r$2)) {
							var f$2 = Math.sign(c$2.after - c$2.before), g$2 = Math.sign(c$2.end - c$2.start);
							f$2 * (c$2.before - n$3[n$3.length - 1].before) < 0 && (n$3[n$3.length - 1].before = c$2.before), f$2 * (c$2.after - n$3[n$3.length - 1].after) > 0 && (n$3[n$3.length - 1].after = c$2.after), g$2 * (c$2.start - n$3[n$3.length - 1].start) < 0 && (n$3[n$3.length - 1].start = c$2.start, n$3[n$3.length - 1].start_elem = n$3[n$3.length - 1].elements.length), g$2 * (c$2.end - n$3[n$3.length - 1].end) > 0 && (n$3[n$3.length - 1].end = c$2.end, n$3[n$3.length - 1].end_elem = n$3[n$3.length - 1].elements.length);
						} else n$3.push({
							before: c$2.before,
							after: c$2.after,
							start: c$2.start,
							end: c$2.end,
							start_elem: 0,
							end_elem: 0,
							elements: [],
							rbc: [],
							te: [],
							text: "",
							br: !1
						});
						n$3[n$3.length - 1].text += e$3.textContent, n$3[n$3.length - 1].elements.push({
							node: e$3,
							bgcolor: d$2,
							before: c$2.before,
							after: c$2.after
						});
					} else "br" === e$3.localName && 0 !== n$3.length && (n$3[n$3.length - 1].br = !0);
					else for (var m$2 = e$3.firstChild; m$2;) m$2.nodeType === Node.ELEMENT_NODE && (u$1(t$3, m$2, n$3, d$2), "ruby" === m$2.localName || "rtc" === m$2.localName ? n$3.length > 0 && n$3[n$3.length - 1].rbc.push(m$2) : "span" === m$2.localName && m$2.style[b$1] && "none" !== m$2.style[b$1] && n$3.length > 0 && n$3[n$3.length - 1].te.push(m$2)), m$2 = m$2.nextSibling;
				}
			}
			function d$1(t$3, e$3, n$3, a$2) {
				var r$2;
				"none" !== a$2.style && ("auto" === a$2.style ? e$3.style[b$1] = "filled" : e$3.style[b$1] = a$2.style + " " + a$2.symbol, ("before" === a$2.position || "after" === a$2.position) && (r$2 = "tb" === t$3.bpd ? "before" === a$2.position ? "left over" : "left under" : "rl" === t$3.bpd ? "before" === a$2.position ? "right under" : "left under" : "before" === a$2.position ? "left under" : "right under", e$3.style[y$1] = r$2));
			}
			function c$1(t$3, e$3) {
				this.qname = t$3, this.map = e$3;
			}
			t$2.render = function(t$3, e$3, n$3, a$2, i$2, l$2, o$2, s$2, u$2) {
				var d$2 = a$2 || e$3.clientHeight, c$2 = i$2 || e$3.clientWidth;
				if (null !== t$3.aspectRatio) {
					var f$2 = d$2 * t$3.aspectRatio;
					f$2 > c$2 ? d$2 = Math.round(c$2 / t$3.aspectRatio) : c$2 = f$2;
				}
				var g$2 = document.createElement("div");
				g$2.style.position = "relative", g$2.style.width = c$2 + "px", g$2.style.height = d$2 + "px", g$2.style.margin = "auto", g$2.style.top = 0, g$2.style.bottom = 0, g$2.style.left = 0, g$2.style.right = 0, g$2.style.zIndex = 0;
				var m$2 = {
					h: d$2,
					w: c$2,
					regionH: null,
					regionW: null,
					imgResolver: n$3,
					displayForcedOnlyMode: l$2 || !1,
					isd: t$3,
					errorHandler: o$2,
					previousISDState: s$2,
					enableRollUp: u$2 || !1,
					currentISDState: {},
					flg: null,
					lp: null,
					mra: null,
					ipd: null,
					bpd: null,
					ruby: null,
					textEmphasis: null,
					rubyReserve: null
				};
				if (e$3.appendChild(g$2), "contents" in t$3) for (var h$2 = 0; h$2 < t$3.contents.length; h$2++) r$1(m$2, g$2, t$3.contents[h$2], t$3);
				return m$2.currentISDState;
			};
			for (var f$1 = [
				new c$1("http://www.w3.org/ns/ttml#styling backgroundColor", (function(t$3, e$3, n$3, a$2) {
					0 !== a$2[3] && (e$3.style.backgroundColor = "rgba(" + a$2[0].toString() + "," + a$2[1].toString() + "," + a$2[2].toString() + "," + (a$2[3] / 255).toString() + ")");
				})),
				new c$1("http://www.w3.org/ns/ttml#styling color", (function(t$3, e$3, n$3, a$2) {
					e$3.style.color = "rgba(" + a$2[0].toString() + "," + a$2[1].toString() + "," + a$2[2].toString() + "," + (a$2[3] / 255).toString() + ")";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling direction", (function(t$3, e$3, n$3, a$2) {
					e$3.style.direction = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling display", (function(t$3, e$3, n$3, a$2) {})),
				new c$1("http://www.w3.org/ns/ttml#styling displayAlign", (function(t$3, e$3, n$3, a$2) {
					e$3.style.display = "flex", e$3.style.flexDirection = "column", "before" === a$2 ? e$3.style.justifyContent = "flex-start" : "center" === a$2 ? e$3.style.justifyContent = "center" : "after" === a$2 && (e$3.style.justifyContent = "flex-end");
				})),
				new c$1("http://www.w3.org/ns/ttml#styling extent", (function(t$3, e$3, n$3, a$2) {
					t$3.regionH = a$2.h.toUsedLength(t$3.w, t$3.h), t$3.regionW = a$2.w.toUsedLength(t$3.w, t$3.h);
					var r$2 = 0, i$2 = 0, l$2 = n$3.styleAttrs["http://www.w3.org/ns/ttml#styling padding"];
					l$2 && (r$2 = l$2[0].toUsedLength(t$3.w, t$3.h) + l$2[2].toUsedLength(t$3.w, t$3.h), i$2 = l$2[1].toUsedLength(t$3.w, t$3.h) + l$2[3].toUsedLength(t$3.w, t$3.h)), e$3.style.height = t$3.regionH - r$2 + "px", e$3.style.width = t$3.regionW - i$2 + "px";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling fontFamily", (function(t$3, e$3, n$3, a$2) {
					for (var r$2 = [], i$2 = 0; i$2 < a$2.length; i$2++) a$2[i$2] = a$2[i$2].trim(), "monospaceSerif" === a$2[i$2] ? (r$2.push("Courier New"), r$2.push("\"Liberation Mono\""), r$2.push("Courier"), r$2.push("monospace")) : "proportionalSansSerif" === a$2[i$2] ? (r$2.push("Arial"), r$2.push("Helvetica"), r$2.push("\"Liberation Sans\""), r$2.push("sans-serif")) : "monospace" === a$2[i$2] ? r$2.push("monospace") : "sansSerif" === a$2[i$2] ? r$2.push("sans-serif") : "serif" === a$2[i$2] ? r$2.push("serif") : "monospaceSansSerif" === a$2[i$2] ? (r$2.push("Consolas"), r$2.push("monospace")) : "proportionalSerif" === a$2[i$2] ? r$2.push("serif") : r$2.push(a$2[i$2]);
					if (r$2.length > 0) {
						for (var l$2 = [r$2[0]], o$2 = 1; o$2 < r$2.length; o$2++) -1 == l$2.indexOf(r$2[o$2]) && l$2.push(r$2[o$2]);
						r$2 = l$2;
					}
					e$3.style.fontFamily = r$2.join(",");
				})),
				new c$1("http://www.w3.org/ns/ttml#styling shear", (function(t$3, e$3, n$3, a$2) {
					if (0 !== a$2) {
						var r$2 = -.9 * a$2;
						"tb" === t$3.bpd ? e$3.style.transform = "skewX(" + r$2 + "deg)" : e$3.style.transform = "skewY(" + r$2 + "deg)";
					}
				})),
				new c$1("http://www.w3.org/ns/ttml#styling fontSize", (function(t$3, e$3, n$3, a$2) {
					e$3.style.fontSize = a$2.toUsedLength(t$3.w, t$3.h) + "px";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling fontStyle", (function(t$3, e$3, n$3, a$2) {
					e$3.style.fontStyle = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling fontWeight", (function(t$3, e$3, n$3, a$2) {
					e$3.style.fontWeight = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling lineHeight", (function(t$3, e$3, n$3, a$2) {
					e$3.style.lineHeight = "normal" === a$2 ? "normal" : a$2.toUsedLength(t$3.w, t$3.h) + "px";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling opacity", (function(t$3, e$3, n$3, a$2) {
					e$3.style.opacity = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling origin", (function(t$3, e$3, n$3, a$2) {
					e$3.style.top = a$2.h.toUsedLength(t$3.w, t$3.h) + "px", e$3.style.left = a$2.w.toUsedLength(t$3.w, t$3.h) + "px";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling overflow", (function(t$3, e$3, n$3, a$2) {
					e$3.style.overflow = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling padding", (function(t$3, e$3, n$3, a$2) {
					var r$2 = [];
					r$2[0] = a$2[0].toUsedLength(t$3.w, t$3.h) + "px", r$2[1] = a$2[3].toUsedLength(t$3.w, t$3.h) + "px", r$2[2] = a$2[2].toUsedLength(t$3.w, t$3.h) + "px", r$2[3] = a$2[1].toUsedLength(t$3.w, t$3.h) + "px", e$3.style.padding = r$2.join(" ");
				})),
				new c$1("http://www.w3.org/ns/ttml#styling position", (function(t$3, e$3, n$3, a$2) {
					e$3.style.top = a$2.h.toUsedLength(t$3.w, t$3.h) + "px", e$3.style.left = a$2.w.toUsedLength(t$3.w, t$3.h) + "px";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling rubyAlign", (function(t$3, e$3, n$3, a$2) {
					e$3.style.rubyAlign = "spaceAround" === a$2 ? "space-around" : "center";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling rubyPosition", (function(t$3, e$3, n$3, a$2) {
					var r$2;
					"before" !== a$2 && "after" !== a$2 || (r$2 = h$1 ? a$2 : "tb" === t$3.bpd || "rl" === t$3.bpd ? "before" === a$2 ? "over" : "under" : "before" === a$2 ? "under" : "over", e$3.parentElement.style[p$1] = r$2);
				})),
				new c$1("http://www.w3.org/ns/ttml#styling showBackground", null),
				new c$1("http://www.w3.org/ns/ttml#styling textAlign", (function(t$3, e$3, n$3, a$2) {
					var r$2 = "start" === a$2 ? "rl" === t$3.ipd ? "right" : "left" : "end" === a$2 ? "rl" === t$3.ipd ? "left" : "right" : a$2;
					e$3.style.textAlign = r$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling textDecoration", (function(t$3, e$3, n$3, a$2) {
					e$3.style.textDecoration = a$2.join(" ").replace("lineThrough", "line-through");
				})),
				new c$1("http://www.w3.org/ns/ttml#styling textOutline", (function(t$3, e$3, n$3, a$2) {})),
				new c$1("http://www.w3.org/ns/ttml#styling textShadow", (function(t$3, e$3, a$2, r$2) {
					var i$2 = a$2.styleAttrs[n$2.byName.textOutline.qname];
					if ("none" === r$2 && "none" === i$2) e$3.style.textShadow = "";
					else {
						var l$2 = [];
						if ("none" !== i$2) {
							var o$2 = "rgba(" + i$2.color[0].toString() + "," + i$2.color[1].toString() + "," + i$2.color[2].toString() + "," + (i$2.color[3] / 255).toString() + ")";
							l$2.push("1px 1px 1px " + o$2), l$2.push("-1px 1px 1px " + o$2), l$2.push("1px -1px 1px " + o$2), l$2.push("-1px -1px 1px " + o$2);
						}
						if ("none" !== r$2) for (var s$2 = 0; s$2 < r$2.length; s$2++) l$2.push(r$2[s$2].x_off.toUsedLength(t$3.w, t$3.h) + "px " + r$2[s$2].y_off.toUsedLength(t$3.w, t$3.h) + "px " + r$2[s$2].b_radius.toUsedLength(t$3.w, t$3.h) + "px rgba(" + r$2[s$2].color[0].toString() + "," + r$2[s$2].color[1].toString() + "," + r$2[s$2].color[2].toString() + "," + (r$2[s$2].color[3] / 255).toString() + ")");
						e$3.style.textShadow = l$2.join(",");
					}
				})),
				new c$1("http://www.w3.org/ns/ttml#styling textCombine", (function(t$3, e$3, n$3, a$2) {
					e$3.style.textCombineUpright = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling textEmphasis", (function(t$3, e$3, n$3, a$2) {})),
				new c$1("http://www.w3.org/ns/ttml#styling unicodeBidi", (function(t$3, e$3, n$3, a$2) {
					var r$2 = "bidiOverride" === a$2 ? "bidi-override" : a$2;
					e$3.style.unicodeBidi = r$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling visibility", (function(t$3, e$3, n$3, a$2) {
					e$3.style.visibility = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml#styling wrapOption", (function(t$3, e$3, n$3, a$2) {
					"wrap" === a$2 ? "preserve" === n$3.space ? e$3.style.whiteSpace = "pre-wrap" : e$3.style.whiteSpace = "normal" : "preserve" === n$3.space ? e$3.style.whiteSpace = "pre" : e$3.style.whiteSpace = "noWrap";
				})),
				new c$1("http://www.w3.org/ns/ttml#styling writingMode", (function(t$3, e$3, n$3, a$2) {
					"lrtb" === a$2 || "lr" === a$2 || "rltb" === a$2 || "rl" === a$2 ? e$3.style.writingMode = "horizontal-tb" : "tblr" === a$2 ? e$3.style.writingMode = "vertical-lr" : "tbrl" !== a$2 && "tb" !== a$2 || (e$3.style.writingMode = "vertical-rl");
				})),
				new c$1("http://www.w3.org/ns/ttml#styling zIndex", (function(t$3, e$3, n$3, a$2) {
					e$3.style.zIndex = a$2;
				})),
				new c$1("http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay", (function(t$3, e$3, n$3, a$2) {
					t$3.displayForcedOnlyMode && !1 === a$2 && (e$3.style.visibility = "hidden");
				}))
			], g$1 = {}, m$1 = 0; m$1 < f$1.length; m$1++) g$1[f$1[m$1].qname] = f$1[m$1];
			var h$1 = "webkitRubyPosition" in window.getComputedStyle(document.documentElement), p$1 = h$1 ? "webkitRubyPosition" : "rubyPosition", b$1 = "webkitTextEmphasisStyle" in window.getComputedStyle(document.documentElement) ? "webkitTextEmphasisStyle" : "textEmphasisStyle", y$1 = "webkitTextEmphasisPosition" in window.getComputedStyle(document.documentElement) ? "webkitTextEmphasisPosition" : "textEmphasisPosition";
			function E$1(t$3, e$3) {
				if (t$3 && t$3.error && t$3.error(e$3)) throw e$3;
			}
		})(e$1, "undefined" == typeof imscNames ? n$1(977) : imscNames, "undefined" == typeof imscStyles ? n$1(1219) : imscStyles, "undefined" == typeof imscUtils ? n$1(6404) : imscUtils);
	},
	8905: function(t$1, e$1, n$1) {
		(function(t$2, e$2, n$2, a$1) {
			t$2.generateISD = function(t$3, e$3, a$2) {
				var r$2, l$2 = new s$1(t$3), o$2 = {}, u$2 = {}, d$2 = t$3.head.styling.initials[n$2.byName.showBackground.qname], c$1 = t$3.head.styling.initials[n$2.byName.backgroundColor.qname];
				for (var f$1 in t$3.head.layout.regions) if (t$3.head.layout.regions.hasOwnProperty(f$1)) {
					var g$1 = t$3.head.layout.regions[f$1], m$1 = g$1.styleAttrs[n$2.byName.showBackground.qname] || d$2, h$1 = g$1.styleAttrs[n$2.byName.backgroundColor.qname] || c$1;
					u$2[g$1.id] = ("always" === m$1 || void 0 === m$1) && void 0 !== h$1 && !(e$3 < g$1.begin || e$3 >= g$1.end);
				}
				for (var p$1 in t$3.body && t$3.body.regionID && (u$2[t$3.body.regionID] = !0), r$2 = null !== t$3.body ? function t$4(e$4, n$3) {
					if (n$3.contents) {
						var a$3 = {};
						for (var r$3 in n$3) n$3.hasOwnProperty(r$3) && (a$3[r$3] = n$3[r$3]);
						return a$3.contents = [], n$3.contents.filter((function(t$5) {
							return !(e$4 < t$5.begin || e$4 >= t$5.end);
						})).forEach((function(n$4) {
							var r$4 = t$4(e$4, n$4);
							r$4.regionID && (u$2[r$4.regionID] = !0), null !== r$4 && a$3.contents.push(r$4);
						})), a$3;
					}
					return n$3;
				}(e$3, t$3.body) : null, void 0 !== u$2[""] && (u$2[""] = !0), u$2) if (u$2[p$1]) {
					var b$1 = i$1(t$3, e$3, t$3.head.layout.regions[p$1], r$2, null, "", t$3.head.layout.regions[p$1], a$2, o$2);
					null !== b$1 && l$2.contents.push(b$1.element);
				}
				return l$2;
			};
			var r$1 = [
				n$2.byName.color.qname,
				n$2.byName.textCombine.qname,
				n$2.byName.textDecoration.qname,
				n$2.byName.textEmphasis.qname,
				n$2.byName.textOutline.qname,
				n$2.byName.textShadow.qname
			];
			function i$1(t$3, e$3, s$2, c$1, f$1, g$1, m$1, h$1, p$1) {
				if (e$3 < m$1.begin || e$3 >= m$1.end) return null;
				var b$1 = "regionID" in m$1 && "" !== m$1.regionID ? m$1.regionID : g$1;
				if (null !== f$1 && b$1 !== s$2.id && (!("contents" in m$1) || "contents" in m$1 && 0 === m$1.contents.length || "" !== b$1)) return null;
				var y$1 = new u$1(m$1);
				if ("sets" in m$1) for (var E$1 = 0; E$1 < m$1.sets.length; E$1++) e$3 < m$1.sets[E$1].begin || e$3 >= m$1.sets[E$1].end || (y$1.styleAttrs[m$1.sets[E$1].qname] = m$1.sets[E$1].value);
				var _$1 = {};
				for (var T$1 in y$1.styleAttrs) if (y$1.styleAttrs.hasOwnProperty(T$1) && (_$1[T$1] = !0, "region" === y$1.kind && T$1 === n$2.byName.writingMode.qname && !(n$2.byName.direction.qname in y$1.styleAttrs))) {
					var v$1 = y$1.styleAttrs[T$1];
					"lrtb" === v$1 || "lr" === v$1 ? y$1.styleAttrs[n$2.byName.direction.qname] = "ltr" : "rltb" !== v$1 && "rl" !== v$1 || (y$1.styleAttrs[n$2.byName.direction.qname] = "rtl");
				}
				if (null !== f$1) for (var w$1 = 0; w$1 < n$2.all.length; w$1++) {
					var S$1 = n$2.all[w$1];
					if (S$1.qname === n$2.byName.textDecoration.qname) {
						var I = f$1.styleAttrs[S$1.qname], k = y$1.styleAttrs[S$1.qname], A = [];
						void 0 === k ? A = I : -1 === k.indexOf("none") ? ((-1 === k.indexOf("noUnderline") && -1 !== I.indexOf("underline") || -1 !== k.indexOf("underline")) && A.push("underline"), (-1 === k.indexOf("noLineThrough") && -1 !== I.indexOf("lineThrough") || -1 !== k.indexOf("lineThrough")) && A.push("lineThrough"), (-1 === k.indexOf("noOverline") && -1 !== I.indexOf("overline") || -1 !== k.indexOf("overline")) && A.push("overline")) : A.push("none"), y$1.styleAttrs[S$1.qname] = A;
					} else if (S$1.qname !== n$2.byName.fontSize.qname || S$1.qname in y$1.styleAttrs || "span" !== y$1.kind || "textContainer" !== y$1.styleAttrs[n$2.byName.ruby.qname]) if (S$1.qname !== n$2.byName.fontSize.qname || S$1.qname in y$1.styleAttrs || "span" !== y$1.kind || "text" !== y$1.styleAttrs[n$2.byName.ruby.qname]) S$1.inherit && S$1.qname in f$1.styleAttrs && !(S$1.qname in y$1.styleAttrs) && (y$1.styleAttrs[S$1.qname] = f$1.styleAttrs[S$1.qname]);
					else {
						var R = f$1.styleAttrs[n$2.byName.fontSize.qname];
						"textContainer" === f$1.styleAttrs[n$2.byName.ruby.qname] ? y$1.styleAttrs[S$1.qname] = R : y$1.styleAttrs[S$1.qname] = new a$1.ComputedLength(.5 * R.rw, .5 * R.rh);
					}
					else {
						var N = f$1.styleAttrs[n$2.byName.fontSize.qname];
						y$1.styleAttrs[S$1.qname] = new a$1.ComputedLength(.5 * N.rw, .5 * N.rh);
					}
				}
				for (var C = 0; C < n$2.all.length; C++) {
					var D = n$2.all[C];
					if (!(D.qname in y$1.styleAttrs) && !(D.qname === n$2.byName.position.qname && n$2.byName.origin.qname in y$1.styleAttrs || D.qname === n$2.byName.origin.qname && n$2.byName.position.qname in y$1.styleAttrs)) {
						var x = t$3.head.styling.initials[D.qname] || D.initial;
						if (null !== x && ("region" === y$1.kind || !1 === D.inherit && null !== x)) {
							var M = D.parse(x);
							null !== M ? (y$1.styleAttrs[D.qname] = M, _$1[D.qname] = !0) : d$1(h$1, "Invalid initial value for '" + D.qname + "' on element '" + y$1.kind);
						}
					}
				}
				for (var z = 0; z < n$2.all.length; z++) {
					var O = n$2.all[z];
					if (O.qname in _$1 && null !== O.compute) {
						var P = O.compute(t$3, f$1, y$1, y$1.styleAttrs[O.qname], p$1);
						null !== P ? y$1.styleAttrs[O.qname] = P : (y$1.styleAttrs[O.qname] = O.compute(t$3, f$1, y$1, O.parse(O.initial), p$1), d$1(h$1, "Style '" + O.qname + "' on element '" + y$1.kind + "' cannot be computed"));
					}
				}
				if ("none" === y$1.styleAttrs[n$2.byName.display.qname]) return null;
				var L = null;
				null === f$1 ? L = null === c$1 ? [] : [c$1] : "contents" in m$1 && (L = m$1.contents);
				for (var F = 0; null !== L && F < L.length; F++) {
					var U = i$1(t$3, e$3, s$2, c$1, y$1, b$1, L[F], h$1, p$1);
					null !== U && y$1.contents.push(U.element);
				}
				for (var j in y$1.styleAttrs) if (y$1.styleAttrs.hasOwnProperty(j)) {
					var q = !1;
					if ("span" === y$1.kind) {
						var B = y$1.styleAttrs[n$2.byName.ruby.qname];
						(q = ("container" === B || "textContainer" === B || "baseContainer" === B) && -1 !== r$1.indexOf(j)) || (q = "container" !== B && j === n$2.byName.rubyAlign.qname), q || (q = !("textContainer" === B || "text" === B) && j === n$2.byName.rubyPosition.qname);
					}
					if (!q) {
						var G = n$2.byQName[j];
						"applies" in G && (q = -1 === G.applies.indexOf(y$1.kind));
					}
					q && delete y$1.styleAttrs[j];
				}
				var H = y$1.styleAttrs[n$2.byName.ruby.qname];
				if ("p" === y$1.kind || "span" === y$1.kind && ("textContainer" === H || "text" === H)) {
					var Y = [];
					l$1(y$1, Y), function(t$4) {
						for (var e$4, n$3 = 0; n$3 < t$4.length;) if ("br" !== (e$4 = t$4[n$3]).kind && "preserve" !== e$4.space) {
							var a$2 = e$4.text.replace(/[\t\r\n ]+/g, " ");
							/^[ ]/.test(a$2) && (0 === n$3 || "br" === (r$2 = t$4[n$3 - 1]).kind || /[\r\n\t ]$/.test(r$2.text)) && (a$2 = a$2.substring(1)), e$4.text = a$2, 0 === a$2.length ? t$4.splice(n$3, 1) : n$3++;
						} else n$3++;
						var r$2, i$2;
						for (n$3 = 0; n$3 < t$4.length; n$3++) "br" !== (e$4 = t$4[n$3]).kind && "preserve" !== e$4.space ? /[ ]$/.test(e$4.text) && (n$3 === t$4.length - 1 || "br" === (i$2 = t$4[n$3 + 1]).kind || "preserve" === i$2.space && /^[\r\n]/.test(i$2.text)) && (e$4.text = e$4.text.slice(0, -1)) : n$3++;
					}(Y), o$1(y$1);
				}
				return "div" === y$1.kind && n$2.byName.backgroundImage.qname in y$1.styleAttrs || "br" === y$1.kind || "image" === y$1.kind || "contents" in y$1 && y$1.contents.length > 0 || "span" === y$1.kind && null !== y$1.text || "region" === y$1.kind && "always" === y$1.styleAttrs[n$2.byName.showBackground.qname] ? {
					region_id: b$1,
					element: y$1
				} : null;
			}
			function l$1(t$3, e$3) {
				if ("contents" in t$3) for (var a$2 = 0; a$2 < t$3.contents.length; a$2++) {
					var r$2 = t$3.contents[a$2], i$2 = r$2.styleAttrs[n$2.byName.ruby.qname];
					("span" !== r$2.kind || "textContainer" !== i$2 && "text" !== i$2) && ("contents" in r$2 ? l$1(r$2, e$3) : ("span" === r$2.kind && 0 !== r$2.text.length || "br" === r$2.kind) && e$3.push(r$2));
				}
			}
			function o$1(t$3) {
				if ("br" === t$3.kind) return !1;
				if ("text" in t$3) return 0 === t$3.text.length;
				if ("contents" in t$3) {
					for (var e$3 = t$3.contents.length; e$3--;) o$1(t$3.contents[e$3]) && t$3.contents.splice(e$3, 1);
					return 0 === t$3.contents.length;
				}
			}
			function s$1(t$3) {
				this.contents = [], this.aspectRatio = t$3.aspectRatio, this.lang = t$3.lang;
			}
			function u$1(t$3) {
				for (var e$3 in this.kind = t$3.kind || "region", this.lang = t$3.lang, t$3.id && (this.id = t$3.id), this.styleAttrs = {}, t$3.styleAttrs) t$3.styleAttrs.hasOwnProperty(e$3) && (this.styleAttrs[e$3] = t$3.styleAttrs[e$3]);
				"src" in t$3 && (this.src = t$3.src), "type" in t$3 && (this.type = t$3.type), "text" in t$3 ? this.text = t$3.text : ("region" === this.kind || "contents" in t$3) && (this.contents = []), "space" in t$3 && (this.space = t$3.space);
			}
			function d$1(t$3, e$3) {
				if (t$3 && t$3.error && t$3.error(e$3)) throw e$3;
			}
		})(e$1, "undefined" == typeof imscNames ? n$1(977) : imscNames, "undefined" == typeof imscStyles ? n$1(1219) : imscStyles, "undefined" == typeof imscUtils ? n$1(6404) : imscUtils);
	},
	7640: function(t$1, e$1, n$1) {
		e$1.generateISD = n$1(8905).generateISD, e$1.fromXML = n$1(6739).fromXML, e$1.renderHTML = n$1(1612).render;
	},
	977: function(t$1, e$1) {
		(function(t$2) {
			t$2.ns_tt = "http://www.w3.org/ns/ttml", t$2.ns_tts = "http://www.w3.org/ns/ttml#styling", t$2.ns_ttp = "http://www.w3.org/ns/ttml#parameter", t$2.ns_xml = "http://www.w3.org/XML/1998/namespace", t$2.ns_itts = "http://www.w3.org/ns/ttml/profile/imsc1#styling", t$2.ns_ittp = "http://www.w3.org/ns/ttml/profile/imsc1#parameter", t$2.ns_smpte = "http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt", t$2.ns_ebutts = "urn:ebu:tt:style";
		})(e$1);
	},
	1219: function(t$1, e$1, n$1) {
		(function(t$2, e$2, n$2) {
			function a$1(t$3, e$3, n$3, a$2, r$2, i$2, l$1, o$1) {
				this.name = e$3, this.ns = t$3, this.qname = t$3 + " " + e$3, this.inherit = r$2, this.animatable = i$2, this.initial = n$3, this.applies = a$2, this.parse = l$1, this.compute = o$1;
			}
			for (var r$1 in t$2.all = [
				new a$1(e$2.ns_tts, "backgroundColor", "transparent", [
					"body",
					"div",
					"p",
					"region",
					"span"
				], !1, !0, n$2.parseColor, null),
				new a$1(e$2.ns_tts, "color", "white", ["span"], !0, !0, n$2.parseColor, null),
				new a$1(e$2.ns_tts, "direction", "ltr", ["p", "span"], !0, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "display", "auto", [
					"body",
					"div",
					"p",
					"region",
					"span"
				], !1, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "displayAlign", "before", ["region"], !1, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "extent", "auto", ["tt", "region"], !1, !0, (function(t$3) {
					if ("auto" === t$3) return t$3;
					var e$3 = t$3.split(" ");
					if (2 !== e$3.length) return null;
					var a$2 = n$2.parseLength(e$3[0]), r$2 = n$2.parseLength(e$3[1]);
					return r$2 && a$2 ? {
						h: r$2,
						w: a$2
					} : null;
				}), (function(t$3, e$3, a$2, r$2, i$2) {
					var l$1, o$1;
					if ("auto" === r$2) l$1 = new n$2.ComputedLength(0, 1);
					else if (null === (l$1 = n$2.toComputedLength(r$2.h.value, r$2.h.unit, null, t$3.dimensions.h, null, t$3.pxLength.h))) return null;
					if ("auto" === r$2) o$1 = new n$2.ComputedLength(1, 0);
					else if (null === (o$1 = n$2.toComputedLength(r$2.w.value, r$2.w.unit, null, t$3.dimensions.w, null, t$3.pxLength.w))) return null;
					return {
						h: l$1,
						w: o$1
					};
				})),
				new a$1(e$2.ns_tts, "fontFamily", "default", ["span", "p"], !0, !0, (function(t$3) {
					for (var e$3 = t$3.split(","), n$3 = [], a$2 = 0; a$2 < e$3.length; a$2++) e$3[a$2] = e$3[a$2].trim(), "'" !== e$3[a$2].charAt(0) && "\"" !== e$3[a$2].charAt(0) && "default" === e$3[a$2] ? n$3.push("monospaceSerif") : n$3.push(e$3[a$2]);
					return n$3;
				}), null),
				new a$1(e$2.ns_tts, "shear", "0%", ["p"], !0, !0, n$2.parseLength, (function(t$3, e$3, n$3, a$2) {
					return "%" !== a$2.unit ? null : Math.abs(a$2.value) > 100 ? 100 * Math.sign(a$2.value) : a$2.value;
				})),
				new a$1(e$2.ns_tts, "fontSize", "1c", ["span", "p"], !0, !0, n$2.parseLength, (function(e$3, a$2, r$2, i$2, l$1) {
					return n$2.toComputedLength(i$2.value, i$2.unit, null !== a$2 ? a$2.styleAttrs[t$2.byName.fontSize.qname] : e$3.cellLength.h, null !== a$2 ? a$2.styleAttrs[t$2.byName.fontSize.qname] : e$3.cellLength.h, e$3.cellLength.h, e$3.pxLength.h);
				})),
				new a$1(e$2.ns_tts, "fontStyle", "normal", ["span", "p"], !0, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "fontWeight", "normal", ["span", "p"], !0, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "lineHeight", "normal", ["p"], !0, !0, (function(t$3) {
					return "normal" === t$3 ? t$3 : n$2.parseLength(t$3);
				}), (function(e$3, a$2, r$2, i$2, l$1) {
					var o$1;
					if ("normal" === i$2) o$1 = i$2;
					else if (null === (o$1 = n$2.toComputedLength(i$2.value, i$2.unit, r$2.styleAttrs[t$2.byName.fontSize.qname], r$2.styleAttrs[t$2.byName.fontSize.qname], e$3.cellLength.h, e$3.pxLength.h))) return null;
					return o$1;
				})),
				new a$1(e$2.ns_tts, "opacity", 1, ["region"], !1, !0, parseFloat, null),
				new a$1(e$2.ns_tts, "origin", "auto", ["region"], !1, !0, (function(t$3) {
					if ("auto" === t$3) return t$3;
					var e$3 = t$3.split(" ");
					if (2 !== e$3.length) return null;
					var a$2 = n$2.parseLength(e$3[0]), r$2 = n$2.parseLength(e$3[1]);
					return r$2 && a$2 ? {
						h: r$2,
						w: a$2
					} : null;
				}), (function(t$3, e$3, a$2, r$2, i$2) {
					var l$1, o$1;
					if ("auto" === r$2) l$1 = new n$2.ComputedLength(0, 0);
					else if (null === (l$1 = n$2.toComputedLength(r$2.h.value, r$2.h.unit, null, t$3.dimensions.h, null, t$3.pxLength.h))) return null;
					if ("auto" === r$2) o$1 = new n$2.ComputedLength(0, 0);
					else if (null === (o$1 = n$2.toComputedLength(r$2.w.value, r$2.w.unit, null, t$3.dimensions.w, null, t$3.pxLength.w))) return null;
					return {
						h: l$1,
						w: o$1
					};
				})),
				new a$1(e$2.ns_tts, "overflow", "hidden", ["region"], !1, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "padding", "0px", ["region"], !1, !0, (function(t$3) {
					var e$3 = t$3.split(" ");
					if (e$3.length > 4) return null;
					for (var a$2 = [], r$2 = 0; r$2 < e$3.length; r$2++) {
						var i$2 = n$2.parseLength(e$3[r$2]);
						if (!i$2) return null;
						a$2.push(i$2);
					}
					return a$2;
				}), (function(e$3, a$2, r$2, i$2, l$1) {
					var o$1;
					if (1 === i$2.length) o$1 = [
						i$2[0],
						i$2[0],
						i$2[0],
						i$2[0]
					];
					else if (2 === i$2.length) o$1 = [
						i$2[0],
						i$2[1],
						i$2[0],
						i$2[1]
					];
					else if (3 === i$2.length) o$1 = [
						i$2[0],
						i$2[1],
						i$2[2],
						i$2[1]
					];
					else {
						if (4 !== i$2.length) return null;
						o$1 = [
							i$2[0],
							i$2[1],
							i$2[2],
							i$2[3]
						];
					}
					var s$1 = r$2.styleAttrs[t$2.byName.writingMode.qname];
					if ("lrtb" === s$1 || "lr" === s$1) o$1 = [
						o$1[0],
						o$1[3],
						o$1[2],
						o$1[1]
					];
					else if ("rltb" === s$1 || "rl" === s$1) o$1 = [
						o$1[0],
						o$1[1],
						o$1[2],
						o$1[3]
					];
					else if ("tblr" === s$1) o$1 = [
						o$1[3],
						o$1[0],
						o$1[1],
						o$1[2]
					];
					else {
						if ("tbrl" !== s$1 && "tb" !== s$1) return null;
						o$1 = [
							o$1[3],
							o$1[2],
							o$1[1],
							o$1[0]
						];
					}
					for (var u$1 = [], d$1 = 0; d$1 < o$1.length; d$1++) if (0 === o$1[d$1].value) u$1[d$1] = new n$2.ComputedLength(0, 0);
					else if (u$1[d$1] = n$2.toComputedLength(o$1[d$1].value, o$1[d$1].unit, r$2.styleAttrs[t$2.byName.fontSize.qname], 0 === d$1 || 2 === d$1 ? r$2.styleAttrs[t$2.byName.extent.qname].h : r$2.styleAttrs[t$2.byName.extent.qname].w, 0 === d$1 || 2 === d$1 ? e$3.cellLength.h : e$3.cellLength.w, 0 === d$1 || 2 === d$1 ? e$3.pxLength.h : e$3.pxLength.w), null === u$1[d$1]) return null;
					return u$1;
				})),
				new a$1(e$2.ns_tts, "position", "top left", ["region"], !1, !0, (function(t$3) {
					return n$2.parsePosition(t$3);
				}), (function(e$3, a$2, r$2, i$2) {
					var l$1, o$1;
					return null === (l$1 = n$2.toComputedLength(i$2.v.offset.value, i$2.v.offset.unit, null, new n$2.ComputedLength(-r$2.styleAttrs[t$2.byName.extent.qname].h.rw, e$3.dimensions.h.rh - r$2.styleAttrs[t$2.byName.extent.qname].h.rh), null, e$3.pxLength.h)) ? null : ("bottom" === i$2.v.edge && (l$1 = new n$2.ComputedLength(-l$1.rw - r$2.styleAttrs[t$2.byName.extent.qname].h.rw, e$3.dimensions.h.rh - l$1.rh - r$2.styleAttrs[t$2.byName.extent.qname].h.rh)), o$1 = n$2.toComputedLength(i$2.h.offset.value, i$2.h.offset.unit, null, new n$2.ComputedLength(e$3.dimensions.w.rw - r$2.styleAttrs[t$2.byName.extent.qname].w.rw, -r$2.styleAttrs[t$2.byName.extent.qname].w.rh), null, e$3.pxLength.w), null === l$1 ? null : ("right" === i$2.h.edge && (o$1 = new n$2.ComputedLength(e$3.dimensions.w.rw - o$1.rw - r$2.styleAttrs[t$2.byName.extent.qname].w.rw, -o$1.rh - r$2.styleAttrs[t$2.byName.extent.qname].w.rh)), {
						h: l$1,
						w: o$1
					}));
				})),
				new a$1(e$2.ns_tts, "ruby", "none", ["span"], !1, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "rubyAlign", "center", ["span"], !0, !0, (function(t$3) {
					return "center" !== t$3 && "spaceAround" !== t$3 ? null : t$3;
				}), null),
				new a$1(e$2.ns_tts, "rubyPosition", "outside", ["span"], !0, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "rubyReserve", "none", ["p"], !0, !0, (function(t$3) {
					var e$3 = t$3.split(" "), a$2 = [null, null];
					if (0 === e$3.length || e$3.length > 2) return null;
					if ("none" !== e$3[0] && "both" !== e$3[0] && "after" !== e$3[0] && "before" !== e$3[0] && "outside" !== e$3[0]) return null;
					if (a$2[0] = e$3[0], 2 === e$3.length && "none" !== e$3[0]) {
						var r$2 = n$2.parseLength(e$3[1]);
						if (!r$2) return null;
						a$2[1] = r$2;
					}
					return a$2;
				}), (function(e$3, a$2, r$2, i$2, l$1) {
					if ("none" === i$2[0]) return i$2;
					var o$1;
					return null === (o$1 = null === i$2[1] ? new n$2.ComputedLength(.5 * r$2.styleAttrs[t$2.byName.fontSize.qname].rw, .5 * r$2.styleAttrs[t$2.byName.fontSize.qname].rh) : n$2.toComputedLength(i$2[1].value, i$2[1].unit, r$2.styleAttrs[t$2.byName.fontSize.qname], r$2.styleAttrs[t$2.byName.fontSize.qname], e$3.cellLength.h, e$3.pxLength.h)) ? null : [i$2[0], o$1];
				})),
				new a$1(e$2.ns_tts, "showBackground", "always", ["region"], !1, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "textAlign", "start", ["p"], !0, !0, (function(t$3) {
					return t$3;
				}), (function(t$3, e$3, n$3, a$2, r$2) {
					return "left" === a$2 ? "start" : "right" === a$2 ? "end" : a$2;
				})),
				new a$1(e$2.ns_tts, "textCombine", "none", ["span"], !0, !0, (function(t$3) {
					return "none" === t$3 || "all" === t$3 ? t$3 : null;
				}), null),
				new a$1(e$2.ns_tts, "textDecoration", "none", ["span"], !0, !0, (function(t$3) {
					return t$3.split(" ");
				}), null),
				new a$1(e$2.ns_tts, "textEmphasis", "none", ["span"], !0, !0, (function(t$3) {
					for (var e$3 = t$3.split(" "), a$2 = {
						style: null,
						symbol: null,
						color: null,
						position: null
					}, r$2 = 0; r$2 < e$3.length; r$2++) if ("none" === e$3[r$2] || "auto" === e$3[r$2]) a$2.style = e$3[r$2];
					else if ("filled" === e$3[r$2] || "open" === e$3[r$2]) a$2.style = e$3[r$2];
					else if ("circle" === e$3[r$2] || "dot" === e$3[r$2] || "sesame" === e$3[r$2]) a$2.symbol = e$3[r$2];
					else if ("current" === e$3[r$2]) a$2.color = e$3[r$2];
					else if ("outside" === e$3[r$2] || "before" === e$3[r$2] || "after" === e$3[r$2]) a$2.position = e$3[r$2];
					else if (a$2.color = n$2.parseColor(e$3[r$2]), null === a$2.color) return null;
					return null == a$2.style && null == a$2.symbol ? a$2.style = "auto" : (a$2.symbol = a$2.symbol || "circle", a$2.style = a$2.style || "filled"), a$2.position = a$2.position || "outside", a$2.color = a$2.color || "current", a$2;
				}), null),
				new a$1(e$2.ns_tts, "textOutline", "none", ["span"], !0, !0, (function(t$3) {
					if ("none" === t$3) return t$3;
					var e$3 = {}, a$2 = t$3.split(" ");
					if (0 === a$2.length || a$2.length > 2) return null;
					var r$2 = n$2.parseColor(a$2[0]);
					if (e$3.color = r$2, null !== r$2 && a$2.shift(), 1 !== a$2.length) return null;
					var i$2 = n$2.parseLength(a$2[0]);
					return i$2 ? (e$3.thickness = i$2, e$3) : null;
				}), (function(e$3, a$2, r$2, i$2, l$1) {
					if ("none" === i$2) return i$2;
					var o$1 = {};
					return null === i$2.color ? o$1.color = r$2.styleAttrs[t$2.byName.color.qname] : o$1.color = i$2.color, o$1.thickness = n$2.toComputedLength(i$2.thickness.value, i$2.thickness.unit, r$2.styleAttrs[t$2.byName.fontSize.qname], r$2.styleAttrs[t$2.byName.fontSize.qname], e$3.cellLength.h, e$3.pxLength.h), null === o$1.thickness ? null : o$1;
				})),
				new a$1(e$2.ns_tts, "textShadow", "none", ["span"], !0, !0, n$2.parseTextShadow, (function(e$3, a$2, r$2, i$2) {
					if ("none" === i$2) return i$2;
					for (var l$1 = [], o$1 = 0; o$1 < i$2.length; o$1++) {
						var s$1 = {};
						if (s$1.x_off = n$2.toComputedLength(i$2[o$1][0].value, i$2[o$1][0].unit, null, r$2.styleAttrs[t$2.byName.fontSize.qname], null, e$3.pxLength.w), null === s$1.x_off) return null;
						if (s$1.y_off = n$2.toComputedLength(i$2[o$1][1].value, i$2[o$1][1].unit, null, r$2.styleAttrs[t$2.byName.fontSize.qname], null, e$3.pxLength.h), null === s$1.y_off) return null;
						if (null === i$2[o$1][2]) s$1.b_radius = 0;
						else if (s$1.b_radius = n$2.toComputedLength(i$2[o$1][2].value, i$2[o$1][2].unit, null, r$2.styleAttrs[t$2.byName.fontSize.qname], null, e$3.pxLength.h), null === s$1.b_radius) return null;
						null === i$2[o$1][3] ? s$1.color = r$2.styleAttrs[t$2.byName.color.qname] : s$1.color = i$2[o$1][3], l$1.push(s$1);
					}
					return l$1;
				})),
				new a$1(e$2.ns_tts, "unicodeBidi", "normal", ["span", "p"], !1, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "visibility", "visible", [
					"body",
					"div",
					"p",
					"region",
					"span"
				], !0, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "wrapOption", "wrap", ["span"], !0, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "writingMode", "lrtb", ["region"], !1, !0, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_tts, "zIndex", "auto", ["region"], !1, !0, (function(t$3) {
					var e$3;
					return "auto" === t$3 ? e$3 = t$3 : (e$3 = parseInt(t$3), isNaN(e$3) && (e$3 = null)), e$3;
				}), null),
				new a$1(e$2.ns_ebutts, "linePadding", "0c", ["p"], !0, !1, n$2.parseLength, (function(t$3, e$3, a$2, r$2, i$2) {
					return n$2.toComputedLength(r$2.value, r$2.unit, null, null, t$3.cellLength.w, null);
				})),
				new a$1(e$2.ns_ebutts, "multiRowAlign", "auto", ["p"], !0, !1, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_smpte, "backgroundImage", null, ["div"], !1, !1, (function(t$3) {
					return t$3;
				}), null),
				new a$1(e$2.ns_itts, "forcedDisplay", "false", [
					"body",
					"div",
					"p",
					"region",
					"span"
				], !0, !0, (function(t$3) {
					return "true" === t$3;
				}), null),
				new a$1(e$2.ns_itts, "fillLineGap", "false", ["p"], !0, !0, (function(t$3) {
					return "true" === t$3;
				}), null)
			], t$2.byQName = {}, t$2.all) t$2.byQName[t$2.all[r$1].qname] = t$2.all[r$1];
			for (var i$1 in t$2.byName = {}, t$2.all) t$2.byName[t$2.all[i$1].name] = t$2.all[i$1];
		})(e$1, "undefined" == typeof imscNames ? n$1(977) : imscNames, "undefined" == typeof imscUtils ? n$1(6404) : imscUtils);
	},
	6404: function(t$1, e$1) {
		(function(t$2) {
			var e$2 = /#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?/, n$1 = /rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/, a$1 = /rgba\(\s*(\d+),\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/, r$1 = {
				transparent: [
					0,
					0,
					0,
					0
				],
				black: [
					0,
					0,
					0,
					255
				],
				silver: [
					192,
					192,
					192,
					255
				],
				gray: [
					128,
					128,
					128,
					255
				],
				white: [
					255,
					255,
					255,
					255
				],
				maroon: [
					128,
					0,
					0,
					255
				],
				red: [
					255,
					0,
					0,
					255
				],
				purple: [
					128,
					0,
					128,
					255
				],
				fuchsia: [
					255,
					0,
					255,
					255
				],
				magenta: [
					255,
					0,
					255,
					255
				],
				green: [
					0,
					128,
					0,
					255
				],
				lime: [
					0,
					255,
					0,
					255
				],
				olive: [
					128,
					128,
					0,
					255
				],
				yellow: [
					255,
					255,
					0,
					255
				],
				navy: [
					0,
					0,
					128,
					255
				],
				blue: [
					0,
					0,
					255,
					255
				],
				teal: [
					0,
					128,
					128,
					255
				],
				aqua: [
					0,
					255,
					255,
					255
				],
				cyan: [
					0,
					255,
					255,
					255
				]
			};
			t$2.parseColor = function(t$3) {
				var i$2, l$1 = null, o$1 = r$1[t$3.toLowerCase()];
				return void 0 !== o$1 ? l$1 = o$1 : null !== (i$2 = e$2.exec(t$3)) ? l$1 = [
					parseInt(i$2[1], 16),
					parseInt(i$2[2], 16),
					parseInt(i$2[3], 16),
					void 0 !== i$2[4] ? parseInt(i$2[4], 16) : 255
				] : null !== (i$2 = n$1.exec(t$3)) ? l$1 = [
					parseInt(i$2[1]),
					parseInt(i$2[2]),
					parseInt(i$2[3]),
					255
				] : null !== (i$2 = a$1.exec(t$3)) && (l$1 = [
					parseInt(i$2[1]),
					parseInt(i$2[2]),
					parseInt(i$2[3]),
					parseInt(i$2[4])
				]), l$1;
			};
			var i$1 = /^((?:\+|\-)?\d*(?:\.\d+)?)(px|em|c|%|rh|rw)$/;
			t$2.parseLength = function(t$3) {
				var e$3, n$2 = null;
				return null !== (e$3 = i$1.exec(t$3)) && (n$2 = {
					value: parseFloat(e$3[1]),
					unit: e$3[2]
				}), n$2;
			}, t$2.parseTextShadow = function(e$3) {
				for (var n$2 = e$3.match(/([^\(,\)]|\([^\)]+\))+/g), a$2 = [], r$2 = 0; r$2 < n$2.length; r$2++) {
					var i$2 = n$2[r$2].split(" ");
					if (1 === i$2.length && "none" === i$2[0]) return "none";
					if (i$2.length > 1 && i$2.length < 5) {
						var l$1 = [
							null,
							null,
							null,
							null
						], o$1 = t$2.parseLength(i$2.shift());
						if (null === o$1) return null;
						if (l$1[0] = o$1, null === (o$1 = t$2.parseLength(i$2.shift()))) return null;
						if (l$1[1] = o$1, 0 === i$2.length) {
							a$2.push(l$1);
							continue;
						}
						if (null !== (o$1 = t$2.parseLength(i$2[0])) && (l$1[2] = o$1, i$2.shift()), 0 === i$2.length) {
							a$2.push(l$1);
							continue;
						}
						var s$1 = t$2.parseColor(i$2[0]);
						if (null === s$1) return null;
						l$1[3] = s$1, a$2.push(l$1);
					}
				}
				return a$2;
			}, t$2.parsePosition = function(e$3) {
				var n$2 = e$3.split(" "), a$2 = function(t$3) {
					return "center" === t$3 || "left" === t$3 || "top" === t$3 || "bottom" === t$3 || "right" === t$3;
				};
				if (n$2.length > 4) return null;
				for (var r$2 = 0; r$2 < n$2.length; r$2++) if (!a$2(n$2[r$2])) {
					var i$2 = t$2.parseLength(n$2[r$2]);
					if (null === i$2) return null;
					n$2[r$2] = i$2;
				}
				for (var l$1 = {
					h: {
						edge: "left",
						offset: {
							value: 50,
							unit: "%"
						}
					},
					v: {
						edge: "top",
						offset: {
							value: 50,
							unit: "%"
						}
					}
				}, o$1 = 0; o$1 < n$2.length;) {
					var s$1 = n$2[o$1++];
					if (a$2(s$1)) {
						var u$1 = {
							value: 0,
							unit: "%"
						};
						2 !== n$2.length && o$1 < n$2.length && !a$2(n$2[o$1]) && (u$1 = n$2[o$1++]), "right" === s$1 ? (l$1.h.edge = s$1, l$1.h.offset = u$1) : "bottom" === s$1 ? (l$1.v.edge = s$1, l$1.v.offset = u$1) : "left" === s$1 ? l$1.h.offset = u$1 : "top" === s$1 && (l$1.v.offset = u$1);
					} else {
						if (1 !== n$2.length && 2 !== n$2.length) return null;
						1 === o$1 ? l$1.h.offset = s$1 : l$1.v.offset = s$1;
					}
				}
				return l$1;
			}, t$2.ComputedLength = function(t$3, e$3) {
				this.rw = t$3, this.rh = e$3;
			}, t$2.ComputedLength.prototype.toUsedLength = function(t$3, e$3) {
				return t$3 * this.rw + e$3 * this.rh;
			}, t$2.ComputedLength.prototype.isZero = function() {
				return 0 === this.rw && 0 === this.rh;
			}, t$2.toComputedLength = function(e$3, n$2, a$2, r$2, i$2, l$1) {
				return "%" === n$2 && r$2 ? new t$2.ComputedLength(r$2.rw * e$3 / 100, r$2.rh * e$3 / 100) : "em" === n$2 && a$2 ? new t$2.ComputedLength(a$2.rw * e$3, a$2.rh * e$3) : "c" === n$2 && i$2 ? new t$2.ComputedLength(e$3 * i$2.rw, e$3 * i$2.rh) : "px" === n$2 && l$1 ? new t$2.ComputedLength(e$3 * l$1.rw, e$3 * l$1.rh) : "rh" === n$2 ? new t$2.ComputedLength(0, e$3 / 100) : "rw" === n$2 ? new t$2.ComputedLength(e$3 / 100, 0) : null;
			};
		})(e$1);
	},
	7523: function(t$1) {
		"function" == typeof Object.create ? t$1.exports = function(t$2, e$1) {
			e$1 && (t$2.super_ = e$1, t$2.prototype = Object.create(e$1.prototype, { constructor: {
				value: t$2,
				enumerable: !1,
				writable: !0,
				configurable: !0
			} }));
		} : t$1.exports = function(t$2, e$1) {
			if (e$1) {
				t$2.super_ = e$1;
				var n$1 = function() {};
				n$1.prototype = e$1.prototype, t$2.prototype = new n$1(), t$2.prototype.constructor = t$2;
			}
		};
	},
	3282: function(t$1) {
		function e$1(t$2) {
			if ("string" != typeof t$2) throw new TypeError("Path must be a string. Received " + JSON.stringify(t$2));
		}
		function n$1(t$2, e$2) {
			for (var n$2, a$2 = "", r$1 = 0, i$1 = -1, l$1 = 0, o$1 = 0; o$1 <= t$2.length; ++o$1) {
				if (o$1 < t$2.length) n$2 = t$2.charCodeAt(o$1);
				else {
					if (47 === n$2) break;
					n$2 = 47;
				}
				if (47 === n$2) {
					if (i$1 === o$1 - 1 || 1 === l$1);
					else if (i$1 !== o$1 - 1 && 2 === l$1) {
						if (a$2.length < 2 || 2 !== r$1 || 46 !== a$2.charCodeAt(a$2.length - 1) || 46 !== a$2.charCodeAt(a$2.length - 2)) {
							if (a$2.length > 2) {
								var s$1 = a$2.lastIndexOf("/");
								if (s$1 !== a$2.length - 1) {
									-1 === s$1 ? (a$2 = "", r$1 = 0) : r$1 = (a$2 = a$2.slice(0, s$1)).length - 1 - a$2.lastIndexOf("/"), i$1 = o$1, l$1 = 0;
									continue;
								}
							} else if (2 === a$2.length || 1 === a$2.length) {
								a$2 = "", r$1 = 0, i$1 = o$1, l$1 = 0;
								continue;
							}
						}
						e$2 && (a$2.length > 0 ? a$2 += "/.." : a$2 = "..", r$1 = 2);
					} else a$2.length > 0 ? a$2 += "/" + t$2.slice(i$1 + 1, o$1) : a$2 = t$2.slice(i$1 + 1, o$1), r$1 = o$1 - i$1 - 1;
					i$1 = o$1, l$1 = 0;
				} else 46 === n$2 && -1 !== l$1 ? ++l$1 : l$1 = -1;
			}
			return a$2;
		}
		var a$1 = {
			resolve: function() {
				for (var t$2, a$2 = "", r$1 = !1, i$1 = arguments.length - 1; i$1 >= -1 && !r$1; i$1--) {
					var l$1;
					i$1 >= 0 ? l$1 = arguments[i$1] : (void 0 === t$2 && (t$2 = process.cwd()), l$1 = t$2), e$1(l$1), 0 !== l$1.length && (a$2 = l$1 + "/" + a$2, r$1 = 47 === l$1.charCodeAt(0));
				}
				return a$2 = n$1(a$2, !r$1), r$1 ? a$2.length > 0 ? "/" + a$2 : "/" : a$2.length > 0 ? a$2 : ".";
			},
			normalize: function(t$2) {
				if (e$1(t$2), 0 === t$2.length) return ".";
				var a$2 = 47 === t$2.charCodeAt(0), r$1 = 47 === t$2.charCodeAt(t$2.length - 1);
				return 0 !== (t$2 = n$1(t$2, !a$2)).length || a$2 || (t$2 = "."), t$2.length > 0 && r$1 && (t$2 += "/"), a$2 ? "/" + t$2 : t$2;
			},
			isAbsolute: function(t$2) {
				return e$1(t$2), t$2.length > 0 && 47 === t$2.charCodeAt(0);
			},
			join: function() {
				if (0 === arguments.length) return ".";
				for (var t$2, n$2 = 0; n$2 < arguments.length; ++n$2) {
					var r$1 = arguments[n$2];
					e$1(r$1), r$1.length > 0 && (void 0 === t$2 ? t$2 = r$1 : t$2 += "/" + r$1);
				}
				return void 0 === t$2 ? "." : a$1.normalize(t$2);
			},
			relative: function(t$2, n$2) {
				if (e$1(t$2), e$1(n$2), t$2 === n$2) return "";
				if ((t$2 = a$1.resolve(t$2)) === (n$2 = a$1.resolve(n$2))) return "";
				for (var r$1 = 1; r$1 < t$2.length && 47 === t$2.charCodeAt(r$1); ++r$1);
				for (var i$1 = t$2.length, l$1 = i$1 - r$1, o$1 = 1; o$1 < n$2.length && 47 === n$2.charCodeAt(o$1); ++o$1);
				for (var s$1 = n$2.length - o$1, u$1 = l$1 < s$1 ? l$1 : s$1, d$1 = -1, c$1 = 0; c$1 <= u$1; ++c$1) {
					if (c$1 === u$1) {
						if (s$1 > u$1) {
							if (47 === n$2.charCodeAt(o$1 + c$1)) return n$2.slice(o$1 + c$1 + 1);
							if (0 === c$1) return n$2.slice(o$1 + c$1);
						} else l$1 > u$1 && (47 === t$2.charCodeAt(r$1 + c$1) ? d$1 = c$1 : 0 === c$1 && (d$1 = 0));
						break;
					}
					var f$1 = t$2.charCodeAt(r$1 + c$1);
					if (f$1 !== n$2.charCodeAt(o$1 + c$1)) break;
					47 === f$1 && (d$1 = c$1);
				}
				var g$1 = "";
				for (c$1 = r$1 + d$1 + 1; c$1 <= i$1; ++c$1) c$1 !== i$1 && 47 !== t$2.charCodeAt(c$1) || (0 === g$1.length ? g$1 += ".." : g$1 += "/..");
				return g$1.length > 0 ? g$1 + n$2.slice(o$1 + d$1) : (o$1 += d$1, 47 === n$2.charCodeAt(o$1) && ++o$1, n$2.slice(o$1));
			},
			_makeLong: function(t$2) {
				return t$2;
			},
			dirname: function(t$2) {
				if (e$1(t$2), 0 === t$2.length) return ".";
				for (var n$2 = t$2.charCodeAt(0), a$2 = 47 === n$2, r$1 = -1, i$1 = !0, l$1 = t$2.length - 1; l$1 >= 1; --l$1) if (47 === (n$2 = t$2.charCodeAt(l$1))) {
					if (!i$1) {
						r$1 = l$1;
						break;
					}
				} else i$1 = !1;
				return -1 === r$1 ? a$2 ? "/" : "." : a$2 && 1 === r$1 ? "//" : t$2.slice(0, r$1);
			},
			basename: function(t$2, n$2) {
				if (void 0 !== n$2 && "string" != typeof n$2) throw new TypeError("\"ext\" argument must be a string");
				e$1(t$2);
				var a$2, r$1 = 0, i$1 = -1, l$1 = !0;
				if (void 0 !== n$2 && n$2.length > 0 && n$2.length <= t$2.length) {
					if (n$2.length === t$2.length && n$2 === t$2) return "";
					var o$1 = n$2.length - 1, s$1 = -1;
					for (a$2 = t$2.length - 1; a$2 >= 0; --a$2) {
						var u$1 = t$2.charCodeAt(a$2);
						if (47 === u$1) {
							if (!l$1) {
								r$1 = a$2 + 1;
								break;
							}
						} else -1 === s$1 && (l$1 = !1, s$1 = a$2 + 1), o$1 >= 0 && (u$1 === n$2.charCodeAt(o$1) ? -1 == --o$1 && (i$1 = a$2) : (o$1 = -1, i$1 = s$1));
					}
					return r$1 === i$1 ? i$1 = s$1 : -1 === i$1 && (i$1 = t$2.length), t$2.slice(r$1, i$1);
				}
				for (a$2 = t$2.length - 1; a$2 >= 0; --a$2) if (47 === t$2.charCodeAt(a$2)) {
					if (!l$1) {
						r$1 = a$2 + 1;
						break;
					}
				} else -1 === i$1 && (l$1 = !1, i$1 = a$2 + 1);
				return -1 === i$1 ? "" : t$2.slice(r$1, i$1);
			},
			extname: function(t$2) {
				e$1(t$2);
				for (var n$2 = -1, a$2 = 0, r$1 = -1, i$1 = !0, l$1 = 0, o$1 = t$2.length - 1; o$1 >= 0; --o$1) {
					var s$1 = t$2.charCodeAt(o$1);
					if (47 !== s$1) -1 === r$1 && (i$1 = !1, r$1 = o$1 + 1), 46 === s$1 ? -1 === n$2 ? n$2 = o$1 : 1 !== l$1 && (l$1 = 1) : -1 !== n$2 && (l$1 = -1);
					else if (!i$1) {
						a$2 = o$1 + 1;
						break;
					}
				}
				return -1 === n$2 || -1 === r$1 || 0 === l$1 || 1 === l$1 && n$2 === r$1 - 1 && n$2 === a$2 + 1 ? "" : t$2.slice(n$2, r$1);
			},
			format: function(t$2) {
				if (null === t$2 || "object" != typeof t$2) throw new TypeError("The \"pathObject\" argument must be of type Object. Received type " + typeof t$2);
				return function(t$3, e$2) {
					var n$2 = e$2.dir || e$2.root, a$2 = e$2.base || (e$2.name || "") + (e$2.ext || "");
					return n$2 ? n$2 === e$2.root ? n$2 + a$2 : n$2 + "/" + a$2 : a$2;
				}(0, t$2);
			},
			parse: function(t$2) {
				e$1(t$2);
				var n$2 = {
					root: "",
					dir: "",
					base: "",
					ext: "",
					name: ""
				};
				if (0 === t$2.length) return n$2;
				var a$2, r$1 = t$2.charCodeAt(0), i$1 = 47 === r$1;
				i$1 ? (n$2.root = "/", a$2 = 1) : a$2 = 0;
				for (var l$1 = -1, o$1 = 0, s$1 = -1, u$1 = !0, d$1 = t$2.length - 1, c$1 = 0; d$1 >= a$2; --d$1) if (47 !== (r$1 = t$2.charCodeAt(d$1))) -1 === s$1 && (u$1 = !1, s$1 = d$1 + 1), 46 === r$1 ? -1 === l$1 ? l$1 = d$1 : 1 !== c$1 && (c$1 = 1) : -1 !== l$1 && (c$1 = -1);
				else if (!u$1) {
					o$1 = d$1 + 1;
					break;
				}
				return -1 === l$1 || -1 === s$1 || 0 === c$1 || 1 === c$1 && l$1 === s$1 - 1 && l$1 === o$1 + 1 ? -1 !== s$1 && (n$2.base = n$2.name = 0 === o$1 && i$1 ? t$2.slice(1, s$1) : t$2.slice(o$1, s$1)) : (0 === o$1 && i$1 ? (n$2.name = t$2.slice(1, l$1), n$2.base = t$2.slice(1, s$1)) : (n$2.name = t$2.slice(o$1, l$1), n$2.base = t$2.slice(o$1, s$1)), n$2.ext = t$2.slice(l$1, s$1)), o$1 > 0 ? n$2.dir = t$2.slice(0, o$1 - 1) : i$1 && (n$2.dir = "/"), n$2;
			},
			sep: "/",
			delimiter: ":",
			win32: null,
			posix: null
		};
		a$1.posix = a$1, t$1.exports = a$1;
	},
	3515: function(t$1, e$1, n$1) {
		t$1.exports = r$1;
		var a$1 = n$1(9826).EventEmitter;
		function r$1() {
			a$1.call(this);
		}
		n$1(7523)(r$1, a$1), r$1.Readable = n$1(2762), r$1.Writable = n$1(3726), r$1.Duplex = n$1(884), r$1.Transform = n$1(6756), r$1.PassThrough = n$1(1390), r$1.finished = n$1(2896), r$1.pipeline = n$1(8460), r$1.Stream = r$1, r$1.prototype.pipe = function(t$2, e$2) {
			var n$2 = this;
			function r$2(e$3) {
				t$2.writable && !1 === t$2.write(e$3) && n$2.pause && n$2.pause();
			}
			function i$1() {
				n$2.readable && n$2.resume && n$2.resume();
			}
			n$2.on("data", r$2), t$2.on("drain", i$1), t$2._isStdio || e$2 && !1 === e$2.end || (n$2.on("end", o$1), n$2.on("close", s$1));
			var l$1 = !1;
			function o$1() {
				l$1 || (l$1 = !0, t$2.end());
			}
			function s$1() {
				l$1 || (l$1 = !0, "function" == typeof t$2.destroy && t$2.destroy());
			}
			function u$1(t$3) {
				if (d$1(), 0 === a$1.listenerCount(this, "error")) throw t$3;
			}
			function d$1() {
				n$2.removeListener("data", r$2), t$2.removeListener("drain", i$1), n$2.removeListener("end", o$1), n$2.removeListener("close", s$1), n$2.removeListener("error", u$1), t$2.removeListener("error", u$1), n$2.removeListener("end", d$1), n$2.removeListener("close", d$1), t$2.removeListener("close", d$1);
			}
			return n$2.on("error", u$1), t$2.on("error", u$1), n$2.on("end", d$1), n$2.on("close", d$1), t$2.on("close", d$1), t$2.emit("pipe", n$2), t$2;
		};
	},
	1602: function(t$1) {
		var e$1 = {};
		function n$1(t$2, n$2, a$2) {
			a$2 || (a$2 = Error);
			var r$1 = function(t$3) {
				var e$2, a$3;
				function r$2(e$3, a$4, r$3) {
					return t$3.call(this, function(t$4, e$4, a$5) {
						return "string" == typeof n$2 ? n$2 : n$2(t$4, e$4, a$5);
					}(e$3, a$4, r$3)) || this;
				}
				return a$3 = t$3, (e$2 = r$2).prototype = Object.create(a$3.prototype), e$2.prototype.constructor = e$2, e$2.__proto__ = a$3, r$2;
			}(a$2);
			r$1.prototype.name = a$2.name, r$1.prototype.code = t$2, e$1[t$2] = r$1;
		}
		function a$1(t$2, e$2) {
			if (Array.isArray(t$2)) {
				var n$2 = t$2.length;
				return t$2 = t$2.map((function(t$3) {
					return String(t$3);
				})), n$2 > 2 ? "one of ".concat(e$2, " ").concat(t$2.slice(0, n$2 - 1).join(", "), ", or ") + t$2[n$2 - 1] : 2 === n$2 ? "one of ".concat(e$2, " ").concat(t$2[0], " or ").concat(t$2[1]) : "of ".concat(e$2, " ").concat(t$2[0]);
			}
			return "of ".concat(e$2, " ").concat(String(t$2));
		}
		n$1("ERR_INVALID_OPT_VALUE", (function(t$2, e$2) {
			return "The value \"" + e$2 + "\" is invalid for option \"" + t$2 + "\"";
		}), TypeError), n$1("ERR_INVALID_ARG_TYPE", (function(t$2, e$2, n$2) {
			var r$1, i$1, l$1, o$1, s$1;
			if ("string" == typeof e$2 && (i$1 = "not ", e$2.substr(0, 4) === i$1) ? (r$1 = "must not be", e$2 = e$2.replace(/^not /, "")) : r$1 = "must be", function(t$3, e$3, n$3) {
				return (void 0 === n$3 || n$3 > t$3.length) && (n$3 = t$3.length), t$3.substring(n$3 - 9, n$3) === e$3;
			}(t$2, " argument")) l$1 = "The ".concat(t$2, " ").concat(r$1, " ").concat(a$1(e$2, "type"));
			else {
				var u$1 = ("number" != typeof s$1 && (s$1 = 0), s$1 + 1 > (o$1 = t$2).length || -1 === o$1.indexOf(".", s$1) ? "argument" : "property");
				l$1 = "The \"".concat(t$2, "\" ").concat(u$1, " ").concat(r$1, " ").concat(a$1(e$2, "type"));
			}
			return l$1 + ". Received type ".concat(typeof n$2);
		}), TypeError), n$1("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), n$1("ERR_METHOD_NOT_IMPLEMENTED", (function(t$2) {
			return "The " + t$2 + " method is not implemented";
		})), n$1("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), n$1("ERR_STREAM_DESTROYED", (function(t$2) {
			return "Cannot call " + t$2 + " after a stream was destroyed";
		})), n$1("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), n$1("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), n$1("ERR_STREAM_WRITE_AFTER_END", "write after end"), n$1("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), n$1("ERR_UNKNOWN_ENCODING", (function(t$2) {
			return "Unknown encoding: " + t$2;
		}), TypeError), n$1("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t$1.exports.codes = e$1;
	},
	884: function(t$1, e$1, n$1) {
		var a$1 = Object.keys || function(t$2) {
			var e$2 = [];
			for (var n$2 in t$2) e$2.push(n$2);
			return e$2;
		};
		t$1.exports = u$1;
		var r$1 = n$1(2762), i$1 = n$1(3726);
		n$1(7523)(u$1, r$1);
		for (var l$1 = a$1(i$1.prototype), o$1 = 0; o$1 < l$1.length; o$1++) {
			var s$1 = l$1[o$1];
			u$1.prototype[s$1] || (u$1.prototype[s$1] = i$1.prototype[s$1]);
		}
		function u$1(t$2) {
			if (!(this instanceof u$1)) return new u$1(t$2);
			r$1.call(this, t$2), i$1.call(this, t$2), this.allowHalfOpen = !0, t$2 && (!1 === t$2.readable && (this.readable = !1), !1 === t$2.writable && (this.writable = !1), !1 === t$2.allowHalfOpen && (this.allowHalfOpen = !1, this.once("end", d$1)));
		}
		function d$1() {
			this._writableState.ended || process.nextTick(c$1, this);
		}
		function c$1(t$2) {
			t$2.end();
		}
		Object.defineProperty(u$1.prototype, "writableHighWaterMark", {
			enumerable: !1,
			get: function() {
				return this._writableState.highWaterMark;
			}
		}), Object.defineProperty(u$1.prototype, "writableBuffer", {
			enumerable: !1,
			get: function() {
				return this._writableState && this._writableState.getBuffer();
			}
		}), Object.defineProperty(u$1.prototype, "writableLength", {
			enumerable: !1,
			get: function() {
				return this._writableState.length;
			}
		}), Object.defineProperty(u$1.prototype, "destroyed", {
			enumerable: !1,
			get: function() {
				return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
			},
			set: function(t$2) {
				void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t$2, this._writableState.destroyed = t$2);
			}
		});
	},
	1390: function(t$1, e$1, n$1) {
		t$1.exports = r$1;
		var a$1 = n$1(6756);
		function r$1(t$2) {
			if (!(this instanceof r$1)) return new r$1(t$2);
			a$1.call(this, t$2);
		}
		n$1(7523)(r$1, a$1), r$1.prototype._transform = function(t$2, e$2, n$2) {
			n$2(null, t$2);
		};
	},
	2762: function(t$1, e$1, n$1) {
		var a$1;
		t$1.exports = S$1, S$1.ReadableState = w$1, n$1(9826).EventEmitter;
		var r$1, i$1 = function(t$2, e$2) {
			return t$2.listeners(e$2).length;
		}, l$1 = n$1(2611), o$1 = n$1(44).Buffer, s$1 = (void 0 !== n$1.g ? n$1.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, u$1 = n$1(7199);
		r$1 = u$1 && u$1.debuglog ? u$1.debuglog("stream") : function() {};
		var d$1, c$1, f$1, g$1 = n$1(3791), m$1 = n$1(2410), h$1 = n$1(1749).getHighWaterMark, p$1 = n$1(1602).codes, b$1 = p$1.ERR_INVALID_ARG_TYPE, y$1 = p$1.ERR_STREAM_PUSH_AFTER_EOF, E$1 = p$1.ERR_METHOD_NOT_IMPLEMENTED, _$1 = p$1.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
		n$1(7523)(S$1, l$1);
		var T$1 = m$1.errorOrDestroy, v$1 = [
			"error",
			"close",
			"destroy",
			"pause",
			"resume"
		];
		function w$1(t$2, e$2, r$2) {
			a$1 = a$1 || n$1(884), t$2 = t$2 || {}, "boolean" != typeof r$2 && (r$2 = e$2 instanceof a$1), this.objectMode = !!t$2.objectMode, r$2 && (this.objectMode = this.objectMode || !!t$2.readableObjectMode), this.highWaterMark = h$1(this, t$2, "readableHighWaterMark", r$2), this.buffer = new g$1(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = !1 !== t$2.emitClose, this.autoDestroy = !!t$2.autoDestroy, this.destroyed = !1, this.defaultEncoding = t$2.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t$2.encoding && (d$1 || (d$1 = n$1(748).StringDecoder), this.decoder = new d$1(t$2.encoding), this.encoding = t$2.encoding);
		}
		function S$1(t$2) {
			if (a$1 = a$1 || n$1(884), !(this instanceof S$1)) return new S$1(t$2);
			var e$2 = this instanceof a$1;
			this._readableState = new w$1(t$2, this, e$2), this.readable = !0, t$2 && ("function" == typeof t$2.read && (this._read = t$2.read), "function" == typeof t$2.destroy && (this._destroy = t$2.destroy)), l$1.call(this);
		}
		function I(t$2, e$2, n$2, a$2, i$2) {
			r$1("readableAddChunk", e$2);
			var l$2, u$2 = t$2._readableState;
			if (null === e$2) u$2.reading = !1, function(t$3, e$3) {
				if (r$1("onEofChunk"), !e$3.ended) {
					if (e$3.decoder) {
						var n$3 = e$3.decoder.end();
						n$3 && n$3.length && (e$3.buffer.push(n$3), e$3.length += e$3.objectMode ? 1 : n$3.length);
					}
					e$3.ended = !0, e$3.sync ? N(t$3) : (e$3.needReadable = !1, e$3.emittedReadable || (e$3.emittedReadable = !0, C(t$3)));
				}
			}(t$2, u$2);
			else if (i$2 || (l$2 = function(t$3, e$3) {
				var n$3, a$3;
				return a$3 = e$3, o$1.isBuffer(a$3) || a$3 instanceof s$1 || "string" == typeof e$3 || void 0 === e$3 || t$3.objectMode || (n$3 = new b$1("chunk", [
					"string",
					"Buffer",
					"Uint8Array"
				], e$3)), n$3;
			}(u$2, e$2)), l$2) T$1(t$2, l$2);
			else if (u$2.objectMode || e$2 && e$2.length > 0) if ("string" == typeof e$2 || u$2.objectMode || Object.getPrototypeOf(e$2) === o$1.prototype || (e$2 = function(t$3) {
				return o$1.from(t$3);
			}(e$2)), a$2) u$2.endEmitted ? T$1(t$2, new _$1()) : k(t$2, u$2, e$2, !0);
			else if (u$2.ended) T$1(t$2, new y$1());
			else {
				if (u$2.destroyed) return !1;
				u$2.reading = !1, u$2.decoder && !n$2 ? (e$2 = u$2.decoder.write(e$2), u$2.objectMode || 0 !== e$2.length ? k(t$2, u$2, e$2, !1) : D(t$2, u$2)) : k(t$2, u$2, e$2, !1);
			}
			else a$2 || (u$2.reading = !1, D(t$2, u$2));
			return !u$2.ended && (u$2.length < u$2.highWaterMark || 0 === u$2.length);
		}
		function k(t$2, e$2, n$2, a$2) {
			e$2.flowing && 0 === e$2.length && !e$2.sync ? (e$2.awaitDrain = 0, t$2.emit("data", n$2)) : (e$2.length += e$2.objectMode ? 1 : n$2.length, a$2 ? e$2.buffer.unshift(n$2) : e$2.buffer.push(n$2), e$2.needReadable && N(t$2)), D(t$2, e$2);
		}
		Object.defineProperty(S$1.prototype, "destroyed", {
			enumerable: !1,
			get: function() {
				return void 0 !== this._readableState && this._readableState.destroyed;
			},
			set: function(t$2) {
				this._readableState && (this._readableState.destroyed = t$2);
			}
		}), S$1.prototype.destroy = m$1.destroy, S$1.prototype._undestroy = m$1.undestroy, S$1.prototype._destroy = function(t$2, e$2) {
			e$2(t$2);
		}, S$1.prototype.push = function(t$2, e$2) {
			var n$2, a$2 = this._readableState;
			return a$2.objectMode ? n$2 = !0 : "string" == typeof t$2 && ((e$2 = e$2 || a$2.defaultEncoding) !== a$2.encoding && (t$2 = o$1.from(t$2, e$2), e$2 = ""), n$2 = !0), I(this, t$2, e$2, !1, n$2);
		}, S$1.prototype.unshift = function(t$2) {
			return I(this, t$2, null, !0, !1);
		}, S$1.prototype.isPaused = function() {
			return !1 === this._readableState.flowing;
		}, S$1.prototype.setEncoding = function(t$2) {
			d$1 || (d$1 = n$1(748).StringDecoder);
			var e$2 = new d$1(t$2);
			this._readableState.decoder = e$2, this._readableState.encoding = this._readableState.decoder.encoding;
			for (var a$2 = this._readableState.buffer.head, r$2 = ""; null !== a$2;) r$2 += e$2.write(a$2.data), a$2 = a$2.next;
			return this._readableState.buffer.clear(), "" !== r$2 && this._readableState.buffer.push(r$2), this._readableState.length = r$2.length, this;
		};
		var A = 1073741824;
		function R(t$2, e$2) {
			return t$2 <= 0 || 0 === e$2.length && e$2.ended ? 0 : e$2.objectMode ? 1 : t$2 != t$2 ? e$2.flowing && e$2.length ? e$2.buffer.head.data.length : e$2.length : (t$2 > e$2.highWaterMark && (e$2.highWaterMark = function(t$3) {
				return t$3 >= A ? t$3 = A : (t$3--, t$3 |= t$3 >>> 1, t$3 |= t$3 >>> 2, t$3 |= t$3 >>> 4, t$3 |= t$3 >>> 8, t$3 |= t$3 >>> 16, t$3++), t$3;
			}(t$2)), t$2 <= e$2.length ? t$2 : e$2.ended ? e$2.length : (e$2.needReadable = !0, 0));
		}
		function N(t$2) {
			var e$2 = t$2._readableState;
			r$1("emitReadable", e$2.needReadable, e$2.emittedReadable), e$2.needReadable = !1, e$2.emittedReadable || (r$1("emitReadable", e$2.flowing), e$2.emittedReadable = !0, process.nextTick(C, t$2));
		}
		function C(t$2) {
			var e$2 = t$2._readableState;
			r$1("emitReadable_", e$2.destroyed, e$2.length, e$2.ended), e$2.destroyed || !e$2.length && !e$2.ended || (t$2.emit("readable"), e$2.emittedReadable = !1), e$2.needReadable = !e$2.flowing && !e$2.ended && e$2.length <= e$2.highWaterMark, P(t$2);
		}
		function D(t$2, e$2) {
			e$2.readingMore || (e$2.readingMore = !0, process.nextTick(x, t$2, e$2));
		}
		function x(t$2, e$2) {
			for (; !e$2.reading && !e$2.ended && (e$2.length < e$2.highWaterMark || e$2.flowing && 0 === e$2.length);) {
				var n$2 = e$2.length;
				if (r$1("maybeReadMore read 0"), t$2.read(0), n$2 === e$2.length) break;
			}
			e$2.readingMore = !1;
		}
		function M(t$2) {
			var e$2 = t$2._readableState;
			e$2.readableListening = t$2.listenerCount("readable") > 0, e$2.resumeScheduled && !e$2.paused ? e$2.flowing = !0 : t$2.listenerCount("data") > 0 && t$2.resume();
		}
		function z(t$2) {
			r$1("readable nexttick read 0"), t$2.read(0);
		}
		function O(t$2, e$2) {
			r$1("resume", e$2.reading), e$2.reading || t$2.read(0), e$2.resumeScheduled = !1, t$2.emit("resume"), P(t$2), e$2.flowing && !e$2.reading && t$2.read(0);
		}
		function P(t$2) {
			var e$2 = t$2._readableState;
			for (r$1("flow", e$2.flowing); e$2.flowing && null !== t$2.read(););
		}
		function L(t$2, e$2) {
			return 0 === e$2.length ? null : (e$2.objectMode ? n$2 = e$2.buffer.shift() : !t$2 || t$2 >= e$2.length ? (n$2 = e$2.decoder ? e$2.buffer.join("") : 1 === e$2.buffer.length ? e$2.buffer.first() : e$2.buffer.concat(e$2.length), e$2.buffer.clear()) : n$2 = e$2.buffer.consume(t$2, e$2.decoder), n$2);
			var n$2;
		}
		function F(t$2) {
			var e$2 = t$2._readableState;
			r$1("endReadable", e$2.endEmitted), e$2.endEmitted || (e$2.ended = !0, process.nextTick(U, e$2, t$2));
		}
		function U(t$2, e$2) {
			if (r$1("endReadableNT", t$2.endEmitted, t$2.length), !t$2.endEmitted && 0 === t$2.length && (t$2.endEmitted = !0, e$2.readable = !1, e$2.emit("end"), t$2.autoDestroy)) {
				var n$2 = e$2._writableState;
				(!n$2 || n$2.autoDestroy && n$2.finished) && e$2.destroy();
			}
		}
		function j(t$2, e$2) {
			for (var n$2 = 0, a$2 = t$2.length; n$2 < a$2; n$2++) if (t$2[n$2] === e$2) return n$2;
			return -1;
		}
		S$1.prototype.read = function(t$2) {
			r$1("read", t$2), t$2 = parseInt(t$2, 10);
			var e$2 = this._readableState, n$2 = t$2;
			if (0 !== t$2 && (e$2.emittedReadable = !1), 0 === t$2 && e$2.needReadable && ((0 !== e$2.highWaterMark ? e$2.length >= e$2.highWaterMark : e$2.length > 0) || e$2.ended)) return r$1("read: emitReadable", e$2.length, e$2.ended), 0 === e$2.length && e$2.ended ? F(this) : N(this), null;
			if (0 === (t$2 = R(t$2, e$2)) && e$2.ended) return 0 === e$2.length && F(this), null;
			var a$2, i$2 = e$2.needReadable;
			return r$1("need readable", i$2), (0 === e$2.length || e$2.length - t$2 < e$2.highWaterMark) && r$1("length less than watermark", i$2 = !0), e$2.ended || e$2.reading ? r$1("reading or ended", i$2 = !1) : i$2 && (r$1("do read"), e$2.reading = !0, e$2.sync = !0, 0 === e$2.length && (e$2.needReadable = !0), this._read(e$2.highWaterMark), e$2.sync = !1, e$2.reading || (t$2 = R(n$2, e$2))), null === (a$2 = t$2 > 0 ? L(t$2, e$2) : null) ? (e$2.needReadable = e$2.length <= e$2.highWaterMark, t$2 = 0) : (e$2.length -= t$2, e$2.awaitDrain = 0), 0 === e$2.length && (e$2.ended || (e$2.needReadable = !0), n$2 !== t$2 && e$2.ended && F(this)), null !== a$2 && this.emit("data", a$2), a$2;
		}, S$1.prototype._read = function(t$2) {
			T$1(this, new E$1("_read()"));
		}, S$1.prototype.pipe = function(t$2, e$2) {
			var n$2 = this, a$2 = this._readableState;
			switch (a$2.pipesCount) {
				case 0:
					a$2.pipes = t$2;
					break;
				case 1:
					a$2.pipes = [a$2.pipes, t$2];
					break;
				default: a$2.pipes.push(t$2);
			}
			a$2.pipesCount += 1, r$1("pipe count=%d opts=%j", a$2.pipesCount, e$2);
			var l$2 = e$2 && !1 === e$2.end || t$2 === process.stdout || t$2 === process.stderr ? m$2 : o$2;
			function o$2() {
				r$1("onend"), t$2.end();
			}
			a$2.endEmitted ? process.nextTick(l$2) : n$2.once("end", l$2), t$2.on("unpipe", (function e$3(i$2, l$3) {
				r$1("onunpipe"), i$2 === n$2 && l$3 && !1 === l$3.hasUnpiped && (l$3.hasUnpiped = !0, r$1("cleanup"), t$2.removeListener("close", f$2), t$2.removeListener("finish", g$2), t$2.removeListener("drain", s$2), t$2.removeListener("error", c$2), t$2.removeListener("unpipe", e$3), n$2.removeListener("end", o$2), n$2.removeListener("end", m$2), n$2.removeListener("data", d$2), u$2 = !0, !a$2.awaitDrain || t$2._writableState && !t$2._writableState.needDrain || s$2());
			}));
			var s$2 = function(t$3) {
				return function() {
					var e$3 = t$3._readableState;
					r$1("pipeOnDrain", e$3.awaitDrain), e$3.awaitDrain && e$3.awaitDrain--, 0 === e$3.awaitDrain && i$1(t$3, "data") && (e$3.flowing = !0, P(t$3));
				};
			}(n$2);
			t$2.on("drain", s$2);
			var u$2 = !1;
			function d$2(e$3) {
				r$1("ondata");
				var i$2 = t$2.write(e$3);
				r$1("dest.write", i$2), !1 === i$2 && ((1 === a$2.pipesCount && a$2.pipes === t$2 || a$2.pipesCount > 1 && -1 !== j(a$2.pipes, t$2)) && !u$2 && (r$1("false write response, pause", a$2.awaitDrain), a$2.awaitDrain++), n$2.pause());
			}
			function c$2(e$3) {
				r$1("onerror", e$3), m$2(), t$2.removeListener("error", c$2), 0 === i$1(t$2, "error") && T$1(t$2, e$3);
			}
			function f$2() {
				t$2.removeListener("finish", g$2), m$2();
			}
			function g$2() {
				r$1("onfinish"), t$2.removeListener("close", f$2), m$2();
			}
			function m$2() {
				r$1("unpipe"), n$2.unpipe(t$2);
			}
			return n$2.on("data", d$2), function(t$3, e$3, n$3) {
				if ("function" == typeof t$3.prependListener) return t$3.prependListener(e$3, n$3);
				t$3._events && t$3._events[e$3] ? Array.isArray(t$3._events[e$3]) ? t$3._events[e$3].unshift(n$3) : t$3._events[e$3] = [n$3, t$3._events[e$3]] : t$3.on(e$3, n$3);
			}(t$2, "error", c$2), t$2.once("close", f$2), t$2.once("finish", g$2), t$2.emit("pipe", n$2), a$2.flowing || (r$1("pipe resume"), n$2.resume()), t$2;
		}, S$1.prototype.unpipe = function(t$2) {
			var e$2 = this._readableState, n$2 = { hasUnpiped: !1 };
			if (0 === e$2.pipesCount) return this;
			if (1 === e$2.pipesCount) return t$2 && t$2 !== e$2.pipes || (t$2 || (t$2 = e$2.pipes), e$2.pipes = null, e$2.pipesCount = 0, e$2.flowing = !1, t$2 && t$2.emit("unpipe", this, n$2)), this;
			if (!t$2) {
				var a$2 = e$2.pipes, r$2 = e$2.pipesCount;
				e$2.pipes = null, e$2.pipesCount = 0, e$2.flowing = !1;
				for (var i$2 = 0; i$2 < r$2; i$2++) a$2[i$2].emit("unpipe", this, { hasUnpiped: !1 });
				return this;
			}
			var l$2 = j(e$2.pipes, t$2);
			return -1 === l$2 || (e$2.pipes.splice(l$2, 1), e$2.pipesCount -= 1, 1 === e$2.pipesCount && (e$2.pipes = e$2.pipes[0]), t$2.emit("unpipe", this, n$2)), this;
		}, S$1.prototype.on = function(t$2, e$2) {
			var n$2 = l$1.prototype.on.call(this, t$2, e$2), a$2 = this._readableState;
			return "data" === t$2 ? (a$2.readableListening = this.listenerCount("readable") > 0, !1 !== a$2.flowing && this.resume()) : "readable" === t$2 && (a$2.endEmitted || a$2.readableListening || (a$2.readableListening = a$2.needReadable = !0, a$2.flowing = !1, a$2.emittedReadable = !1, r$1("on readable", a$2.length, a$2.reading), a$2.length ? N(this) : a$2.reading || process.nextTick(z, this))), n$2;
		}, S$1.prototype.addListener = S$1.prototype.on, S$1.prototype.removeListener = function(t$2, e$2) {
			var n$2 = l$1.prototype.removeListener.call(this, t$2, e$2);
			return "readable" === t$2 && process.nextTick(M, this), n$2;
		}, S$1.prototype.removeAllListeners = function(t$2) {
			var e$2 = l$1.prototype.removeAllListeners.apply(this, arguments);
			return "readable" !== t$2 && void 0 !== t$2 || process.nextTick(M, this), e$2;
		}, S$1.prototype.resume = function() {
			var t$2 = this._readableState;
			return t$2.flowing || (r$1("resume"), t$2.flowing = !t$2.readableListening, function(t$3, e$2) {
				e$2.resumeScheduled || (e$2.resumeScheduled = !0, process.nextTick(O, t$3, e$2));
			}(this, t$2)), t$2.paused = !1, this;
		}, S$1.prototype.pause = function() {
			return r$1("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (r$1("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
		}, S$1.prototype.wrap = function(t$2) {
			var e$2 = this, n$2 = this._readableState, a$2 = !1;
			for (var i$2 in t$2.on("end", (function() {
				if (r$1("wrapped end"), n$2.decoder && !n$2.ended) {
					var t$3 = n$2.decoder.end();
					t$3 && t$3.length && e$2.push(t$3);
				}
				e$2.push(null);
			})), t$2.on("data", (function(i$3) {
				r$1("wrapped data"), n$2.decoder && (i$3 = n$2.decoder.write(i$3)), n$2.objectMode && null == i$3 || (n$2.objectMode || i$3 && i$3.length) && (e$2.push(i$3) || (a$2 = !0, t$2.pause()));
			})), t$2) void 0 === this[i$2] && "function" == typeof t$2[i$2] && (this[i$2] = function(e$3) {
				return function() {
					return t$2[e$3].apply(t$2, arguments);
				};
			}(i$2));
			for (var l$2 = 0; l$2 < v$1.length; l$2++) t$2.on(v$1[l$2], this.emit.bind(this, v$1[l$2]));
			return this._read = function(e$3) {
				r$1("wrapped _read", e$3), a$2 && (a$2 = !1, t$2.resume());
			}, this;
		}, "function" == typeof Symbol && (S$1.prototype[Symbol.asyncIterator] = function() {
			return void 0 === c$1 && (c$1 = n$1(5857)), c$1(this);
		}), Object.defineProperty(S$1.prototype, "readableHighWaterMark", {
			enumerable: !1,
			get: function() {
				return this._readableState.highWaterMark;
			}
		}), Object.defineProperty(S$1.prototype, "readableBuffer", {
			enumerable: !1,
			get: function() {
				return this._readableState && this._readableState.buffer;
			}
		}), Object.defineProperty(S$1.prototype, "readableFlowing", {
			enumerable: !1,
			get: function() {
				return this._readableState.flowing;
			},
			set: function(t$2) {
				this._readableState && (this._readableState.flowing = t$2);
			}
		}), S$1._fromList = L, Object.defineProperty(S$1.prototype, "readableLength", {
			enumerable: !1,
			get: function() {
				return this._readableState.length;
			}
		}), "function" == typeof Symbol && (S$1.from = function(t$2, e$2) {
			return void 0 === f$1 && (f$1 = n$1(3411)), f$1(S$1, t$2, e$2);
		});
	},
	6756: function(t$1, e$1, n$1) {
		t$1.exports = d$1;
		var a$1 = n$1(1602).codes, r$1 = a$1.ERR_METHOD_NOT_IMPLEMENTED, i$1 = a$1.ERR_MULTIPLE_CALLBACK, l$1 = a$1.ERR_TRANSFORM_ALREADY_TRANSFORMING, o$1 = a$1.ERR_TRANSFORM_WITH_LENGTH_0, s$1 = n$1(884);
		function u$1(t$2, e$2) {
			var n$2 = this._transformState;
			n$2.transforming = !1;
			var a$2 = n$2.writecb;
			if (null === a$2) return this.emit("error", new i$1());
			n$2.writechunk = null, n$2.writecb = null, null != e$2 && this.push(e$2), a$2(t$2);
			var r$2 = this._readableState;
			r$2.reading = !1, (r$2.needReadable || r$2.length < r$2.highWaterMark) && this._read(r$2.highWaterMark);
		}
		function d$1(t$2) {
			if (!(this instanceof d$1)) return new d$1(t$2);
			s$1.call(this, t$2), this._transformState = {
				afterTransform: u$1.bind(this),
				needTransform: !1,
				transforming: !1,
				writecb: null,
				writechunk: null,
				writeencoding: null
			}, this._readableState.needReadable = !0, this._readableState.sync = !1, t$2 && ("function" == typeof t$2.transform && (this._transform = t$2.transform), "function" == typeof t$2.flush && (this._flush = t$2.flush)), this.on("prefinish", c$1);
		}
		function c$1() {
			var t$2 = this;
			"function" != typeof this._flush || this._readableState.destroyed ? f$1(this, null, null) : this._flush((function(e$2, n$2) {
				f$1(t$2, e$2, n$2);
			}));
		}
		function f$1(t$2, e$2, n$2) {
			if (e$2) return t$2.emit("error", e$2);
			if (null != n$2 && t$2.push(n$2), t$2._writableState.length) throw new o$1();
			if (t$2._transformState.transforming) throw new l$1();
			return t$2.push(null);
		}
		n$1(7523)(d$1, s$1), d$1.prototype.push = function(t$2, e$2) {
			return this._transformState.needTransform = !1, s$1.prototype.push.call(this, t$2, e$2);
		}, d$1.prototype._transform = function(t$2, e$2, n$2) {
			n$2(new r$1("_transform()"));
		}, d$1.prototype._write = function(t$2, e$2, n$2) {
			var a$2 = this._transformState;
			if (a$2.writecb = n$2, a$2.writechunk = t$2, a$2.writeencoding = e$2, !a$2.transforming) {
				var r$2 = this._readableState;
				(a$2.needTransform || r$2.needReadable || r$2.length < r$2.highWaterMark) && this._read(r$2.highWaterMark);
			}
		}, d$1.prototype._read = function(t$2) {
			var e$2 = this._transformState;
			null === e$2.writechunk || e$2.transforming ? e$2.needTransform = !0 : (e$2.transforming = !0, this._transform(e$2.writechunk, e$2.writeencoding, e$2.afterTransform));
		}, d$1.prototype._destroy = function(t$2, e$2) {
			s$1.prototype._destroy.call(this, t$2, (function(t$3) {
				e$2(t$3);
			}));
		};
	},
	3726: function(t$1, e$1, n$1) {
		function a$1(t$2) {
			var e$2 = this;
			this.next = null, this.entry = null, this.finish = function() {
				(function(t$3, e$3) {
					var n$2 = t$3.entry;
					for (t$3.entry = null; n$2;) {
						var a$2 = n$2.callback;
						e$3.pendingcb--, a$2(void 0), n$2 = n$2.next;
					}
					e$3.corkedRequestsFree.next = t$3;
				})(e$2, t$2);
			};
		}
		var r$1;
		t$1.exports = S$1, S$1.WritableState = w$1;
		var i$1, l$1 = { deprecate: n$1(9e3) }, o$1 = n$1(2611), s$1 = n$1(44).Buffer, u$1 = (void 0 !== n$1.g ? n$1.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : {}).Uint8Array || function() {}, d$1 = n$1(2410), c$1 = n$1(1749).getHighWaterMark, f$1 = n$1(1602).codes, g$1 = f$1.ERR_INVALID_ARG_TYPE, m$1 = f$1.ERR_METHOD_NOT_IMPLEMENTED, h$1 = f$1.ERR_MULTIPLE_CALLBACK, p$1 = f$1.ERR_STREAM_CANNOT_PIPE, b$1 = f$1.ERR_STREAM_DESTROYED, y$1 = f$1.ERR_STREAM_NULL_VALUES, E$1 = f$1.ERR_STREAM_WRITE_AFTER_END, _$1 = f$1.ERR_UNKNOWN_ENCODING, T$1 = d$1.errorOrDestroy;
		function v$1() {}
		function w$1(t$2, e$2, i$2) {
			r$1 = r$1 || n$1(884), t$2 = t$2 || {}, "boolean" != typeof i$2 && (i$2 = e$2 instanceof r$1), this.objectMode = !!t$2.objectMode, i$2 && (this.objectMode = this.objectMode || !!t$2.writableObjectMode), this.highWaterMark = c$1(this, t$2, "writableHighWaterMark", i$2), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
			this.decodeStrings = !(!1 === t$2.decodeStrings), this.defaultEncoding = t$2.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(t$3) {
				(function(t$4, e$3) {
					var n$2 = t$4._writableState, a$2 = n$2.sync, r$2 = n$2.writecb;
					if ("function" != typeof r$2) throw new h$1();
					if (function(t$5) {
						t$5.writing = !1, t$5.writecb = null, t$5.length -= t$5.writelen, t$5.writelen = 0;
					}(n$2), e$3) (function(t$5, e$4, n$3, a$3, r$3) {
						--e$4.pendingcb, n$3 ? (process.nextTick(r$3, a$3), process.nextTick(C, t$5, e$4), t$5._writableState.errorEmitted = !0, T$1(t$5, a$3)) : (r$3(a$3), t$5._writableState.errorEmitted = !0, T$1(t$5, a$3), C(t$5, e$4));
					})(t$4, n$2, a$2, e$3, r$2);
					else {
						var i$3 = R(n$2) || t$4.destroyed;
						i$3 || n$2.corked || n$2.bufferProcessing || !n$2.bufferedRequest || A(t$4, n$2), a$2 ? process.nextTick(k, t$4, n$2, i$3, r$2) : k(t$4, n$2, i$3, r$2);
					}
				})(e$2, t$3);
			}, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !1 !== t$2.emitClose, this.autoDestroy = !!t$2.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new a$1(this);
		}
		function S$1(t$2) {
			var e$2 = this instanceof (r$1 = r$1 || n$1(884));
			if (!e$2 && !i$1.call(S$1, this)) return new S$1(t$2);
			this._writableState = new w$1(t$2, this, e$2), this.writable = !0, t$2 && ("function" == typeof t$2.write && (this._write = t$2.write), "function" == typeof t$2.writev && (this._writev = t$2.writev), "function" == typeof t$2.destroy && (this._destroy = t$2.destroy), "function" == typeof t$2.final && (this._final = t$2.final)), o$1.call(this);
		}
		function I(t$2, e$2, n$2, a$2, r$2, i$2, l$2) {
			e$2.writelen = a$2, e$2.writecb = l$2, e$2.writing = !0, e$2.sync = !0, e$2.destroyed ? e$2.onwrite(new b$1("write")) : n$2 ? t$2._writev(r$2, e$2.onwrite) : t$2._write(r$2, i$2, e$2.onwrite), e$2.sync = !1;
		}
		function k(t$2, e$2, n$2, a$2) {
			n$2 || function(t$3, e$3) {
				0 === e$3.length && e$3.needDrain && (e$3.needDrain = !1, t$3.emit("drain"));
			}(t$2, e$2), e$2.pendingcb--, a$2(), C(t$2, e$2);
		}
		function A(t$2, e$2) {
			e$2.bufferProcessing = !0;
			var n$2 = e$2.bufferedRequest;
			if (t$2._writev && n$2 && n$2.next) {
				var r$2 = e$2.bufferedRequestCount, i$2 = new Array(r$2), l$2 = e$2.corkedRequestsFree;
				l$2.entry = n$2;
				for (var o$2 = 0, s$2 = !0; n$2;) i$2[o$2] = n$2, n$2.isBuf || (s$2 = !1), n$2 = n$2.next, o$2 += 1;
				i$2.allBuffers = s$2, I(t$2, e$2, !0, e$2.length, i$2, "", l$2.finish), e$2.pendingcb++, e$2.lastBufferedRequest = null, l$2.next ? (e$2.corkedRequestsFree = l$2.next, l$2.next = null) : e$2.corkedRequestsFree = new a$1(e$2), e$2.bufferedRequestCount = 0;
			} else {
				for (; n$2;) {
					var u$2 = n$2.chunk, d$2 = n$2.encoding, c$2 = n$2.callback;
					if (I(t$2, e$2, !1, e$2.objectMode ? 1 : u$2.length, u$2, d$2, c$2), n$2 = n$2.next, e$2.bufferedRequestCount--, e$2.writing) break;
				}
				null === n$2 && (e$2.lastBufferedRequest = null);
			}
			e$2.bufferedRequest = n$2, e$2.bufferProcessing = !1;
		}
		function R(t$2) {
			return t$2.ending && 0 === t$2.length && null === t$2.bufferedRequest && !t$2.finished && !t$2.writing;
		}
		function N(t$2, e$2) {
			t$2._final((function(n$2) {
				e$2.pendingcb--, n$2 && T$1(t$2, n$2), e$2.prefinished = !0, t$2.emit("prefinish"), C(t$2, e$2);
			}));
		}
		function C(t$2, e$2) {
			var n$2 = R(e$2);
			if (n$2 && (function(t$3, e$3) {
				e$3.prefinished || e$3.finalCalled || ("function" != typeof t$3._final || e$3.destroyed ? (e$3.prefinished = !0, t$3.emit("prefinish")) : (e$3.pendingcb++, e$3.finalCalled = !0, process.nextTick(N, t$3, e$3)));
			}(t$2, e$2), 0 === e$2.pendingcb && (e$2.finished = !0, t$2.emit("finish"), e$2.autoDestroy))) {
				var a$2 = t$2._readableState;
				(!a$2 || a$2.autoDestroy && a$2.endEmitted) && t$2.destroy();
			}
			return n$2;
		}
		n$1(7523)(S$1, o$1), w$1.prototype.getBuffer = function() {
			for (var t$2 = this.bufferedRequest, e$2 = []; t$2;) e$2.push(t$2), t$2 = t$2.next;
			return e$2;
		}, function() {
			try {
				Object.defineProperty(w$1.prototype, "buffer", { get: l$1.deprecate((function() {
					return this.getBuffer();
				}), "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
			} catch (t$2) {}
		}(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (i$1 = Function.prototype[Symbol.hasInstance], Object.defineProperty(S$1, Symbol.hasInstance, { value: function(t$2) {
			return !!i$1.call(this, t$2) || this === S$1 && t$2 && t$2._writableState instanceof w$1;
		} })) : i$1 = function(t$2) {
			return t$2 instanceof this;
		}, S$1.prototype.pipe = function() {
			T$1(this, new p$1());
		}, S$1.prototype.write = function(t$2, e$2, n$2) {
			var a$2, r$2 = this._writableState, i$2 = !1, l$2 = !r$2.objectMode && (a$2 = t$2, s$1.isBuffer(a$2) || a$2 instanceof u$1);
			return l$2 && !s$1.isBuffer(t$2) && (t$2 = function(t$3) {
				return s$1.from(t$3);
			}(t$2)), "function" == typeof e$2 && (n$2 = e$2, e$2 = null), l$2 ? e$2 = "buffer" : e$2 || (e$2 = r$2.defaultEncoding), "function" != typeof n$2 && (n$2 = v$1), r$2.ending ? function(t$3, e$3) {
				var n$3 = new E$1();
				T$1(t$3, n$3), process.nextTick(e$3, n$3);
			}(this, n$2) : (l$2 || function(t$3, e$3, n$3, a$3) {
				var r$3;
				return null === n$3 ? r$3 = new y$1() : "string" == typeof n$3 || e$3.objectMode || (r$3 = new g$1("chunk", ["string", "Buffer"], n$3)), !r$3 || (T$1(t$3, r$3), process.nextTick(a$3, r$3), !1);
			}(this, r$2, t$2, n$2)) && (r$2.pendingcb++, i$2 = function(t$3, e$3, n$3, a$3, r$3, i$3) {
				if (!n$3) {
					var l$3 = function(t$4, e$4, n$4) {
						return t$4.objectMode || !1 === t$4.decodeStrings || "string" != typeof e$4 || (e$4 = s$1.from(e$4, n$4)), e$4;
					}(e$3, a$3, r$3);
					a$3 !== l$3 && (n$3 = !0, r$3 = "buffer", a$3 = l$3);
				}
				var o$2 = e$3.objectMode ? 1 : a$3.length;
				e$3.length += o$2;
				var u$2 = e$3.length < e$3.highWaterMark;
				if (u$2 || (e$3.needDrain = !0), e$3.writing || e$3.corked) {
					var d$2 = e$3.lastBufferedRequest;
					e$3.lastBufferedRequest = {
						chunk: a$3,
						encoding: r$3,
						isBuf: n$3,
						callback: i$3,
						next: null
					}, d$2 ? d$2.next = e$3.lastBufferedRequest : e$3.bufferedRequest = e$3.lastBufferedRequest, e$3.bufferedRequestCount += 1;
				} else I(t$3, e$3, !1, o$2, a$3, r$3, i$3);
				return u$2;
			}(this, r$2, l$2, t$2, e$2, n$2)), i$2;
		}, S$1.prototype.cork = function() {
			this._writableState.corked++;
		}, S$1.prototype.uncork = function() {
			var t$2 = this._writableState;
			t$2.corked && (t$2.corked--, t$2.writing || t$2.corked || t$2.bufferProcessing || !t$2.bufferedRequest || A(this, t$2));
		}, S$1.prototype.setDefaultEncoding = function(t$2) {
			if ("string" == typeof t$2 && (t$2 = t$2.toLowerCase()), !([
				"hex",
				"utf8",
				"utf-8",
				"ascii",
				"binary",
				"base64",
				"ucs2",
				"ucs-2",
				"utf16le",
				"utf-16le",
				"raw"
			].indexOf((t$2 + "").toLowerCase()) > -1)) throw new _$1(t$2);
			return this._writableState.defaultEncoding = t$2, this;
		}, Object.defineProperty(S$1.prototype, "writableBuffer", {
			enumerable: !1,
			get: function() {
				return this._writableState && this._writableState.getBuffer();
			}
		}), Object.defineProperty(S$1.prototype, "writableHighWaterMark", {
			enumerable: !1,
			get: function() {
				return this._writableState.highWaterMark;
			}
		}), S$1.prototype._write = function(t$2, e$2, n$2) {
			n$2(new m$1("_write()"));
		}, S$1.prototype._writev = null, S$1.prototype.end = function(t$2, e$2, n$2) {
			var a$2 = this._writableState;
			return "function" == typeof t$2 ? (n$2 = t$2, t$2 = null, e$2 = null) : "function" == typeof e$2 && (n$2 = e$2, e$2 = null), null != t$2 && this.write(t$2, e$2), a$2.corked && (a$2.corked = 1, this.uncork()), a$2.ending || function(t$3, e$3, n$3) {
				e$3.ending = !0, C(t$3, e$3), n$3 && (e$3.finished ? process.nextTick(n$3) : t$3.once("finish", n$3)), e$3.ended = !0, t$3.writable = !1;
			}(this, a$2, n$2), this;
		}, Object.defineProperty(S$1.prototype, "writableLength", {
			enumerable: !1,
			get: function() {
				return this._writableState.length;
			}
		}), Object.defineProperty(S$1.prototype, "destroyed", {
			enumerable: !1,
			get: function() {
				return void 0 !== this._writableState && this._writableState.destroyed;
			},
			set: function(t$2) {
				this._writableState && (this._writableState.destroyed = t$2);
			}
		}), S$1.prototype.destroy = d$1.destroy, S$1.prototype._undestroy = d$1.undestroy, S$1.prototype._destroy = function(t$2, e$2) {
			e$2(t$2);
		};
	},
	5857: function(t$1, e$1, n$1) {
		var a$1;
		function r$1(t$2, e$2, n$2) {
			return (e$2 = function(t$3) {
				var e$3 = function(t$4) {
					if ("object" != typeof t$4 || null === t$4) return t$4;
					var e$4 = t$4[Symbol.toPrimitive];
					if (void 0 !== e$4) {
						var n$3 = e$4.call(t$4, "string");
						if ("object" != typeof n$3) return n$3;
						throw new TypeError("@@toPrimitive must return a primitive value.");
					}
					return String(t$4);
				}(t$3);
				return "symbol" == typeof e$3 ? e$3 : String(e$3);
			}(e$2)) in t$2 ? Object.defineProperty(t$2, e$2, {
				value: n$2,
				enumerable: !0,
				configurable: !0,
				writable: !0
			}) : t$2[e$2] = n$2, t$2;
		}
		var i$1 = n$1(2896), l$1 = Symbol("lastResolve"), o$1 = Symbol("lastReject"), s$1 = Symbol("error"), u$1 = Symbol("ended"), d$1 = Symbol("lastPromise"), c$1 = Symbol("handlePromise"), f$1 = Symbol("stream");
		function g$1(t$2, e$2) {
			return {
				value: t$2,
				done: e$2
			};
		}
		function m$1(t$2) {
			var e$2 = t$2[l$1];
			if (null !== e$2) {
				var n$2 = t$2[f$1].read();
				null !== n$2 && (t$2[d$1] = null, t$2[l$1] = null, t$2[o$1] = null, e$2(g$1(n$2, !1)));
			}
		}
		function h$1(t$2) {
			process.nextTick(m$1, t$2);
		}
		var p$1 = Object.getPrototypeOf((function() {})), b$1 = Object.setPrototypeOf((r$1(a$1 = {
			get stream() {
				return this[f$1];
			},
			next: function() {
				var t$2 = this, e$2 = this[s$1];
				if (null !== e$2) return Promise.reject(e$2);
				if (this[u$1]) return Promise.resolve(g$1(void 0, !0));
				if (this[f$1].destroyed) return new Promise((function(e$3, n$3) {
					process.nextTick((function() {
						t$2[s$1] ? n$3(t$2[s$1]) : e$3(g$1(void 0, !0));
					}));
				}));
				var n$2, a$2 = this[d$1];
				if (a$2) n$2 = new Promise(function(t$3, e$3) {
					return function(n$3, a$3) {
						t$3.then((function() {
							e$3[u$1] ? n$3(g$1(void 0, !0)) : e$3[c$1](n$3, a$3);
						}), a$3);
					};
				}(a$2, this));
				else {
					var r$2 = this[f$1].read();
					if (null !== r$2) return Promise.resolve(g$1(r$2, !1));
					n$2 = new Promise(this[c$1]);
				}
				return this[d$1] = n$2, n$2;
			}
		}, Symbol.asyncIterator, (function() {
			return this;
		})), r$1(a$1, "return", (function() {
			var t$2 = this;
			return new Promise((function(e$2, n$2) {
				t$2[f$1].destroy(null, (function(t$3) {
					t$3 ? n$2(t$3) : e$2(g$1(void 0, !0));
				}));
			}));
		})), a$1), p$1);
		t$1.exports = function(t$2) {
			var e$2, n$2 = Object.create(b$1, (r$1(e$2 = {}, f$1, {
				value: t$2,
				writable: !0
			}), r$1(e$2, l$1, {
				value: null,
				writable: !0
			}), r$1(e$2, o$1, {
				value: null,
				writable: !0
			}), r$1(e$2, s$1, {
				value: null,
				writable: !0
			}), r$1(e$2, u$1, {
				value: t$2._readableState.endEmitted,
				writable: !0
			}), r$1(e$2, c$1, {
				value: function(t$3, e$3) {
					var a$2 = n$2[f$1].read();
					a$2 ? (n$2[d$1] = null, n$2[l$1] = null, n$2[o$1] = null, t$3(g$1(a$2, !1))) : (n$2[l$1] = t$3, n$2[o$1] = e$3);
				},
				writable: !0
			}), e$2));
			return n$2[d$1] = null, i$1(t$2, (function(t$3) {
				if (t$3 && "ERR_STREAM_PREMATURE_CLOSE" !== t$3.code) {
					var e$3 = n$2[o$1];
					null !== e$3 && (n$2[d$1] = null, n$2[l$1] = null, n$2[o$1] = null, e$3(t$3)), n$2[s$1] = t$3;
					return;
				}
				var a$2 = n$2[l$1];
				null !== a$2 && (n$2[d$1] = null, n$2[l$1] = null, n$2[o$1] = null, a$2(g$1(void 0, !0))), n$2[u$1] = !0;
			})), t$2.on("readable", h$1.bind(null, n$2)), n$2;
		};
	},
	3791: function(t$1, e$1, n$1) {
		function a$1(t$2, e$2) {
			var n$2 = Object.keys(t$2);
			if (Object.getOwnPropertySymbols) {
				var a$2 = Object.getOwnPropertySymbols(t$2);
				e$2 && (a$2 = a$2.filter((function(e$3) {
					return Object.getOwnPropertyDescriptor(t$2, e$3).enumerable;
				}))), n$2.push.apply(n$2, a$2);
			}
			return n$2;
		}
		function r$1(t$2) {
			for (var e$2 = 1; e$2 < arguments.length; e$2++) {
				var n$2 = null != arguments[e$2] ? arguments[e$2] : {};
				e$2 % 2 ? a$1(Object(n$2), !0).forEach((function(e$3) {
					i$1(t$2, e$3, n$2[e$3]);
				})) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t$2, Object.getOwnPropertyDescriptors(n$2)) : a$1(Object(n$2)).forEach((function(e$3) {
					Object.defineProperty(t$2, e$3, Object.getOwnPropertyDescriptor(n$2, e$3));
				}));
			}
			return t$2;
		}
		function i$1(t$2, e$2, n$2) {
			return (e$2 = o$1(e$2)) in t$2 ? Object.defineProperty(t$2, e$2, {
				value: n$2,
				enumerable: !0,
				configurable: !0,
				writable: !0
			}) : t$2[e$2] = n$2, t$2;
		}
		function l$1(t$2, e$2) {
			for (var n$2 = 0; n$2 < e$2.length; n$2++) {
				var a$2 = e$2[n$2];
				a$2.enumerable = a$2.enumerable || !1, a$2.configurable = !0, "value" in a$2 && (a$2.writable = !0), Object.defineProperty(t$2, o$1(a$2.key), a$2);
			}
		}
		function o$1(t$2) {
			var e$2 = function(t$3) {
				if ("object" != typeof t$3 || null === t$3) return t$3;
				var e$3 = t$3[Symbol.toPrimitive];
				if (void 0 !== e$3) {
					var n$2 = e$3.call(t$3, "string");
					if ("object" != typeof n$2) return n$2;
					throw new TypeError("@@toPrimitive must return a primitive value.");
				}
				return String(t$3);
			}(t$2);
			return "symbol" == typeof e$2 ? e$2 : String(e$2);
		}
		var s$1 = n$1(44).Buffer, u$1 = n$1(3779).inspect, d$1 = u$1 && u$1.custom || "inspect";
		t$1.exports = function() {
			function t$2() {
				(function(t$3, e$3) {
					if (!(t$3 instanceof e$3)) throw new TypeError("Cannot call a class as a function");
				})(this, t$2), this.head = null, this.tail = null, this.length = 0;
			}
			var e$2, n$2;
			return e$2 = t$2, (n$2 = [
				{
					key: "push",
					value: function(t$3) {
						var e$3 = {
							data: t$3,
							next: null
						};
						this.length > 0 ? this.tail.next = e$3 : this.head = e$3, this.tail = e$3, ++this.length;
					}
				},
				{
					key: "unshift",
					value: function(t$3) {
						var e$3 = {
							data: t$3,
							next: this.head
						};
						0 === this.length && (this.tail = e$3), this.head = e$3, ++this.length;
					}
				},
				{
					key: "shift",
					value: function() {
						if (0 !== this.length) {
							var t$3 = this.head.data;
							return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t$3;
						}
					}
				},
				{
					key: "clear",
					value: function() {
						this.head = this.tail = null, this.length = 0;
					}
				},
				{
					key: "join",
					value: function(t$3) {
						if (0 === this.length) return "";
						for (var e$3 = this.head, n$3 = "" + e$3.data; e$3 = e$3.next;) n$3 += t$3 + e$3.data;
						return n$3;
					}
				},
				{
					key: "concat",
					value: function(t$3) {
						if (0 === this.length) return s$1.alloc(0);
						for (var e$3, n$3, a$2, r$2 = s$1.allocUnsafe(t$3 >>> 0), i$2 = this.head, l$2 = 0; i$2;) e$3 = i$2.data, n$3 = r$2, a$2 = l$2, s$1.prototype.copy.call(e$3, n$3, a$2), l$2 += i$2.data.length, i$2 = i$2.next;
						return r$2;
					}
				},
				{
					key: "consume",
					value: function(t$3, e$3) {
						var n$3;
						return t$3 < this.head.data.length ? (n$3 = this.head.data.slice(0, t$3), this.head.data = this.head.data.slice(t$3)) : n$3 = t$3 === this.head.data.length ? this.shift() : e$3 ? this._getString(t$3) : this._getBuffer(t$3), n$3;
					}
				},
				{
					key: "first",
					value: function() {
						return this.head.data;
					}
				},
				{
					key: "_getString",
					value: function(t$3) {
						var e$3 = this.head, n$3 = 1, a$2 = e$3.data;
						for (t$3 -= a$2.length; e$3 = e$3.next;) {
							var r$2 = e$3.data, i$2 = t$3 > r$2.length ? r$2.length : t$3;
							if (i$2 === r$2.length ? a$2 += r$2 : a$2 += r$2.slice(0, t$3), 0 == (t$3 -= i$2)) {
								i$2 === r$2.length ? (++n$3, e$3.next ? this.head = e$3.next : this.head = this.tail = null) : (this.head = e$3, e$3.data = r$2.slice(i$2));
								break;
							}
							++n$3;
						}
						return this.length -= n$3, a$2;
					}
				},
				{
					key: "_getBuffer",
					value: function(t$3) {
						var e$3 = s$1.allocUnsafe(t$3), n$3 = this.head, a$2 = 1;
						for (n$3.data.copy(e$3), t$3 -= n$3.data.length; n$3 = n$3.next;) {
							var r$2 = n$3.data, i$2 = t$3 > r$2.length ? r$2.length : t$3;
							if (r$2.copy(e$3, e$3.length - t$3, 0, i$2), 0 == (t$3 -= i$2)) {
								i$2 === r$2.length ? (++a$2, n$3.next ? this.head = n$3.next : this.head = this.tail = null) : (this.head = n$3, n$3.data = r$2.slice(i$2));
								break;
							}
							++a$2;
						}
						return this.length -= a$2, e$3;
					}
				},
				{
					key: d$1,
					value: function(t$3, e$3) {
						return u$1(this, r$1(r$1({}, e$3), {}, {
							depth: 0,
							customInspect: !1
						}));
					}
				}
			]) && l$1(e$2.prototype, n$2), Object.defineProperty(e$2, "prototype", { writable: !1 }), t$2;
		}();
	},
	2410: function(t$1) {
		function e$1(t$2, e$2) {
			a$1(t$2, e$2), n$1(t$2);
		}
		function n$1(t$2) {
			t$2._writableState && !t$2._writableState.emitClose || t$2._readableState && !t$2._readableState.emitClose || t$2.emit("close");
		}
		function a$1(t$2, e$2) {
			t$2.emit("error", e$2);
		}
		t$1.exports = {
			destroy: function(t$2, r$1) {
				var i$1 = this, l$1 = this._readableState && this._readableState.destroyed, o$1 = this._writableState && this._writableState.destroyed;
				return l$1 || o$1 ? (r$1 ? r$1(t$2) : t$2 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, process.nextTick(a$1, this, t$2)) : process.nextTick(a$1, this, t$2)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t$2 || null, (function(t$3) {
					!r$1 && t$3 ? i$1._writableState ? i$1._writableState.errorEmitted ? process.nextTick(n$1, i$1) : (i$1._writableState.errorEmitted = !0, process.nextTick(e$1, i$1, t$3)) : process.nextTick(e$1, i$1, t$3) : r$1 ? (process.nextTick(n$1, i$1), r$1(t$3)) : process.nextTick(n$1, i$1);
				})), this);
			},
			undestroy: function() {
				this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
			},
			errorOrDestroy: function(t$2, e$2) {
				var n$2 = t$2._readableState, a$2 = t$2._writableState;
				n$2 && n$2.autoDestroy || a$2 && a$2.autoDestroy ? t$2.destroy(e$2) : t$2.emit("error", e$2);
			}
		};
	},
	2896: function(t$1, e$1, n$1) {
		var a$1 = n$1(1602).codes.ERR_STREAM_PREMATURE_CLOSE;
		function r$1() {}
		t$1.exports = function t$2(e$2, n$2, i$1) {
			if ("function" == typeof n$2) return t$2(e$2, null, n$2);
			n$2 || (n$2 = {}), i$1 = function(t$3) {
				var e$3 = !1;
				return function() {
					if (!e$3) {
						e$3 = !0;
						for (var n$3 = arguments.length, a$2 = new Array(n$3), r$2 = 0; r$2 < n$3; r$2++) a$2[r$2] = arguments[r$2];
						t$3.apply(this, a$2);
					}
				};
			}(i$1 || r$1);
			var l$1 = n$2.readable || !1 !== n$2.readable && e$2.readable, o$1 = n$2.writable || !1 !== n$2.writable && e$2.writable, s$1 = function() {
				e$2.writable || d$1();
			}, u$1 = e$2._writableState && e$2._writableState.finished, d$1 = function() {
				o$1 = !1, u$1 = !0, l$1 || i$1.call(e$2);
			}, c$1 = e$2._readableState && e$2._readableState.endEmitted, f$1 = function() {
				l$1 = !1, c$1 = !0, o$1 || i$1.call(e$2);
			}, g$1 = function(t$3) {
				i$1.call(e$2, t$3);
			}, m$1 = function() {
				var t$3;
				return l$1 && !c$1 ? (e$2._readableState && e$2._readableState.ended || (t$3 = new a$1()), i$1.call(e$2, t$3)) : o$1 && !u$1 ? (e$2._writableState && e$2._writableState.ended || (t$3 = new a$1()), i$1.call(e$2, t$3)) : void 0;
			}, h$1 = function() {
				e$2.req.on("finish", d$1);
			};
			return function(t$3) {
				return t$3.setHeader && "function" == typeof t$3.abort;
			}(e$2) ? (e$2.on("complete", d$1), e$2.on("abort", m$1), e$2.req ? h$1() : e$2.on("request", h$1)) : o$1 && !e$2._writableState && (e$2.on("end", s$1), e$2.on("close", s$1)), e$2.on("end", f$1), e$2.on("finish", d$1), !1 !== n$2.error && e$2.on("error", g$1), e$2.on("close", m$1), function() {
				e$2.removeListener("complete", d$1), e$2.removeListener("abort", m$1), e$2.removeListener("request", h$1), e$2.req && e$2.req.removeListener("finish", d$1), e$2.removeListener("end", s$1), e$2.removeListener("close", s$1), e$2.removeListener("finish", d$1), e$2.removeListener("end", f$1), e$2.removeListener("error", g$1), e$2.removeListener("close", m$1);
			};
		};
	},
	3411: function(t$1) {
		t$1.exports = function() {
			throw new Error("Readable.from is not available in the browser");
		};
	},
	8460: function(t$1, e$1, n$1) {
		var a$1, r$1 = n$1(1602).codes, i$1 = r$1.ERR_MISSING_ARGS, l$1 = r$1.ERR_STREAM_DESTROYED;
		function o$1(t$2) {
			if (t$2) throw t$2;
		}
		function s$1(t$2) {
			t$2();
		}
		function u$1(t$2, e$2) {
			return t$2.pipe(e$2);
		}
		t$1.exports = function() {
			for (var t$2 = arguments.length, e$2 = new Array(t$2), r$2 = 0; r$2 < t$2; r$2++) e$2[r$2] = arguments[r$2];
			var d$1, c$1 = function(t$3) {
				return t$3.length ? "function" != typeof t$3[t$3.length - 1] ? o$1 : t$3.pop() : o$1;
			}(e$2);
			if (Array.isArray(e$2[0]) && (e$2 = e$2[0]), e$2.length < 2) throw new i$1("streams");
			var f$1 = e$2.map((function(t$3, r$3) {
				var i$2 = r$3 < e$2.length - 1;
				return function(t$4, e$3, r$4, i$3) {
					i$3 = function(t$5) {
						var e$4 = !1;
						return function() {
							e$4 || (e$4 = !0, t$5.apply(void 0, arguments));
						};
					}(i$3);
					var o$2 = !1;
					t$4.on("close", (function() {
						o$2 = !0;
					})), void 0 === a$1 && (a$1 = n$1(2896)), a$1(t$4, {
						readable: e$3,
						writable: r$4
					}, (function(t$5) {
						if (t$5) return i$3(t$5);
						o$2 = !0, i$3();
					}));
					var s$2 = !1;
					return function(e$4) {
						if (!o$2 && !s$2) return s$2 = !0, function(t$5) {
							return t$5.setHeader && "function" == typeof t$5.abort;
						}(t$4) ? t$4.abort() : "function" == typeof t$4.destroy ? t$4.destroy() : void i$3(e$4 || new l$1("pipe"));
					};
				}(t$3, i$2, r$3 > 0, (function(t$4) {
					d$1 || (d$1 = t$4), t$4 && f$1.forEach(s$1), i$2 || (f$1.forEach(s$1), c$1(d$1));
				}));
			}));
			return e$2.reduce(u$1);
		};
	},
	1749: function(t$1, e$1, n$1) {
		var a$1 = n$1(1602).codes.ERR_INVALID_OPT_VALUE;
		t$1.exports = { getHighWaterMark: function(t$2, e$2, n$2, r$1) {
			var i$1 = function(t$3, e$3, n$3) {
				return null != t$3.highWaterMark ? t$3.highWaterMark : e$3 ? t$3[n$3] : null;
			}(e$2, r$1, n$2);
			if (null != i$1) {
				if (!isFinite(i$1) || Math.floor(i$1) !== i$1 || i$1 < 0) throw new a$1(r$1 ? n$2 : "highWaterMark", i$1);
				return Math.floor(i$1);
			}
			return t$2.objectMode ? 16 : 16384;
		} };
	},
	2611: function(t$1, e$1, n$1) {
		t$1.exports = n$1(9826).EventEmitter;
	},
	748: function(t$1, e$1, n$1) {
		var a$1 = n$1(4598).Buffer, r$1 = a$1.isEncoding || function(t$2) {
			switch ((t$2 = "" + t$2) && t$2.toLowerCase()) {
				case "hex":
				case "utf8":
				case "utf-8":
				case "ascii":
				case "binary":
				case "base64":
				case "ucs2":
				case "ucs-2":
				case "utf16le":
				case "utf-16le":
				case "raw": return !0;
				default: return !1;
			}
		};
		function i$1(t$2) {
			var e$2;
			switch (this.encoding = function(t$3) {
				var e$3 = function(t$4) {
					if (!t$4) return "utf8";
					for (var e$4;;) switch (t$4) {
						case "utf8":
						case "utf-8": return "utf8";
						case "ucs2":
						case "ucs-2":
						case "utf16le":
						case "utf-16le": return "utf16le";
						case "latin1":
						case "binary": return "latin1";
						case "base64":
						case "ascii":
						case "hex": return t$4;
						default:
							if (e$4) return;
							t$4 = ("" + t$4).toLowerCase(), e$4 = !0;
					}
				}(t$3);
				if ("string" != typeof e$3 && (a$1.isEncoding === r$1 || !r$1(t$3))) throw new Error("Unknown encoding: " + t$3);
				return e$3 || t$3;
			}(t$2), this.encoding) {
				case "utf16le":
					this.text = s$1, this.end = u$1, e$2 = 4;
					break;
				case "utf8":
					this.fillLast = o$1, e$2 = 4;
					break;
				case "base64":
					this.text = d$1, this.end = c$1, e$2 = 3;
					break;
				default:
					this.write = f$1, this.end = g$1;
					return;
			}
			this.lastNeed = 0, this.lastTotal = 0, this.lastChar = a$1.allocUnsafe(e$2);
		}
		function l$1(t$2) {
			return t$2 <= 127 ? 0 : t$2 >> 5 == 6 ? 2 : t$2 >> 4 == 14 ? 3 : t$2 >> 3 == 30 ? 4 : t$2 >> 6 == 2 ? -1 : -2;
		}
		function o$1(t$2) {
			var e$2 = this.lastTotal - this.lastNeed, n$2 = function(t$3, e$3) {
				if (128 != (192 & e$3[0])) return t$3.lastNeed = 0, "�";
				if (t$3.lastNeed > 1 && e$3.length > 1) {
					if (128 != (192 & e$3[1])) return t$3.lastNeed = 1, "�";
					if (t$3.lastNeed > 2 && e$3.length > 2 && 128 != (192 & e$3[2])) return t$3.lastNeed = 2, "�";
				}
			}(this, t$2);
			return void 0 !== n$2 ? n$2 : this.lastNeed <= t$2.length ? (t$2.copy(this.lastChar, e$2, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t$2.copy(this.lastChar, e$2, 0, t$2.length), void (this.lastNeed -= t$2.length));
		}
		function s$1(t$2, e$2) {
			if ((t$2.length - e$2) % 2 == 0) {
				var n$2 = t$2.toString("utf16le", e$2);
				if (n$2) {
					var a$2 = n$2.charCodeAt(n$2.length - 1);
					if (a$2 >= 55296 && a$2 <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t$2[t$2.length - 2], this.lastChar[1] = t$2[t$2.length - 1], n$2.slice(0, -1);
				}
				return n$2;
			}
			return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t$2[t$2.length - 1], t$2.toString("utf16le", e$2, t$2.length - 1);
		}
		function u$1(t$2) {
			var e$2 = t$2 && t$2.length ? this.write(t$2) : "";
			if (this.lastNeed) {
				var n$2 = this.lastTotal - this.lastNeed;
				return e$2 + this.lastChar.toString("utf16le", 0, n$2);
			}
			return e$2;
		}
		function d$1(t$2, e$2) {
			var n$2 = (t$2.length - e$2) % 3;
			return 0 === n$2 ? t$2.toString("base64", e$2) : (this.lastNeed = 3 - n$2, this.lastTotal = 3, 1 === n$2 ? this.lastChar[0] = t$2[t$2.length - 1] : (this.lastChar[0] = t$2[t$2.length - 2], this.lastChar[1] = t$2[t$2.length - 1]), t$2.toString("base64", e$2, t$2.length - n$2));
		}
		function c$1(t$2) {
			var e$2 = t$2 && t$2.length ? this.write(t$2) : "";
			return this.lastNeed ? e$2 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e$2;
		}
		function f$1(t$2) {
			return t$2.toString(this.encoding);
		}
		function g$1(t$2) {
			return t$2 && t$2.length ? this.write(t$2) : "";
		}
		e$1.StringDecoder = i$1, i$1.prototype.write = function(t$2) {
			if (0 === t$2.length) return "";
			var e$2, n$2;
			if (this.lastNeed) {
				if (void 0 === (e$2 = this.fillLast(t$2))) return "";
				n$2 = this.lastNeed, this.lastNeed = 0;
			} else n$2 = 0;
			return n$2 < t$2.length ? e$2 ? e$2 + this.text(t$2, n$2) : this.text(t$2, n$2) : e$2 || "";
		}, i$1.prototype.end = function(t$2) {
			var e$2 = t$2 && t$2.length ? this.write(t$2) : "";
			return this.lastNeed ? e$2 + "�" : e$2;
		}, i$1.prototype.text = function(t$2, e$2) {
			var n$2 = function(t$3, e$3, n$3) {
				var a$3 = e$3.length - 1;
				if (a$3 < n$3) return 0;
				var r$2 = l$1(e$3[a$3]);
				return r$2 >= 0 ? (r$2 > 0 && (t$3.lastNeed = r$2 - 1), r$2) : --a$3 < n$3 || -2 === r$2 ? 0 : (r$2 = l$1(e$3[a$3])) >= 0 ? (r$2 > 0 && (t$3.lastNeed = r$2 - 2), r$2) : --a$3 < n$3 || -2 === r$2 ? 0 : (r$2 = l$1(e$3[a$3])) >= 0 ? (r$2 > 0 && (2 === r$2 ? r$2 = 0 : t$3.lastNeed = r$2 - 3), r$2) : 0;
			}(this, t$2, e$2);
			if (!this.lastNeed) return t$2.toString("utf8", e$2);
			this.lastTotal = n$2;
			var a$2 = t$2.length - (n$2 - this.lastNeed);
			return t$2.copy(this.lastChar, 0, a$2), t$2.toString("utf8", e$2, a$2);
		}, i$1.prototype.fillLast = function(t$2) {
			if (this.lastNeed <= t$2.length) return t$2.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
			t$2.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t$2.length), this.lastNeed -= t$2.length;
		};
	},
	4598: function(t$1, e$1, n$1) {
		var a$1 = n$1(44), r$1 = a$1.Buffer;
		function i$1(t$2, e$2) {
			for (var n$2 in t$2) e$2[n$2] = t$2[n$2];
		}
		function l$1(t$2, e$2, n$2) {
			return r$1(t$2, e$2, n$2);
		}
		r$1.from && r$1.alloc && r$1.allocUnsafe && r$1.allocUnsafeSlow ? t$1.exports = a$1 : (i$1(a$1, e$1), e$1.Buffer = l$1), i$1(r$1, l$1), l$1.from = function(t$2, e$2, n$2) {
			if ("number" == typeof t$2) throw new TypeError("Argument must not be a number");
			return r$1(t$2, e$2, n$2);
		}, l$1.alloc = function(t$2, e$2, n$2) {
			if ("number" != typeof t$2) throw new TypeError("Argument must be a number");
			var a$2 = r$1(t$2);
			return void 0 !== e$2 ? "string" == typeof n$2 ? a$2.fill(e$2, n$2) : a$2.fill(e$2) : a$2.fill(0), a$2;
		}, l$1.allocUnsafe = function(t$2) {
			if ("number" != typeof t$2) throw new TypeError("Argument must be a number");
			return r$1(t$2);
		}, l$1.allocUnsafeSlow = function(t$2) {
			if ("number" != typeof t$2) throw new TypeError("Argument must be a number");
			return a$1.SlowBuffer(t$2);
		};
	},
	8571: function(t$1, e$1, n$1) {
		var a$1;
		(function(r$1, i$1) {
			var l$1 = "function", o$1 = "undefined", s$1 = "object", u$1 = "string", d$1 = "major", c$1 = "model", f$1 = "name", g$1 = "type", m$1 = "vendor", h$1 = "version", p$1 = "architecture", b$1 = "console", y$1 = "mobile", E$1 = "tablet", _$1 = "smarttv", T$1 = "wearable", v$1 = "embedded", w$1 = "Amazon", S$1 = "Apple", I = "ASUS", k = "BlackBerry", A = "Browser", R = "Chrome", N = "Firefox", C = "Google", D = "Huawei", x = "LG", M = "Microsoft", z = "Motorola", O = "Opera", P = "Samsung", L = "Sharp", F = "Sony", U = "Xiaomi", j = "Zebra", q = "Facebook", B = "Chromium OS", G = "Mac OS", H = function(t$2) {
				for (var e$2 = {}, n$2 = 0; n$2 < t$2.length; n$2++) e$2[t$2[n$2].toUpperCase()] = t$2[n$2];
				return e$2;
			}, Y = function(t$2, e$2) {
				return typeof t$2 === u$1 && -1 !== V(e$2).indexOf(V(t$2));
			}, V = function(t$2) {
				return t$2.toLowerCase();
			}, K = function(t$2, e$2) {
				if (typeof t$2 === u$1) return t$2 = t$2.replace(/^\s\s*/, ""), typeof e$2 === o$1 ? t$2 : t$2.substring(0, 500);
			}, W = function(t$2, e$2) {
				for (var n$2, a$2, r$2, o$2, u$2, d$2, c$2 = 0; c$2 < e$2.length && !u$2;) {
					var f$2 = e$2[c$2], g$2 = e$2[c$2 + 1];
					for (n$2 = a$2 = 0; n$2 < f$2.length && !u$2 && f$2[n$2];) if (u$2 = f$2[n$2++].exec(t$2)) for (r$2 = 0; r$2 < g$2.length; r$2++) d$2 = u$2[++a$2], typeof (o$2 = g$2[r$2]) === s$1 && o$2.length > 0 ? 2 === o$2.length ? typeof o$2[1] == l$1 ? this[o$2[0]] = o$2[1].call(this, d$2) : this[o$2[0]] = o$2[1] : 3 === o$2.length ? typeof o$2[1] !== l$1 || o$2[1].exec && o$2[1].test ? this[o$2[0]] = d$2 ? d$2.replace(o$2[1], o$2[2]) : i$1 : this[o$2[0]] = d$2 ? o$2[1].call(this, d$2, o$2[2]) : i$1 : 4 === o$2.length && (this[o$2[0]] = d$2 ? o$2[3].call(this, d$2.replace(o$2[1], o$2[2])) : i$1) : this[o$2] = d$2 || i$1;
					c$2 += 2;
				}
			}, $ = function(t$2, e$2) {
				for (var n$2 in e$2) if (typeof e$2[n$2] === s$1 && e$2[n$2].length > 0) {
					for (var a$2 = 0; a$2 < e$2[n$2].length; a$2++) if (Y(e$2[n$2][a$2], t$2)) return "?" === n$2 ? i$1 : n$2;
				} else if (Y(e$2[n$2], t$2)) return "?" === n$2 ? i$1 : n$2;
				return t$2;
			}, X = {
				ME: "4.90",
				"NT 3.11": "NT3.51",
				"NT 4.0": "NT4.0",
				2e3: "NT 5.0",
				XP: ["NT 5.1", "NT 5.2"],
				Vista: "NT 6.0",
				7: "NT 6.1",
				8: "NT 6.2",
				8.1: "NT 6.3",
				10: ["NT 6.4", "NT 10.0"],
				RT: "ARM"
			}, Q = {
				browser: [
					[/\b(?:crmo|crios)\/([\w\.]+)/i],
					[h$1, [f$1, "Chrome"]],
					[/edg(?:e|ios|a)?\/([\w\.]+)/i],
					[h$1, [f$1, "Edge"]],
					[
						/(opera mini)\/([-\w\.]+)/i,
						/(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
						/(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i
					],
					[f$1, h$1],
					[/opios[\/ ]+([\w\.]+)/i],
					[h$1, [f$1, O + " Mini"]],
					[/\bop(?:rg)?x\/([\w\.]+)/i],
					[h$1, [f$1, O + " GX"]],
					[/\bopr\/([\w\.]+)/i],
					[h$1, [f$1, O]],
					[/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],
					[h$1, [f$1, "Baidu"]],
					[
						/(kindle)\/([\w\.]+)/i,
						/(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i,
						/(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i,
						/(?:ms|\()(ie) ([\w\.]+)/i,
						/(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i,
						/(heytap|ovi)browser\/([\d\.]+)/i,
						/(weibo)__([\d\.]+)/i
					],
					[f$1, h$1],
					[/\bddg\/([\w\.]+)/i],
					[h$1, [f$1, "DuckDuckGo"]],
					[/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],
					[h$1, [f$1, "UC" + A]],
					[
						/microm.+\bqbcore\/([\w\.]+)/i,
						/\bqbcore\/([\w\.]+).+microm/i,
						/micromessenger\/([\w\.]+)/i
					],
					[h$1, [f$1, "WeChat"]],
					[/konqueror\/([\w\.]+)/i],
					[h$1, [f$1, "Konqueror"]],
					[/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],
					[h$1, [f$1, "IE"]],
					[/ya(?:search)?browser\/([\w\.]+)/i],
					[h$1, [f$1, "Yandex"]],
					[/slbrowser\/([\w\.]+)/i],
					[h$1, [f$1, "Smart Lenovo " + A]],
					[/(avast|avg)\/([\w\.]+)/i],
					[[
						f$1,
						/(.+)/,
						"$1 Secure " + A
					], h$1],
					[/\bfocus\/([\w\.]+)/i],
					[h$1, [f$1, N + " Focus"]],
					[/\bopt\/([\w\.]+)/i],
					[h$1, [f$1, O + " Touch"]],
					[/coc_coc\w+\/([\w\.]+)/i],
					[h$1, [f$1, "Coc Coc"]],
					[/dolfin\/([\w\.]+)/i],
					[h$1, [f$1, "Dolphin"]],
					[/coast\/([\w\.]+)/i],
					[h$1, [f$1, O + " Coast"]],
					[/miuibrowser\/([\w\.]+)/i],
					[h$1, [f$1, "MIUI " + A]],
					[/fxios\/([-\w\.]+)/i],
					[h$1, [f$1, N]],
					[/\bqihu|(qi?ho?o?|360)browser/i],
					[[f$1, "360 " + A]],
					[/(oculus|sailfish|huawei|vivo)browser\/([\w\.]+)/i],
					[[
						f$1,
						/(.+)/,
						"$1 " + A
					], h$1],
					[/samsungbrowser\/([\w\.]+)/i],
					[h$1, [f$1, P + " Internet"]],
					[/(comodo_dragon)\/([\w\.]+)/i],
					[[
						f$1,
						/_/g,
						" "
					], h$1],
					[/metasr[\/ ]?([\d\.]+)/i],
					[h$1, [f$1, "Sogou Explorer"]],
					[/(sogou)mo\w+\/([\d\.]+)/i],
					[[f$1, "Sogou Mobile"], h$1],
					[
						/(electron)\/([\w\.]+) safari/i,
						/(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
						/m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i
					],
					[f$1, h$1],
					[/(lbbrowser)/i, /\[(linkedin)app\]/i],
					[f$1],
					[/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],
					[[f$1, q], h$1],
					[
						/(Klarna)\/([\w\.]+)/i,
						/(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
						/(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
						/safari (line)\/([\w\.]+)/i,
						/\b(line)\/([\w\.]+)\/iab/i,
						/(alipay)client\/([\w\.]+)/i,
						/(twitter)(?:and| f.+e\/([\w\.]+))/i,
						/(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i
					],
					[f$1, h$1],
					[/\bgsa\/([\w\.]+) .*safari\//i],
					[h$1, [f$1, "GSA"]],
					[/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],
					[h$1, [f$1, "TikTok"]],
					[/headlesschrome(?:\/([\w\.]+)| )/i],
					[h$1, [f$1, R + " Headless"]],
					[/ wv\).+(chrome)\/([\w\.]+)/i],
					[[f$1, R + " WebView"], h$1],
					[/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],
					[h$1, [f$1, "Android " + A]],
					[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],
					[f$1, h$1],
					[/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],
					[h$1, [f$1, "Mobile Safari"]],
					[/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],
					[h$1, f$1],
					[/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],
					[f$1, [
						h$1,
						$,
						{
							"1.0": "/8",
							1.2: "/1",
							1.3: "/3",
							"2.0": "/412",
							"2.0.2": "/416",
							"2.0.3": "/417",
							"2.0.4": "/419",
							"?": "/"
						}
					]],
					[/(webkit|khtml)\/([\w\.]+)/i],
					[f$1, h$1],
					[/(navigator|netscape\d?)\/([-\w\.]+)/i],
					[[f$1, "Netscape"], h$1],
					[/mobile vr; rv:([\w\.]+)\).+firefox/i],
					[h$1, [f$1, N + " Reality"]],
					[
						/ekiohf.+(flow)\/([\w\.]+)/i,
						/(swiftfox)/i,
						/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i,
						/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
						/(firefox)\/([\w\.]+)/i,
						/(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
						/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
						/(links) \(([\w\.]+)/i,
						/panasonic;(viera)/i
					],
					[f$1, h$1],
					[/(cobalt)\/([\w\.]+)/i],
					[f$1, [
						h$1,
						/master.|lts./,
						""
					]]
				],
				cpu: [
					[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],
					[[p$1, "amd64"]],
					[/(ia32(?=;))/i],
					[[p$1, V]],
					[/((?:i[346]|x)86)[;\)]/i],
					[[p$1, "ia32"]],
					[/\b(aarch64|arm(v?8e?l?|_?64))\b/i],
					[[p$1, "arm64"]],
					[/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
					[[p$1, "armhf"]],
					[/windows (ce|mobile); ppc;/i],
					[[p$1, "arm"]],
					[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],
					[[
						p$1,
						/ower/,
						"",
						V
					]],
					[/(sun4\w)[;\)]/i],
					[[p$1, "sparc"]],
					[/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],
					[[p$1, V]]
				],
				device: [
					[/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],
					[
						c$1,
						[m$1, P],
						[g$1, E$1]
					],
					[
						/\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
						/samsung[- ]([-\w]+)/i,
						/sec-(sgh\w+)/i
					],
					[
						c$1,
						[m$1, P],
						[g$1, y$1]
					],
					[/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],
					[
						c$1,
						[m$1, S$1],
						[g$1, y$1]
					],
					[
						/\((ipad);[-\w\),; ]+apple/i,
						/applecoremedia\/[\w\.]+ \((ipad)/i,
						/\b(ipad)\d\d?,\d\d?[;\]].+ios/i
					],
					[
						c$1,
						[m$1, S$1],
						[g$1, E$1]
					],
					[/(macintosh);/i],
					[c$1, [m$1, S$1]],
					[/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],
					[
						c$1,
						[m$1, L],
						[g$1, y$1]
					],
					[/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],
					[
						c$1,
						[m$1, D],
						[g$1, E$1]
					],
					[/(?:huawei|honor)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],
					[
						c$1,
						[m$1, D],
						[g$1, y$1]
					],
					[
						/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
						/\b; (\w+) build\/hm\1/i,
						/\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
						/\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
						/oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
						/\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i
					],
					[
						[
							c$1,
							/_/g,
							" "
						],
						[m$1, U],
						[g$1, y$1]
					],
					[/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i, /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i],
					[
						[
							c$1,
							/_/g,
							" "
						],
						[m$1, U],
						[g$1, E$1]
					],
					[/; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],
					[
						c$1,
						[m$1, "OPPO"],
						[g$1, y$1]
					],
					[/\b(opd2\d{3}a?) bui/i],
					[
						c$1,
						[m$1, "OPPO"],
						[g$1, E$1]
					],
					[/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i],
					[
						c$1,
						[m$1, "Vivo"],
						[g$1, y$1]
					],
					[/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],
					[
						c$1,
						[m$1, "Realme"],
						[g$1, y$1]
					],
					[
						/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
						/\bmot(?:orola)?[- ](\w*)/i,
						/((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i
					],
					[
						c$1,
						[m$1, z],
						[g$1, y$1]
					],
					[/\b(mz60\d|xoom[2 ]{0,2}) build\//i],
					[
						c$1,
						[m$1, z],
						[g$1, E$1]
					],
					[/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],
					[
						c$1,
						[m$1, x],
						[g$1, E$1]
					],
					[
						/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
						/\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
						/\blg-?([\d\w]+) bui/i
					],
					[
						c$1,
						[m$1, x],
						[g$1, y$1]
					],
					[/(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i],
					[
						c$1,
						[m$1, "Lenovo"],
						[g$1, E$1]
					],
					[/(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i],
					[
						[
							c$1,
							/_/g,
							" "
						],
						[m$1, "Nokia"],
						[g$1, y$1]
					],
					[/(pixel c)\b/i],
					[
						c$1,
						[m$1, C],
						[g$1, E$1]
					],
					[/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],
					[
						c$1,
						[m$1, C],
						[g$1, y$1]
					],
					[/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],
					[
						c$1,
						[m$1, F],
						[g$1, y$1]
					],
					[/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i],
					[
						[c$1, "Xperia Tablet"],
						[m$1, F],
						[g$1, E$1]
					],
					[/ (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],
					[
						c$1,
						[m$1, "OnePlus"],
						[g$1, y$1]
					],
					[
						/(alexa)webm/i,
						/(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i,
						/(kf[a-z]+)( bui|\)).+silk\//i
					],
					[
						c$1,
						[m$1, w$1],
						[g$1, E$1]
					],
					[/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],
					[
						[
							c$1,
							/(.+)/g,
							"Fire Phone $1"
						],
						[m$1, w$1],
						[g$1, y$1]
					],
					[/(playbook);[-\w\),; ]+(rim)/i],
					[
						c$1,
						m$1,
						[g$1, E$1]
					],
					[/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i],
					[
						c$1,
						[m$1, k],
						[g$1, y$1]
					],
					[/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],
					[
						c$1,
						[m$1, I],
						[g$1, E$1]
					],
					[/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],
					[
						c$1,
						[m$1, I],
						[g$1, y$1]
					],
					[/(nexus 9)/i],
					[
						c$1,
						[m$1, "HTC"],
						[g$1, E$1]
					],
					[
						/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
						/(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
						/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i
					],
					[
						m$1,
						[
							c$1,
							/_/g,
							" "
						],
						[g$1, y$1]
					],
					[/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],
					[
						c$1,
						[m$1, "Acer"],
						[g$1, E$1]
					],
					[/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i],
					[
						c$1,
						[m$1, "Meizu"],
						[g$1, y$1]
					],
					[/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],
					[
						c$1,
						[m$1, "Ulefone"],
						[g$1, y$1]
					],
					[
						/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i,
						/(hp) ([\w ]+\w)/i,
						/(asus)-?(\w+)/i,
						/(microsoft); (lumia[\w ]+)/i,
						/(lenovo)[-_ ]?([-\w]+)/i,
						/(jolla)/i,
						/(oppo) ?([\w ]+) bui/i
					],
					[
						m$1,
						c$1,
						[g$1, y$1]
					],
					[
						/(kobo)\s(ereader|touch)/i,
						/(archos) (gamepad2?)/i,
						/(hp).+(touchpad(?!.+tablet)|tablet)/i,
						/(kindle)\/([\w\.]+)/i,
						/(nook)[\w ]+build\/(\w+)/i,
						/(dell) (strea[kpr\d ]*[\dko])/i,
						/(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
						/(trinity)[- ]*(t\d{3}) bui/i,
						/(gigaset)[- ]+(q\w{1,9}) bui/i,
						/(vodafone) ([\w ]+)(?:\)| bui)/i
					],
					[
						m$1,
						c$1,
						[g$1, E$1]
					],
					[/(surface duo)/i],
					[
						c$1,
						[m$1, M],
						[g$1, E$1]
					],
					[/droid [\d\.]+; (fp\du?)(?: b|\))/i],
					[
						c$1,
						[m$1, "Fairphone"],
						[g$1, y$1]
					],
					[/(u304aa)/i],
					[
						c$1,
						[m$1, "AT&T"],
						[g$1, y$1]
					],
					[/\bsie-(\w*)/i],
					[
						c$1,
						[m$1, "Siemens"],
						[g$1, y$1]
					],
					[/\b(rct\w+) b/i],
					[
						c$1,
						[m$1, "RCA"],
						[g$1, E$1]
					],
					[/\b(venue[\d ]{2,7}) b/i],
					[
						c$1,
						[m$1, "Dell"],
						[g$1, E$1]
					],
					[/\b(q(?:mv|ta)\w+) b/i],
					[
						c$1,
						[m$1, "Verizon"],
						[g$1, E$1]
					],
					[/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],
					[
						c$1,
						[m$1, "Barnes & Noble"],
						[g$1, E$1]
					],
					[/\b(tm\d{3}\w+) b/i],
					[
						c$1,
						[m$1, "NuVision"],
						[g$1, E$1]
					],
					[/\b(k88) b/i],
					[
						c$1,
						[m$1, "ZTE"],
						[g$1, E$1]
					],
					[/\b(nx\d{3}j) b/i],
					[
						c$1,
						[m$1, "ZTE"],
						[g$1, y$1]
					],
					[/\b(gen\d{3}) b.+49h/i],
					[
						c$1,
						[m$1, "Swiss"],
						[g$1, y$1]
					],
					[/\b(zur\d{3}) b/i],
					[
						c$1,
						[m$1, "Swiss"],
						[g$1, E$1]
					],
					[/\b((zeki)?tb.*\b) b/i],
					[
						c$1,
						[m$1, "Zeki"],
						[g$1, E$1]
					],
					[/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i],
					[
						[m$1, "Dragon Touch"],
						c$1,
						[g$1, E$1]
					],
					[/\b(ns-?\w{0,9}) b/i],
					[
						c$1,
						[m$1, "Insignia"],
						[g$1, E$1]
					],
					[/\b((nxa|next)-?\w{0,9}) b/i],
					[
						c$1,
						[m$1, "NextBook"],
						[g$1, E$1]
					],
					[/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],
					[
						[m$1, "Voice"],
						c$1,
						[g$1, y$1]
					],
					[/\b(lvtel\-)?(v1[12]) b/i],
					[
						[m$1, "LvTel"],
						c$1,
						[g$1, y$1]
					],
					[/\b(ph-1) /i],
					[
						c$1,
						[m$1, "Essential"],
						[g$1, y$1]
					],
					[/\b(v(100md|700na|7011|917g).*\b) b/i],
					[
						c$1,
						[m$1, "Envizen"],
						[g$1, E$1]
					],
					[/\b(trio[-\w\. ]+) b/i],
					[
						c$1,
						[m$1, "MachSpeed"],
						[g$1, E$1]
					],
					[/\btu_(1491) b/i],
					[
						c$1,
						[m$1, "Rotor"],
						[g$1, E$1]
					],
					[/(shield[\w ]+) b/i],
					[
						c$1,
						[m$1, "Nvidia"],
						[g$1, E$1]
					],
					[/(sprint) (\w+)/i],
					[
						m$1,
						c$1,
						[g$1, y$1]
					],
					[/(kin\.[onetw]{3})/i],
					[
						[
							c$1,
							/\./g,
							" "
						],
						[m$1, M],
						[g$1, y$1]
					],
					[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
					[
						c$1,
						[m$1, j],
						[g$1, E$1]
					],
					[/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],
					[
						c$1,
						[m$1, j],
						[g$1, y$1]
					],
					[/smart-tv.+(samsung)/i],
					[m$1, [g$1, _$1]],
					[/hbbtv.+maple;(\d+)/i],
					[
						[
							c$1,
							/^/,
							"SmartTV"
						],
						[m$1, P],
						[g$1, _$1]
					],
					[/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],
					[[m$1, x], [g$1, _$1]],
					[/(apple) ?tv/i],
					[
						m$1,
						[c$1, S$1 + " TV"],
						[g$1, _$1]
					],
					[/crkey/i],
					[
						[c$1, R + "cast"],
						[m$1, C],
						[g$1, _$1]
					],
					[/droid.+aft(\w+)( bui|\))/i],
					[
						c$1,
						[m$1, w$1],
						[g$1, _$1]
					],
					[/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i],
					[
						c$1,
						[m$1, L],
						[g$1, _$1]
					],
					[/(bravia[\w ]+)( bui|\))/i],
					[
						c$1,
						[m$1, F],
						[g$1, _$1]
					],
					[/(mitv-\w{5}) bui/i],
					[
						c$1,
						[m$1, U],
						[g$1, _$1]
					],
					[/Hbbtv.*(technisat) (.*);/i],
					[
						m$1,
						c$1,
						[g$1, _$1]
					],
					[/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i, /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i],
					[
						[m$1, K],
						[c$1, K],
						[g$1, _$1]
					],
					[/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],
					[[g$1, _$1]],
					[/(ouya)/i, /(nintendo) ([wids3utch]+)/i],
					[
						m$1,
						c$1,
						[g$1, b$1]
					],
					[/droid.+; (shield) bui/i],
					[
						c$1,
						[m$1, "Nvidia"],
						[g$1, b$1]
					],
					[/(playstation [345portablevi]+)/i],
					[
						c$1,
						[m$1, F],
						[g$1, b$1]
					],
					[/\b(xbox(?: one)?(?!; xbox))[\); ]/i],
					[
						c$1,
						[m$1, M],
						[g$1, b$1]
					],
					[/((pebble))app/i],
					[
						m$1,
						c$1,
						[g$1, T$1]
					],
					[/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],
					[
						c$1,
						[m$1, S$1],
						[g$1, T$1]
					],
					[/droid.+; (glass) \d/i],
					[
						c$1,
						[m$1, C],
						[g$1, T$1]
					],
					[/droid.+; (wt63?0{2,3})\)/i],
					[
						c$1,
						[m$1, j],
						[g$1, T$1]
					],
					[/(quest( \d| pro)?)/i],
					[
						c$1,
						[m$1, q],
						[g$1, T$1]
					],
					[/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],
					[m$1, [g$1, v$1]],
					[/(aeobc)\b/i],
					[
						c$1,
						[m$1, w$1],
						[g$1, v$1]
					],
					[/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i],
					[c$1, [g$1, y$1]],
					[/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],
					[c$1, [g$1, E$1]],
					[/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],
					[[g$1, E$1]],
					[/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],
					[[g$1, y$1]],
					[/(android[-\w\. ]{0,9});.+buil/i],
					[c$1, [m$1, "Generic"]]
				],
				engine: [
					[/windows.+ edge\/([\w\.]+)/i],
					[h$1, [f$1, "EdgeHTML"]],
					[/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
					[h$1, [f$1, "Blink"]],
					[
						/(presto)\/([\w\.]+)/i,
						/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
						/ekioh(flow)\/([\w\.]+)/i,
						/(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
						/(icab)[\/ ]([23]\.[\d\.]+)/i,
						/\b(libweb)/i
					],
					[f$1, h$1],
					[/rv\:([\w\.]{1,9})\b.+(gecko)/i],
					[h$1, f$1]
				],
				os: [
					[/microsoft (windows) (vista|xp)/i],
					[f$1, h$1],
					[/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],
					[f$1, [
						h$1,
						$,
						X
					]],
					[
						/windows nt 6\.2; (arm)/i,
						/windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,
						/(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i
					],
					[[
						h$1,
						$,
						X
					], [f$1, "Windows"]],
					[
						/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
						/(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,
						/cfnetwork\/.+darwin/i
					],
					[[
						h$1,
						/_/g,
						"."
					], [f$1, "iOS"]],
					[/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i],
					[[f$1, G], [
						h$1,
						/_/g,
						"."
					]],
					[/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
					[h$1, f$1],
					[
						/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i,
						/(blackberry)\w*\/([\w\.]*)/i,
						/(tizen|kaios)[\/ ]([\w\.]+)/i,
						/\((series40);/i
					],
					[f$1, h$1],
					[/\(bb(10);/i],
					[h$1, [f$1, k]],
					[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],
					[h$1, [f$1, "Symbian"]],
					[/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],
					[h$1, [f$1, N + " OS"]],
					[/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
					[h$1, [f$1, "webOS"]],
					[/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],
					[h$1, [f$1, "watchOS"]],
					[/crkey\/([\d\.]+)/i],
					[h$1, [f$1, R + "cast"]],
					[/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],
					[[f$1, B], h$1],
					[
						/panasonic;(viera)/i,
						/(netrange)mmh/i,
						/(nettv)\/(\d+\.[\w\.]+)/i,
						/(nintendo|playstation) ([wids345portablevuch]+)/i,
						/(xbox); +xbox ([^\);]+)/i,
						/\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
						/(mint)[\/\(\) ]?(\w*)/i,
						/(mageia|vectorlinux)[; ]/i,
						/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
						/(hurd|linux) ?([\w\.]*)/i,
						/(gnu) ?([\w\.]*)/i,
						/\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
						/(haiku) (\w+)/i
					],
					[f$1, h$1],
					[/(sunos) ?([\w\.\d]*)/i],
					[[f$1, "Solaris"], h$1],
					[
						/((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
						/(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
						/\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
						/(unix) ?([\w\.]*)/i
					],
					[f$1, h$1]
				]
			}, Z = function(t$2, e$2) {
				if (typeof t$2 === s$1 && (e$2 = t$2, t$2 = i$1), !(this instanceof Z)) return new Z(t$2, e$2).getResult();
				var n$2 = typeof r$1 !== o$1 && r$1.navigator ? r$1.navigator : i$1, a$2 = t$2 || (n$2 && n$2.userAgent ? n$2.userAgent : ""), b$2 = n$2 && n$2.userAgentData ? n$2.userAgentData : i$1, _$2 = e$2 ? function(t$3, e$3) {
					var n$3 = {};
					for (var a$3 in t$3) e$3[a$3] && e$3[a$3].length % 2 == 0 ? n$3[a$3] = e$3[a$3].concat(t$3[a$3]) : n$3[a$3] = t$3[a$3];
					return n$3;
				}(Q, e$2) : Q, T$2 = n$2 && n$2.userAgent == a$2;
				return this.getBrowser = function() {
					var t$3, e$3 = {};
					return e$3[f$1] = i$1, e$3[h$1] = i$1, W.call(e$3, a$2, _$2.browser), e$3[d$1] = typeof (t$3 = e$3[h$1]) === u$1 ? t$3.replace(/[^\d\.]/g, "").split(".")[0] : i$1, T$2 && n$2 && n$2.brave && typeof n$2.brave.isBrave == l$1 && (e$3[f$1] = "Brave"), e$3;
				}, this.getCPU = function() {
					var t$3 = {};
					return t$3[p$1] = i$1, W.call(t$3, a$2, _$2.cpu), t$3;
				}, this.getDevice = function() {
					var t$3 = {};
					return t$3[m$1] = i$1, t$3[c$1] = i$1, t$3[g$1] = i$1, W.call(t$3, a$2, _$2.device), T$2 && !t$3[g$1] && b$2 && b$2.mobile && (t$3[g$1] = y$1), T$2 && "Macintosh" == t$3[c$1] && n$2 && typeof n$2.standalone !== o$1 && n$2.maxTouchPoints && n$2.maxTouchPoints > 2 && (t$3[c$1] = "iPad", t$3[g$1] = E$1), t$3;
				}, this.getEngine = function() {
					var t$3 = {};
					return t$3[f$1] = i$1, t$3[h$1] = i$1, W.call(t$3, a$2, _$2.engine), t$3;
				}, this.getOS = function() {
					var t$3 = {};
					return t$3[f$1] = i$1, t$3[h$1] = i$1, W.call(t$3, a$2, _$2.os), T$2 && !t$3[f$1] && b$2 && b$2.platform && "Unknown" != b$2.platform && (t$3[f$1] = b$2.platform.replace(/chrome os/i, B).replace(/macos/i, G)), t$3;
				}, this.getResult = function() {
					return {
						ua: this.getUA(),
						browser: this.getBrowser(),
						engine: this.getEngine(),
						os: this.getOS(),
						device: this.getDevice(),
						cpu: this.getCPU()
					};
				}, this.getUA = function() {
					return a$2;
				}, this.setUA = function(t$3) {
					return a$2 = typeof t$3 === u$1 && t$3.length > 500 ? K(t$3, 500) : t$3, this;
				}, this.setUA(a$2), this;
			};
			Z.VERSION = "1.0.38", Z.BROWSER = H([
				f$1,
				h$1,
				d$1
			]), Z.CPU = H([p$1]), Z.DEVICE = H([
				c$1,
				m$1,
				g$1,
				b$1,
				y$1,
				_$1,
				E$1,
				T$1,
				v$1
			]), Z.ENGINE = Z.OS = H([f$1, h$1]), typeof e$1 !== o$1 ? (t$1.exports && (e$1 = t$1.exports = Z), e$1.UAParser = Z) : n$1.amdO ? (a$1 = function() {
				return Z;
			}.call(e$1, n$1, e$1, t$1)) === i$1 || (t$1.exports = a$1) : typeof r$1 !== o$1 && (r$1.UAParser = Z);
			var J = typeof r$1 !== o$1 && (r$1.jQuery || r$1.Zepto);
			if (J && !J.ua) {
				var tt = new Z();
				J.ua = tt.getResult(), J.ua.get = function() {
					return tt.getUA();
				}, J.ua.set = function(t$2) {
					tt.setUA(t$2);
					var e$2 = tt.getResult();
					for (var n$2 in e$2) J.ua[n$2] = e$2[n$2];
				};
			}
		})("object" == typeof window ? window : this);
	},
	9e3: function(t$1, e$1, n$1) {
		function a$1(t$2) {
			try {
				if (!n$1.g.localStorage) return !1;
			} catch (t$3) {
				return !1;
			}
			var e$2 = n$1.g.localStorage[t$2];
			return null != e$2 && "true" === String(e$2).toLowerCase();
		}
		t$1.exports = function(t$2, e$2) {
			if (a$1("noDeprecation")) return t$2;
			var n$2 = !1;
			return function() {
				if (!n$2) {
					if (a$1("throwDeprecation")) throw new Error(e$2);
					a$1("traceDeprecation") ? console.trace(e$2) : console.warn(e$2), n$2 = !0;
				}
				return t$2.apply(this, arguments);
			};
		};
	},
	3779: function() {},
	7199: function() {},
	5393: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, {
			Debug: function() {
				return i$1.default;
			},
			FactoryMaker: function() {
				return r$1.default;
			},
			MediaPlayer: function() {
				return a$1.default;
			}
		});
		var a$1 = n$1(255), r$1 = n$1(138), i$1 = n$1(649), l$1 = n$1(8986), o$1 = "undefined" != typeof window && window || global, s$1 = o$1.dashjs;
		s$1 || (s$1 = o$1.dashjs = {}), s$1.MediaPlayer = a$1.default, s$1.FactoryMaker = r$1.default, s$1.Debug = i$1.default, s$1.Version = (0, l$1.getVersionString)(), e$1.default = s$1;
	},
	649: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(8850), r$1 = n$1(3621), i$1 = n$1(138);
		function l$1(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, a$1.default)(e$2).getInstance(), i$2 = t$2.settings, l$2 = [];
			let o$2, s$1, u$1, d$1;
			function c$1(t$3) {
				return t$3 && t$3.bind ? t$3.bind(window.console) : window.console.log.bind(window.console);
			}
			function f$1() {
				for (var t$3 = arguments.length, e$3 = new Array(t$3), n$3 = 0; n$3 < t$3; n$3++) e$3[n$3] = arguments[n$3];
				b$1(1, this, ...e$3);
			}
			function g$1() {
				for (var t$3 = arguments.length, e$3 = new Array(t$3), n$3 = 0; n$3 < t$3; n$3++) e$3[n$3] = arguments[n$3];
				b$1(2, this, ...e$3);
			}
			function m$1() {
				for (var t$3 = arguments.length, e$3 = new Array(t$3), n$3 = 0; n$3 < t$3; n$3++) e$3[n$3] = arguments[n$3];
				b$1(3, this, ...e$3);
			}
			function h$1() {
				for (var t$3 = arguments.length, e$3 = new Array(t$3), n$3 = 0; n$3 < t$3; n$3++) e$3[n$3] = arguments[n$3];
				b$1(4, this, ...e$3);
			}
			function p$1() {
				for (var t$3 = arguments.length, e$3 = new Array(t$3), n$3 = 0; n$3 < t$3; n$3++) e$3[n$3] = arguments[n$3];
				b$1(5, this, ...e$3);
			}
			function b$1(t$3, e$3) {
				let a$2 = "", o$3 = null;
				s$1 && (o$3 = (/* @__PURE__ */ new Date()).getTime(), a$2 += "[" + (o$3 - d$1) + "]"), u$1 && e$3 && e$3.getClassName && (a$2 += "[" + e$3.getClassName() + "]", e$3.getType && (a$2 += "[" + e$3.getType() + "]")), a$2.length > 0 && (a$2 += " ");
				for (var c$2 = arguments.length, f$2 = new Array(c$2 > 2 ? c$2 - 2 : 0), g$2 = 2; g$2 < c$2; g$2++) f$2[g$2 - 2] = arguments[g$2];
				Array.apply(null, f$2).forEach((function(t$4) {
					a$2 += t$4 + " ";
				})), l$2[t$3] && i$2 && i$2.get().debug.logLevel >= t$3 && l$2[t$3](a$2), i$2 && i$2.get().debug.dispatchEvent && n$2.trigger(r$1.default.LOG, {
					message: a$2,
					level: t$3
				});
			}
			return o$2 = {
				getLogger: function(t$3) {
					return {
						fatal: f$1.bind(t$3),
						error: g$1.bind(t$3),
						warn: m$1.bind(t$3),
						info: h$1.bind(t$3),
						debug: p$1.bind(t$3)
					};
				},
				setLogTimestampVisible: function(t$3) {
					s$1 = t$3;
				},
				setCalleeNameVisible: function(t$3) {
					u$1 = t$3;
				}
			}, s$1 = !0, u$1 = !0, d$1 = (/* @__PURE__ */ new Date()).getTime(), "undefined" != typeof window && window.console && (l$2[1] = c$1(window.console.error), l$2[2] = c$1(window.console.error), l$2[3] = c$1(window.console.warn), l$2[4] = c$1(window.console.info), l$2[5] = c$1(window.console.debug)), o$2;
		}
		l$1.__dashjs_factory_name = "Debug";
		const o$1 = i$1.default.getSingletonFactory(l$1);
		o$1.LOG_LEVEL_NONE = 0, o$1.LOG_LEVEL_FATAL = 1, o$1.LOG_LEVEL_ERROR = 2, o$1.LOG_LEVEL_WARNING = 3, o$1.LOG_LEVEL_INFO = 4, o$1.LOG_LEVEL_DEBUG = 5, i$1.default.updateSingletonFactory(l$1.__dashjs_factory_name, o$1), e$1.default = o$1;
	},
	8850: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(138), r$1 = n$1(1191);
		function i$1() {
			let t$2 = {};
			function e$2(e$3, n$3, r$2) {
				let i$2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, l$2 = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
				if (!e$3) throw new Error("event type cannot be null or undefined");
				if (!n$3 || "function" != typeof n$3) throw new Error("listener must be a function: " + n$3);
				let o$1 = i$2.priority || 0;
				if (a$2(e$3, n$3, r$2) >= 0) return;
				t$2[e$3] = t$2[e$3] || [];
				const s$1 = {
					callback: n$3,
					scope: r$2,
					priority: o$1,
					executeOnlyOnce: l$2
				};
				r$2 && r$2.getStreamId && (s$1.streamId = r$2.getStreamId()), r$2 && r$2.getType && (s$1.mediaType = r$2.getType()), i$2 && i$2.mode && (s$1.mode = i$2.mode), t$2[e$3].some(((n$4, a$3) => {
					if (n$4 && o$1 > n$4.priority) return t$2[e$3].splice(a$3, 0, s$1), !0;
				})) || t$2[e$3].push(s$1);
			}
			function n$2(e$3, n$3, r$2) {
				if (!e$3 || !n$3 || !t$2[e$3]) return;
				const i$2 = a$2(e$3, n$3, r$2);
				i$2 < 0 || (t$2[e$3][i$2] = null);
			}
			function a$2(e$3, n$3, a$3) {
				let r$2 = -1;
				return t$2[e$3] ? (t$2[e$3].some(((t$3, e$4) => {
					if (t$3 && t$3.callback === n$3 && (!a$3 || a$3 === t$3.scope)) return r$2 = e$4, !0;
				})), r$2) : r$2;
			}
			return {
				on: function(t$3, n$3, a$3) {
					e$2(t$3, n$3, a$3, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {});
				},
				once: function(t$3, n$3, a$3) {
					e$2(t$3, n$3, a$3, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, !0);
				},
				off: n$2,
				trigger: function(e$3) {
					let a$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i$2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
					if (!e$3 || !t$2[e$3]) return;
					if (a$3 = a$3 || {}, a$3.hasOwnProperty("type")) throw new Error("'type' is a reserved word for event dispatching");
					a$3.type = e$3, i$2.streamId && (a$3.streamId = i$2.streamId), i$2.mediaType && (a$3.mediaType = i$2.mediaType);
					const l$2 = [];
					t$2[e$3].filter(((t$3) => !(!t$3 || i$2.streamId && t$3.streamId && t$3.streamId !== i$2.streamId || i$2.mediaType && t$3.mediaType && t$3.mediaType !== i$2.mediaType || i$2.mode && t$3.mode && t$3.mode !== i$2.mode || !t$3.mode && i$2.mode && i$2.mode === r$1.default.EVENT_MODE_ON_RECEIVE))).forEach(((t$3) => {
						t$3 && t$3.callback.call(t$3.scope, a$3), t$3.executeOnlyOnce && l$2.push(t$3);
					})), l$2.forEach(((t$3) => {
						n$2(e$3, t$3.callback, t$3.scope);
					}));
				},
				reset: function() {
					t$2 = {};
				}
			};
		}
		i$1.__dashjs_factory_name = "EventBus";
		const l$1 = a$1.default.getSingletonFactory(i$1);
		l$1.EVENT_PRIORITY_LOW = 0, l$1.EVENT_PRIORITY_HIGH = 5e3, a$1.default.updateSingletonFactory(i$1.__dashjs_factory_name, l$1), e$1.default = l$1;
	},
	138: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		e$1.default = function() {
			let t$2, e$2 = [];
			const n$2 = {}, a$1 = {};
			function r$1(t$3, n$3) {
				for (const a$2 in e$2) {
					const r$2 = e$2[a$2];
					if (r$2.context === t$3 && r$2.name === n$3) return r$2.instance;
				}
				return null;
			}
			function i$1(t$3, e$3) {
				return e$3[t$3];
			}
			function l$1(t$3, e$3, n$3) {
				t$3 in n$3 && (n$3[t$3] = e$3);
			}
			function o$1(e$3, n$3, a$2) {
				let r$2;
				const i$2 = e$3.__dashjs_factory_name, l$2 = n$3[i$2];
				if (l$2) {
					let i$3 = l$2.instance;
					if (!l$2.override) return i$3.apply({
						context: n$3,
						factory: t$2
					}, a$2);
					r$2 = e$3.apply({ context: n$3 }, a$2), i$3 = i$3.apply({
						context: n$3,
						factory: t$2,
						parent: r$2
					}, a$2);
					for (const t$3 in i$3) r$2.hasOwnProperty(t$3) && (r$2[t$3] = i$3[t$3]);
				} else r$2 = e$3.apply({ context: n$3 }, a$2);
				return r$2.getClassName = function() {
					return i$2;
				}, r$2;
			}
			return t$2 = {
				extend: function(t$3, e$3, n$3, a$2) {
					!a$2[t$3] && e$3 && (a$2[t$3] = {
						instance: e$3,
						override: n$3
					});
				},
				getSingletonInstance: r$1,
				setSingletonInstance: function(t$3, n$3, a$2) {
					for (const r$2 in e$2) {
						const i$2 = e$2[r$2];
						if (i$2.context === t$3 && i$2.name === n$3) return void (e$2[r$2].instance = a$2);
					}
					e$2.push({
						name: n$3,
						context: t$3,
						instance: a$2
					});
				},
				deleteSingletonInstances: function(t$3) {
					e$2 = e$2.filter(((e$3) => e$3.context !== t$3));
				},
				getSingletonFactory: function(t$3) {
					let a$2 = i$1(t$3.__dashjs_factory_name, n$2);
					return a$2 || (a$2 = function(n$3) {
						let a$3;
						return void 0 === n$3 && (n$3 = {}), { getInstance: function() {
							return a$3 || (a$3 = r$1(n$3, t$3.__dashjs_factory_name)), a$3 || (a$3 = o$1(t$3, n$3, arguments), e$2.push({
								name: t$3.__dashjs_factory_name,
								context: n$3,
								instance: a$3
							})), a$3;
						} };
					}, n$2[t$3.__dashjs_factory_name] = a$2), a$2;
				},
				getSingletonFactoryByName: function(t$3) {
					return i$1(t$3, n$2);
				},
				updateSingletonFactory: function(t$3, e$3) {
					l$1(t$3, e$3, n$2);
				},
				getClassFactory: function(t$3) {
					let e$3 = i$1(t$3.__dashjs_factory_name, a$1);
					return e$3 || (e$3 = function(e$4) {
						return void 0 === e$4 && (e$4 = {}), { create: function() {
							return o$1(t$3, e$4, arguments);
						} };
					}, a$1[t$3.__dashjs_factory_name] = e$3), e$3;
				},
				getClassFactoryByName: function(t$3) {
					return i$1(t$3, a$1);
				},
				updateClassFactory: function(t$3, e$3) {
					l$1(t$3, e$3, a$1);
				}
			}, t$2;
		}();
	},
	8261: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(138), r$1 = n$1(7263), i$1 = n$1(649), l$1 = n$1(5212), o$1 = n$1(7568), s$1 = n$1(8850), u$1 = n$1(3621);
		function d$1() {
			let t$2;
			const e$2 = this.context, n$2 = (0, s$1.default)(e$2).getInstance(), a$2 = {
				"streaming.delay.liveDelay": u$1.default.SETTING_UPDATED_LIVE_DELAY,
				"streaming.delay.liveDelayFragmentCount": u$1.default.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT,
				"streaming.liveCatchup.enabled": u$1.default.SETTING_UPDATED_CATCHUP_ENABLED,
				"streaming.liveCatchup.playbackRate.min": u$1.default.SETTING_UPDATED_PLAYBACK_RATE_MIN,
				"streaming.liveCatchup.playbackRate.max": u$1.default.SETTING_UPDATED_PLAYBACK_RATE_MAX,
				"streaming.abr.rules.throughputRule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.rules.bolaRule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.rules.insufficientBufferRule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.rules.switchHistoryRule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.rules.droppedFramesRule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.rules.abandonRequestsRule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.rules.l2ARule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.rules.loLPRule.active": u$1.default.SETTING_UPDATED_ABR_ACTIVE_RULES,
				"streaming.abr.maxBitrate.video": u$1.default.SETTING_UPDATED_MAX_BITRATE,
				"streaming.abr.maxBitrate.audio": u$1.default.SETTING_UPDATED_MAX_BITRATE,
				"streaming.abr.minBitrate.video": u$1.default.SETTING_UPDATED_MIN_BITRATE,
				"streaming.abr.minBitrate.audio": u$1.default.SETTING_UPDATED_MIN_BITRATE
			}, d$2 = {
				debug: {
					logLevel: i$1.default.LOG_LEVEL_WARNING,
					dispatchEvent: !1
				},
				streaming: {
					abandonLoadTimeout: 1e4,
					wallclockTimeUpdateInterval: 100,
					manifestUpdateRetryInterval: 100,
					liveUpdateTimeThresholdInMilliseconds: 0,
					cacheInitSegments: !1,
					applyServiceDescription: !0,
					applyProducerReferenceTime: !0,
					applyContentSteering: !0,
					enableManifestDurationMismatchFix: !0,
					parseInbandPrft: !1,
					enableManifestTimescaleMismatchFix: !1,
					capabilities: {
						filterUnsupportedEssentialProperties: !0,
						supportedEssentialProperties: [
							{ schemeIdUri: l$1.default.FONT_DOWNLOAD_DVB_SCHEME },
							{
								schemeIdUri: l$1.default.COLOUR_PRIMARIES_SCHEME_ID_URI,
								value: /1|5|6|7/
							},
							{ schemeIdUri: l$1.default.URL_QUERY_INFO_SCHEME },
							{ schemeIdUri: l$1.default.EXT_URL_QUERY_INFO_SCHEME },
							{
								schemeIdUri: l$1.default.MATRIX_COEFFICIENTS_SCHEME_ID_URI,
								value: /0|1|5|6/
							},
							{
								schemeIdUri: l$1.default.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI,
								value: /1|6|13|14|15/
							},
							...l$1.default.THUMBNAILS_SCHEME_ID_URIS.map(((t$3) => ({ schemeIdUri: t$3 })))
						],
						useMediaCapabilitiesApi: !0,
						filterVideoColorimetryEssentialProperties: !1,
						filterHDRMetadataFormatEssentialProperties: !1
					},
					events: {
						eventControllerRefreshDelay: 100,
						deleteEventMessageDataTimeout: 1e4
					},
					timeShiftBuffer: {
						calcFromSegmentTimeline: !1,
						fallbackToSegmentTimeline: !0
					},
					metrics: { maxListDepth: 100 },
					delay: {
						liveDelayFragmentCount: NaN,
						liveDelay: NaN,
						useSuggestedPresentationDelay: !0
					},
					protection: {
						keepProtectionMediaKeys: !1,
						ignoreEmeEncryptedEvent: !1,
						detectPlayreadyMessageFormat: !0,
						ignoreKeyStatuses: !1
					},
					buffer: {
						enableSeekDecorrelationFix: !1,
						fastSwitchEnabled: null,
						flushBufferAtTrackSwitch: !1,
						reuseExistingSourceBuffers: !0,
						bufferPruningInterval: 10,
						bufferToKeep: 20,
						bufferTimeAtTopQuality: 30,
						bufferTimeAtTopQualityLongForm: 60,
						initialBufferLevel: NaN,
						bufferTimeDefault: 18,
						longFormContentDurationThreshold: 600,
						stallThreshold: .3,
						lowLatencyStallThreshold: .3,
						useAppendWindow: !0,
						setStallState: !0,
						avoidCurrentTimeRangePruning: !1,
						useChangeType: !0,
						mediaSourceDurationInfinity: !0,
						resetSourceBuffersForTrackSwitch: !1,
						syntheticStallEvents: {
							enabled: !1,
							ignoreReadyState: !1
						}
					},
					gaps: {
						jumpGaps: !0,
						jumpLargeGaps: !0,
						smallGapLimit: 1.5,
						threshold: .3,
						enableSeekFix: !0,
						enableStallFix: !1,
						stallSeek: .1
					},
					utcSynchronization: {
						enabled: !0,
						useManifestDateHeaderTimeSource: !0,
						backgroundAttempts: 2,
						timeBetweenSyncAttempts: 30,
						maximumTimeBetweenSyncAttempts: 600,
						minimumTimeBetweenSyncAttempts: 2,
						timeBetweenSyncAttemptsAdjustmentFactor: 2,
						maximumAllowedDrift: 100,
						enableBackgroundSyncAfterSegmentDownloadError: !0,
						defaultTimingSource: {
							scheme: "urn:mpeg:dash:utc:http-xsdate:2014",
							value: "https://time.akamai.com/?iso&ms"
						}
					},
					scheduling: {
						defaultTimeout: 500,
						lowLatencyTimeout: 0,
						scheduleWhilePaused: !0
					},
					text: {
						defaultEnabled: !0,
						dispatchForManualRendering: !1,
						extendSegmentedCues: !0,
						imsc: {
							displayForcedOnlyMode: !1,
							enableRollUp: !0
						},
						webvtt: { customRenderingEnabled: !1 }
					},
					liveCatchup: {
						maxDrift: NaN,
						playbackRate: {
							min: NaN,
							max: NaN
						},
						playbackBufferMin: .5,
						enabled: null,
						mode: l$1.default.LIVE_CATCHUP_MODE_DEFAULT
					},
					lastBitrateCachingInfo: {
						enabled: !0,
						ttl: 36e4
					},
					lastMediaSettingsCachingInfo: {
						enabled: !0,
						ttl: 36e4
					},
					saveLastMediaSettingsForCurrentStreamingSession: !0,
					cacheLoadThresholds: {
						video: 10,
						audio: 5
					},
					trackSwitchMode: {
						audio: l$1.default.TRACK_SWITCH_MODE_ALWAYS_REPLACE,
						video: l$1.default.TRACK_SWITCH_MODE_NEVER_REPLACE
					},
					ignoreSelectionPriority: !1,
					prioritizeRoleMain: !0,
					assumeDefaultRoleAsMain: !0,
					selectionModeForInitialTrack: l$1.default.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY,
					fragmentRequestTimeout: 2e4,
					fragmentRequestProgressTimeout: -1,
					manifestRequestTimeout: 1e4,
					retryIntervals: {
						[o$1.HTTPRequest.MPD_TYPE]: 500,
						[o$1.HTTPRequest.XLINK_EXPANSION_TYPE]: 500,
						[o$1.HTTPRequest.MEDIA_SEGMENT_TYPE]: 1e3,
						[o$1.HTTPRequest.INIT_SEGMENT_TYPE]: 1e3,
						[o$1.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 1e3,
						[o$1.HTTPRequest.INDEX_SEGMENT_TYPE]: 1e3,
						[o$1.HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 1e3,
						[o$1.HTTPRequest.LICENSE]: 1e3,
						[o$1.HTTPRequest.OTHER_TYPE]: 1e3,
						lowLatencyReductionFactor: 10
					},
					retryAttempts: {
						[o$1.HTTPRequest.MPD_TYPE]: 3,
						[o$1.HTTPRequest.XLINK_EXPANSION_TYPE]: 1,
						[o$1.HTTPRequest.MEDIA_SEGMENT_TYPE]: 3,
						[o$1.HTTPRequest.INIT_SEGMENT_TYPE]: 3,
						[o$1.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 3,
						[o$1.HTTPRequest.INDEX_SEGMENT_TYPE]: 3,
						[o$1.HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 3,
						[o$1.HTTPRequest.LICENSE]: 3,
						[o$1.HTTPRequest.OTHER_TYPE]: 3,
						lowLatencyMultiplyFactor: 5
					},
					abr: {
						limitBitrateByPortal: !1,
						usePixelRatioInLimitBitrateByPortal: !1,
						enableSupplementalPropertyAdaptationSetSwitching: !0,
						rules: {
							throughputRule: { active: !0 },
							bolaRule: { active: !0 },
							insufficientBufferRule: {
								active: !0,
								parameters: {
									throughputSafetyFactor: .7,
									segmentIgnoreCount: 2
								}
							},
							switchHistoryRule: {
								active: !0,
								parameters: {
									sampleSize: 8,
									switchPercentageThreshold: .075
								}
							},
							droppedFramesRule: {
								active: !1,
								parameters: {
									minimumSampleSize: 375,
									droppedFramesPercentageThreshold: .15
								}
							},
							abandonRequestsRule: {
								active: !0,
								parameters: {
									abandonDurationMultiplier: 1.8,
									minSegmentDownloadTimeThresholdInMs: 500,
									minThroughputSamplesThreshold: 6
								}
							},
							l2ARule: { active: !1 },
							loLPRule: { active: !1 }
						},
						throughput: {
							averageCalculationMode: l$1.default.THROUGHPUT_CALCULATION_MODES.EWMA,
							lowLatencyDownloadTimeCalculationMode: l$1.default.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING,
							useResourceTimingApi: !0,
							useNetworkInformationApi: {
								xhr: !1,
								fetch: !1
							},
							useDeadTimeLatency: !0,
							bandwidthSafetyFactor: .9,
							sampleSettings: {
								live: 3,
								vod: 4,
								enableSampleSizeAdjustment: !0,
								decreaseScale: .7,
								increaseScale: 1.3,
								maxMeasurementsToKeep: 20,
								averageLatencySampleAmount: 4
							},
							ewma: {
								throughputSlowHalfLifeSeconds: 8,
								throughputFastHalfLifeSeconds: 3,
								latencySlowHalfLifeCount: 2,
								latencyFastHalfLifeCount: 1,
								weightDownloadTimeMultiplicationFactor: .0015
							}
						},
						maxBitrate: {
							audio: -1,
							video: -1
						},
						minBitrate: {
							audio: -1,
							video: -1
						},
						initialBitrate: {
							audio: -1,
							video: -1
						},
						autoSwitchBitrate: {
							audio: !0,
							video: !0
						}
					},
					cmcd: {
						applyParametersFromMpd: !0,
						enabled: !1,
						sid: null,
						cid: null,
						rtp: null,
						rtpSafetyFactor: 5,
						mode: l$1.default.CMCD_MODE_QUERY,
						enabledKeys: l$1.default.CMCD_AVAILABLE_KEYS,
						includeInRequests: ["segment", "mpd"],
						version: 1
					},
					cmsd: {
						enabled: !1,
						abr: {
							applyMb: !1,
							etpWeightRatio: 0
						}
					},
					defaultSchemeIdUri: {
						viewpoint: "",
						audioChannelConfiguration: "urn:mpeg:mpegB:cicp:ChannelConfiguration",
						role: "urn:mpeg:dash:role:2011",
						accessibility: "urn:mpeg:dash:role:2011"
					}
				},
				errors: { recoverAttempts: { mediaErrorDecode: 5 } }
			};
			let c$1 = r$1.default.clone(d$2);
			function f$1(t$3, e$3, i$2) {
				for (let l$2 in t$3) t$3.hasOwnProperty(l$2) && (e$3.hasOwnProperty(l$2) ? "object" != typeof t$3[l$2] || t$3[l$2] instanceof RegExp || t$3[l$2] instanceof Array || null === t$3[l$2] ? (e$3[l$2] = r$1.default.clone(t$3[l$2]), a$2[i$2 + l$2] && n$2.trigger(a$2[i$2 + l$2])) : f$1(t$3[l$2], e$3[l$2], i$2.slice() + l$2 + ".") : console.error("Settings parameter " + i$2 + l$2 + " is not supported"));
			}
			return t$2 = {
				get: function() {
					return c$1;
				},
				update: function(t$3) {
					"object" == typeof t$3 && f$1(t$3, c$1, "");
				},
				reset: function() {
					c$1 = r$1.default.clone(d$2);
				}
			}, t$2;
		}
		d$1.__dashjs_factory_name = "Settings";
		e$1.default = a$1.default.getSingletonFactory(d$1);
	},
	7263: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(3282), r$1 = n$1(8571), i$1 = n$1(5212);
		class l$1 {
			static mixin(t$2, e$2, n$2) {
				let a$2, r$2 = {};
				if (t$2) for (let i$2 in e$2) e$2.hasOwnProperty(i$2) && (a$2 = e$2[i$2], i$2 in t$2 && (t$2[i$2] === a$2 || i$2 in r$2 && r$2[i$2] === a$2) || ("object" == typeof t$2[i$2] && null !== t$2[i$2] ? t$2[i$2] = l$1.mixin(t$2[i$2], a$2, n$2) : t$2[i$2] = n$2(a$2)));
				return t$2;
			}
			static clone(t$2) {
				if (!t$2 || "object" != typeof t$2) return t$2;
				if (t$2 instanceof RegExp) return new RegExp(t$2);
				let e$2;
				if (t$2 instanceof Array) {
					e$2 = [];
					for (let n$2 = 0, a$2 = t$2.length; n$2 < a$2; ++n$2) n$2 in t$2 && e$2.push(l$1.clone(t$2[n$2]));
				} else e$2 = {};
				return l$1.mixin(e$2, t$2, l$1.clone);
			}
			static addAdditionalQueryParameterToUrl(t$2, e$2) {
				try {
					if (!e$2 || 0 === e$2.length) return t$2;
					let n$2 = t$2;
					return e$2.forEach(((t$3) => {
						let { key: e$3, value: a$2 } = t$3;
						const r$2 = n$2.includes("?") ? "&" : "?";
						n$2 += `${r$2}${encodeURIComponent(e$3)}=${encodeURIComponent(a$2)}`;
					})), n$2;
				} catch (e$3) {
					return t$2;
				}
			}
			static removeQueryParameterFromUrl(t$2, e$2) {
				if (!t$2 || !e$2) return t$2;
				const n$2 = new URL(t$2), a$2 = new URLSearchParams(n$2.search);
				if (!a$2 || 0 === a$2.size || !a$2.has(e$2)) return t$2;
				a$2.delete(e$2);
				const r$2 = Array.from(a$2.entries()).map(((t$3) => {
					let [e$3, n$3] = t$3;
					return `${e$3}=${n$3}`;
				})).join("&"), i$2 = `${n$2.origin}${n$2.pathname}`;
				return r$2 ? `${i$2}?${r$2}` : i$2;
			}
			static parseHttpHeaders(t$2) {
				let e$2 = {};
				if (!t$2) return e$2;
				let n$2 = t$2.trim().split("\r\n");
				for (let t$3 = 0, a$2 = n$2.length; t$3 < a$2; t$3++) {
					let a$3 = n$2[t$3], r$2 = a$3.indexOf(": ");
					r$2 > 0 && (e$2[a$3.substring(0, r$2)] = a$3.substring(r$2 + 2));
				}
				return e$2;
			}
			static parseQueryParams(t$2) {
				const e$2 = [], n$2 = new URLSearchParams(t$2);
				for (const [t$3, a$2] of n$2.entries()) e$2.push({
					key: decodeURIComponent(t$3),
					value: decodeURIComponent(a$2)
				});
				return e$2;
			}
			static generateUuid() {
				let t$2 = (/* @__PURE__ */ new Date()).getTime();
				return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e$2) {
					const n$2 = (t$2 + 16 * Math.random()) % 16 | 0;
					return t$2 = Math.floor(t$2 / 16), ("x" == e$2 ? n$2 : 3 & n$2 | 8).toString(16);
				}));
			}
			static generateHashCode(t$2) {
				let e$2 = 0;
				if (0 === t$2.length) return e$2;
				for (let n$2 = 0; n$2 < t$2.length; n$2++) e$2 = (e$2 << 5) - e$2 + t$2.charCodeAt(n$2), e$2 |= 0;
				return e$2;
			}
			static getRelativeUrl(t$2, e$2) {
				try {
					const n$2 = new URL(t$2), r$2 = new URL(e$2);
					if (n$2.protocol = r$2.protocol, n$2.origin !== r$2.origin) return e$2;
					let i$2 = a$1.relative(n$2.pathname.substr(0, n$2.pathname.lastIndexOf("/")), r$2.pathname.substr(0, r$2.pathname.lastIndexOf("/")));
					const l$2 = 0 === i$2.length ? 1 : 0;
					return i$2 += r$2.pathname.substr(r$2.pathname.lastIndexOf("/") + l$2, r$2.pathname.length - 1), r$2.pathname.length < i$2.length ? r$2.pathname : i$2;
				} catch (t$3) {
					return e$2;
				}
			}
			static getHostFromUrl(t$2) {
				try {
					return new URL(t$2).host;
				} catch (t$3) {
					return null;
				}
			}
			static parseUserAgent() {
				let t$2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
				try {
					const e$2 = null === t$2 && "undefined" != typeof navigator ? navigator.userAgent.toLowerCase() : "";
					return (0, r$1.UAParser)(e$2);
				} catch (t$3) {
					return {};
				}
			}
			static stringHasProtocol(t$2) {
				return /(http(s?)):\/\//i.test(t$2);
			}
			static bufferSourceToDataView(t$2) {
				return l$1.toDataView(t$2, DataView);
			}
			static bufferSourceToInt8(t$2) {
				return l$1.toDataView(t$2, Uint8Array);
			}
			static uint8ArrayToString(t$2) {
				return new TextDecoder("utf-8").decode(t$2);
			}
			static bufferSourceToHex(t$2) {
				const e$2 = l$1.bufferSourceToInt8(t$2);
				let n$2 = "";
				for (let t$3 of e$2) t$3 = t$3.toString(16), 1 === t$3.length && (t$3 = "0" + t$3), n$2 += t$3;
				return n$2;
			}
			static toDataView(t$2, e$2) {
				const n$2 = l$1.getArrayBuffer(t$2);
				let a$2 = 1;
				"BYTES_PER_ELEMENT" in DataView && (a$2 = DataView.BYTES_PER_ELEMENT);
				const r$2 = ((t$2.byteOffset || 0) + t$2.byteLength) / a$2, i$2 = (t$2.byteOffset || 0) / a$2, o$1 = Math.floor(Math.max(0, Math.min(i$2, r$2)));
				return new e$2(n$2, o$1, Math.floor(Math.min(o$1 + Math.max(Infinity, 0), r$2)) - o$1);
			}
			static getArrayBuffer(t$2) {
				return t$2 instanceof ArrayBuffer ? t$2 : t$2.buffer;
			}
			static getCodecFamily(t$2) {
				const { base: e$2, profile: n$2 } = l$1._getCodecParts(t$2);
				switch (e$2) {
					case "mp4a":
						switch (n$2) {
							case "69":
							case "6b":
							case "40.34": return i$1.default.CODEC_FAMILIES.MP3;
							case "66":
							case "67":
							case "68":
							case "40.2":
							case "40.02":
							case "40.5":
							case "40.05":
							case "40.29":
							case "40.42": return i$1.default.CODEC_FAMILIES.AAC;
							case "a5": return i$1.default.CODEC_FAMILIES.AC3;
							case "e6": return i$1.default.CODEC_FAMILIES.EC3;
							case "b2": return i$1.default.CODEC_FAMILIES.DTSX;
							case "a9": return i$1.default.CODEC_FAMILIES.DTSC;
						}
						break;
					case "avc1":
					case "avc3": return i$1.default.CODEC_FAMILIES.AVC;
					case "hvc1":
					case "hvc3": return i$1.default.CODEC_FAMILIES.HEVC;
					default: return e$2;
				}
				return e$2;
			}
			static _getCodecParts(t$2) {
				const [e$2, ...n$2] = t$2.split(".");
				return {
					base: e$2,
					profile: n$2.join(".")
				};
			}
		}
		e$1.default = l$1;
	},
	8986: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, { getVersionString: function() {
			return r$1;
		} });
		const a$1 = "5.0.3";
		function r$1() {
			return a$1;
		}
	},
	8748: function(t$1, e$1, n$1) {
		n$1.r(e$1), e$1.default = class {
			extend(t$2, e$2) {
				if (!t$2) return;
				let n$2 = !!e$2 && e$2.override, a$1 = !!e$2 && e$2.publicOnly;
				for (const e$3 in t$2) !t$2.hasOwnProperty(e$3) || this[e$3] && !n$2 || a$1 && -1 === t$2[e$3].indexOf("public_") || (this[e$3] = t$2[e$3]);
			}
		};
	},
	5734: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(7252);
		class r$1 extends a$1.default {
			constructor() {
				super(), this.ATTEMPT_BACKGROUND_SYNC = "attemptBackgroundSync", this.BUFFERING_COMPLETED = "bufferingCompleted", this.BUFFER_CLEARED = "bufferCleared", this.BYTES_APPENDED_END_FRAGMENT = "bytesAppendedEndFragment", this.BUFFER_REPLACEMENT_STARTED = "bufferReplacementStarted", this.CHECK_FOR_EXISTENCE_COMPLETED = "checkForExistenceCompleted", this.CMSD_STATIC_HEADER = "cmsdStaticHeader", this.CURRENT_TRACK_CHANGED = "currentTrackChanged", this.DATA_UPDATE_COMPLETED = "dataUpdateCompleted", this.INBAND_EVENTS = "inbandEvents", this.INITIAL_STREAM_SWITCH = "initialStreamSwitch", this.INIT_FRAGMENT_LOADED = "initFragmentLoaded", this.INIT_FRAGMENT_NEEDED = "initFragmentNeeded", this.INTERNAL_MANIFEST_LOADED = "internalManifestLoaded", this.ORIGINAL_MANIFEST_LOADED = "originalManifestLoaded", this.LOADING_COMPLETED = "loadingCompleted", this.LOADING_PROGRESS = "loadingProgress", this.LOADING_DATA_PROGRESS = "loadingDataProgress", this.LOADING_ABANDONED = "loadingAborted", this.MANIFEST_UPDATED = "manifestUpdated", this.MEDIA_FRAGMENT_LOADED = "mediaFragmentLoaded", this.MEDIA_FRAGMENT_NEEDED = "mediaFragmentNeeded", this.MEDIAINFO_UPDATED = "mediaInfoUpdated", this.QUOTA_EXCEEDED = "quotaExceeded", this.SEGMENT_LOCATION_BLACKLIST_ADD = "segmentLocationBlacklistAdd", this.SEGMENT_LOCATION_BLACKLIST_CHANGED = "segmentLocationBlacklistChanged", this.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD = "serviceLocationBlacklistAdd", this.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED = "serviceLocationBlacklistChanged", this.SERVICE_LOCATION_LOCATION_BLACKLIST_ADD = "serviceLocationLocationBlacklistAdd", this.SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED = "serviceLocationLocationBlacklistChanged", this.SET_FRAGMENTED_TEXT_AFTER_DISABLED = "setFragmentedTextAfterDisabled", this.SET_NON_FRAGMENTED_TEXT = "setNonFragmentedText", this.SOURCE_BUFFER_ERROR = "sourceBufferError", this.STREAMS_COMPOSED = "streamsComposed", this.STREAM_BUFFERING_COMPLETED = "streamBufferingCompleted", this.STREAM_REQUESTING_COMPLETED = "streamRequestingCompleted", this.TEXT_TRACKS_QUEUE_INITIALIZED = "textTracksQueueInitialized", this.TIME_SYNCHRONIZATION_COMPLETED = "timeSynchronizationComplete", this.UPDATE_TIME_SYNC_OFFSET = "updateTimeSyncOffset", this.URL_RESOLUTION_FAILED = "urlResolutionFailed", this.VIDEO_CHUNK_RECEIVED = "videoChunkReceived", this.WALLCLOCK_TIME_UPDATED = "wallclockTimeUpdated", this.XLINK_ELEMENT_LOADED = "xlinkElementLoaded", this.XLINK_READY = "xlinkReady", this.SEEK_TARGET = "seekTarget", this.SETTING_UPDATED_LIVE_DELAY = "settingUpdatedLiveDelay", this.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT = "settingUpdatedLiveDelayFragmentCount", this.SETTING_UPDATED_CATCHUP_ENABLED = "settingUpdatedCatchupEnabled", this.SETTING_UPDATED_PLAYBACK_RATE_MIN = "settingUpdatedPlaybackRateMin", this.SETTING_UPDATED_PLAYBACK_RATE_MAX = "settingUpdatedPlaybackRateMax", this.SETTING_UPDATED_ABR_ACTIVE_RULES = "settingUpdatedAbrActiveRules", this.SETTING_UPDATED_MAX_BITRATE = "settingUpdatedMaxBitrate", this.SETTING_UPDATED_MIN_BITRATE = "settingUpdatedMinBitrate";
			}
		}
		e$1.default = r$1;
	},
	3621: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(5734);
		class r$1 extends a$1.default {}
		e$1.default = new r$1();
	},
	7252: function(t$1, e$1, n$1) {
		n$1.r(e$1), e$1.default = class {
			extend(t$2, e$2) {
				if (!t$2) return;
				let n$2 = !!e$2 && e$2.override, a$1 = !!e$2 && e$2.publicOnly;
				for (const e$3 in t$2) !t$2.hasOwnProperty(e$3) || this[e$3] && !n$2 || a$1 && -1 === t$2[e$3].indexOf("public_") || (this[e$3] = t$2[e$3]);
			}
		};
	},
	8854: function(t$1, e$1, n$1) {
		n$1.r(e$1), e$1.default = {
			ACCESSIBILITY: "Accessibility",
			ADAPTATION_SET: "AdaptationSet",
			ADAPTATION_SETS: "adaptationSets",
			ADAPTATION_SET_SWITCHING_SCHEME_ID_URI: "urn:mpeg:dash:adaptation-set-switching:2016",
			ADD: "add",
			ASSET_IDENTIFIER: "AssetIdentifier",
			AUDIO_CHANNEL_CONFIGURATION: "AudioChannelConfiguration",
			AUDIO_SAMPLING_RATE: "audioSamplingRate",
			AVAILABILITY_END_TIME: "availabilityEndTime",
			AVAILABILITY_START_TIME: "availabilityStartTime",
			AVAILABILITY_TIME_COMPLETE: "availabilityTimeComplete",
			AVAILABILITY_TIME_OFFSET: "availabilityTimeOffset",
			BANDWITH: "bandwidth",
			BASE_URL: "BaseURL",
			BITSTREAM_SWITCHING: "BitstreamSwitching",
			BITSTREAM_SWITCHING_MINUS: "bitstreamSwitching",
			BYTE_RANGE: "byteRange",
			CAPTION: "caption",
			CENC_DEFAULT_KID: "cenc:default_KID",
			CLIENT_DATA_REPORTING: "ClientDataReporting",
			CLIENT_REQUIREMENT: "clientRequirement",
			CMCD_PARAMETERS: "CMCDParameters",
			CODECS: "codecs",
			CODEC_PRIVATE_DATA: "codecPrivateData",
			CODING_DEPENDENCY: "codingDependency",
			CONTENT_COMPONENT: "ContentComponent",
			CONTENT_PROTECTION: "ContentProtection",
			CONTENT_STEERING: "ContentSteering",
			CONTENT_STEERING_RESPONSE: {
				VERSION: "VERSION",
				TTL: "TTL",
				RELOAD_URI: "RELOAD-URI",
				PATHWAY_PRIORITY: "PATHWAY-PRIORITY",
				PATHWAY_CLONES: "PATHWAY-CLONES",
				BASE_ID: "BASE-ID",
				ID: "ID",
				URI_REPLACEMENT: "URI-REPLACEMENT",
				HOST: "HOST",
				PARAMS: "PARAMS"
			},
			CONTENT_TYPE: "contentType",
			DEFAULT_SERVICE_LOCATION: "defaultServiceLocation",
			DEPENDENCY_ID: "dependencyId",
			DURATION: "duration",
			DVB_PRIORITY: "dvb:priority",
			DVB_WEIGHT: "dvb:weight",
			DVB_URL: "dvb:url",
			DVB_MIMETYPE: "dvb:mimeType",
			DVB_FONTFAMILY: "dvb:fontFamily",
			DYNAMIC: "dynamic",
			END_NUMBER: "endNumber",
			ESSENTIAL_PROPERTY: "EssentialProperty",
			EVENT: "Event",
			EVENT_STREAM: "EventStream",
			FORCED_SUBTITLE: "forced-subtitle",
			FRAMERATE: "frameRate",
			FRAME_PACKING: "FramePacking",
			GROUP_LABEL: "GroupLabel",
			HEIGHT: "height",
			ID: "id",
			INBAND: "inband",
			INBAND_EVENT_STREAM: "InbandEventStream",
			INDEX: "index",
			INDEX_RANGE: "indexRange",
			INITIALIZATION: "Initialization",
			INITIALIZATION_MINUS: "initialization",
			LA_URL: "Laurl",
			LA_URL_LOWER_CASE: "laurl",
			LABEL: "Label",
			LANG: "lang",
			LOCATION: "Location",
			MAIN: "main",
			MAXIMUM_SAP_PERIOD: "maximumSAPPeriod",
			MAX_PLAYOUT_RATE: "maxPlayoutRate",
			MAX_SEGMENT_DURATION: "maxSegmentDuration",
			MAX_SUBSEGMENT_DURATION: "maxSubsegmentDuration",
			MEDIA: "media",
			MEDIA_PRESENTATION_DURATION: "mediaPresentationDuration",
			MEDIA_RANGE: "mediaRange",
			MEDIA_STREAM_STRUCTURE_ID: "mediaStreamStructureId",
			METRICS: "Metrics",
			METRICS_MINUS: "metrics",
			MIME_TYPE: "mimeType",
			MINIMUM_UPDATE_PERIOD: "minimumUpdatePeriod",
			MIN_BUFFER_TIME: "minBufferTime",
			MP4_PROTECTION_SCHEME: "urn:mpeg:dash:mp4protection:2011",
			MPD: "MPD",
			MPD_TYPE: "mpd",
			MPD_PATCH_TYPE: "mpdpatch",
			ORIGINAL_MPD_ID: "mpdId",
			ORIGINAL_PUBLISH_TIME: "originalPublishTime",
			PATCH_LOCATION: "PatchLocation",
			PERIOD: "Period",
			PRESENTATION_TIME: "presentationTime",
			PRESENTATION_TIME_OFFSET: "presentationTimeOffset",
			PRO: "pro",
			PRODUCER_REFERENCE_TIME: "ProducerReferenceTime",
			PRODUCER_REFERENCE_TIME_TYPE: {
				ENCODER: "encoder",
				CAPTURED: "captured",
				APPLICATION: "application"
			},
			PROFILES: "profiles",
			PSSH: "pssh",
			PUBLISH_TIME: "publishTime",
			QUALITY_RANKING: "qualityRanking",
			QUERY_BEFORE_START: "queryBeforeStart",
			QUERY_PART: "$querypart$",
			RANGE: "range",
			RATING: "Rating",
			REF: "ref",
			REF_ID: "refId",
			REMOVE: "remove",
			REPLACE: "replace",
			REPORTING: "Reporting",
			REPRESENTATION: "Representation",
			REPRESENTATION_INDEX: "RepresentationIndex",
			ROBUSTNESS: "robustness",
			ROLE: "Role",
			S: "S",
			SAR: "sar",
			SCAN_TYPE: "scanType",
			SEGMENT_ALIGNMENT: "segmentAlignment",
			SEGMENT_BASE: "SegmentBase",
			SEGMENT_LIST: "SegmentList",
			SEGMENT_PROFILES: "segmentProfiles",
			SEGMENT_TEMPLATE: "SegmentTemplate",
			SEGMENT_TIMELINE: "SegmentTimeline",
			SEGMENT_TYPE: "segment",
			SEGMENT_URL: "SegmentURL",
			SERVICE_DESCRIPTION: "ServiceDescription",
			SERVICE_DESCRIPTION_LATENCY: "Latency",
			SERVICE_DESCRIPTION_OPERATING_BANDWIDTH: "OperatingBandwidth",
			SERVICE_DESCRIPTION_OPERATING_QUALITY: "OperatingQuality",
			SERVICE_DESCRIPTION_PLAYBACK_RATE: "PlaybackRate",
			SERVICE_DESCRIPTION_SCOPE: "Scope",
			SERVICE_LOCATION: "serviceLocation",
			SERVICE_LOCATIONS: "serviceLocations",
			SOURCE_URL: "sourceURL",
			START: "start",
			START_NUMBER: "startNumber",
			START_WITH_SAP: "startWithSAP",
			STATIC: "static",
			STEERING_TYPE: "steering",
			SUBSET: "Subset",
			SUBTITLE: "subtitle",
			SUB_REPRESENTATION: "SubRepresentation",
			SUB_SEGMENT_ALIGNMENT: "subsegmentAlignment",
			SUGGESTED_PRESENTATION_DELAY: "suggestedPresentationDelay",
			SUPPLEMENTAL_PROPERTY: "SupplementalProperty",
			SUPPLEMENTAL_CODECS: "scte214:supplementalCodecs",
			TIMESCALE: "timescale",
			TIMESHIFT_BUFFER_DEPTH: "timeShiftBufferDepth",
			TTL: "ttl",
			TYPE: "type",
			UTC_TIMING: "UTCTiming",
			VALUE: "value",
			VIEWPOINT: "Viewpoint",
			WALL_CLOCK_TIME: "wallClockTime",
			WIDTH: "width"
		};
	},
	5717: function(t$1, e$1, n$1) {
		n$1.r(e$1), e$1.default = class {
			constructor() {
				this.schemeIdUri = "", this.value = "";
			}
		};
	},
	255: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, { default: function() {
			return Jo;
		} });
		class r$1 {
			constructor() {
				this.time = null, this.verboseLevel = 0;
			}
			log(t$2, e$2) {
				if (this.verboseLevel >= t$2) {
					const n$2 = "function" == typeof e$2 ? e$2() : e$2;
					console.log(`${this.time} [${t$2}] ${n$2}`);
				}
			}
		}
		class i$1 {
			constructor() {
				this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1;
			}
			reset() {
				this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1;
			}
			setStyles(t$2) {
				const e$2 = [
					"foreground",
					"underline",
					"italics",
					"background",
					"flash"
				];
				for (let n$2 = 0; n$2 < e$2.length; n$2++) {
					const a$1 = e$2[n$2];
					Object.prototype.hasOwnProperty.call(t$2, a$1) && (this[a$1] = t$2[a$1]);
				}
			}
			isDefault() {
				return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash;
			}
			equals(t$2) {
				return this.foreground === t$2.foreground && this.underline === t$2.underline && this.italics === t$2.italics && this.background === t$2.background && this.flash === t$2.flash;
			}
			copy(t$2) {
				this.foreground = t$2.foreground, this.underline = t$2.underline, this.italics = t$2.italics, this.background = t$2.background, this.flash = t$2.flash;
			}
		}
		class l$1 {
			constructor() {
				this.uchar = " ", this.penState = new i$1();
			}
			reset() {
				this.uchar = " ", this.penState.reset();
			}
			setChar(t$2, e$2) {
				this.uchar = t$2, this.penState.copy(e$2);
			}
			setPenState(t$2) {
				this.penState.copy(t$2);
			}
			equals(t$2) {
				return this.uchar === t$2.uchar && this.penState.equals(t$2.penState);
			}
			copy(t$2) {
				this.uchar = t$2.uchar, this.penState.copy(t$2.penState);
			}
			isEmpty() {
				return " " === this.uchar && this.penState.isDefault();
			}
		}
		const o$1 = 100, u$1 = {
			42: 225,
			92: 233,
			94: 237,
			95: 243,
			96: 250,
			123: 231,
			124: 247,
			125: 209,
			126: 241,
			127: 9608,
			128: 174,
			129: 176,
			130: 189,
			131: 191,
			132: 8482,
			133: 162,
			134: 163,
			135: 9834,
			136: 224,
			137: 32,
			138: 232,
			139: 226,
			140: 234,
			141: 238,
			142: 244,
			143: 251,
			144: 193,
			145: 201,
			146: 211,
			147: 218,
			148: 220,
			149: 252,
			150: 8216,
			151: 161,
			152: 42,
			153: 8217,
			154: 9473,
			155: 169,
			156: 8480,
			157: 8226,
			158: 8220,
			159: 8221,
			160: 192,
			161: 194,
			162: 199,
			163: 200,
			164: 202,
			165: 203,
			166: 235,
			167: 206,
			168: 207,
			169: 239,
			170: 212,
			171: 217,
			172: 249,
			173: 219,
			174: 171,
			175: 187,
			176: 195,
			177: 227,
			178: 205,
			179: 204,
			180: 236,
			181: 210,
			182: 242,
			183: 213,
			184: 245,
			185: 123,
			186: 125,
			187: 92,
			188: 94,
			189: 95,
			190: 124,
			191: 8764,
			192: 196,
			193: 228,
			194: 214,
			195: 246,
			196: 223,
			197: 165,
			198: 164,
			199: 9475,
			200: 197,
			201: 229,
			202: 216,
			203: 248,
			204: 9487,
			205: 9491,
			206: 9495,
			207: 9499
		}, d$1 = function(t$2) {
			return String.fromCharCode(u$1[t$2] || t$2);
		};
		class c$1 {
			constructor() {
				let t$2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new r$1();
				this.chars = [], this.cueStartTime = null, this.pos = 0, this.currPenState = new i$1();
				for (let t$3 = 0; t$3 < o$1; t$3++) this.chars.push(new l$1());
				this.logger = t$2;
			}
			equals(t$2) {
				for (let e$2 = 0; e$2 < o$1; e$2++) if (!this.chars[e$2].equals(t$2.chars[e$2])) return !1;
				return !0;
			}
			copy(t$2) {
				for (let e$2 = 0; e$2 < o$1; e$2++) this.chars[e$2].copy(t$2.chars[e$2]);
			}
			isEmpty() {
				let t$2 = !0;
				for (let e$2 = 0; e$2 < o$1; e$2++) if (!this.chars[e$2].isEmpty()) {
					t$2 = !1;
					break;
				}
				return t$2;
			}
			setCursor(t$2) {
				this.pos !== t$2 && (this.pos = t$2), this.pos < 0 ? (this.logger.log(3, "Negative cursor position " + this.pos), this.pos = 0) : this.pos > o$1 && (this.logger.log(3, "Too large cursor position " + this.pos), this.pos = o$1);
			}
			moveCursor(t$2) {
				const e$2 = this.pos + t$2;
				if (t$2 > 1) for (let t$3 = this.pos + 1; t$3 < e$2 + 1; t$3++) this.chars[t$3].setPenState(this.currPenState);
				this.setCursor(e$2);
			}
			backSpace() {
				this.moveCursor(-1), this.chars[this.pos].setChar(" ", this.currPenState);
			}
			insertChar(t$2) {
				t$2 >= 144 && this.backSpace();
				const e$2 = d$1(t$2);
				this.pos >= o$1 ? this.logger.log(0, (() => "Cannot insert " + t$2.toString(16) + " (" + e$2 + ") at position " + this.pos + ". Skipping it!")) : (this.chars[this.pos].setChar(e$2, this.currPenState), this.moveCursor(1));
			}
			clearFromPos(t$2) {
				let e$2;
				for (e$2 = t$2; e$2 < o$1; e$2++) this.chars[e$2].reset();
			}
			clear() {
				this.clearFromPos(0), this.pos = 0, this.currPenState.reset();
			}
			clearToEndOfRow() {
				this.clearFromPos(this.pos);
			}
			getTextString() {
				const t$2 = [];
				let e$2 = !0;
				for (let n$2 = 0; n$2 < o$1; n$2++) {
					const a$1 = this.chars[n$2].uchar;
					" " !== a$1 && (e$2 = !1), t$2.push(a$1);
				}
				return e$2 ? "" : t$2.join("");
			}
			setPenStyles(t$2) {
				this.currPenState.setStyles(t$2), this.chars[this.pos].setPenState(this.currPenState);
			}
		}
		const f$1 = 15;
		class g$1 {
			constructor() {
				let t$2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new r$1();
				this.rows = [], this.currRow = 14, this.nrRollUpRows = null, this.lastOutputScreen = null;
				for (let e$2 = 0; e$2 < f$1; e$2++) this.rows.push(new c$1(t$2));
				this.logger = t$2;
			}
			reset() {
				for (let t$2 = 0; t$2 < f$1; t$2++) this.rows[t$2].clear();
				this.currRow = 14;
			}
			equals(t$2) {
				let e$2 = !0;
				for (let n$2 = 0; n$2 < f$1; n$2++) if (!this.rows[n$2].equals(t$2.rows[n$2])) {
					e$2 = !1;
					break;
				}
				return e$2;
			}
			copy(t$2) {
				for (let e$2 = 0; e$2 < f$1; e$2++) this.rows[e$2].copy(t$2.rows[e$2]);
			}
			isEmpty() {
				let t$2 = !0;
				for (let e$2 = 0; e$2 < f$1; e$2++) if (!this.rows[e$2].isEmpty()) {
					t$2 = !1;
					break;
				}
				return t$2;
			}
			backSpace() {
				this.rows[this.currRow].backSpace();
			}
			clearToEndOfRow() {
				this.rows[this.currRow].clearToEndOfRow();
			}
			insertChar(t$2) {
				this.rows[this.currRow].insertChar(t$2);
			}
			setPen(t$2) {
				this.rows[this.currRow].setPenStyles(t$2);
			}
			moveCursor(t$2) {
				this.rows[this.currRow].moveCursor(t$2);
			}
			setCursor(t$2) {
				this.logger.log(2, "setCursor: " + t$2), this.rows[this.currRow].setCursor(t$2);
			}
			setPAC(t$2) {
				this.logger.log(2, (() => "pacData = " + JSON.stringify(t$2)));
				let e$2 = t$2.row - 1;
				if (this.nrRollUpRows && e$2 < this.nrRollUpRows - 1 && (e$2 = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== e$2) {
					for (let t$4 = 0; t$4 < f$1; t$4++) this.rows[t$4].clear();
					const t$3 = this.currRow + 1 - this.nrRollUpRows, n$3 = this.lastOutputScreen;
					if (n$3) {
						const a$2 = n$3.rows[t$3].cueStartTime, r$2 = this.logger.time;
						if (null !== a$2 && null !== r$2 && a$2 < r$2) for (let a$3 = 0; a$3 < this.nrRollUpRows; a$3++) this.rows[e$2 - this.nrRollUpRows + a$3 + 1].copy(n$3.rows[t$3 + a$3]);
					}
				}
				this.currRow = e$2;
				const n$2 = this.rows[this.currRow];
				if (null !== t$2.indent) {
					const e$3 = t$2.indent, a$2 = Math.max(e$3 - 1, 0);
					n$2.setCursor(t$2.indent), t$2.color = n$2.chars[a$2].penState.foreground;
				}
				const a$1 = {
					foreground: t$2.color,
					underline: t$2.underline,
					italics: t$2.italics,
					background: "black",
					flash: !1
				};
				this.setPen(a$1);
			}
			setBkgData(t$2) {
				this.logger.log(2, (() => "bkgData = " + JSON.stringify(t$2))), this.backSpace(), this.setPen(t$2), this.insertChar(32);
			}
			setRollUpRows(t$2) {
				this.nrRollUpRows = t$2;
			}
			rollUp() {
				if (null === this.nrRollUpRows) return void this.logger.log(3, "roll_up but nrRollUpRows not set yet");
				this.logger.log(1, (() => this.getDisplayText()));
				const t$2 = this.currRow + 1 - this.nrRollUpRows, e$2 = this.rows.splice(t$2, 1)[0];
				e$2.clear(), this.rows.splice(this.currRow, 0, e$2), this.logger.log(2, "Rolling up");
			}
			getDisplayText(t$2) {
				t$2 = t$2 || !1;
				const e$2 = [];
				let n$2 = "", a$1 = -1;
				for (let n$3 = 0; n$3 < f$1; n$3++) {
					const r$2 = this.rows[n$3].getTextString();
					r$2 && (a$1 = n$3 + 1, t$2 ? e$2.push("Row " + a$1 + ": '" + r$2 + "'") : e$2.push(r$2.trim()));
				}
				return e$2.length > 0 && (n$2 = t$2 ? "[" + e$2.join(" | ") + "]" : e$2.join("\n")), n$2;
			}
			getTextAndFormat() {
				return this.rows;
			}
		}
		class m$1 {
			constructor(t$2, e$2) {
				let n$2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new r$1();
				this.chNr = t$2, this.outputFilter = e$2, this.mode = null, this.displayedMemory = new g$1(n$2), this.nonDisplayedMemory = new g$1(n$2), this.lastOutputScreen = new g$1(n$2), this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null, this.logger = n$2, this.logger.log(2, "new Cea608Channel(" + this.chNr + ")");
			}
			reset() {
				var t$2, e$2;
				this.mode = null, this.displayedMemory.reset(), this.nonDisplayedMemory.reset(), this.lastOutputScreen.reset(), null === (e$2 = null === (t$2 = this.outputFilter) || void 0 === t$2 ? void 0 : t$2.reset) || void 0 === e$2 || e$2.call(t$2), this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null;
			}
			setPAC(t$2) {
				this.writeScreen.setPAC(t$2);
			}
			setBkgData(t$2) {
				this.writeScreen.setBkgData(t$2);
			}
			setMode(t$2) {
				t$2 !== this.mode && (this.mode = t$2, this.logger.log(2, (() => "MODE=" + t$2)), "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory, this.writeScreen.reset()), "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.setRollUpRows(null), this.nonDisplayedMemory.setRollUpRows(null)), this.mode = t$2);
			}
			insertChars(t$2) {
				for (let e$3 = 0; e$3 < t$2.length; e$3++) this.writeScreen.insertChar(t$2[e$3]);
				const e$2 = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
				this.logger.log(2, (() => e$2 + ": " + this.writeScreen.getDisplayText(!0))), "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (this.logger.log(1, (() => "DISPLAYED: " + this.displayedMemory.getDisplayText(!0))), this.outputDataUpdate());
			}
			ccRCL() {
				this.logger.log(2, "RCL - Resume Caption Loading"), this.setMode("MODE_POP-ON");
			}
			ccBS() {
				this.logger.log(2, "BS - BackSpace"), "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate());
			}
			ccAOF() {}
			ccAON() {}
			ccDER() {
				this.logger.log(2, "DER- Delete to End of Row"), this.writeScreen.clearToEndOfRow(), this.outputDataUpdate();
			}
			ccRU(t$2) {
				this.logger.log(2, "RU(" + t$2 + ") - Roll Up"), this.writeScreen = this.displayedMemory, this.setMode("MODE_ROLL-UP"), this.writeScreen.setRollUpRows(t$2);
			}
			ccFON() {
				this.logger.log(2, "FON - Flash On"), this.writeScreen.setPen({ flash: !0 });
			}
			ccRDC() {
				this.logger.log(2, "RDC - Resume Direct Captioning"), this.setMode("MODE_PAINT-ON");
			}
			ccTR() {
				this.logger.log(2, "TR"), this.setMode("MODE_TEXT");
			}
			ccRTD() {
				this.logger.log(2, "RTD"), this.setMode("MODE_TEXT");
			}
			ccEDM() {
				this.logger.log(2, "EDM - Erase Displayed Memory"), this.displayedMemory.reset(), this.outputDataUpdate(!0);
			}
			ccCR() {
				this.logger.log(2, "CR - Carriage Return"), this.writeScreen.rollUp(), this.outputDataUpdate(!0);
			}
			ccENM() {
				this.logger.log(2, "ENM - Erase Non-displayed Memory"), this.nonDisplayedMemory.reset();
			}
			ccEOC() {
				if (this.logger.log(2, "EOC - End Of Caption"), "MODE_POP-ON" === this.mode) {
					const t$2 = this.displayedMemory;
					this.displayedMemory = this.nonDisplayedMemory, this.nonDisplayedMemory = t$2, this.writeScreen = this.nonDisplayedMemory, this.logger.log(1, (() => "DISP: " + this.displayedMemory.getDisplayText()));
				}
				this.outputDataUpdate(!0);
			}
			ccTO(t$2) {
				this.logger.log(2, "TO(" + t$2 + ") - Tab Offset"), this.writeScreen.moveCursor(t$2);
			}
			ccMIDROW(t$2) {
				const e$2 = { flash: !1 };
				if (e$2.underline = t$2 % 2 == 1, e$2.italics = t$2 >= 46, e$2.italics) e$2.foreground = "white";
				else e$2.foreground = [
					"white",
					"green",
					"blue",
					"cyan",
					"red",
					"yellow",
					"magenta"
				][Math.floor(t$2 / 2) - 16];
				this.logger.log(2, "MIDROW: " + JSON.stringify(e$2)), this.writeScreen.setPen(e$2);
			}
			outputDataUpdate() {
				let t$2 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				const e$2 = this.logger.time;
				null !== e$2 && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue(this.cueStartTime, e$2, this.lastOutputScreen), t$2 && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue(), this.cueStartTime = this.displayedMemory.isEmpty() ? null : e$2) : this.cueStartTime = e$2, this.lastOutputScreen.copy(this.displayedMemory));
			}
			cueSplitAtTime(t$2) {
				this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, t$2, this.displayedMemory), this.cueStartTime = t$2));
			}
		}
		const h$1 = [
			"white",
			"green",
			"blue",
			"cyan",
			"red",
			"yellow",
			"magenta",
			"black",
			"transparent"
		];
		function p$1(t$2, e$2, n$2) {
			return n$2.a === t$2 && n$2.b === e$2;
		}
		const b$1 = function(t$2) {
			const e$2 = [];
			for (let n$2 = 0; n$2 < t$2.length; n$2++) e$2.push(t$2[n$2].toString(16));
			return e$2;
		}, y$1 = {
			17: 2,
			18: 4,
			21: 6,
			22: 8,
			23: 10,
			19: 13,
			20: 15
		}, E$1 = {
			25: 2,
			26: 4,
			29: 6,
			30: 8,
			31: 10,
			27: 13,
			28: 15
		}, _$1 = {
			17: 1,
			18: 3,
			21: 5,
			22: 7,
			23: 9,
			16: 11,
			19: 12,
			20: 14
		}, T$1 = {
			25: 1,
			26: 3,
			29: 5,
			30: 7,
			31: 9,
			24: 11,
			27: 12,
			28: 14
		};
		function v$1(t$2, e$2, n$2) {
			n$2.a = t$2, n$2.b = e$2;
		}
		class w$1 {
			constructor(t$2, e$2, n$2) {
				this.currentChannel = 0, this.cmdHistory = {
					a: null,
					b: null
				}, this.lastTime = null;
				const a$1 = this.logger = new r$1();
				this.channels = [
					null,
					new m$1(t$2, e$2, a$1),
					new m$1(t$2 + 1, n$2, a$1)
				];
			}
			addData(t$2, e$2) {
				this.lastTime = t$2, this.logger.time = t$2;
				for (let n$2 = 0; n$2 < e$2.length; n$2 += 2) {
					const a$1 = 127 & e$2[n$2], r$2 = 127 & e$2[n$2 + 1];
					let i$2 = !1, l$2 = null;
					if (null !== this.lastTime && (t$2 = this.lastTime + .5 * n$2 * 1001 / 3e4, this.logger.time = t$2), 0 === a$1 && 0 === r$2) continue;
					this.logger.log(3, (() => "[" + b$1([e$2[n$2], e$2[n$2 + 1]]) + "] -> (" + b$1([a$1, r$2]) + ")"));
					const o$2 = this.cmdHistory;
					if (a$1 >= 16 && a$1 <= 31) {
						if (p$1(a$1, r$2, o$2)) {
							v$1(null, null, o$2), this.logger.log(3, (() => "Repeated command (" + b$1([a$1, r$2]) + ") is dropped"));
							continue;
						}
						v$1(a$1, r$2, this.cmdHistory), i$2 = this.parseCmd(a$1, r$2), i$2 || (i$2 = this.parseMidrow(a$1, r$2)), i$2 || (i$2 = this.parsePAC(a$1, r$2)), i$2 || (i$2 = this.parseBackgroundAttributes(a$1, r$2));
					} else v$1(null, null, o$2);
					if (!i$2 && (l$2 = this.parseChars(a$1, r$2), l$2.length)) {
						const t$3 = this.currentChannel;
						t$3 && t$3 > 0 ? this.channels[t$3].insertChars(l$2) : this.logger.log(2, "No channel found yet. TEXT-MODE?");
					}
					i$2 || l$2 || this.logger.log(2, (() => "Couldn't parse cleaned data " + b$1([a$1, r$2]) + " orig: " + b$1([e$2[n$2], e$2[n$2 + 1]])));
				}
			}
			parseCmd(t$2, e$2) {
				if (!((20 === t$2 || 28 === t$2 || 21 === t$2 || 29 === t$2) && e$2 >= 32 && e$2 <= 47 || (23 === t$2 || 31 === t$2) && e$2 >= 33 && e$2 <= 35)) return !1;
				const n$2 = 20 === t$2 || 21 === t$2 || 23 === t$2 ? 1 : 2, a$1 = this.channels[n$2];
				return 20 === t$2 || 21 === t$2 || 28 === t$2 || 29 === t$2 ? 32 === e$2 ? a$1.ccRCL() : 33 === e$2 ? a$1.ccBS() : 34 === e$2 ? a$1.ccAOF() : 35 === e$2 ? a$1.ccAON() : 36 === e$2 ? a$1.ccDER() : 37 === e$2 ? a$1.ccRU(2) : 38 === e$2 ? a$1.ccRU(3) : 39 === e$2 ? a$1.ccRU(4) : 40 === e$2 ? a$1.ccFON() : 41 === e$2 ? a$1.ccRDC() : 42 === e$2 ? a$1.ccTR() : 43 === e$2 ? a$1.ccRTD() : 44 === e$2 ? a$1.ccEDM() : 45 === e$2 ? a$1.ccCR() : 46 === e$2 ? a$1.ccENM() : 47 === e$2 && a$1.ccEOC() : a$1.ccTO(e$2 - 32), this.currentChannel = n$2, !0;
			}
			parseMidrow(t$2, e$2) {
				let n$2 = 0;
				if ((17 === t$2 || 25 === t$2) && e$2 >= 32 && e$2 <= 47) {
					if (n$2 = 17 === t$2 ? 1 : 2, n$2 !== this.currentChannel) return this.logger.log(0, "Mismatch channel in midrow parsing"), !1;
					const a$1 = this.channels[n$2];
					return !!a$1 && (a$1.ccMIDROW(e$2), this.logger.log(3, (() => "MIDROW (" + b$1([t$2, e$2]) + ")")), !0);
				}
				return !1;
			}
			parsePAC(t$2, e$2) {
				let n$2;
				if (!((t$2 >= 17 && t$2 <= 23 || t$2 >= 25 && t$2 <= 31) && e$2 >= 64 && e$2 <= 127 || (16 === t$2 || 24 === t$2) && e$2 >= 64 && e$2 <= 95)) return !1;
				const a$1 = t$2 <= 23 ? 1 : 2;
				n$2 = e$2 >= 64 && e$2 <= 95 ? 1 === a$1 ? _$1[t$2] : T$1[t$2] : 1 === a$1 ? y$1[t$2] : E$1[t$2];
				const r$2 = this.channels[a$1];
				return !!r$2 && (r$2.setPAC(this.interpretPAC(n$2, e$2)), this.currentChannel = a$1, !0);
			}
			interpretPAC(t$2, e$2) {
				let n$2;
				const a$1 = {
					color: null,
					italics: !1,
					indent: null,
					underline: !1,
					row: t$2
				};
				return n$2 = e$2 > 95 ? e$2 - 96 : e$2 - 64, a$1.underline = !(1 & ~n$2), n$2 <= 13 ? a$1.color = [
					"white",
					"green",
					"blue",
					"cyan",
					"red",
					"yellow",
					"magenta",
					"white"
				][Math.floor(n$2 / 2)] : n$2 <= 15 ? (a$1.italics = !0, a$1.color = "white") : a$1.indent = 4 * Math.floor((n$2 - 16) / 2), a$1;
			}
			parseChars(t$2, e$2) {
				let n$2, a$1 = [], r$2 = null;
				if (t$2 >= 25 ? (n$2 = 2, r$2 = t$2 - 8) : (n$2 = 1, r$2 = t$2), r$2 >= 17 && r$2 <= 19) {
					let t$3;
					t$3 = 17 === r$2 ? e$2 + 80 : 18 === r$2 ? e$2 + 112 : e$2 + 144, this.logger.log(2, (() => "Special char '" + d$1(t$3) + "' in channel " + n$2)), a$1 = [t$3];
				} else t$2 >= 32 && t$2 <= 127 && (a$1 = 0 === e$2 ? [t$2] : [t$2, e$2]);
				return a$1 && this.logger.log(3, (() => "Char codes =  " + b$1(a$1).join(","))), a$1;
			}
			parseBackgroundAttributes(t$2, e$2) {
				if (!((16 === t$2 || 24 === t$2) && e$2 >= 32 && e$2 <= 47 || (23 === t$2 || 31 === t$2) && e$2 >= 45 && e$2 <= 47)) return !1;
				let n$2;
				const a$1 = {};
				16 === t$2 || 24 === t$2 ? (n$2 = Math.floor((e$2 - 32) / 2), a$1.background = h$1[n$2], e$2 % 2 == 1 && (a$1.background = a$1.background + "_semi")) : 45 === e$2 ? a$1.background = "transparent" : (a$1.foreground = "black", 47 === e$2 && (a$1.underline = !0));
				const r$2 = t$2 <= 23 ? 1 : 2;
				return this.channels[r$2].setBkgData(a$1), !0;
			}
			reset() {
				for (let t$2 = 0; t$2 < Object.keys(this.channels).length; t$2++) {
					const e$2 = this.channels[t$2];
					e$2 && e$2.reset();
				}
				v$1(null, null, this.cmdHistory);
			}
			cueSplitAtTime(t$2) {
				for (let e$2 = 0; e$2 < this.channels.length; e$2++) {
					const n$2 = this.channels[e$2];
					n$2 && n$2.cueSplitAtTime(t$2);
				}
			}
		}
		var S$1 = n$1(5212), I = n$1(8854), k = {
			TCP_CONNECTION: "TcpList",
			HTTP_REQUEST: "HttpList",
			TRACK_SWITCH: "RepSwitchList",
			BUFFER_LEVEL: "BufferLevel",
			BUFFER_LOADED: "bufferLoaded",
			ABANDON_LOAD: "abandonload",
			ALLOW_LOAD: "allowload",
			BUFFER_EMPTY: "bufferStalled",
			BUFFER_STATE: "BufferState",
			DVR_INFO: "DVRInfo",
			DROPPED_FRAMES: "DroppedFrames",
			SCHEDULING_INFO: "SchedulingInfo",
			REQUESTS_QUEUE: "RequestsQueue",
			MANIFEST_UPDATE: "ManifestUpdate",
			MANIFEST_UPDATE_STREAM_INFO: "ManifestUpdatePeriodInfo",
			MANIFEST_UPDATE_TRACK_INFO: "ManifestUpdateRepresentationInfo",
			PLAY_LIST: "PlayList",
			DVB_ERRORS: "DVBErrors",
			HTTP_REQUEST_DVB_REPORTING_TYPE: "DVBReporting"
		}, A = n$1(8850), R = n$1(3621), N = n$1(138), C = n$1(649), D = n$1(1191);
		function x() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, w$2, I$1, N$1, x$1;
			function M$1() {
				L$1(), h$2 = !1, c$2 = 0, f$2 = 0, y$2 = 0, I$1 = !1, E$2 = !0, _$2 = !1, N$1 = !1, T$2 = NaN, b$2 = NaN, s$1 && (e$2.off(R.default.DATA_UPDATE_COMPLETED, Q$1, n$2), e$2.off(R.default.MANIFEST_UPDATED, _t$1, n$2), e$2.off(R.default.STREAMS_COMPOSED, Tt$1, n$2), e$2.off(D.default.PLAYBACK_ENDED, mt$1, n$2), e$2.off(D.default.STREAM_INITIALIZING, yt$1, n$2), e$2.off(D.default.REPRESENTATION_SWITCH, Et$1, n$2), e$2.off(D.default.BUFFER_LEVEL_STATE_CHANGED, tt$1, n$2), X$1(), s$1.removeEventListener("canplay", Z$1), s$1.removeEventListener("canplaythrough", J$1), s$1.removeEventListener("play", et$1), s$1.removeEventListener("waiting", nt$1), s$1.removeEventListener("playing", at$1), s$1.removeEventListener("pause", rt$1), s$1.removeEventListener("error", ht$1), s$1.removeEventListener("seeking", it$1), s$1.removeEventListener("seeked", lt$1), s$1.removeEventListener("timeupdate", ot$1), s$1.removeEventListener("progress", st$1), s$1.removeEventListener("ratechange", ut$1), s$1.removeEventListener("loadedmetadata", dt$1), s$1.removeEventListener("loadeddata", ct$1), s$1.removeEventListener("stalled", bt$1), s$1.removeEventListener("ended", ft$1), s$1.removeEventListener("volumechange", gt$1)), d$2 = null, s$1 = null, g$2 = null, m$2 = null;
			}
			function z$1() {
				return parseFloat((O$1(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null) - q$1()).toFixed(5));
			}
			function O$1(t$3) {
				const e$3 = t$3 || g$2;
				return e$3.start + e$3.duration;
			}
			function P$1() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				g$2 && s$1 && s$1.getElement() ? (t$3 && m$2 && j$1(q$1()), s$1.play()) : h$2 = !0;
			}
			function L$1() {
				g$2 && s$1 && s$1.pause();
			}
			function F$1(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n$3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], r$3 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
				g$2 && s$1 && s$1.getElement() && t$3 !== (isNaN(T$2) ? s$1.getTime() : T$2) && (v$2 = !0 === n$3, v$2 || (T$2 = t$3), a$1.info("Requesting seek to time: " + t$3 + (v$2 ? " (internal)" : "")), m$2 && r$3 && j$1(t$3), s$1.setCurrentTime(t$3, e$3));
			}
			function U$1() {
				if (!g$2 || !s$1 || !m$2) return;
				const t$3 = r$2 && r$2.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO, e$3 = l$2.getCurrentDVRInfo(t$3);
				return e$3 && e$3.range ? e$3.range.end : 0;
			}
			function j$1(t$3) {
				const e$3 = new Date(u$2.getClientReferenceTime()), n$3 = o$2.getRegularPeriods()[0];
				c$2 = u$2.calcPresentationTimeFromWallTime(e$3, n$3) - t$3;
			}
			function q$1() {
				return g$2 && s$1 ? s$1.getTime() : null;
			}
			function B$1() {
				return g$2 && s$1 ? s$1.isPaused() : null;
			}
			function G$1() {
				return g$2 && s$1 ? s$1.isSeeking() : null;
			}
			function H$1() {
				return g$2 && s$1 ? s$1.isStalled() : null;
			}
			function Y$1() {
				return g$2 && s$1 ? s$1.getPlaybackRate() : null;
			}
			function V$1() {
				return g$2 && s$1 ? s$1.getEnded() : null;
			}
			function K$1() {
				return m$2;
			}
			function W$1() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
				if (B$1() || !m$2 || 0 === s$1.getReadyState() || G$1() || I$1) return;
				t$3 || (t$3 = r$2.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO);
				const e$3 = q$1(), n$3 = function(t$4, e$4) {
					const n$4 = l$2.getCurrentDVRInfo(e$4), a$2 = n$4 ? n$4.range : null;
					let r$3;
					return a$2 ? (r$3 = t$4 > a$2.end ? Math.max(a$2.end - c$2, a$2.start) : t$4 > 0 && t$4 + .25 < a$2.start && Math.abs(t$4 - a$2.start) < 31536e4 ? _$2 ? Math.max(a$2.end - c$2, a$2.start) : a$2.start : t$4, r$3) : NaN;
				}(e$3, t$3);
				!isNaN(n$3) && n$3 !== e$3 && !G$1() && (H$1() || w$2 || 1 === s$1.getReadyState()) && (a$1.debug(`UpdateCurrentTime: Seek to actual time: ${n$3} from currentTime: ${e$3}`), F$1(n$3, !1, !1));
			}
			function $$1() {
				null === d$2 && (d$2 = setInterval((() => {
					(function() {
						if (e$2.trigger(R.default.WALLCLOCK_TIME_UPDATED, {
							isDynamic: m$2,
							time: /* @__PURE__ */ new Date()
						}), K$1()) {
							const t$3 = Date.now();
							(isNaN(b$2) || t$3 > b$2 + x$1.get().streaming.liveUpdateTimeThresholdInMilliseconds) && (r$2.addDVRMetric(), B$1() ? function() {
								const t$4 = Date.now();
								(!p$2 || t$4 > p$2 + 500) && (p$2 = t$4, ot$1());
							}() : W$1(), b$2 = t$3);
						}
					})();
				}), x$1.get().streaming.wallclockTimeUpdateInterval));
			}
			function X$1() {
				clearInterval(d$2), d$2 = null;
			}
			function Q$1(t$3) {
				const e$3 = t$3.currentRepresentation, n$3 = e$3 ? e$3.mediaInfo.streamInfo : null;
				null !== n$3 && g$2.id === n$3.id && (g$2 = n$3);
			}
			function Z$1() {
				e$2.trigger(R.default.CAN_PLAY);
			}
			function J$1() {
				e$2.trigger(R.default.CAN_PLAY_THROUGH);
			}
			function tt$1(t$3) {
				t$3.streamId === r$2.getActiveStreamInfo().id && (w$2 = t$3.state === k.BUFFER_EMPTY, x$1.get().streaming.buffer.setStallState && s$1.setStallState(t$3.mediaType, t$3.state === k.BUFFER_EMPTY));
			}
			function et$1() {
				a$1.info("Native video element event: play"), W$1(), $$1(), e$2.trigger(R.default.PLAYBACK_STARTED, { startTime: q$1() });
			}
			function nt$1() {
				a$1.info("Native video element event: waiting"), e$2.trigger(R.default.PLAYBACK_WAITING, { playingTime: q$1() });
			}
			function at$1() {
				a$1.info("Native video element event: playing"), v$2 = !1, e$2.trigger(R.default.PLAYBACK_PLAYING, { playingTime: q$1() });
			}
			function rt$1() {
				a$1.info("Native video element event: pause"), e$2.trigger(R.default.PLAYBACK_PAUSED, { ended: V$1() });
			}
			function it$1() {
				if (v$2) return;
				let t$3 = q$1();
				isNaN(T$2) || T$2 === t$3 || (t$3 = T$2), T$2 = NaN, a$1.info("Seeking to: " + t$3), $$1(), e$2.trigger(R.default.PLAYBACK_SEEKING, {
					seekTime: t$3,
					streamId: g$2.id
				});
			}
			function lt$1() {
				a$1.info("Native video element event: seeked"), v$2 = !1, e$2.trigger(R.default.PLAYBACK_SEEKED);
			}
			function ot$1() {
				g$2 && e$2.trigger(R.default.PLAYBACK_TIME_UPDATED, {
					timeToEnd: z$1(),
					time: q$1(),
					streamId: g$2.id
				});
			}
			function st$1() {
				e$2.trigger(R.default.PLAYBACK_PROGRESS, { streamId: g$2.id });
			}
			function ut$1() {
				const t$3 = Y$1();
				a$1.info("Native video element event: ratechange: ", t$3), e$2.trigger(R.default.PLAYBACK_RATE_CHANGED, { playbackRate: t$3 });
			}
			function dt$1() {
				a$1.info("Native video element event: loadedmetadata"), e$2.trigger(R.default.PLAYBACK_METADATA_LOADED), $$1();
			}
			function ct$1() {
				a$1.info("Native video element event: loadeddata"), e$2.trigger(R.default.PLAYBACK_LOADED_DATA);
			}
			function ft$1() {
				a$1.info("Native video element event: ended"), L$1(), X$1();
				const t$3 = r$2 ? r$2.getActiveStreamInfo() : null;
				t$3 && e$2.trigger(R.default.PLAYBACK_ENDED, { isLast: t$3.isLast });
			}
			function gt$1() {
				e$2.trigger(R.default.PLAYBACK_VOLUME_CHANGED);
			}
			function mt$1(t$3) {
				if (d$2 && t$3.isLast) {
					a$1.info("onPlaybackEnded -- PLAYBACK_ENDED but native video element didn't fire ended");
					const e$3 = t$3.seekTime ? t$3.seekTime : O$1();
					s$1.setCurrentTime(e$3), L$1(), X$1();
				}
			}
			function ht$1(t$3) {
				const n$3 = t$3.target || t$3.srcElement;
				e$2.trigger(R.default.PLAYBACK_ERROR, { error: n$3.error });
			}
			function pt$1() {
				m$2 = !1;
			}
			function bt$1(t$3) {
				e$2.trigger(R.default.PLAYBACK_STALLED, { e: t$3 });
			}
			function yt$1(t$3) {
				var e$3;
				(e$3 = t$3.mediaInfo) && e$3.supplementalProperties && e$3.supplementalProperties.find(((t$4) => t$4.schemeIdUri === S$1.default.SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME)) && (a$1.debug("Low Latency critical SupplementalProperty set: Enabling low Latency"), _$2 = !0);
			}
			function Et$1(t$3) {
				const e$3 = r$2.getActiveStreamInfo();
				t$3 && e$3 && t$3.currentRepresentation && t$3.streamId && t$3.streamId === e$3.id && t$3.mediaType && (t$3.mediaType === S$1.default.VIDEO || t$3.mediaType === S$1.default.AUDIO) && (E$2 = t$3.currentRepresentation.availabilityTimeComplete, _$2 = !E$2, _$2 && !N$1 && (N$1 = !0));
			}
			function _t$1() {
				I$1 = !0;
			}
			function Tt$1() {
				I$1 = !1;
			}
			return n$2 = {
				computeAndSetLiveDelay: function(t$3, e$3) {
					let n$3, a$2, r$3;
					const l$3 = !isNaN(t$3) && isFinite(t$3) ? t$3 : NaN;
					let s$2 = o$2.getSuggestedPresentationDelay();
					const u$3 = i$2.getServiceDescriptionSettings();
					return n$3 = isNaN(x$1.get().streaming.delay.liveDelay) ? null === x$1.get().streaming.delay.liveDelayFragmentCount || isNaN(x$1.get().streaming.delay.liveDelayFragmentCount) || isNaN(l$3) ? u$3 && !isNaN(u$3.liveDelay) && u$3.liveDelay > 0 ? u$3.liveDelay : !0 === x$1.get().streaming.delay.useSuggestedPresentationDelay && null !== s$2 && !isNaN(s$2) && s$2 > 0 ? s$2 : isNaN(l$3) ? e$3 && !isNaN(e$3.minBufferTime) ? 4 * e$3.minBufferTime : 4 * g$2.manifestInfo.minBufferTime : 4 * l$3 : l$3 * x$1.get().streaming.delay.liveDelayFragmentCount : x$1.get().streaming.delay.liveDelay, r$3 = o$2.getAvailabilityStartTime(), null !== r$3 && (y$2 = r$3), a$2 = e$3 && e$3.dvrWindowSize > 0 ? Math.min(n$3, e$3.dvrWindowSize) : n$3, c$2 = a$2, f$2 = a$2, a$2;
				},
				getAvailabilityStartTime: function() {
					return y$2;
				},
				getBufferLevel: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, e$3 = null;
					return r$2.getActiveStreamProcessors().forEach(((n$3) => {
						if (!t$3 || 0 === t$3.length || -1 === t$3.indexOf(n$3.getType())) {
							const t$4 = n$3.getBufferLevel();
							e$3 = null === e$3 ? t$4 : Math.min(e$3, t$4);
						}
					})), e$3;
				},
				getCurrentLiveLatency: function() {
					if (!m$2 || isNaN(y$2)) return NaN;
					let t$3 = q$1();
					if (isNaN(t$3) || 0 === t$3) return 0;
					const e$3 = (/* @__PURE__ */ new Date()).getTime() + 1e3 * u$2.getClientTimeOffset();
					return Math.max(((e$3 - y$2 - 1e3 * t$3) / 1e3).toFixed(3), 0);
				},
				getEnded: V$1,
				getInitialCatchupModeActivated: function() {
					return N$1;
				},
				getIsDynamic: K$1,
				getIsManifestUpdateInProgress: function() {
					return I$1;
				},
				getLiveDelay: function() {
					return c$2;
				},
				getLowLatencyModeEnabled: function() {
					return _$2;
				},
				getOriginalLiveDelay: function() {
					return f$2;
				},
				getPlaybackRate: Y$1,
				getPlaybackStalled: function() {
					return w$2;
				},
				getPlayedRanges: function() {
					return g$2 && s$1 ? s$1.getPlayedRanges() : null;
				},
				getStreamController: function() {
					return r$2;
				},
				getStreamEndTime: O$1,
				getTime: q$1,
				getTimeToStreamEnd: z$1,
				initialize: function(t$3, a$2) {
					g$2 = t$3, !0 !== a$2 && (s$1.addEventListener("canplay", Z$1), s$1.addEventListener("canplaythrough", J$1), s$1.addEventListener("play", et$1), s$1.addEventListener("waiting", nt$1), s$1.addEventListener("playing", at$1), s$1.addEventListener("pause", rt$1), s$1.addEventListener("error", ht$1), s$1.addEventListener("seeking", it$1), s$1.addEventListener("seeked", lt$1), s$1.addEventListener("timeupdate", ot$1), s$1.addEventListener("progress", st$1), s$1.addEventListener("ratechange", ut$1), s$1.addEventListener("loadedmetadata", dt$1), s$1.addEventListener("loadeddata", ct$1), s$1.addEventListener("stalled", bt$1), s$1.addEventListener("ended", ft$1), s$1.addEventListener("volumechange", gt$1), m$2 = g$2.manifestInfo.isDynamic, w$2 = !1, v$2 = !1, e$2.on(R.default.DATA_UPDATE_COMPLETED, Q$1, n$2), e$2.on(R.default.MANIFEST_UPDATED, _t$1, n$2), e$2.on(R.default.STREAMS_COMPOSED, Tt$1, n$2), e$2.on(D.default.PLAYBACK_ENDED, mt$1, n$2, { priority: A.default.EVENT_PRIORITY_HIGH }), e$2.on(D.default.STREAM_INITIALIZING, yt$1, n$2), e$2.on(D.default.REPRESENTATION_SWITCH, Et$1, n$2), e$2.on(D.default.BUFFER_LEVEL_STATE_CHANGED, tt$1, n$2), e$2.on(D.default.DYNAMIC_TO_STATIC, pt$1, n$2), h$2 && (h$2 = !1, P$1()));
				},
				isPaused: B$1,
				isProgressing: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 500;
					return new Promise(((a$2) => {
						let r$3 = -1, i$3 = null;
						const l$3 = (t$4) => {
							clearTimeout(i$3), i$3 = null, e$2.off(D.default.PLAYBACK_TIME_UPDATED, o$3, n$2), a$2(t$4);
						}, o$3 = (t$4) => {
							r$3 < 0 ? r$3 = t$4.time : t$4.time > r$3 + .1 && l$3(!0);
						};
						i$3 = setTimeout((() => {
							l$3(!1);
						}), t$3), e$2.on(D.default.PLAYBACK_TIME_UPDATED, o$3, n$2);
					}));
				},
				isSeeking: G$1,
				isStalled: H$1,
				pause: L$1,
				play: P$1,
				reset: M$1,
				seek: F$1,
				seekToCurrentLive: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], e$3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n$3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
					const a$2 = U$1();
					0 !== a$2 && F$1(a$2 - c$2, t$3, e$3, n$3);
				},
				seekToOriginalLive: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], e$3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n$3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
					const a$2 = U$1();
					0 !== a$2 && (c$2 = f$2, F$1(a$2 - c$2, t$3, e$3, n$3));
				},
				setConfig: function(t$3) {
					t$3 && (t$3.streamController && (r$2 = t$3.streamController), t$3.serviceDescriptionController && (i$2 = t$3.serviceDescriptionController), t$3.dashMetrics && (l$2 = t$3.dashMetrics), t$3.adapter && (o$2 = t$3.adapter), t$3.videoModel && (s$1 = t$3.videoModel), t$3.timelineConverter && (u$2 = t$3.timelineConverter), t$3.settings && (x$1 = t$3.settings));
				},
				updateCurrentTime: W$1
			}, a$1 = (0, C.default)(t$2).getInstance().getLogger(n$2), M$1(), n$2;
		}
		x.__dashjs_factory_name = "PlaybackController";
		var M = N.default.getSingletonFactory(x), z = n$1(7568);
		class O {
			constructor(t$2) {
				this.action = O.ACTION_DOWNLOAD, this.availabilityEndTime = null, this.availabilityStartTime = null, this.bandwidth = NaN, this.bytesLoaded = NaN, this.bytesTotal = NaN, this.delayLoadingTime = NaN, this.duration = NaN, this.endDate = null, this.firstByteDate = null, this.index = NaN, this.mediaStartTime = NaN, this.mediaType = null, this.range = null, this.representation = null, this.responseType = "arraybuffer", this.retryAttempts = 0, this.serviceLocation = null, this.startDate = null, this.startTime = NaN, this.timescale = NaN, this.type = null, this.url = t$2 || null, this.wallStartTime = null;
			}
			isInitializationRequest() {
				return this.type && this.type === z.HTTPRequest.INIT_SEGMENT_TYPE;
			}
			setInfo(t$2) {
				this.type = t$2 && t$2.init ? z.HTTPRequest.INIT_SEGMENT_TYPE : z.HTTPRequest.MEDIA_SEGMENT_TYPE, this.url = t$2 && t$2.url ? t$2.url : null, this.range = t$2 && t$2.range ? t$2.range.start + "-" + t$2.range.end : null, this.mediaType = t$2 && t$2.mediaType ? t$2.mediaType : null, this.representation = t$2 && t$2.representation ? t$2.representation : null;
			}
		}
		O.ACTION_DOWNLOAD = "download", O.ACTION_COMPLETE = "complete";
		var P = O;
		const L = "loading", F = "executed", U = "failed";
		function j(t$2) {
			const e$2 = (t$2 = t$2 || {}).eventBus, n$2 = t$2.events, a$1 = t$2.dashMetrics, r$2 = t$2.fragmentLoader, i$2 = t$2.debug, l$2 = t$2.streamInfo, o$2 = t$2.type;
			let s$1, u$2, d$2, c$2;
			function f$2(t$3) {
				return !!t$3 && function(e$3) {
					let n$3 = !1;
					return e$3.some(((e$4) => {
						if (a$2 = t$3, r$3 = e$4, !isNaN(a$2.index) && a$2.startTime === r$3.startTime && a$2.adaptationIndex === r$3.adaptationIndex && a$2.type === r$3.type || function(t$4, e$5) {
							return t$4.representation.id === e$5.representation.id;
						}(t$3, e$4) || function(t$4, e$5) {
							return t$4.action === P.ACTION_COMPLETE && t$4.action === e$5.action;
						}(t$3, e$4)) return n$3 = !0, n$3;
						var a$2, r$3;
					})), n$3;
				}(d$2);
			}
			function g$2(t$3) {
				return isNaN(t$3.duration) ? .25 : Math.min(t$3.duration / 8, .5);
			}
			function m$2(t$3) {
				d$2 = d$2.filter(((e$3) => {
					const n$3 = g$2(e$3);
					return isNaN(e$3.startTime) || void 0 !== t$3 && e$3.startTime >= t$3 - n$3;
				}));
			}
			function h$2(t$3, e$3) {
				e$3 <= t$3 + .5 || (d$2 = d$2.filter(((n$3) => {
					const a$2 = g$2(n$3);
					return isNaN(n$3.startTime) || n$3.startTime >= e$3 - a$2 || isNaN(n$3.duration) || n$3.startTime + n$3.duration <= t$3 + a$2;
				})));
			}
			function p$2(t$3, e$3, n$3) {
				for (let a$2 = t$3.length - 1; a$2 >= 0; a$2--) {
					const r$3 = t$3[a$2], i$3 = r$3.startTime, l$3 = i$3 + r$3.duration;
					if (n$3 = isNaN(n$3) ? g$2(r$3) : n$3, !isNaN(i$3) && !isNaN(l$3) && e$3 + n$3 >= i$3 && e$3 - n$3 < l$3 || isNaN(i$3) && isNaN(e$3)) return r$3;
				}
				return null;
			}
			function b$2(t$3, e$3) {
				a$1.addSchedulingInfo(t$3, e$3), a$1.addRequestsQueue(t$3.mediaType, c$2, d$2);
			}
			function y$2(t$3) {
				t$3.sender === r$2 && (c$2.splice(c$2.indexOf(t$3.request), 1), t$3.response && !t$3.error && d$2.push(t$3.request), b$2(t$3.request, t$3.error ? U : F), e$2.trigger(n$2.FRAGMENT_LOADING_COMPLETED, {
					request: t$3.request,
					response: t$3.response,
					error: t$3.error,
					sender: this
				}, {
					streamId: l$2.id,
					mediaType: o$2
				}));
			}
			function E$2(t$3) {
				t$3.sender === r$2 && e$2.trigger(n$2.FRAGMENT_LOADING_PROGRESS, {
					request: t$3.request,
					response: t$3.response,
					error: t$3.error,
					sender: this
				}, {
					streamId: l$2.id,
					mediaType: o$2
				});
			}
			function _$2(t$3) {
				t$3.sender === r$2 && e$2.trigger(n$2.FRAGMENT_LOADING_ABANDONED, { request: t$3.request }, {
					streamId: l$2.id,
					mediaType: o$2
				});
			}
			function T$2() {
				d$2 = [], c$2 = [], r$2 && r$2.resetInitialSettings();
			}
			return s$1 = {
				abortRequests: function() {
					u$2.debug("abort requests"), r$2.abort(), c$2 = [];
				},
				executeRequest: function(t$3) {
					t$3.action === P.ACTION_DOWNLOAD ? (b$2(t$3, L), c$2.push(t$3), function(t$4) {
						e$2.trigger(n$2.FRAGMENT_LOADING_STARTED, { request: t$4 }, {
							streamId: l$2.id,
							mediaType: o$2
						}), r$2.load(t$4);
					}(t$3)) : u$2.warn("Unknown request action.");
				},
				getRequests: function(t$3) {
					const e$3 = t$3 ? t$3.state instanceof Array ? t$3.state : [t$3.state] : [];
					let n$3 = [];
					return e$3.forEach(((e$4) => {
						const a$2 = function(t$4) {
							let e$5;
							switch (t$4) {
								case L:
									e$5 = c$2;
									break;
								case F:
									e$5 = d$2;
									break;
								default: e$5 = [];
							}
							return e$5;
						}(e$4);
						n$3 = n$3.concat(function(t$4, e$5) {
							return e$5.hasOwnProperty("time") ? [p$2(t$4, e$5.time, e$5.threshold)] : t$4.filter(((t$5) => {
								for (const n$4 in e$5) if ("state" !== n$4 && e$5.hasOwnProperty(n$4) && t$5[n$4] != e$5[n$4]) return !1;
								return !0;
							}));
						}(a$2, t$3));
					})), n$3;
				},
				getStreamId: function() {
					return l$2.id;
				},
				getType: function() {
					return o$2;
				},
				isFragmentLoaded: f$2,
				isFragmentLoadedOrPending: function(t$3) {
					let e$3, n$3 = !1, a$2 = 0;
					if (n$3 = f$2(t$3), !n$3) for (a$2 = 0; a$2 < c$2.length; a$2++) e$3 = c$2[a$2], t$3.url === e$3.url && t$3.startTime === e$3.startTime && (n$3 = !0);
					return n$3;
				},
				removeExecutedRequestsAfterTime: function(t$3) {
					d$2 = d$2.filter(((e$3) => isNaN(e$3.startTime) || void 0 !== t$3 && e$3.startTime < t$3));
				},
				removeExecutedRequestsBeforeTime: m$2,
				reset: function() {
					e$2.off(n$2.LOADING_COMPLETED, y$2, this), e$2.off(n$2.LOADING_DATA_PROGRESS, E$2, this), e$2.off(n$2.LOADING_ABANDONED, _$2, this), r$2 && r$2.reset(), T$2();
				},
				resetInitialSettings: T$2,
				syncExecutedRequestsWithBufferedRange: function(t$3, e$3) {
					if (!t$3 || 0 === t$3.length) return void m$2();
					let n$3 = 0;
					for (let e$4 = 0, a$2 = t$3.length; e$4 < a$2; e$4++) h$2(n$3, t$3.start(e$4)), n$3 = t$3.end(e$4);
					e$3 > 0 && h$2(n$3, e$3);
				}
			}, u$2 = i$2.getLogger(s$1), T$2(), e$2.on(n$2.LOADING_COMPLETED, y$2, s$1), e$2.on(n$2.LOADING_DATA_PROGRESS, E$2, s$1), e$2.on(n$2.LOADING_ABANDONED, _$2, s$1), s$1;
		}
		j.__dashjs_factory_name = "FragmentModel";
		const q = N.default.getClassFactory(j);
		q.FRAGMENT_MODEL_LOADING = L, q.FRAGMENT_MODEL_EXECUTED = F, q.FRAGMENT_MODEL_CANCELED = "canceled", q.FRAGMENT_MODEL_FAILED = U, N.default.updateClassFactory(j.__dashjs_factory_name, q);
		var B = q, G = n$1(1944), H = n$1(8748);
		class Y extends H.default {
			constructor() {
				super(), this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE = 10, this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE = 11, this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE = 12, this.SEGMENT_BASE_LOADER_ERROR_CODE = 15, this.TIME_SYNC_FAILED_ERROR_CODE = 16, this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE = 17, this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE = 18, this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 19, this.APPEND_ERROR_CODE = 20, this.REMOVE_ERROR_CODE = 21, this.DATA_UPDATE_FAILED_ERROR_CODE = 22, this.CAPABILITY_MEDIASOURCE_ERROR_CODE = 23, this.CAPABILITY_MEDIAKEYS_ERROR_CODE = 24, this.DOWNLOAD_ERROR_ID_MANIFEST_CODE = 25, this.DOWNLOAD_ERROR_ID_SIDX_CODE = 26, this.DOWNLOAD_ERROR_ID_CONTENT_CODE = 27, this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE = 28, this.DOWNLOAD_ERROR_ID_XLINK_CODE = 29, this.MANIFEST_ERROR_ID_PARSE_CODE = 31, this.MANIFEST_ERROR_ID_NOSTREAMS_CODE = 32, this.TIMED_TEXT_ERROR_ID_PARSE_CODE = 33, this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE = 34, this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE = 35, this.NO_SUPPORTED_KEY_IDS = 36, this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE = "parsing failed for ", this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE = "Failed loading manifest: ", this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE = "Failed loading Xlink element: ", this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE = "Segments update failed", this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE = "no segments are available yet", this.SEGMENT_BASE_LOADER_ERROR_MESSAGE = "error loading segment ranges from sidx", this.TIME_SYNC_FAILED_ERROR_MESSAGE = "Failed to synchronize client and server time", this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE = "request is null", this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = "Failed to resolve a valid URL", this.APPEND_ERROR_MESSAGE = "chunk is not defined", this.REMOVE_ERROR_MESSAGE = "Removing data from the SourceBuffer", this.DATA_UPDATE_FAILED_ERROR_MESSAGE = "Data update failed", this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE = "mediasource is not supported", this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE = "mediakeys is not supported", this.TIMED_TEXT_ERROR_MESSAGE_PARSE = "parsing error :", this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE = "Error creating source buffer of type : ", this.NO_SUPPORTED_KEY_IDS_MESSAGE = "All possible Adaptation Sets have an invalid key status";
			}
		}
		var V = new Y(), K = n$1(8261);
		function W(t$2) {
			const e$2 = this.context, n$2 = (0, K.default)(e$2).getInstance(), a$1 = t$2.textController, r$2 = t$2.eventBus;
			let i$2, l$2, o$2, s$1, u$2, d$2, c$2 = [], f$2 = [], g$2 = !1, m$2 = t$2.mediaSource, h$2 = null;
			function p$2(t$3) {
				return t$3.mimeType + ";codecs=\"" + t$3.codecs + "\"";
			}
			function b$2(t$3) {
				return s$1 = a$1.getTextSourceBuffer(t$3), Promise.resolve();
			}
			function y$2() {
				if ("function" == typeof s$1.addEventListener) try {
					s$1.addEventListener("updateend", I$1, !1), s$1.addEventListener("error", k$1, !1), s$1.addEventListener("abort", k$1, !1);
				} catch (t$3) {
					d$2 = setInterval(I$1, 50);
				}
				else d$2 = setInterval(I$1, 50);
			}
			function E$2() {
				try {
					"function" == typeof s$1.removeEventListener && (s$1.removeEventListener("updateend", I$1, !1), s$1.removeEventListener("error", k$1, !1), s$1.removeEventListener("abort", k$1, !1)), clearInterval(d$2);
				} catch (t$3) {
					o$2.error(t$3);
				}
			}
			function _$2(t$3) {
				return new Promise(((e$3) => {
					s$1 && n$2.get().streaming.buffer.useAppendWindow ? A$1((() => {
						try {
							if (!s$1) return void e$3();
							let n$3 = m$2.duration, a$2 = 0;
							t$3 && !isNaN(t$3.start) && !isNaN(t$3.duration) && isFinite(t$3.duration) && (n$3 = t$3.start + t$3.duration), t$3 && !isNaN(t$3.start) && (a$2 = t$3.start), s$1.appendWindowEnd === n$3 && s$1.appendWindowStart === a$2 || (s$1.appendWindowStart = 0, s$1.appendWindowEnd = n$3 + .01, s$1.appendWindowStart = Math.max(a$2 - .1, 0), o$2.debug(`Updated append window for ${u$2.type}. Set start to ${s$1.appendWindowStart} and end to ${s$1.appendWindowEnd}`)), e$3();
						} catch (t$4) {
							o$2.warn("Failed to set append window"), e$3();
						}
					})) : e$3();
				}));
			}
			function T$2(t$3) {
				return new Promise(((e$3) => {
					s$1 ? A$1((() => {
						try {
							s$1.timestampOffset === t$3 || isNaN(t$3) || (s$1.timestampOffset = t$3, o$2.debug(`Set MSE timestamp offset to ${t$3}`)), e$3();
						} catch (t$4) {
							e$3();
						}
					})) : e$3();
				}));
			}
			function v$2() {
				if (!g$2 && f$2.length > 0) {
					g$2 = !0;
					const t$3 = f$2[0];
					f$2.splice(0, 1);
					const e$3 = function() {
						g$2 = !1, f$2.length > 0 && v$2.call(this), t$3 && t$3.data && t$3.data.segmentType && t$3.data.segmentType !== z.HTTPRequest.INIT_SEGMENT_TYPE && delete t$3.data.bytes, t$3.promise.resolve({ chunk: t$3.data });
					};
					try {
						if (h$2 = t$3.request, 0 === t$3.data.bytes.byteLength) e$3.call(this);
						else {
							try {
								o$2.debug(`Appending ${t$3.data.segmentType} from period ${t$3.data.streamId} to buffer. Request URL: ${t$3.request.url}, Representation: ID: ${t$3.data.representation.id}, bitrate: ${t$3.data.representation.bitrateInKbit}`);
							} catch (t$4) {}
							s$1.appendBuffer ? s$1.appendBuffer(t$3.data.bytes) : s$1.append(t$3.data.bytes, t$3.data), A$1(e$3.bind(this));
						}
					} catch (e$4) {
						o$2.fatal("SourceBuffer append failed \"" + e$4 + "\""), f$2.length > 0 ? v$2() : g$2 = !1, delete t$3.data.bytes, t$3.promise.reject({
							chunk: t$3.data,
							error: new G.default(e$4.code, e$4.message)
						});
					}
				}
			}
			function w$2() {
				c$2.length > 0 && !s$1.updating && (c$2.shift()(), w$2());
			}
			function I$1() {
				s$1.updating || w$2();
			}
			function k$1(t$3) {
				const e$3 = t$3.target || {};
				(function(t$4, e$4) {
					let n$3 = e$4 || {};
					r$2.trigger(t$4, n$3, {
						streamId: u$2.streamInfo.id,
						mediaType: l$2
					});
				})(R.default.SOURCE_BUFFER_ERROR, {
					error: e$3,
					lastRequestAppended: h$2
				});
			}
			function A$1(t$3) {
				try {
					c$2.push(t$3), s$1.updating || w$2();
				} catch (t$4) {
					o$2.error(t$4);
				}
			}
			return i$2 = {
				abort: function() {
					return new Promise(((t$3) => {
						try {
							f$2 = [], "open" === m$2.readyState ? A$1((() => {
								try {
									s$1 && s$1.abort(), t$3();
								} catch (e$3) {
									t$3();
								}
							})) : s$1 && s$1.setTextTrack && "ended" === m$2.readyState ? (s$1.abort(), t$3()) : t$3();
						} catch (e$3) {
							t$3();
						}
					}));
				},
				abortBeforeAppend: function() {
					return new Promise(((t$3) => {
						A$1((() => {
							const e$3 = s$1.appendWindowStart, n$3 = s$1.appendWindowEnd;
							s$1 && (s$1.abort(), s$1.appendWindowStart = e$3, s$1.appendWindowEnd = n$3), t$3();
						}));
					}));
				},
				append: function(t$3) {
					let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
					return new Promise(((n$3, a$2) => {
						t$3 ? (f$2.push({
							data: t$3,
							promise: {
								resolve: n$3,
								reject: a$2
							},
							request: e$3
						}), A$1(v$2.bind(this))) : a$2({
							chunk: t$3,
							error: new G.default(V.APPEND_ERROR_CODE, V.APPEND_ERROR_MESSAGE)
						});
					}));
				},
				changeType: function(t$3) {
					const e$3 = p$2(t$3);
					return new Promise(((t$4) => {
						A$1((() => {
							s$1.changeType && (o$2.debug(`Changing SourceBuffer codec to ${e$3}`), s$1.changeType(e$3)), t$4();
						}));
					}));
				},
				getAllBufferRanges: function() {
					try {
						return s$1.buffered;
					} catch (t$3) {
						return o$2.error("getAllBufferRanges exception: " + t$3.message), null;
					}
				},
				getBuffer: function() {
					return s$1;
				},
				getType: function() {
					return l$2;
				},
				initializeForFirstUse: function(t$3, e$3) {
					u$2 = t$3;
					const n$3 = t$3.streamInfo;
					l$2 = u$2.type;
					const a$2 = e$3 ? p$2(e$3) : t$3.codec;
					try {
						if (a$2.match(/application\/mp4;\s*codecs="(stpp|wvtt).*"/i)) return b$2(n$3);
						s$1 = m$2.addSourceBuffer(a$2), y$2();
						const t$4 = [];
						return t$4.push(_$2(u$2.streamInfo)), e$3 && void 0 !== e$3.mseTimeOffset && t$4.push(T$2(e$3.mseTimeOffset)), Promise.all(t$4);
					} catch (t$4) {
						return u$2.type == S$1.default.TEXT && !u$2.isFragmented || -1 !== a$2.indexOf("codecs=\"stpp") || -1 !== a$2.indexOf("codecs=\"vtt") || -1 !== a$2.indexOf("text/vtt") ? b$2(n$3) : Promise.reject(t$4);
					}
				},
				initializeForStreamSwitch: function(t$3, e$3, n$3) {
					u$2 = t$3, l$2 = u$2.type, function(t$4) {
						s$1 = t$4.getBuffer();
					}(n$3), y$2();
				},
				remove: function(t$3) {
					return new Promise(((e$3, n$3) => {
						const a$2 = t$3.start, r$3 = t$3.end;
						a$2 >= 0 && r$3 > a$2 ? A$1((function() {
							try {
								s$1.remove(a$2, r$3), A$1((function() {
									e$3({
										from: a$2,
										to: r$3,
										unintended: !1
									}), t$3.resolve && t$3.resolve();
								}));
							} catch (e$4) {
								n$3({
									from: a$2,
									to: r$3,
									unintended: !1,
									error: new G.default(V.REMOVE_ERROR_CODE, V.REMOVE_ERROR_MESSAGE)
								}), t$3.reject && t$3.reject(e$4);
							}
						})) : e$3();
					}));
				},
				removeEventListeners: E$2,
				reset: function() {
					if (s$1) {
						try {
							c$2 = [], E$2(), g$2 = !1, f$2 = [], s$1.getClassName && "TextSourceBuffer" === s$1.getClassName() || (o$2.debug("Removing sourcebuffer from media source"), m$2.removeSourceBuffer(s$1));
						} catch (t$3) {}
						s$1 = null;
					}
					h$2 = null;
				},
				updateAppendWindow: _$2,
				updateTimestampOffset: T$2
			}, o$2 = (0, C.default)(e$2).getInstance().getLogger(i$2), i$2;
		}
		W.__dashjs_factory_name = "SourceBufferSink";
		var $ = N.default.getClassFactory(W);
		function X(t$2) {
			const e$2 = this.context;
			let n$2, a$1, r$2, i$2 = [], l$2 = t$2;
			function o$2(t$3, e$3) {
				return i$2 = i$2.filter(((n$3) => !((isNaN(e$3) || n$3.start < e$3) && (isNaN(t$3) || n$3.end > t$3)))), Promise.resolve();
			}
			return n$2 = {
				getAllBufferRanges: function() {
					let t$3 = [];
					for (let e$4 = 0; e$4 < i$2.length; e$4++) {
						let n$3 = i$2[e$4];
						0 === t$3.length || n$3.start > t$3[t$3.length - 1].end ? t$3.push({
							start: n$3.start,
							end: n$3.end
						}) : t$3[t$3.length - 1].end = n$3.end;
					}
					const e$3 = {
						start: function(e$4) {
							return t$3[e$4].start;
						},
						end: function(e$4) {
							return t$3[e$4].end;
						}
					};
					return Object.defineProperty(e$3, "length", { get: function() {
						return t$3.length;
					} }), e$3;
				},
				append: function(t$3) {
					return "InitializationSegment" !== t$3.segmentType ? (i$2.push(t$3), i$2.sort((function(t$4, e$3) {
						return t$4.start - e$3.start;
					})), r$2 = null) : r$2 = t$3, a$1.debug("PreBufferSink appended chunk s: " + t$3.start + "; e: " + t$3.end), l$2 && l$2({ chunk: t$3 }), Promise.resolve();
				},
				remove: o$2,
				abort: function() {
					return Promise.resolve();
				},
				discharge: function(t$3, e$3) {
					const n$3 = function(t$4, e$4) {
						return i$2.filter(((n$4) => (isNaN(e$4) || n$4.start < e$4) && (isNaN(t$4) || n$4.end > t$4)));
					}(t$3, e$3);
					return r$2 && (n$3.push(r$2), r$2 = null), o$2(t$3, e$3), n$3;
				},
				reset: function() {
					i$2 = [], r$2 = null, l$2 = null;
				},
				updateTimestampOffset: function() {
					return Promise.resolve();
				},
				waitForUpdateEnd: function(t$3) {
					t$3();
				},
				getBuffer: function() {
					return this;
				}
			}, a$1 = (0, C.default)(e$2).getInstance().getLogger(n$2), n$2;
		}
		X.__dashjs_factory_name = "PreBufferSink";
		var Q = N.default.getClassFactory(X);
		function Z() {
			let t$2 = {};
			return {
				save: function(e$2) {
					const n$2 = e$2.streamId, a$1 = e$2.representation.id;
					t$2[n$2] = t$2[n$2] || {}, t$2[n$2][a$1] = e$2;
				},
				extract: function(e$2, n$2) {
					return t$2 && t$2[e$2] && t$2[e$2][n$2] ? t$2[e$2][n$2] : null;
				},
				reset: function() {
					t$2 = {};
				}
			};
		}
		Z.__dashjs_factory_name = "InitCache";
		var J = N.default.getSingletonFactory(Z);
		const tt = .01, et = "BufferController";
		function nt(t$2) {
			const e$2 = (t$2 = t$2 || {}).capabilities, n$2 = this.context, a$1 = (0, A.default)(n$2).getInstance(), r$2 = t$2.fragmentModel, i$2 = t$2.playbackController, l$2 = t$2.representationController, o$2 = t$2.settings, s$1 = t$2.streamInfo, u$2 = t$2.textController, d$2 = t$2.type;
			let c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, w$2, I$1, N$1, x$1, M$1, O$1, P$1, L$1, F$1;
			function U$1(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
				return new Promise(((n$3, a$2) => {
					p$2 = t$3, E$2 && e$3 && "function" == typeof E$2.discharge ? (_$2 = E$2, j$1(e$3).then((() => {
						n$3();
					})).catch(((t$4) => {
						a$2(t$4);
					}))) : n$3();
				}));
			}
			function j$1(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], r$3 = arguments.length > 2 ? arguments[2] : void 0;
				return new Promise(((i$3, o$3) => {
					O$1 && t$3 ? p$2 ? (T$2 = !1, function(t$4, e$4, r$4) {
						return new Promise(((i$4) => {
							E$2 = $(n$2).create({
								mediaSource: p$2,
								textController: u$2,
								eventBus: a$1
							}), function(t$5, e$5, n$3) {
								const a$2 = l$2.getCurrentRepresentation();
								return e$5 && e$5[d$2] && (d$2 === S$1.default.VIDEO || d$2 === S$1.default.AUDIO) ? function(t$6, e$6, n$4, a$3) {
									E$2.initializeForStreamSwitch(t$6, e$6, n$4[d$2]);
									const r$5 = [];
									return r$5.push(E$2.abortBeforeAppend()), r$5.push(pt$1()), r$5.push(W$1(e$6, a$3)), e$6 && void 0 !== e$6.mseTimeOffset && r$5.push(ht$1(e$6)), Promise.allSettled(r$5);
								}(t$5, a$2, e$5, n$3) : function(t$6, e$6) {
									return E$2.initializeForFirstUse(t$6, e$6);
								}(t$5, a$2);
							}(t$4, e$4, r$4).then((() => ht$1(l$2.getCurrentRepresentation()))).then((() => {
								i$4(E$2);
							})).catch(((t$5) => {
								f$2.warn("Caught error on create SourceBuffer: " + t$5), i$4(E$2);
							}));
						}));
					}(t$3, e$3, r$3).then(((t$4) => {
						i$3(t$4);
					})).catch(((t$4) => {
						o$3(t$4);
					}))) : (T$2 = !0, function() {
						return new Promise(((t$4, e$4) => {
							E$2 = Q(n$2).create(V$1.bind(this)), ht$1(l$2.getCurrentRepresentation()).then((() => {
								t$4(E$2);
							})).catch((() => {
								e$4();
							}));
						}));
					}().then(((t$4) => {
						i$3(t$4);
					})).catch(((t$4) => {
						o$3(t$4);
					}))) : i$3(null);
				}));
			}
			function q$1(t$3) {
				o$2.get().streaming.cacheInitSegments && (f$2.info("Init fragment finished loading saving to", d$2 + "'s init cache"), O$1.save(t$3.chunk)), f$2.debug(`Appending init fragment for type ${d$2}, representationId ${t$3.chunk.representation.id} and bandwidth ${t$3.chunk.representation.bandwidth}`), H$1(t$3.chunk);
			}
			function G$1(t$3) {
				H$1(t$3.chunk, t$3.request);
			}
			function H$1(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
				E$2 && (E$2.append(t$3, e$3).then(((t$4) => {
					V$1(t$4);
				})).catch(((t$4) => {
					V$1(t$4);
				})), t$3.representation.mediaInfo.type === S$1.default.VIDEO && wt$1(R.default.VIDEO_CHUNK_RECEIVED, { chunk: t$3 }));
			}
			function Y$1(t$3) {
				if (t$3 && t$3.length > 0) for (let e$3 = 0, n$3 = t$3.length; e$3 < n$3; e$3++) f$2.debug("Buffered range: " + t$3.start(e$3) + " - " + t$3.end(e$3) + ", currentTime = ", i$2.getTime());
			}
			function V$1(t$3) {
				if (t$3.error) return 22 === t$3.error.code && function() {
					if (M$1 = !0, h$2 = .8 * _t$1(), f$2.warn("Quota exceeded, Critical Buffer: " + h$2), h$2 > 0) {
						const t$4 = Math.max(.2 * h$2, 1), e$4 = h$2 - t$4, n$4 = Math.min(o$2.get().streaming.buffer.bufferTimeAtTopQuality, .9 * e$4), a$2 = Math.min(o$2.get().streaming.buffer.bufferTimeAtTopQualityLongForm, .9 * e$4), r$3 = { streaming: { buffer: {
							bufferToKeep: parseFloat(t$4.toFixed(5)),
							bufferTimeAtTopQuality: parseFloat(n$4.toFixed(5)),
							bufferTimeAtTopQualityLongForm: parseFloat(a$2.toFixed(5))
						} } };
						o$2.update(r$3);
					}
				}(), void (22 !== t$3.error.code && vt$1() || (f$2.warn("Clearing playback buffer to overcome quota exceed situation"), wt$1(R.default.QUOTA_EXCEEDED, {
					criticalBufferLevel: h$2,
					quotaExceededTime: t$3.chunk.start
				}), ft$1(ct$1())));
				if (!E$2) return;
				if (lt$1(), M$1 = !1, I$1 = t$3.chunk, !I$1 || !I$1.endFragment) return;
				I$1 && !isNaN(I$1.index) && (b$2 = Math.max(I$1.index, b$2), ot$1());
				const e$3 = E$2.getAllBufferRanges();
				I$1.segmentType === z.HTTPRequest.MEDIA_SEGMENT_TYPE && (Y$1(e$3), nt$1(), function() {
					if (isNaN(F$1) || T$2) return;
					if (d$2 !== S$1.default.AUDIO && d$2 !== S$1.default.VIDEO) return void (F$1 = NaN);
					const t$4 = i$2.getTime(), e$4 = it$1(t$4, 0), n$4 = it$1(F$1, 0);
					if (e$4 && n$4 && e$4.start === n$4.start) return void (F$1 = NaN);
					const a$2 = l$2.getCurrentRepresentation().segmentDuration, r$3 = it$1(F$1, a$2);
					r$3 && (o$2.get().streaming.buffer.enableSeekDecorrelationFix && Math.abs(t$4 - F$1) > a$2 ? F$1 <= r$3.end && i$2.seek(Math.max(F$1, r$3.start), !1, !0) : t$4 < r$3.start && i$2.seek(r$3.start, !1, !0));
				}());
				let n$3 = !1;
				v$2 && (v$2.indexOf(I$1) > 0 && (n$3 = !0), v$2 = null), I$1 && !n$3 && wt$1(R.default.BYTES_APPENDED_END_FRAGMENT, {
					startTime: I$1.start,
					index: I$1.index,
					bufferedRanges: e$3,
					segmentType: I$1.segmentType,
					mediaType: d$2,
					representationId: I$1.representation.id
				});
			}
			function K$1(t$3, e$3) {
				const n$3 = [];
				return n$3.push(ht$1(t$3)), n$3.push(E$2 ? E$2.abort() : Promise.resolve()), n$3.push(W$1(t$3, e$3)), Promise.allSettled(n$3);
			}
			function W$1(t$3, n$3) {
				return t$3 && n$3 ? t$3 && n$3 && t$3.mimeType === n$3.mimeType && t$3.codecFamily === n$3.codecFamily ? (f$2.debug(`Switching to new codec ${t$3.codecs} without changeType as previous codec ${n$3.codecs} is compatible.`), Promise.resolve()) : o$2.get().streaming.buffer.useChangeType && e$2.supportsChangeType() ? (f$2.debug(`Using changeType() to switch from codec ${n$3.codecs} to ${t$3.codecs}`), E$2.changeType(t$3)) : (f$2.debug("changeType() not available"), Promise.resolve()) : (f$2.warn("BufferController._changeCodec() is missing the information about the Representations. Doing nothing"), Promise.resolve());
			}
			function X$1() {
				return new Promise(((t$3, e$3) => {
					let n$3 = Z$1();
					if (!n$3 || 0 === n$3.length) return nt$1(), void t$3();
					ft$1(n$3).then((() => {
						t$3();
					})).catch(((t$4) => {
						e$3(t$4);
					}));
				}));
			}
			function Z$1(t$3) {
				const e$3 = [], n$3 = E$2.getAllBufferRanges();
				if (!n$3 || 0 === n$3.length) return e$3;
				if (!t$3 && 0 !== t$3 || isNaN(t$3)) e$3.push({
					start: n$3.start(0),
					end: n$3.end(n$3.length - 1) + .5
				});
				else {
					const a$2 = function(t$4, e$4) {
						const n$4 = o$2.get().streaming.buffer.bufferToKeep, a$3 = e$4.start(0);
						if (t$4 - a$3 > n$4) {
							let e$5 = Math.max(0, t$4 - n$4);
							const i$4 = r$2.getRequests({
								state: B.FRAGMENT_MODEL_EXECUTED,
								time: t$4,
								threshold: tt
							})[0];
							if (i$4 && (e$5 = Math.min(i$4.startTime, e$5)), e$5 > 0) return {
								start: a$3,
								end: e$5
							};
						}
						return null;
					}(t$3, n$3), i$3 = function(t$4, e$4) {
						const n$4 = e$4.end(e$4.length - 1) + .5, a$3 = Tt$1(t$4), i$4 = s$1.manifestInfo.duration >= o$2.get().streaming.buffer.longFormContentDurationThreshold ? o$2.get().streaming.buffer.bufferTimeAtTopQualityLongForm : o$2.get().streaming.buffer.bufferTimeAtTopQuality;
						let l$3 = isNaN(a$3) ? t$4 : Math.min(a$3, t$4 + i$4);
						if (l$3 >= e$4.end(e$4.length - 1)) return null;
						const u$3 = r$2.getRequests({
							state: B.FRAGMENT_MODEL_EXECUTED,
							time: t$4,
							threshold: tt
						})[0];
						if (u$3 && (l$3 = Math.max(u$3.startTime + u$3.duration, l$3)), o$2.get().streaming.buffer.avoidCurrentTimeRangePruning) {
							for (let a$4 = 0; a$4 < e$4.length; a$4++) if (e$4.start(a$4) <= t$4 && t$4 <= e$4.end(a$4) && e$4.start(a$4) <= l$3 && l$3 <= e$4.end(a$4)) {
								let r$3 = l$3;
								l$3 = a$4 + 1 < e$4.length ? e$4.start(a$4 + 1) : e$4.end(a$4) + 1, f$2.debug("Buffered range [" + e$4.start(a$4) + ", " + e$4.end(a$4) + "] overlaps with targetTime " + t$4 + " and range to be pruned [" + r$3 + ", " + n$4 + "], using [" + l$3 + ", " + n$4 + "] instead" + (l$3 < n$4 ? "" : " (no actual pruning)"));
								break;
							}
						}
						return l$3 < e$4.end(e$4.length - 1) ? {
							start: l$3,
							end: n$4
						} : null;
					}(t$3, n$3);
					a$2 && e$3.push(a$2), i$3 && e$3.push(i$3);
				}
				return e$3;
			}
			function nt$1() {
				(!L$1 || d$2 === S$1.default.TEXT && u$2.isTextEnabled()) && lt$1();
			}
			function at$1() {
				st$1();
			}
			function rt$1() {
				st$1(), F$1 = NaN;
			}
			function it$1(t$3, e$3) {
				if (!E$2) return null;
				const n$3 = E$2.getAllBufferRanges();
				let a$2, r$3, i$3 = 0, l$3 = 0, o$3 = null, s$2 = null, u$3 = 0;
				const d$3 = isNaN(e$3) ? .15 : e$3;
				if (null != n$3) {
					for (r$3 = 0, a$2 = n$3.length; r$3 < a$2; r$3++) if (i$3 = n$3.start(r$3), l$3 = n$3.end(r$3), null === o$3) u$3 = Math.abs(i$3 - t$3), (t$3 >= i$3 && t$3 < l$3 || u$3 <= d$3) && (o$3 = i$3, s$2 = l$3);
					else {
						if (u$3 = i$3 - s$2, !(u$3 <= d$3)) break;
						s$2 = l$3;
					}
					if (null !== o$3) return {
						start: o$3,
						end: s$2
					};
				}
				return null;
			}
			function lt$1() {
				if (i$2) {
					let t$3 = i$2.getTime() || 0;
					T$2 && (t$3 = isNaN(F$1) ? 0 : F$1);
					const e$3 = o$2.get().streaming.gaps.jumpGaps && !isNaN(o$2.get().streaming.gaps.smallGapLimit) ? o$2.get().streaming.gaps.smallGapLimit : NaN;
					m$2 = Math.max(function(t$4, e$4) {
						let n$3, a$2;
						return o$2.get().streaming.gaps.jumpGaps && (e$4 = o$2.get().streaming.gaps.smallGapLimit), n$3 = it$1(t$4, e$4), a$2 = null === n$3 ? 0 : n$3.end - t$4, a$2;
					}(t$3, e$3), 0), wt$1(R.default.BUFFER_LEVEL_UPDATED, {
						mediaType: d$2,
						bufferLevel: m$2
					}), st$1();
				}
			}
			function ot$1() {
				const t$3 = b$2 >= y$2 - 1, e$3 = i$2.getTimeToStreamEnd(s$1) - m$2 < 1e-5;
				!t$3 && !e$3 || g$2 || (Et$1(!0), f$2.debug(`checkIfBufferingCompleted trigger BUFFERING_COMPLETED for stream id ${s$1.id} and type ${d$2}`));
			}
			function st$1() {
				if (d$2 !== S$1.default.AUDIO && d$2 !== S$1.default.VIDEO) return;
				const t$3 = i$2.getLowLatencyModeEnabled() ? o$2.get().streaming.buffer.lowLatencyStallThreshold : o$2.get().streaming.buffer.stallThreshold;
				m$2 <= t$3 && !g$2 ? ut$1(k.BUFFER_EMPTY) : (g$2 || m$2 > t$3) && ut$1(k.BUFFER_LOADED);
			}
			function ut$1(t$3) {
				w$2 === t$3 || t$3 === k.BUFFER_EMPTY && 0 === i$2.getTime() || d$2 === S$1.default.TEXT && !u$2.isTextEnabled() || (w$2 = t$3, wt$1(R.default.BUFFER_LEVEL_STATE_CHANGED, { state: t$3 }), wt$1(t$3 === k.BUFFER_LOADED ? R.default.BUFFER_LOADED : R.default.BUFFER_EMPTY), f$2.debug(t$3 === k.BUFFER_LOADED ? "Got enough buffer to start" : "Waiting for more buffer before starting playback"));
			}
			function dt$1() {
				E$2 && d$2 !== S$1.default.TEXT && (g$2 || ft$1(ct$1()));
			}
			function ct$1() {
				const t$3 = [], e$3 = E$2.getAllBufferRanges();
				if (!e$3 || 0 === e$3.length) return t$3;
				const n$3 = i$2.getTime();
				let a$2 = Math.max(0, n$3 - o$2.get().streaming.buffer.bufferToKeep);
				const l$3 = r$2.getRequests({
					state: B.FRAGMENT_MODEL_EXECUTED,
					time: n$3,
					threshold: tt
				})[0];
				if (l$3) a$2 = Math.min(l$3.startTime, a$2);
				else if (0 === n$3 && i$2.getIsDynamic()) return [];
				if (e$3.start(0) <= a$2) {
					const n$4 = {
						start: 0,
						end: a$2
					};
					for (let t$4 = 0; t$4 < e$3.length && e$3.end(t$4) <= a$2; t$4++) n$4.end = e$3.end(t$4);
					n$4.start < n$4.end && t$3.push(n$4);
				}
				return t$3;
			}
			function ft$1(t$3) {
				return new Promise(((e$3, n$3) => {
					if (!t$3 || !E$2 || 0 === t$3.length) return lt$1(), void e$3();
					const a$2 = [];
					t$3.forEach(((t$4) => {
						a$2.push(function(t$5) {
							return new Promise(((e$4, n$4) => {
								t$5.resolve = e$4, t$5.reject = n$4, P$1.push(t$5);
							}));
						}(t$4));
					})), x$1 || gt$1(), Promise.all(a$2).then((() => {
						e$3();
					})).catch(((t$4) => {
						n$3(t$4);
					}));
				}));
			}
			function gt$1() {
				try {
					if (0 === P$1.length || !E$2) return f$2.debug("Nothing to prune, halt pruning"), P$1 = [], void (x$1 = !1);
					const t$3 = E$2.getBuffer();
					if (!t$3 || !t$3.buffered || 0 === t$3.buffered.length) return f$2.debug("SourceBuffer is empty (or does not exist), halt pruning"), P$1 = [], void (x$1 = !1);
					const e$3 = P$1.shift();
					f$2.debug(`${d$2}: Removing buffer from: ${e$3.start} to ${e$3.end}`), x$1 = !0, i$2.getTime() < e$3.end && Et$1(!1), E$2.remove(e$3).then(((t$4) => {
						mt$1(t$4);
					})).catch(((t$4) => {
						mt$1(t$4);
					}));
				} catch (t$3) {
					x$1 = !1;
				}
			}
			function mt$1(t$3) {
				f$2.debug("onRemoved buffer from:", t$3.from, "to", t$3.to), E$2 && (Y$1(E$2.getAllBufferRanges()), 0 === P$1.length && (x$1 = !1, lt$1()), t$3.unintended && (f$2.warn("Detected unintended removal from:", t$3.from, "to", t$3.to, "setting streamprocessor time to", t$3.from), wt$1(R.default.SEEK_TARGET, { time: t$3.from })), x$1 ? gt$1() : (L$1 ? L$1 = !1 : lt$1(), wt$1(R.default.BUFFER_CLEARED, {
					from: t$3.from,
					to: t$3.to,
					unintended: t$3.unintended,
					hasEnoughSpaceToAppend: vt$1(),
					quotaExceeded: M$1
				})));
			}
			function ht$1(t$3) {
				return new Promise(((e$3) => {
					t$3 && void 0 !== t$3.mseTimeOffset && E$2 && E$2.updateTimestampOffset ? E$2.updateTimestampOffset(t$3.mseTimeOffset).then((() => {
						e$3();
					})).catch((() => {
						e$3();
					})) : e$3();
				}));
			}
			function pt$1() {
				return E$2 && !g$2 ? E$2.updateAppendWindow(s$1) : Promise.resolve();
			}
			function bt$1() {
				N$1++, N$1 * (o$2.get().streaming.wallclockTimeUpdateInterval / 1e3) >= o$2.get().streaming.buffer.bufferPruningInterval && (N$1 = 0, dt$1());
			}
			function yt$1() {
				st$1();
			}
			function Et$1(t$3) {
				g$2 = t$3, g$2 ? wt$1(R.default.BUFFERING_COMPLETED) : y$2 = Number.POSITIVE_INFINITY;
			}
			function _t$1() {
				try {
					const t$3 = E$2.getAllBufferRanges();
					let e$3, n$3, a$2 = 0;
					if (!t$3) return a$2;
					for (n$3 = 0, e$3 = t$3.length; n$3 < e$3; n$3++) a$2 += t$3.end(n$3) - t$3.start(n$3);
					return a$2;
				} catch (t$3) {
					return 0;
				}
			}
			function Tt$1(t$3) {
				try {
					let e$3 = t$3;
					const n$3 = E$2.getAllBufferRanges();
					if (!n$3 || 0 === n$3.length) return NaN;
					let a$2 = 0;
					for (; e$3 === t$3 && a$2 < n$3.length;) {
						const t$4 = n$3.start(a$2), r$3 = n$3.end(a$2);
						e$3 >= t$4 && e$3 <= r$3 && (e$3 = r$3), a$2 += 1;
					}
					return e$3 === t$3 ? NaN : e$3;
				} catch (t$4) {
					return NaN;
				}
			}
			function vt$1() {
				const t$3 = _t$1();
				return isNaN(t$3) || t$3 < h$2;
			}
			function wt$1(t$3, e$3) {
				let n$3 = e$3 || {};
				a$1.trigger(t$3, n$3, {
					streamId: s$1.id,
					mediaType: d$2
				});
			}
			function St$1(t$3, e$3) {
				if (h$2 = Number.POSITIVE_INFINITY, w$2 = void 0, y$2 = Number.POSITIVE_INFINITY, b$2 = 0, I$1 = null, g$2 = !1, x$1 = !1, M$1 = !1, m$2 = 0, N$1 = 0, P$1 = [], F$1 = NaN, T$2 = !1, E$2) {
					let n$3 = E$2;
					E$2 = null, t$3 || (e$3 ? n$3.removeEventListeners() : n$3.abort().then((() => {
						n$3.reset(e$3), n$3 = null;
					})));
				}
				L$1 = !1;
			}
			return c$2 = {
				appendInitSegmentFromCache: function(t$3) {
					const e$3 = O$1.extract(s$1.id, t$3);
					return !!e$3 && (f$2.debug(`Appending init fragment for type ${d$2}, representationId ${e$3.representation.id} and bandwidth ${e$3.representation.bandwidth}`), H$1(e$3), !0);
				},
				clearBuffers: ft$1,
				createBufferSink: j$1,
				dischargePreBuffer: function() {
					if (E$2 && _$2 && "function" == typeof _$2.discharge) {
						const t$3 = _$2.getAllBufferRanges();
						if (t$3.length > 0) {
							let e$4 = "Beginning " + d$2 + "PreBuffer discharge, adding buffer for:";
							for (let n$4 = 0; n$4 < t$3.length; n$4++) e$4 += " start: " + t$3.start(n$4) + ", end: " + t$3.end(n$4) + ";";
							f$2.debug(e$4);
						} else f$2.debug("PreBuffer discharge requested, but there were no media segments in the PreBuffer.");
						v$2 = [];
						let e$3 = _$2.discharge(), n$3 = null;
						for (let t$4 = 0; t$4 < e$3.length; t$4++) {
							const a$2 = e$3[t$4];
							if (a$2.segmentType !== z.HTTPRequest.INIT_SEGMENT_TYPE) {
								const t$5 = O$1.extract(a$2.streamId, a$2.representation.id);
								t$5 && n$3 !== t$5 && (v$2.push(t$5), E$2.append(t$5), n$3 = t$5);
							}
							v$2.push(a$2), E$2.append(a$2);
						}
						_$2.reset(), _$2 = null;
					}
				},
				getAllRangesWithSafetyFactor: Z$1,
				getBuffer: function() {
					return E$2;
				},
				getBufferControllerType: function() {
					return et;
				},
				getBufferLevel: function() {
					return m$2;
				},
				getContinuousBufferTimeForTargetTime: Tt$1,
				getIsBufferingCompleted: function() {
					return g$2;
				},
				getIsPruningInProgress: function() {
					return x$1;
				},
				getMediaSource: function() {
					return p$2;
				},
				getRangeAt: it$1,
				getStreamId: function() {
					return s$1.id;
				},
				getType: function() {
					return d$2;
				},
				hasBufferAtTime: function(t$3) {
					try {
						const e$3 = E$2.getAllBufferRanges();
						if (!e$3 || 0 === e$3.length) return !1;
						let n$3 = 0;
						for (; n$3 < e$3.length;) {
							const a$2 = e$3.start(n$3), r$3 = e$3.end(n$3);
							if (t$3 >= a$2 && t$3 <= r$3) return !0;
							n$3 += 1;
						}
						return !1;
					} catch (t$4) {
						return f$2.error(t$4), !1;
					}
				},
				initialize: function(t$3) {
					U$1(t$3), a$1.on(R.default.INIT_FRAGMENT_LOADED, q$1, c$2), a$1.on(R.default.MEDIA_FRAGMENT_LOADED, G$1, c$2), a$1.on(R.default.WALLCLOCK_TIME_UPDATED, bt$1, c$2), a$1.on(D.default.PLAYBACK_PLAYING, rt$1, c$2), a$1.on(D.default.PLAYBACK_PROGRESS, nt$1, c$2), a$1.on(D.default.PLAYBACK_TIME_UPDATED, nt$1, c$2), a$1.on(D.default.PLAYBACK_RATE_CHANGED, yt$1, c$2), a$1.on(D.default.PLAYBACK_STALLED, at$1, c$2);
				},
				prepareForAbandonQualitySwitch: function(t$3, e$3) {
					return K$1(t$3, e$3);
				},
				prepareForDefaultQualitySwitch: function(t$3, e$3) {
					return K$1(t$3, e$3);
				},
				prepareForFastQualitySwitch: function(t$3, e$3) {
					return K$1(t$3, e$3);
				},
				prepareForForceReplacementQualitySwitch: function(t$3, e$3) {
					return new Promise(((n$3) => {
						const a$2 = [];
						a$2.push(E$2.abort()), a$2.push(pt$1()), a$2.push(X$1()), a$2.push(ht$1(t$3)), a$2.push(W$1(t$3, e$3)), Promise.allSettled(a$2).then((() => {
							Et$1(!1), n$3();
						}));
					}));
				},
				prepareForNonReplacementTrackSwitch: function(t$3, e$3) {
					return new Promise(((n$3) => {
						const a$2 = [];
						a$2.push(pt$1()), a$2.push(W$1(t$3, e$3)), Promise.allSettled(a$2).then((() => {
							n$3();
						}));
					}));
				},
				prepareForPlaybackSeek: function() {
					return g$2 && Et$1(!1), E$2.abort();
				},
				prepareForReplacementTrackSwitch: function(t$3, e$3) {
					return new Promise(((n$3) => {
						const a$2 = [];
						a$2.push(E$2.abort()), a$2.push(pt$1()), a$2.push(W$1(t$3, e$3)), a$2.push(X$1()), a$2.push(ht$1(t$3)), Promise.allSettled(a$2).then((() => {
							Et$1(!1), n$3();
						}));
					}));
				},
				pruneAllSafely: X$1,
				pruneBuffer: dt$1,
				reset: function(t$3, e$3) {
					a$1.off(R.default.INIT_FRAGMENT_LOADED, q$1, this), a$1.off(R.default.MEDIA_FRAGMENT_LOADED, G$1, this), a$1.off(R.default.WALLCLOCK_TIME_UPDATED, bt$1, this), a$1.off(D.default.PLAYBACK_PLAYING, rt$1, this), a$1.off(D.default.PLAYBACK_PROGRESS, nt$1, this), a$1.off(D.default.PLAYBACK_TIME_UPDATED, nt$1, this), a$1.off(D.default.PLAYBACK_RATE_CHANGED, yt$1, this), a$1.off(D.default.PLAYBACK_STALLED, at$1, this), St$1(t$3, e$3);
				},
				segmentRequestingCompleted: function(t$3) {
					isNaN(t$3) || (y$2 = t$3, ot$1());
				},
				setIsBufferingCompleted: Et$1,
				setMediaSource: U$1,
				setSeekTarget: function(t$3) {
					F$1 = t$3;
				},
				updateAppendWindow: pt$1,
				updateBufferTimestampOffset: ht$1
			}, f$2 = (0, C.default)(n$2).getInstance().getLogger(c$2), O$1 = J(n$2).getInstance(), St$1(), c$2;
		}
		nt.__dashjs_factory_name = et;
		var at = N.default.getClassFactory(nt);
		const rt = "NotFragmentedTextBufferController";
		function it(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance(), a$1 = t$2.textController, r$2 = t$2.errHandler, i$2 = t$2.streamInfo, l$2 = t$2.type;
			let o$2, s$1, u$2, d$2, c$2, f$2;
			function g$2(t$3) {
				d$2 = t$3;
			}
			function m$2(t$3) {
				s$1 !== t$3 && (s$1 = t$3, s$1 && function(t$4) {
					n$2.trigger(t$4, {}, {
						streamId: i$2.id,
						mediaType: l$2
					});
				}(R.default.BUFFERING_COMPLETED));
			}
			function h$2(t$3) {
				t$3.chunk.bytes && !s$1 && (f$2.save(t$3.chunk), c$2.append(t$3.chunk), m$2(!0));
			}
			return o$2 = {
				initialize: function(t$3) {
					g$2(t$3);
				},
				getStreamId: function() {
					return i$2.id;
				},
				getType: function() {
					return l$2;
				},
				getBufferControllerType: function() {
					return rt;
				},
				createBufferSink: function(t$3) {
					return new Promise(((i$3, o$3) => {
						try {
							c$2 = $(e$2).create({
								mediaSource: d$2,
								textController: a$1,
								eventBus: n$2
							}), c$2.initializeForFirstUse(t$3), u$2 || (c$2.getBuffer() && "function" == typeof c$2.getBuffer().initialize && c$2.getBuffer().initialize(), u$2 = !0), i$3(c$2);
						} catch (t$4) {
							r$2.error(new G.default(V.MEDIASOURCE_TYPE_UNSUPPORTED_CODE, V.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + l$2)), o$3(t$4);
						}
					}));
				},
				dischargePreBuffer: function() {},
				getBuffer: function() {
					return c$2;
				},
				getBufferLevel: function() {
					return 0;
				},
				getRangeAt: function() {
					return null;
				},
				pruneBuffer: function() {},
				hasBufferAtTime: function() {
					return !0;
				},
				getAllRangesWithSafetyFactor: function() {
					return [];
				},
				getContinuousBufferTimeForTargetTime: function() {
					return Number.POSITIVE_INFINITY;
				},
				setMediaSource: g$2,
				getMediaSource: function() {
					return d$2;
				},
				appendInitSegmentFromCache: function(t$3) {
					return null !== f$2.extract(i$2.id, t$3);
				},
				getIsBufferingCompleted: function() {
					return s$1;
				},
				setIsBufferingCompleted: m$2,
				getIsPruningInProgress: function() {
					return !1;
				},
				reset: function(t$3) {
					n$2.off(R.default.INIT_FRAGMENT_LOADED, h$2, o$2), !t$3 && c$2 && (c$2.abort(), c$2.reset(), c$2 = null);
				},
				clearBuffers: function() {
					return Promise.resolve();
				},
				prepareForPlaybackSeek: function() {
					return Promise.resolve();
				},
				prepareForReplacementTrackSwitch: function() {
					return s$1 = !1, Promise.resolve();
				},
				setSeekTarget: function() {},
				updateAppendWindow: function() {
					return Promise.resolve();
				},
				pruneAllSafely: function() {
					return Promise.resolve();
				},
				updateBufferTimestampOffset: function() {
					return Promise.resolve();
				},
				segmentRequestingCompleted: function() {}
			}, u$2 = !1, d$2 = null, s$1 = !1, f$2 = J(e$2).getInstance(), n$2.on(R.default.INIT_FRAGMENT_LOADED, h$2, o$2), o$2;
		}
		it.__dashjs_factory_name = rt;
		var lt = N.default.getClassFactory(it);
		function ot(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance(), a$1 = t$2.dashMetrics, r$2 = t$2.mediaPlayerModel, i$2 = t$2.fragmentModel, l$2 = t$2.abrController, o$2 = t$2.playbackController, s$1 = t$2.textController, u$2 = t$2.type, d$2 = t$2.bufferController, c$2 = t$2.representationController, f$2 = t$2.settings;
			let g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, w$2, I$1;
			function N$1() {
				w$2 = !0;
			}
			function x$1() {
				w$2 = !1;
			}
			function M$1(t$3) {
				if (d$2.getIsBufferingCompleted()) return;
				z$1();
				const e$3 = isNaN(t$3) ? 0 : t$3;
				b$2 = setTimeout(O$1, e$3);
			}
			function z$1() {
				b$2 && (clearTimeout(b$2), b$2 = null);
			}
			function O$1() {
				try {
					if (function() {
						try {
							return u$2 === S$1.default.TEXT && !s$1.isTextEnabled() || o$2.isPaused() && (!o$2.getStreamController().getInitialPlayback() || !o$2.getStreamController().getAutoPlay()) && !f$2.get().streaming.scheduling.scheduleWhilePaused;
						} catch (t$3) {
							return !1;
						}
					}()) return void z$1();
					if (function() {
						try {
							return !!w$2 && c$2.getCurrentRepresentation() && (null == _$2 || T$2 || function() {
								const t$3 = c$2.getCurrentRepresentation();
								if (!u$2 || !t$3) return !0;
								let e$3 = t$3 && t$3.segmentDuration && !isNaN(t$3.segmentDuration) ? t$3.segmentDuration : 0;
								const n$3 = a$1.getCurrentBufferLevel(u$2), r$3 = P$1();
								return (r$3 <= e$3 || o$2.getLowLatencyModeEnabled() || u$2 === S$1.default.AUDIO && y$2) && (e$3 = 0), n$3 + e$3 < r$3;
							}());
						} catch (t$3) {
							return !1;
						}
					}()) {
						let t$3 = !1;
						I$1 && (t$3 = l$2.checkPlaybackQuality(u$2, m$2.id)), t$3 || function() {
							const t$4 = c$2.getCurrentRepresentation();
							v$2 || t$4.id !== _$2 || T$2 ? (T$2 ? (h$2.debug("Switch track for " + u$2 + ", representation id = " + t$4.id), T$2 = !1) : h$2.debug("Quality has changed, get init request for representationid = " + t$4.id), n$2.trigger(R.default.INIT_FRAGMENT_NEEDED, {
								representationId: t$4.id,
								sender: g$2
							}, {
								streamId: m$2.id,
								mediaType: u$2
							}), I$1 = !1, v$2 = !1) : (h$2.debug(`Media segment needed for ${u$2} and stream id ${m$2.id}`), n$2.trigger(R.default.MEDIA_FRAGMENT_NEEDED, {}, {
								streamId: m$2.id,
								mediaType: u$2
							}), I$1 = !0);
						}();
					} else M$1(o$2.getLowLatencyModeEnabled() ? f$2.get().streaming.scheduling.lowLatencyTimeout : f$2.get().streaming.scheduling.defaultTimeout);
				} catch (t$3) {
					M$1(o$2.getLowLatencyModeEnabled() ? f$2.get().streaming.scheduling.lowLatencyTimeout : f$2.get().streaming.scheduling.defaultTimeout);
				}
			}
			function P$1() {
				let t$3 = NaN;
				const e$3 = c$2.getCurrentRepresentation();
				return u$2 && e$3 ? (t$3 = u$2 === S$1.default.TEXT ? function() {
					try {
						if (s$1.isTextEnabled()) {
							const t$4 = c$2.getCurrentRepresentation();
							if (isNaN(t$4.fragmentDuration)) {
								const t$5 = a$1.getCurrentSchedulingInfo(k.SCHEDULING_INFO);
								return t$5 ? t$5.duration : 0;
							}
							return t$4.fragmentDuration;
						}
						return 0;
					} catch (t$4) {
						return 0;
					}
				}() : u$2 === S$1.default.AUDIO && y$2 ? function() {
					try {
						const t$4 = a$1.getCurrentBufferLevel(S$1.default.VIDEO), e$4 = c$2.getCurrentRepresentation();
						return isNaN(e$4.fragmentDuration) ? t$4 + 1 : Math.max(t$4 + 1, e$4.fragmentDuration);
					} catch (t$4) {
						return 0;
					}
				}() : function() {
					try {
						const t$4 = c$2.getCurrentRepresentation(), e$4 = t$4.mediaInfo.streamInfo;
						return l$2.isPlayingAtTopQuality(t$4) ? e$4.manifestInfo.duration >= f$2.get().streaming.buffer.longFormContentDurationThreshold ? f$2.get().streaming.buffer.bufferTimeAtTopQualityLongForm : f$2.get().streaming.buffer.bufferTimeAtTopQuality : r$2.getBufferTimeDefaultUnadjusted();
					} catch (t$4) {
						return r$2.getBufferTimeDefaultUnadjusted();
					}
				}(), t$3) : t$3;
			}
			function L$1() {
				F$1(!0);
			}
			function F$1(t$3) {
				if (o$2 && i$2) {
					const e$3 = i$2.getRequests({
						state: B.FRAGMENT_MODEL_EXECUTED,
						time: o$2.getTime(),
						threshold: 0
					})[0];
					e$3 && o$2.getTime() >= e$3.startTime && ((!E$2.representation || e$3.representation.mediaInfo.type === E$2.representation.mediaInfo.type && e$3.representation.mediaInfo.index !== E$2.representation.mediaInfo.index) && t$3 && (h$2.debug(`Track change rendered for streamId ${m$2.id} and type ${u$2}`), n$2.trigger(R.default.TRACK_CHANGE_RENDERED, {
						mediaType: u$2,
						oldMediaInfo: E$2 && E$2.representation && E$2.representation.mediaInfo ? E$2.representation.mediaInfo : null,
						newMediaInfo: e$3.representation.mediaInfo,
						streamId: m$2.id
					})), E$2.representation && e$3.representation.id === E$2.representation.id || !t$3 || (h$2.debug(`Quality change rendered for streamId ${m$2.id} and type ${u$2}`), n$2.trigger(R.default.QUALITY_CHANGE_RENDERED, {
						mediaType: u$2,
						oldRepresentation: E$2.representation ? E$2.representation : null,
						newRepresentation: e$3.representation,
						streamId: m$2.id
					})), E$2.representation = e$3.representation);
				}
			}
			function U$1() {
				i$2.abortRequests(), z$1();
			}
			function j$1() {
				f$2.get().streaming.scheduling.scheduleWhilePaused || M$1();
			}
			function q$1(t$3) {
				a$1.updatePlayListTraceMetrics({ playbackspeed: t$3.playbackRate.toString() });
			}
			function G$1() {
				I$1 = !0, p$2 = 0, _$2 = null, E$2 = { representation: null }, T$2 = !1, v$2 = !1, w$2 = !0;
			}
			return g$2 = {
				clearScheduleTimer: z$1,
				getBufferTarget: P$1,
				getPlaybackController: function() {
					return o$2;
				},
				getStreamId: function() {
					return m$2.id;
				},
				getSwitchTrack: function() {
					return T$2;
				},
				getTimeToLoadDelay: function() {
					return p$2;
				},
				getType: function() {
					return u$2;
				},
				initialize: function(t$3) {
					y$2 = t$3, n$2.on(R.default.URL_RESOLUTION_FAILED, U$1, g$2), n$2.on(D.default.PLAYBACK_STARTED, j$1, g$2), n$2.on(D.default.PLAYBACK_RATE_CHANGED, q$1, g$2), n$2.on(D.default.PLAYBACK_TIME_UPDATED, L$1, g$2), n$2.on(D.default.MANAGED_MEDIA_SOURCE_START_STREAMING, N$1, g$2), n$2.on(D.default.MANAGED_MEDIA_SOURCE_END_STREAMING, x$1, g$2);
				},
				reset: function() {
					n$2.off(R.default.URL_RESOLUTION_FAILED, U$1, g$2), n$2.off(D.default.PLAYBACK_STARTED, j$1, g$2), n$2.off(D.default.PLAYBACK_RATE_CHANGED, q$1, g$2), n$2.off(D.default.PLAYBACK_TIME_UPDATED, L$1, g$2), n$2.off(D.default.MANAGED_MEDIA_SOURCE_START_STREAMING, N$1, g$2), n$2.off(D.default.MANAGED_MEDIA_SOURCE_END_STREAMING, x$1, g$2), z$1(), F$1(!1), G$1(), m$2 = null;
				},
				setCheckPlaybackQuality: function(t$3) {
					I$1 = t$3;
				},
				setInitSegmentRequired: function(t$3) {
					v$2 = t$3;
				},
				setLastInitializedRepresentationId: function(t$3) {
					_$2 = t$3;
				},
				setSwitchTrack: function(t$3) {
					T$2 = t$3;
				},
				setTimeToLoadDelay: function(t$3) {
					p$2 = t$3;
				},
				startScheduleTimer: M$1
			}, h$2 = (0, C.default)(e$2).getInstance().getLogger(g$2), G$1(), m$2 = t$2.streamInfo, g$2;
		}
		ot.__dashjs_factory_name = "ScheduleController";
		var st = N.default.getClassFactory(ot);
		const ut = /\$(RepresentationID|Number|SubNumber|Bandwidth|Time)?(?:%0([0-9]+)([diouxX]))?\$/g;
		var dt = class {
			constructor() {
				this.availabilityEndTime = NaN, this.availabilityStartTime = NaN, this.duration = NaN, this.index = null, this.indexRange = null, this.media = null, this.mediaRange = null, this.mediaStartTime = NaN, this.presentationStartTime = NaN, this.replacementNumber = NaN, this.replacementTime = null, this.representation = null, this.wallStartTime = NaN;
			}
		};
		function ct(t$2, e$2, n$2, a$1, r$2, i$2, l$2, o$2) {
			let s$1 = new dt();
			var u$2;
			return s$1.representation = t$2, s$1.duration = e$2, s$1.presentationStartTime = n$2, s$1.mediaStartTime = a$1, s$1.availabilityStartTime = r$2.calcAvailabilityStartTimeFromPresentationTime(i$2, t$2, l$2), s$1.availabilityEndTime = r$2.calcAvailabilityEndTimeFromPresentationTime(i$2 + e$2, t$2, l$2), s$1.wallStartTime = r$2.calcWallTimeForSegment(s$1, l$2), s$1.replacementNumber = (u$2 = o$2, s$1.representation.startNumber + u$2), s$1.index = o$2, s$1;
		}
		function ft(t$2, e$2, n$2, a$1) {
			const r$2 = e$2.adaptation.period;
			if (isFinite(r$2.duration) && r$2.start + r$2.duration <= n$2.presentationStartTime) return !1;
			if (a$1) {
				if ("INF" === e$2.availabilityTimeOffset) return !0;
				const a$2 = t$2.getClientReferenceTime();
				return n$2.availabilityStartTime.getTime() <= a$2 && (!isFinite(n$2.availabilityEndTime) || n$2.availabilityEndTime.getTime() >= a$2);
			}
			return !0;
		}
		function gt(t$2, e$2, n$2, a$1, r$2, i$2) {
			return t$2 ? function(t$3, e$3, n$3, a$2, r$3, i$3) {
				return t$3.replace(ut, ((t$4, l$2, o$2, s$1) => {
					let u$2, d$2;
					switch (l$2) {
						case void 0: return "$";
						case "RepresentationID":
							u$2 = e$3;
							break;
						case "Number":
							u$2 = n$3;
							break;
						case "SubNumber":
							u$2 = a$2;
							break;
						case "Bandwidth":
							u$2 = r$3;
							break;
						case "Time":
							if ("string" == typeof i$3) return i$3;
							u$2 = i$3 ? Math.round(i$3) : i$3;
							break;
						default: u$2 = null;
					}
					if (null == u$2) return t$4;
					switch (s$1) {
						case void 0:
						case "d":
						case "i":
						case "u":
							d$2 = u$2.toString();
							break;
						case "o":
							d$2 = u$2.toString(8);
							break;
						case "x":
							d$2 = u$2.toString(16);
							break;
						case "X":
							d$2 = u$2.toString(16).toUpperCase();
							break;
						default: d$2 = u$2.toString();
					}
					const c$2 = parseInt(o$2, 10) || 1;
					return d$2.padStart(c$2, "0");
				}));
			}(t$2, e$2, n$2, a$1, r$2, i$2) : t$2;
		}
		function mt(t$2, e$2, n$2, a$1) {
			let r$2, i$2, l$2;
			r$2 = n$2.segmentDuration, isNaN(r$2) && (r$2 = n$2.adaptation.period.duration), i$2 = parseFloat((n$2.adaptation.period.start + a$1 * r$2).toFixed(5)), l$2 = parseFloat((i$2 + r$2).toFixed(5));
			const o$2 = ct(n$2, r$2, i$2, t$2.calcMediaTimeFromPresentationTime(i$2, n$2), t$2, l$2, e$2, a$1);
			return ft(t$2, n$2, o$2, e$2) ? o$2 : null;
		}
		function ht(t$2, e$2, n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2) {
			const d$2 = a$1 / i$2, c$2 = r$2 / i$2;
			let f$2, g$2, m$2;
			return f$2 = t$2.calcPresentationTimeFromMediaTime(d$2, n$2), g$2 = f$2 + c$2, m$2 = ct(n$2, c$2, f$2, d$2, t$2, g$2, e$2, s$1), ft(t$2, n$2, m$2, e$2) ? (m$2.replacementTime = u$2 || a$1, m$2.media = gt(l$2, void 0, m$2.replacementNumber, void 0, void 0, m$2.replacementTime), m$2.mediaRange = o$2, m$2) : null;
		}
		function pt(t$2) {
			const e$2 = (t$2 = t$2 || {}).eventBus, n$2 = t$2.events, a$1 = t$2.abrController, r$2 = t$2.dashMetrics, i$2 = t$2.playbackController, l$2 = t$2.timelineConverter, o$2 = t$2.type, s$1 = t$2.streamInfo, u$2 = t$2.segmentsController, d$2 = t$2.isDynamic;
			let c$2, f$2, g$2;
			function m$2() {
				return o$2;
			}
			function h$2() {
				return g$2;
			}
			function p$2() {
				g$2 = null, f$2 = [];
			}
			function b$2(t$3) {
				return new Promise(((e$3, n$3) => {
					const a$2 = t$3.hasInitialization(), i$3 = t$3.hasSegments(), o$3 = [];
					o$3.push(u$2.updateInitData(t$3, a$2)), o$3.push(u$2.updateSegmentData(t$3, i$3)), Promise.all(o$3).then(((n$4) => {
						var a$3;
						n$4[0] && !n$4[0].error && (t$3 = function(t$4, e$4) {
							return e$4 && !e$4.error && e$4.representation ? e$4.representation : t$4;
						}(t$3, n$4[0])), n$4[1] && !n$4[1].error && (t$3 = function(t$4, e$4) {
							if (!e$4 || e$4.error) return;
							const n$5 = e$4.segments, a$4 = [];
							let r$3, i$4, o$4, s$2, u$3 = 0;
							for (r$3 = 0, i$4 = n$5 ? n$5.length : 0; r$3 < i$4; r$3++) o$4 = n$5[r$3], s$2 = ht(l$2, d$2, t$4, o$4.startTime, o$4.duration, o$4.timescale, o$4.media, o$4.mediaRange, u$3), s$2 && (a$4.push(s$2), s$2 = null, u$3++);
							return a$4.length > 0 && (t$4.segments = a$4), t$4;
						}(t$3, n$4[1])), t$3.fragmentDuration = t$3.segmentDuration ? t$3.segmentDuration : t$3.segments && t$3.segments.length > 0 ? t$3.segments[0].duration : NaN, (a$3 = t$3).mediaFinishedInformation = u$2.getMediaFinishedInformation(a$3), function(t$4) {
							let e$4, n$5 = r$2.getCurrentManifestUpdate(), a$4 = !1;
							if (n$5) {
								for (let r$3 = 0; r$3 < n$5.representationInfo.length; r$3++) if (e$4 = n$5.representationInfo[r$3], e$4.index === t$4.index && e$4.mediaType === m$2()) {
									a$4 = !0;
									break;
								}
								a$4 || r$2.addManifestUpdateRepresentationInfo(t$4, m$2());
							}
						}(t$3), e$3();
					})).catch(((t$4) => {
						n$3(t$4);
					}));
				}));
			}
			function y$2(t$3) {
				if (!f$2 || 0 === f$2.length) return null;
				const e$3 = f$2.filter(((e$4) => e$4.id === t$3));
				return e$3.length > 0 ? e$3[0] : null;
			}
			function E$2(t$3) {
				e$2.trigger(n$2.DATA_UPDATE_COMPLETED, {
					currentRepresentation: g$2,
					error: t$3
				}, {
					streamId: s$1.id,
					mediaType: o$2
				});
			}
			function _$2(t$3) {
				g$2 && g$2.id === t$3.id || function(t$4) {
					(function() {
						if (!(a$1 && r$2 && i$2 && l$2)) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
					})();
					const n$3 = /* @__PURE__ */ new Date(), u$3 = 1e3 * i$2.getTime();
					t$4 && r$2.addRepresentationSwitch(t$4.adaptation.type, n$3, u$3, t$4.id), e$2.trigger(D.default.REPRESENTATION_SWITCH, {
						mediaType: o$2,
						streamId: s$1.id,
						currentRepresentation: t$4
					}, {
						streamId: s$1.id,
						mediaType: o$2
					});
				}(t$3), g$2 = t$3;
			}
			function T$2(t$3) {
				if (t$3.newDuration) {
					const e$3 = h$2();
					e$3 && e$3.adaptation.period && (e$3.adaptation.period.duration = t$3.newDuration);
				}
			}
			return c$2 = {
				getCurrentRepresentation: h$2,
				getRepresentationById: y$2,
				getStreamId: function() {
					return s$1.id;
				},
				getType: m$2,
				prepareQualityChange: function(t$3) {
					const e$3 = f$2.filter(((e$4) => e$4.id === t$3.id));
					e$3.length > 0 && _$2(e$3[0]);
				},
				reset: function() {
					e$2.off(D.default.MANIFEST_VALIDITY_CHANGED, T$2, c$2), p$2();
				},
				updateData: function(t$3, e$3, n$3) {
					return new Promise(((l$3, u$3) => {
						if (f$2 = t$3, _$2(y$2(n$3)), o$2 !== S$1.default.VIDEO && o$2 !== S$1.default.AUDIO && (o$2 !== S$1.default.TEXT || !e$3)) return E$2(), void l$3();
						const d$3 = [];
						for (let t$4 = 0, e$4 = f$2.length; t$4 < e$4; t$4++) {
							const e$5 = f$2[t$4];
							d$3.push(b$2(e$5));
						}
						Promise.all(d$3).then((() => {
							(function() {
								a$1.setPlaybackQuality(o$2, s$1, g$2);
								const t$4 = r$2.getCurrentDVRInfo(o$2);
								t$4 && r$2.updateManifestUpdateInfo({ latency: t$4.range.end - i$2.getTime() }), E$2();
							})(), l$3();
						})).catch(((t$4) => {
							u$3(t$4);
						}));
					}));
				}
			}, p$2(), e$2.on(D.default.MANIFEST_VALIDITY_CHANGED, T$2, c$2), c$2;
		}
		pt.__dashjs_factory_name = "RepresentationController";
		var bt = N.default.getClassFactory(pt), yt = n$1(656);
		function Et(t$2) {
			const e$2 = (t$2 = t$2 || {}).eventBus, n$2 = t$2.debug, a$1 = t$2.urlUtils, r$2 = t$2.type, i$2 = t$2.streamInfo, l$2 = t$2.segmentsController, o$2 = t$2.timelineConverter, s$1 = t$2.baseURLController;
			let u$2, d$2, c$2, f$2, g$2;
			function m$2() {
				return r$2;
			}
			function h$2() {
				c$2 = null;
			}
			function p$2(t$3, e$3, n$3) {
				const r$3 = s$1.resolve(n$3.path);
				let i$3, l$3, o$3 = {};
				return r$3 && e$3 !== r$3.url && a$1.isRelative(e$3) ? (i$3 = r$3.url, l$3 = r$3.serviceLocation, o$3 = r$3.queryParams, e$3 && (i$3 = a$1.resolve(e$3, i$3))) : i$3 = e$3, !a$1.isRelative(i$3) && (t$3.url = i$3, t$3.serviceLocation = l$3, t$3.queryParams = o$3, !0);
			}
			function b$2(t$3, e$3) {
				if (null == e$3) return null;
				const n$3 = new P(), a$2 = e$3.representation, r$3 = a$2.bandwidth, i$3 = gt(e$3.media, a$2.id, e$3.replacementNumber, void 0, r$3, e$3.replacementTime);
				return n$3.mediaType = m$2(), n$3.bandwidth = a$2.bandwidth, n$3.type = z.HTTPRequest.MEDIA_SEGMENT_TYPE, n$3.range = e$3.mediaRange, n$3.startTime = e$3.presentationStartTime, n$3.mediaStartTime = e$3.mediaStartTime, n$3.duration = e$3.duration, n$3.timescale = a$2.timescale, n$3.availabilityStartTime = e$3.availabilityStartTime, n$3.availabilityEndTime = e$3.availabilityEndTime, n$3.availabilityTimeComplete = a$2.availabilityTimeComplete, n$3.wallStartTime = e$3.wallStartTime, n$3.index = e$3.index, n$3.adaptationIndex = a$2.adaptation.index, n$3.representation = a$2, p$2(n$3, i$3, a$2) ? n$3 : void 0;
			}
			function y$2(t$3, e$3, n$3) {
				let a$2 = null;
				if (!e$3 || !e$3.segmentInfoType) return a$2;
				const r$3 = l$2.getSegmentByTime(e$3, n$3);
				return r$3 && (c$2 = r$3, d$2.debug("Index for time " + n$3 + " is " + r$3.index), a$2 = b$2(0, r$3)), a$2;
			}
			function E$2(t$3, e$3, n$3) {
				let a$2 = null;
				const r$3 = l$2.getSegmentByIndex(e$3, n$3, c$2 ? c$2.mediaStartTime : -1);
				if (r$3) a$2 = b$2(0, r$3), c$2 = r$3;
				else {
					if (f$2 && !g$2) return d$2.debug(m$2() + " No segment found at index: " + n$3 + ". Wait for next loop"), null;
					g$2 = !0;
				}
				return a$2;
			}
			function _$2() {
				d$2.debug("Dynamic stream complete"), g$2 = !0;
			}
			return u$2 = {
				getCurrentIndex: function() {
					return c$2 ? c$2.index : -1;
				},
				getInitRequest: function(t$3, e$3) {
					return e$3 ? function(t$4, e$4, n$3) {
						const a$2 = new P(), r$3 = e$4.adaptation.period, i$3 = r$3.start;
						if (a$2.mediaType = n$3, a$2.type = z.HTTPRequest.INIT_SEGMENT_TYPE, a$2.range = e$4.range, a$2.availabilityStartTime = o$2.calcAvailabilityStartTimeFromPresentationTime(i$3, e$4, f$2), a$2.availabilityEndTime = o$2.calcAvailabilityEndTimeFromPresentationTime(i$3 + r$3.duration, e$4, f$2), a$2.representation = e$4, p$2(a$2, e$4.initialization, e$4)) return a$2.url = gt(a$2.url, void 0, void 0, void 0, e$4.bandwidth), a$2;
					}(0, e$3, m$2()) : null;
				},
				getNextSegmentRequest: function(t$3, e$3) {
					if (!e$3 || !e$3.segmentInfoType) return null;
					let n$3 = c$2 ? c$2.index + 1 : 0;
					return e$3 && c$2 && e$3.endNumber && c$2.replacementNumber && c$2.replacementNumber >= e$3.endNumber ? (g$2 = !0, null) : E$2(0, e$3, n$3);
				},
				getNextSegmentRequestIdempotent: function(t$3, e$3) {
					let n$3 = null, a$2 = c$2 ? c$2.index + 1 : 0;
					const r$3 = l$2.getSegmentByIndex(e$3, a$2, c$2 ? c$2.mediaStartTime : -1);
					return r$3 ? (n$3 = b$2(0, r$3), n$3) : null;
				},
				getSegmentRequestForTime: y$2,
				getStreamId: function() {
					return i$2.id;
				},
				getStreamInfo: function() {
					return i$2;
				},
				getType: m$2,
				getValidTimeAheadOfTargetTime: function(t$3, e$3, n$3, a$2) {
					try {
						if (isNaN(t$3) || !e$3 || !n$3) return NaN;
						if (t$3 < 0 && (t$3 = 0), isNaN(a$2) && (a$2 = .5), y$2(0, n$3, t$3)) return t$3;
						if (n$3.adaptation.period.start + n$3.adaptation.period.duration < t$3) return NaN;
						const r$3 = isFinite(n$3.adaptation.period.duration) ? n$3.adaptation.period.start + n$3.adaptation.period.duration : t$3 + 30;
						let i$3 = Math.min(t$3 + a$2, r$3), l$3 = NaN, o$3 = null;
						for (; i$3 <= r$3;) {
							let t$4 = null;
							if (i$3 <= r$3 && (t$4 = y$2(0, n$3, i$3)), t$4) {
								l$3 = i$3, o$3 = t$4;
								break;
							}
							i$3 += a$2;
						}
						if (o$3) {
							const e$4 = o$3.startTime + o$3.duration;
							return t$3 > o$3.startTime && e$4 - t$3 > a$2 ? t$3 : !isNaN(o$3.startTime) && t$3 < o$3.startTime && l$3 > o$3.startTime ? o$3.startTime + .001 : Math.min(e$4 - a$2, l$3);
						}
						return l$3;
					} catch (t$4) {
						return NaN;
					}
				},
				initialize: function(t$3) {
					f$2 = t$3, g$2 = !1, l$2.initialize(t$3);
				},
				isLastSegmentRequested: function(t$3, e$3) {
					if (!t$3 || !c$2) return !1;
					if (g$2) return !0;
					if (!isFinite(t$3.adaptation.period.duration)) return !1;
					if (c$2.presentationStartTime + c$2.duration > e$3) return !1;
					if (t$3.mediaFinishedInformation && !isNaN(t$3.mediaFinishedInformation.numberOfSegments) && !isNaN(c$2.index) && c$2.index >= t$3.mediaFinishedInformation.numberOfSegments - 1) {
						if (!f$2 || t$3.segmentInfoType === I.default.SEGMENT_TEMPLATE) return !0;
						if (f$2 && t$3.segmentInfoType === I.default.SEGMENT_LIST && t$3.adaptation.period.nextPeriodId) return !0;
					}
					return !!(f$2 && t$3.adaptation.period.nextPeriodId && t$3.segmentInfoType === I.default.SEGMENT_TIMELINE && t$3.mediaFinishedInformation && !isNaN(t$3.mediaFinishedInformation.mediaTimeOfLastSignaledSegment) && c$2 && !isNaN(c$2.mediaStartTime) && !isNaN(c$2.duration) && c$2.mediaStartTime + c$2.duration >= t$3.mediaFinishedInformation.mediaTimeOfLastSignaledSegment - .05);
				},
				repeatSegmentRequest: function(t$3, e$3) {
					return e$3 && e$3.segmentInfoType ? E$2(0, e$3, c$2 ? c$2.index : 0) : null;
				},
				reset: function() {
					h$2(), e$2.off(D.default.DYNAMIC_TO_STATIC, _$2, u$2);
				}
			}, d$2 = n$2.getLogger(u$2), h$2(), e$2.on(D.default.DYNAMIC_TO_STATIC, _$2, u$2), u$2;
		}
		Et.__dashjs_factory_name = "DashHandler";
		var _t = N.default.getClassFactory(Et);
		function Tt() {
			let t$2;
			const e$2 = /^[a-z][a-z0-9+\-_.]*:/i, n$2 = /^https?:\/\//i, a$1 = /^https:\/\//i, r$2 = /^([a-z][a-z0-9+\-_.]*:\/\/[^\/]+)\/?/i, i$2 = (t$3, e$3) => {
				try {
					return new window.URL(t$3, e$3).toString();
				} catch (e$4) {
					return t$3;
				}
			}, l$2 = (t$3, e$3) => {
				let n$3 = o$2;
				if (!e$3) return t$3;
				if (!d$2(t$3)) return t$3;
				c$2(t$3) && (n$3 = s$1), f$2(t$3) && (n$3 = u$2);
				const a$2 = n$3(e$3), r$3 = "/" !== a$2.charAt(a$2.length - 1) && "/" !== t$3.charAt(0) ? "/" : "";
				return [a$2, t$3].join(r$3);
			};
			function o$2(t$3) {
				const e$3 = t$3.indexOf("/"), n$3 = t$3.lastIndexOf("/");
				return -1 !== e$3 ? n$3 === e$3 + 1 ? t$3 : (-1 !== t$3.indexOf("?") && (t$3 = t$3.substring(0, t$3.indexOf("?"))), t$3.substring(0, n$3 + 1)) : "";
			}
			function s$1(t$3) {
				const e$3 = t$3.match(r$2);
				return e$3 ? e$3[1] : "";
			}
			function u$2(t$3) {
				const n$3 = t$3.match(e$2);
				return n$3 ? n$3[0] : "";
			}
			function d$2(t$3) {
				return !e$2.test(t$3);
			}
			function c$2(t$3) {
				return d$2(t$3) && "/" === t$3.charAt(0);
			}
			function f$2(t$3) {
				return 0 === t$3.indexOf("//");
			}
			return function() {
				try {
					new window.URL("x", "http://y"), t$2 = i$2;
				} catch (t$3) {} finally {
					t$2 = t$2 || l$2;
				}
			}(), {
				parseBaseUrl: o$2,
				parseOrigin: s$1,
				parseScheme: u$2,
				isRelative: d$2,
				isPathAbsolute: c$2,
				isSchemeRelative: f$2,
				isHTTPURL: function(t$3) {
					return n$2.test(t$3);
				},
				isHTTPS: function(t$3) {
					return a$1.test(t$3);
				},
				removeHostname: function(t$3) {
					return /^(?:\w+\:\/\/)?([^\/]+)(.*)$/.exec(t$3)[2].substring(1);
				},
				resolve: function(e$3, n$3) {
					return t$2(e$3, n$3);
				}
			};
		}
		Tt.__dashjs_factory_name = "DefaultURLUtils";
		var vt = N.default.getSingletonFactory(Tt);
		function wt() {
			let t$2, e$2, n$2 = [];
			const a$1 = this.context;
			function r$2(t$3, a$2, r$3) {
				let i$2 = function(t$4) {
					let a$3;
					for (a$3 = 0; a$3 < n$2.length; a$3++) if (n$2[a$3].regex.test(t$4)) return n$2[a$3].utils;
					return e$2;
				}(r$3 || a$2);
				return i$2 && "function" == typeof i$2[t$3] ? i$2[t$3](a$2, r$3) : e$2[t$3](a$2, r$3);
			}
			return e$2 = vt(a$1).getInstance(), t$2 = {
				registerUrlRegex: function(t$3, e$3) {
					n$2.push({
						regex: t$3,
						utils: e$3
					});
				},
				parseBaseUrl: function(t$3) {
					return r$2("parseBaseUrl", t$3);
				},
				parseOrigin: function(t$3) {
					return r$2("parseOrigin", t$3);
				},
				parseScheme: function(t$3) {
					return r$2("parseScheme", t$3);
				},
				isRelative: function(t$3) {
					return r$2("isRelative", t$3);
				},
				isPathAbsolute: function(t$3) {
					return r$2("isPathAbsolute", t$3);
				},
				isSchemeRelative: function(t$3) {
					return r$2("isSchemeRelative", t$3);
				},
				isHTTPURL: function(t$3) {
					return r$2("isHTTPURL", t$3);
				},
				isHTTPS: function(t$3) {
					return r$2("isHTTPS", t$3);
				},
				removeHostname: function(t$3) {
					return r$2("removeHostname", t$3);
				},
				resolve: function(t$3, e$3) {
					return r$2("resolve", t$3, e$3);
				}
			}, t$2;
		}
		wt.__dashjs_factory_name = "URLUtils";
		var St = N.default.getSingletonFactory(wt);
		class It {
			constructor() {
				this.start = null, this.mstart = null, this.starttype = null, this.trace = [];
			}
		}
		It.INITIAL_PLAYOUT_START_REASON = "initial_playout", It.SEEK_START_REASON = "seek", It.RESUME_FROM_PAUSE_START_REASON = "resume", It.METRICS_COLLECTION_START_REASON = "metrics_collection_start";
		class kt {
			constructor() {
				this.representationid = null, this.subreplevel = null, this.start = null, this.mstart = null, this.duration = null, this.playbackspeed = null, this.stopreason = null;
			}
		}
		function At(t$2, e$2) {
			const n$2 = (t$2 = t$2 || {}).timelineConverter, a$1 = t$2.dashMetrics;
			let r$2;
			function i$2() {
				if (!n$2) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
			}
			function l$2(t$3, e$3) {
				const n$3 = t$3.adaptation.period.mpd.manifest.Period[t$3.adaptation.period.index].AdaptationSet[t$3.adaptation.index].Representation[t$3.index].SegmentTemplate || t$3.adaptation.period.mpd.manifest.Period[t$3.adaptation.period.index].AdaptationSet[t$3.adaptation.index].Representation[t$3.index].SegmentList, a$2 = n$3.SegmentTimeline, r$3 = n$3.SegmentURL;
				let i$3, l$3, s$1, u$2, d$2, c$2, f$2, g$2 = 0, m$2 = -1;
				f$2 = t$3.timescale, i$3 = a$2.S;
				let h$2 = !1;
				for (s$1 = 0, u$2 = i$3.length; s$1 < u$2 && !h$2; s$1++) for (l$3 = i$3[s$1], c$2 = 0, l$3.hasOwnProperty("r") && (c$2 = l$3.r), l$3.hasOwnProperty("t") && (g$2 = l$3.t), c$2 < 0 && (c$2 = o$2(t$3, i$3[s$1 + 1], l$3, f$2, g$2 / f$2)), d$2 = 0; d$2 <= c$2 && !h$2; d$2++) m$2++, h$2 = e$3(g$2, n$3, r$3, l$3, f$2, m$2, s$1), h$2 && (t$3.segmentDuration = l$3.d / f$2), g$2 += l$3.d;
			}
			function o$2(t$3, e$3, r$3, i$3, l$3) {
				let o$3;
				if (e$3 && e$3.hasOwnProperty("t")) o$3 = e$3.t / i$3;
				else try {
					let e$4 = 0;
					if (isNaN(t$3.adaptation.period.start) || isNaN(t$3.adaptation.period.duration) || !isFinite(t$3.adaptation.period.duration)) {
						const t$4 = a$1.getCurrentDVRInfo();
						e$4 = isNaN(t$4.end) ? 0 : t$4.end;
					} else e$4 = t$3.adaptation.period.start + t$3.adaptation.period.duration;
					o$3 = n$2.calcMediaTimeFromPresentationTime(e$4, t$3), t$3.segmentDuration = r$3.d / i$3;
				} catch (t$4) {
					o$3 = 0;
				}
				return Math.max(Math.ceil((o$3 - l$3) / (r$3.d / i$3)) - 1, 0);
			}
			return r$2 = {
				getSegmentByIndex: function(t$3, a$2, r$3) {
					if (i$2(), !t$3) return null;
					let o$3 = null, s$1 = !1;
					return l$2(t$3, (function(a$3, i$3, l$3, u$2, d$2, c$2, f$2) {
						if (s$1 || r$3 < 0) {
							let r$4 = i$3.media, s$2 = u$2.mediaRange;
							return l$3 && (r$4 = l$3[f$2].media || "", s$2 = l$3[f$2].mediaRange), o$3 = ht(n$2, e$2, t$3, a$3, u$2.d, d$2, r$4, s$2, c$2, u$2.tManifest), !0;
						}
						return a$3 >= r$3 * d$2 - .5 * u$2.d && (s$1 = !0), !1;
					})), o$3;
				},
				getSegmentByTime: function(t$3, a$2) {
					if (i$2(), !t$3) return null;
					void 0 === a$2 && (a$2 = null);
					let r$3 = null;
					const o$3 = n$2.calcMediaTimeFromPresentationTime(a$2, t$3);
					return l$2(t$3, (function(a$3, i$3, l$3, s$1, u$2, d$2, c$2) {
						const f$2 = parseFloat((o$3 * u$2).toPrecision(15));
						if (f$2 < a$3 + s$1.d && f$2 >= a$3) {
							let o$4 = i$3.media, f$3 = s$1.mediaRange;
							return l$3 && (o$4 = l$3[c$2].media || "", f$3 = l$3[c$2].mediaRange), r$3 = ht(n$2, e$2, t$3, a$3, s$1.d, u$2, o$4, f$3, d$2, s$1.tManifest), !0;
						}
						return !1;
					})), r$3;
				},
				getMediaFinishedInformation: function(t$3) {
					if (!t$3) return 0;
					const e$3 = (t$3.adaptation.period.mpd.manifest.Period[t$3.adaptation.period.index].AdaptationSet[t$3.adaptation.index].Representation[t$3.index].SegmentTemplate || t$3.adaptation.period.mpd.manifest.Period[t$3.adaptation.period.index].AdaptationSet[t$3.adaptation.index].Representation[t$3.index].SegmentList).SegmentTimeline;
					let n$3, a$2, r$3, i$3, l$3, s$1, u$2, d$2 = 0, c$2 = 0, f$2 = 0;
					for (u$2 = t$3.timescale, n$3 = e$3.S, i$3 = n$3.length, r$3 = 0; r$3 < i$3; r$3++) for (a$2 = n$3[r$3], s$1 = 0, a$2.hasOwnProperty("r") && (s$1 = a$2.r), a$2.hasOwnProperty("t") && (d$2 = a$2.t, c$2 = d$2 / u$2), s$1 < 0 && (s$1 = o$2(t$3, n$3[r$3 + 1], a$2, u$2, c$2)), l$3 = 0; l$3 <= s$1; l$3++) f$2++, d$2 += a$2.d, c$2 = d$2 / u$2;
					return {
						numberOfSegments: f$2,
						mediaTimeOfLastSignaledSegment: c$2
					};
				}
			}, r$2;
		}
		kt.REPRESENTATION_SWITCH_STOP_REASON = "representation_switch", kt.REBUFFERING_REASON = "rebuffering", kt.USER_REQUEST_STOP_REASON = "user_request", kt.END_OF_PERIOD_STOP_REASON = "end_of_period", kt.END_OF_CONTENT_STOP_REASON = "end_of_content", kt.METRICS_COLLECTION_STOP_REASON = "metrics_collection_end", kt.FAILURE_STOP_REASON = "failure", At.__dashjs_factory_name = "TimelineSegmentsGetter";
		var Rt = N.default.getClassFactory(At);
		function Nt(t$2, e$2) {
			const n$2 = (t$2 = t$2 || {}).timelineConverter;
			let a$1;
			function r$2() {
				if (!n$2 || !n$2.hasOwnProperty("calcPeriodRelativeTimeFromMpdRelativeTime")) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
			}
			function i$2(t$3, a$2) {
				if (r$2(), !t$3) return null;
				const i$3 = t$3.adaptation.period.mpd.manifest.Period[t$3.adaptation.period.index].AdaptationSet[t$3.adaptation.index].Representation[t$3.index].SegmentTemplate;
				a$2 = Math.max(a$2, 0);
				const l$2 = mt(n$2, e$2, t$3, a$2);
				if (l$2) {
					if (t$3.endNumber && l$2.replacementNumber > t$3.endNumber) return null;
					l$2.replacementTime = Math.round(a$2 * t$3.segmentDuration * t$3.timescale, 10), l$2.media = gt(i$3.media, void 0, l$2.replacementNumber, void 0, void 0, l$2.replacementTime);
				}
				return l$2;
			}
			return a$1 = {
				getSegmentByIndex: i$2,
				getSegmentByTime: function(t$3, e$3) {
					if (r$2(), !t$3) return null;
					const a$2 = t$3.segmentDuration;
					if (isNaN(a$2)) return null;
					let l$2 = n$2.calcPeriodRelativeTimeFromMpdRelativeTime(t$3, e$3);
					return i$2(t$3, Math.floor(l$2 / a$2));
				},
				getMediaFinishedInformation: function(t$3) {
					const e$3 = {
						numberOfSegments: 0,
						mediaTimeOfLastSignaledSegment: NaN
					};
					if (!t$3) return e$3;
					const n$3 = t$3.segmentDuration;
					return isNaN(n$3) ? e$3.numberOfSegments = 1 : e$3.numberOfSegments = Math.ceil(t$3.adaptation.period.duration / n$3), e$3;
				}
			}, a$1;
		}
		Nt.__dashjs_factory_name = "TemplateSegmentsGetter";
		var Ct = N.default.getClassFactory(Nt);
		function Dt(t$2, e$2) {
			const n$2 = (t$2 = t$2 || {}).timelineConverter;
			let a$1;
			function r$2() {
				if (!n$2 || !n$2.hasOwnProperty("calcPeriodRelativeTimeFromMpdRelativeTime")) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
			}
			function i$2(t$3, a$2) {
				if (r$2(), !t$3) return null;
				const i$3 = t$3.adaptation.period.mpd.manifest.Period[t$3.adaptation.period.index].AdaptationSet[t$3.adaptation.index].Representation[t$3.index].SegmentList, l$2 = i$3.SegmentURL.length, o$2 = t$3 && !isNaN(t$3.startNumber) ? t$3.startNumber : 1, s$1 = Math.max(o$2 - 1, 0), u$2 = Math.max(a$2 - s$1, 0);
				let d$2 = null;
				if (u$2 < l$2) {
					const r$3 = i$3.SegmentURL[u$2];
					d$2 = mt(n$2, e$2, t$3, a$2), d$2 && (d$2.replacementTime = (o$2 + a$2 - 1) * t$3.segmentDuration, d$2.media = r$3.media ? r$3.media : "", d$2.mediaRange = r$3.mediaRange, d$2.indexRange = r$3.indexRange);
				}
				return d$2;
			}
			return a$1 = {
				getSegmentByIndex: i$2,
				getSegmentByTime: function(t$3, e$3) {
					if (r$2(), !t$3) return null;
					const a$2 = t$3.segmentDuration;
					if (isNaN(a$2)) return null;
					const l$2 = n$2.calcPeriodRelativeTimeFromMpdRelativeTime(t$3, e$3);
					return i$2(t$3, Math.floor(l$2 / a$2));
				},
				getMediaFinishedInformation: function(t$3) {
					const e$3 = {
						numberOfSegments: 0,
						mediaTimeOfLastSignaledSegment: NaN
					};
					if (!t$3) return e$3;
					const n$3 = t$3.adaptation.period.mpd.manifest.Period[t$3.adaptation.period.index].AdaptationSet[t$3.adaptation.index].Representation[t$3.index].SegmentList, a$2 = t$3 && !isNaN(t$3.startNumber) ? t$3.startNumber : 1;
					return e$3.numberOfSegments = Math.max(a$2 - 1, 0) + n$3.SegmentURL.length, e$3;
				}
			}, a$1;
		}
		Dt.__dashjs_factory_name = "ListSegmentsGetter";
		var xt = N.default.getClassFactory(Dt);
		function Mt(t$2) {
			const e$2 = (t$2 = t$2 || {}).timelineConverter;
			let n$2;
			function a$1() {
				if (!e$2 || !e$2.hasOwnProperty("calcPeriodRelativeTimeFromMpdRelativeTime")) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
			}
			function r$2(t$3, e$3) {
				if (a$1(), !t$3) return null;
				const n$3 = t$3.segments ? t$3.segments.length : -1;
				let r$3;
				if (e$3 < n$3 && (r$3 = t$3.segments[e$3], r$3 && r$3.index === e$3)) return r$3;
				for (let a$2 = 0; a$2 < n$3; a$2++) if (r$3 = t$3.segments[a$2], r$3 && r$3.index === e$3) return r$3;
				return null;
			}
			return n$2 = {
				getSegmentByIndex: r$2,
				getSegmentByTime: function(t$3, e$3) {
					a$1();
					const n$3 = function(t$4, e$4) {
						if (!t$4) return -1;
						const n$4 = t$4.segments, a$2 = n$4 ? n$4.length : null;
						let r$3, i$2, l$2, o$2, s$1, u$2 = -1;
						if (n$4 && a$2 > 0) {
							for (s$1 = 0; s$1 < a$2; s$1++) if (i$2 = n$4[s$1], l$2 = i$2.presentationStartTime, o$2 = i$2.duration, r$3 = o$2 / 2, e$4 + r$3 >= l$2 && e$4 - r$3 < l$2 + o$2) {
								u$2 = i$2.index;
								break;
							}
						}
						return u$2;
					}(t$3, e$3);
					return r$2(t$3, n$3);
				},
				getMediaFinishedInformation: function(t$3) {
					const e$3 = {
						numberOfSegments: 0,
						mediaTimeOfLastSignaledSegment: NaN
					};
					return t$3 && t$3.segments ? (e$3.numberOfSegments = t$3.segments.length, e$3) : e$3;
				}
			}, n$2;
		}
		Mt.__dashjs_factory_name = "SegmentBaseGetter";
		var zt = N.default.getClassFactory(Mt);
		function Ot(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.dashConstants, a$1 = t$2.type, r$2 = t$2.segmentBaseController;
			let i$2, l$2;
			function o$2(t$3) {
				return t$3 ? t$3.segments ? l$2[n$2.SEGMENT_BASE] : l$2[t$3.segmentInfoType] : null;
			}
			return i$2 = {
				initialize: function(a$2) {
					l$2[n$2.SEGMENT_TIMELINE] = Rt(e$2).create(t$2, a$2), l$2[n$2.SEGMENT_TEMPLATE] = Ct(e$2).create(t$2, a$2), l$2[n$2.SEGMENT_LIST] = xt(e$2).create(t$2, a$2), l$2[n$2.SEGMENT_BASE] = zt(e$2).create(t$2, a$2);
				},
				updateInitData: function(t$3, e$3) {
					return e$3 ? Promise.resolve() : r$2.getSegmentBaseInitSegment({
						representation: t$3,
						mediaType: a$1
					});
				},
				updateSegmentData: function(t$3, e$3) {
					return e$3 ? Promise.resolve() : r$2.getSegmentList({
						mimeType: t$3.mimeType,
						representation: t$3,
						mediaType: a$1
					});
				},
				getSegmentByIndex: function(t$3, e$3, n$3) {
					const a$2 = o$2(t$3);
					return a$2 ? a$2.getSegmentByIndex(t$3, e$3, n$3) : null;
				},
				getSegmentByTime: function(t$3, e$3) {
					const n$3 = o$2(t$3);
					return n$3 ? n$3.getSegmentByTime(t$3, e$3) : null;
				},
				getMediaFinishedInformation: function(t$3) {
					const e$3 = o$2(t$3);
					return e$3 ? e$3.getMediaFinishedInformation(t$3) : {
						numberOfSegments: 0,
						mediaTimeOfLastSignaledSegment: NaN
					};
				}
			}, l$2 = {}, i$2;
		}
		Ot.__dashjs_factory_name = "SegmentsController";
		var Pt = N.default.getClassFactory(Ot);
		function Lt() {
			let t$2;
			return t$2 = { ntpToUTC: function(t$3) {
				const e$2 = new Date(Date.UTC(1900, 0, 1, 0, 0, 0));
				return new Date(e$2.getTime() + t$3).getTime();
			} }, t$2;
		}
		Lt.__dashjs_factory_name = "TimeUtils";
		var Ft = N.default.getSingletonFactory(Lt), Ut = class {
			constructor(t$2) {
				this.newMediaInfo = t$2.newMediaInfo, this.previouslySelectedRepresentation = t$2.previouslySelectedRepresentation, this.newRepresentation = t$2.newRepresentation;
			}
		};
		function jt(t$2) {
			t$2 = t$2 || {};
			let e$2, n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2 = this.context, y$2 = (0, A.default)(b$2).getInstance(), E$2 = t$2.abrController, _$2 = t$2.adapter, T$2 = t$2.boxParser, v$2 = t$2.capabilities, w$2 = t$2.dashMetrics, N$1 = t$2.errHandler, x$1 = t$2.fragmentModel, M$1 = t$2.manifestModel, O$1 = t$2.mediaController, P$1 = t$2.mediaPlayerModel, L$1 = t$2.mimeType, F$1 = t$2.playbackController, U$1 = t$2.segmentBlacklistController, j$1 = t$2.settings, q$1 = t$2.streamInfo, H$1 = t$2.textController, Y$1 = t$2.timelineConverter, K$1 = t$2.type;
			function W$1() {
				return q$1.id;
			}
			function $$1() {
				return K$1;
			}
			function X$1() {
				s$1 = [], a$1 = null, n$2 = 0, h$2 = !1, m$2 = !1, d$2 = !1, p$2 = !1, ut$1();
			}
			function Q$1(t$3) {
				return !isNaN(t$3) && !isNaN(q$1.duration) && isFinite(q$1.duration) && t$3 >= q$1.start + q$1.duration;
			}
			function Z$1(t$3) {
				let n$3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
				if (t$3.sender) {
					if (F$1.getIsManifestUpdateInProgress()) et$1();
					else if ((!a$1.isText || H$1.isTextEnabled()) && e$2 && t$3.representationId && !e$2.appendInitSegmentFromCache(t$3.representationId)) {
						const t$4 = c$2.getCurrentRepresentation();
						if (0 === t$4.range) return void J$1();
						const e$3 = r$2 ? r$2.getInitRequest(a$1, t$4) : null;
						e$3 ? x$1.executeRequest(e$3) : n$3 && (f$2.setInitSegmentRequired(!0), et$1());
					}
				}
			}
			function J$1(t$3) {
				let i$3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
				if (F$1.getIsManifestUpdateInProgress() || e$2.getIsPruningInProgress()) return void et$1();
				let s$2 = function() {
					let t$4;
					if (isNaN(n$2) || $$1() === S$1.default.TEXT && !H$1.isTextEnabled()) return null;
					if (r$2) {
						const e$3 = Dt$1();
						t$4 = h$2 ? r$2.getSegmentRequestForTime(a$1, e$3, n$2) : m$2 ? r$2.repeatSegmentRequest(a$1, e$3) : r$2.getNextSegmentRequest(a$1, e$3);
					}
					return t$4;
				}();
				s$2 ? (h$2 = !1, m$2 = !1, function(t$4) {
					isNaN(t$4.startTime + t$4.duration) || (n$2 = t$4.startTime + t$4.duration), t$4.delayLoadingTime = (/* @__PURE__ */ new Date()).getTime() + f$2.getTimeToLoadDelay(), f$2.setTimeToLoadDelay(0), function(t$5) {
						let e$3 = t$5.url;
						return t$5.range && (e$3 = e$3.concat("_", t$5.range)), U$1.contains(e$3);
					}(t$4) ? (o$2.warn(`Fragment request url ${t$4.url} for stream id ${q$1.id} and media type ${K$1} is on the ignore list and will be skipped`), et$1()) : (o$2.debug(`Next fragment request url for stream id ${q$1.id} and media type ${K$1} is ${t$4.url} with request range ${t$4.range}`), x$1.executeRequest(t$4));
				}(s$2)) : function(t$4) {
					const e$3 = c$2.getCurrentRepresentation();
					try {
						if (j$1.get().streaming.gaps.enableSeekFix && (h$2 || 0 === F$1.getTime())) {
							let i$4;
							if (l$2 ? l$2 && e$3.segmentInfoType === I.default.SEGMENT_TIMELINE && (i$4 = r$2.getValidTimeAheadOfTargetTime(n$2, a$1, e$3, j$1.get().streaming.gaps.threshold)) : (i$4 = r$2.getValidTimeAheadOfTargetTime(n$2, a$1, e$3, j$1.get().streaming.gaps.threshold), isNaN(i$4) && n$2 >= e$3.adaptation.period.mpd.mediaPresentationDuration - e$3.segmentDuration && (i$4 = n$2 - .1)), !isNaN(i$4) && i$4 !== n$2) return void (F$1.isSeeking() || 0 === F$1.getTime() ? (o$2.warn(`Adjusting playback time ${i$4} because of gap in the manifest. Seeking by ${i$4 - n$2}`), F$1.seek(i$4, !1, !1)) : (o$2.warn(`Adjusting buffering time ${i$4} because of gap in the manifest. Adjusting time by ${i$4 - n$2}`), qt$1(i$4), t$4 && et$1()));
						}
					} catch (t$5) {
						o$2.error(t$5);
					}
					tt$1() || t$4 && et$1();
				}(i$3);
			}
			function tt$1() {
				const t$3 = c$2.getCurrentRepresentation(), a$2 = r$2.isLastSegmentRequested(t$3, n$2);
				if (a$2) {
					const t$4 = r$2.getCurrentIndex();
					o$2.debug(`Segment requesting for stream ${q$1.id} has finished`), y$2.trigger(R.default.STREAM_REQUESTING_COMPLETED, { segmentIndex: t$4 }, {
						streamId: q$1.id,
						mediaType: K$1
					}), e$2.segmentRequestingCompleted(t$4), Ct$1();
				}
				return a$2;
			}
			function et$1() {
				f$2.startScheduleTimer(F$1.getLowLatencyModeEnabled() ? j$1.get().streaming.scheduling.lowLatencyTimeout : j$1.get().streaming.scheduling.defaultTimeout);
			}
			function nt$1(t$3) {
				w$2.addBufferState(K$1, t$3.state, f$2.getBufferTarget()), t$3.state !== k.BUFFER_EMPTY || F$1.isSeeking() || (o$2.info("Buffer is empty! Stalling!"), w$2.pushPlayListTraceMetrics(/* @__PURE__ */ new Date(), kt.REBUFFERING_REASON));
			}
			function rt$1(t$3) {
				x$1.syncExecutedRequestsWithBufferedRange(e$2.getBuffer().getAllBufferRanges(), q$1.duration), t$3.quotaExceeded && t$3.from > F$1.getTime() && qt$1(t$3.from), t$3.hasEnoughSpaceToAppend && t$3.quotaExceeded && f$2.startScheduleTimer();
			}
			function it$1(t$3) {
				if (!t$3 || !t$3.lastRequestAppended || !t$3.lastRequestAppended.url) return;
				let e$3 = t$3.lastRequestAppended.url;
				t$3.lastRequestAppended.range && (e$3 = e$3.concat("_", t$3.lastRequestAppended.range)), o$2.warn(`Blacklisting segment with url ${e$3}`), U$1.add(e$3);
			}
			function ot$1(t$3) {
				if (o$2.debug(`Appended bytes for ${t$3.mediaType} and stream id ${t$3.streamId}`), t$3.segmentType === z.HTTPRequest.INIT_SEGMENT_TYPE) {
					const e$3 = t$3.representationId;
					f$2.setLastInitializedRepresentationId(e$3), o$2.info("[" + K$1 + "] lastInitializedRepresentationId changed to " + e$3);
				}
				u$2 && u$2.enabled ? pt$1(u$2.newRepresentation, u$2.oldRepresentation) : p$2 || f$2.startScheduleTimer(0);
			}
			function ut$1() {
				u$2 = {
					newRepresentation: null,
					oldRepresentation: null,
					enabled: !1
				};
			}
			function dt$1(t$3) {
				return new Promise(((n$3) => {
					if (!c$2) return Promise.resolve();
					let r$3 = null;
					var i$3;
					r$3 = t$3.newRepresentation ? {
						selectedRepresentation: (i$3 = t$3).newRepresentation,
						currentMediaInfo: i$3.newMediaInfo
					} : null !== a$1 && _$2.areMediaInfosEqual(a$1, t$3.newMediaInfo) ? function(t$4) {
						return {
							currentMediaInfo: t$4.newMediaInfo,
							selectedRepresentation: c$2.getCurrentRepresentation()
						};
					}(t$3) : function(t$4) {
						let e$3 = NaN;
						e$3 = !j$1.get().streaming.abr.autoSwitchBitrate[t$4.newMediaInfo.type] && t$4.previouslySelectedRepresentation ? t$4.previouslySelectedRepresentation.bitrateInKbit : E$2.getInitialBitrateFor(K$1);
						return {
							selectedRepresentation: E$2.getOptimalRepresentationForBitrate(t$4.newMediaInfo, e$3, !1),
							currentMediaInfo: t$4.newMediaInfo
						};
					}(t$3), ct$1(r$3.currentMediaInfo), y$2.trigger();
					const l$3 = E$2.getPossibleVoRepresentations(a$1, !1);
					return c$2.updateData(l$3, a$1.isFragmented, r$3.selectedRepresentation.id).then((() => {
						(function() {
							const t$4 = c$2.getCurrentRepresentation();
							e$2.getIsBufferingCompleted() || e$2.updateBufferTimestampOffset(t$4);
						})(), n$3();
					})).catch(((t$4) => {
						o$2.error(t$4), n$3();
					}));
				}));
			}
			function ct$1(t$3) {
				_$2.areMediaInfosEqual(a$1, t$3) || y$2.trigger(D.default.NEW_TRACK_SELECTED, { value: t$3 }), a$1 = t$3, E$2.handleNewMediaInfo(a$1), y$2.trigger(R.default.MEDIAINFO_UPDATED, {
					mediaType: K$1,
					streamId: q$1.id,
					currentMediaInfo: a$1
				});
			}
			function ft$1(t$3) {
				const n$3 = t$3.newRepresentation, r$3 = t$3.oldRepresentation;
				n$3 && r$3 || o$2.warn("_handleDifferentSwitchTypes() is missing the target representations"), t$3.reason && t$3.reason.forceReplace ? function(t$4, n$4) {
					x$1.abortRequests(), y$2.trigger(R.default.BUFFER_REPLACEMENT_STARTED, {
						mediaType: K$1,
						streamId: q$1.id
					}, {
						mediaType: K$1,
						streamId: q$1.id
					}), f$2.setCheckPlaybackQuality(!1), e$2.prepareForForceReplacementQualitySwitch(t$4, n$4).then((() => {
						gt$1();
					})).catch((() => {
						gt$1();
					}));
				}(n$3, r$3) : t$3 && t$3.reason && t$3.reason.forceAbandon ? function(t$4, n$4) {
					e$2.prepareForAbandonQualitySwitch(t$4, n$4).then((() => {
						mt$1();
					})).catch((() => {
						mt$1();
					}));
				}(n$3, r$3) : P$1.getFastSwitchEnabled() ? function(t$4, n$4) {
					const r$4 = F$1.getTime();
					let i$3 = 1.5 * (isNaN(t$4.fragmentDuration) ? 1 : t$4.fragmentDuration);
					const l$3 = x$1.getRequests({
						state: B.FRAGMENT_MODEL_EXECUTED,
						time: r$4 + i$3,
						threshold: 0
					})[0];
					if (l$3 && !a$1.isText) {
						const a$2 = e$2.getBufferLevel(), o$3 = E$2.getAbandonmentStateFor(q$1.id, K$1);
						l$3.bandwidth < t$4.bandwidth && a$2 >= i$3 && o$3 === k.ALLOW_LOAD ? e$2.prepareForFastQualitySwitch(t$4, n$4).then((() => {
							ht$1(r$4, i$3);
						})).catch((() => {
							ht$1(r$4, i$3);
						})) : pt$1(t$4, n$4);
					} else pt$1(t$4, n$4);
				}(n$3, r$3) : pt$1(n$3, r$3), w$2.pushPlayListTraceMetrics(/* @__PURE__ */ new Date(), kt.REPRESENTATION_SWITCH_STOP_REASON), w$2.createPlaylistTraceMetrics(n$3.id, 1e3 * F$1.getTime(), F$1.getPlaybackRate());
			}
			function gt$1() {
				Ot$1(), ut$1(), d$2 = !1;
			}
			function mt$1() {
				x$1.abortRequests(), m$2 = !0, f$2.setCheckPlaybackQuality(!1), f$2.startScheduleTimer(), d$2 = !1;
			}
			function ht$1(t$3, e$3) {
				x$1.abortRequests(), qt$1(t$3 + e$3), f$2.setCheckPlaybackQuality(!1), f$2.startScheduleTimer(), d$2 = !1;
			}
			function pt$1(t$3, n$3) {
				const a$2 = x$1.getRequests({ state: B.FRAGMENT_MODEL_LOADING });
				if (a$2 && a$2.length > 0) return o$2.debug("Preparing for default quality switch: Waiting for ongoing segment request to be finished before applying switch."), u$2.newRepresentation = t$3, u$2.oldRepresentation = n$3, void (u$2.enabled = !0);
				e$2.prepareForDefaultQualitySwitch(t$3, n$3).then((() => {
					Et$1();
				})).catch((() => {
					Et$1();
				}));
			}
			function Et$1() {
				f$2.setCheckPlaybackQuality(!1), a$1.segmentAlignment || a$1.subSegmentAlignment ? f$2.startScheduleTimer() : Lt$1(), ut$1(), d$2 = !1;
			}
			function Tt$1(t$3) {
				o$2.info("onFragmentLoadingAbandoned request: " + t$3.request.url + " has been aborted"), F$1.isSeeking() || f$2.getSwitchTrack() || d$2 || (o$2.info("onFragmentLoadingAbandoned request: " + t$3.request.url + " has to be downloaded again, origin is not seeking process or switch track call"), t$3.request && t$3.request.isInitializationRequest() ? f$2.setInitSegmentRequired(!0) : qt$1(t$3.request.startTime + t$3.request.duration / 2), f$2.startScheduleTimer(0));
			}
			function vt$1(t$3) {
				o$2.info("OnFragmentLoadingCompleted for stream id " + q$1.id + " and media type " + K$1 + " - Url:", t$3.request ? t$3.request.url : "undefined", t$3.request.range ? ", Range:" + t$3.request.range : ""), a$1.isText && f$2.startScheduleTimer(0), t$3.error && t$3.request.serviceLocation && function(t$4) {
					o$2.info("Fragment loading completed with an error"), t$4 && t$4.request && t$4.request.type && (t$4.request.type === z.HTTPRequest.INIT_SEGMENT_TYPE ? Z$1({
						representationId: t$4.request.representation.id,
						sender: {}
					}, !1) : t$4.request.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE && (qt$1(t$4.request.startTime + t$4.request.duration / 2), J$1({}, !1)));
				}(t$3);
			}
			function wt$1() {
				qt$1(F$1.getTime()), Nt$1().startScheduleTimer();
			}
			function It$1(t$3) {
				const n$3 = t$3.currentTrackInfo;
				if (!n$3) return;
				const a$2 = s$1.find(((t$4) => t$4.index === n$3.index && t$4.lang === n$3.lang));
				a$2 && dt$1(new Ut({ newMediaInfo: a$2 })).then((() => {
					e$2.setIsBufferingCompleted(!1), qt$1(F$1.getTime()), f$2.setInitSegmentRequired(!0), f$2.startScheduleTimer();
				}));
			}
			function At$1(t$3) {
				qt$1(t$3.quotaExceededTime), Ct$1();
			}
			function Rt$1() {
				return e$2 ? e$2.getBuffer() : null;
			}
			function Nt$1() {
				return f$2;
			}
			function Ct$1() {
				f$2 && f$2.clearScheduleTimer();
			}
			function Dt$1() {
				let t$3, e$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : NaN;
				return isNaN(e$3) ? t$3 = c$2 ? c$2.getCurrentRepresentation() : null : ((0, yt.checkInteger)(e$3), t$3 = c$2 ? c$2.getRepresentationById(e$3) : null), t$3;
			}
			function xt$1() {
				return !!e$2 && e$2.getIsBufferingCompleted();
			}
			function Mt$1(t$3) {
				if (!j$1.get().streaming.enableManifestTimescaleMismatchFix) return;
				const e$3 = t$3.chunk, n$3 = e$3.bytes, a$2 = Dt$1(e$3.representation.id);
				a$2 && (a$2.timescale = T$2.getMediaTimescaleFromMoov(n$3));
			}
			function zt$1(t$3) {
				const e$3 = t$3.chunk, n$3 = e$3.bytes, a$2 = Dt$1(e$3.representation.id);
				if (a$2) {
					let e$4;
					if (j$1.get().streaming.parseInbandPrft && t$3.request.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE) {
						e$4 = e$4 || T$2.parse(n$3);
						const t$4 = function(t$5, e$5) {
							const n$4 = t$5.getBoxes("prft"), a$3 = [];
							return n$4.forEach(((t$6) => {
								a$3.push(function(t$7, e$6) {
									let n$5 = "unknown";
									switch (t$7.flags) {
										case 0:
											n$5 = I.default.PRODUCER_REFERENCE_TIME_TYPE.ENCODER;
											break;
										case 16:
											n$5 = I.default.PRODUCER_REFERENCE_TIME_TYPE.APPLICATION;
											break;
										case 24: n$5 = I.default.PRODUCER_REFERENCE_TIME_TYPE.CAPTURED;
									}
									let a$4 = 1e3 * t$7.ntp_timestamp_sec + t$7.ntp_timestamp_frac / 2 ** 32 * 1e3;
									a$4 = Ft(b$2).getInstance().ntpToUTC(a$4);
									return {
										type: n$5,
										ntpTimestamp: a$4,
										mediaTime: t$7.media_time / e$6
									};
								}(t$6, e$5));
							})), a$3;
						}(e$4, a$2.timescale);
						t$4 && t$4.length && y$2.trigger(D.default.INBAND_PRFT, { data: t$4 }, {
							streamId: q$1.id,
							mediaType: K$1
						});
					}
					const r$3 = _$2.getEventsFor(a$2.mediaInfo, null, q$1), i$3 = _$2.getEventsFor(a$2, a$2, q$1);
					if (r$3 && r$3.length > 0 || i$3 && i$3.length > 0) {
						const a$3 = t$3.request;
						e$4 = e$4 || T$2.parse(n$3);
						const l$3 = function(t$4, e$5, n$4, a$4) {
							try {
								const r$4 = {}, i$4 = [], l$4 = n$4.concat(a$4);
								for (let t$5 = 0, e$6 = l$4.length; t$5 < e$6; t$5++) r$4[l$4[t$5].schemeIdUri + "/" + l$4[t$5].value] = l$4[t$5];
								const o$3 = t$4.getBoxes("emsg");
								if (!o$3 || 0 === o$3.length) return i$4;
								const s$2 = t$4.getBox("sidx"), u$3 = !s$2 || isNaN(s$2.earliest_presentation_time) || isNaN(s$2.timescale) ? e$5 && !isNaN(e$5.mediaStartTime) ? e$5.mediaStartTime : 0 : s$2.earliest_presentation_time / s$2.timescale, d$3 = Math.max(u$3, 0), f$3 = c$2.getCurrentRepresentation();
								for (let t$5 = 0, e$6 = o$3.length; t$5 < e$6; t$5++) {
									const e$7 = _$2.getEvent(o$3[t$5], r$4, d$3, f$3);
									e$7 && i$4.push(e$7);
								}
								return i$4;
							} catch (t$5) {
								return [];
							}
						}(e$4, a$3, r$3, i$3);
						y$2.trigger(R.default.INBAND_EVENTS, { events: l$3 }, { streamId: q$1.id });
					}
				}
			}
			function Ot$1() {
				const t$3 = F$1.getTime();
				j$1.get().streaming.buffer.flushBufferAtTrackSwitch && F$1.seek(t$3 + .001, !1, !0), qt$1(t$3), e$2.setSeekTarget(t$3), f$2.startScheduleTimer();
			}
			function Lt$1() {
				const t$3 = F$1.getTime(), n$3 = e$2.getContinuousBufferTimeForTargetTime(t$3);
				qt$1(isNaN(n$3) ? t$3 : n$3), f$2.startScheduleTimer();
			}
			function jt$1(t$3) {
				t$3 && !isNaN(t$3.time) && (qt$1(t$3.time), e$2.setSeekTarget(t$3.time));
			}
			function qt$1(t$3) {
				n$2 = t$3, h$2 = !0;
			}
			return i$2 = {
				checkAndHandleCompletedBuffering: tt$1,
				clearScheduleTimer: Ct$1,
				createBufferSinks: function(t$3, n$3) {
					const r$3 = Rt$1();
					return r$3 ? Promise.resolve(r$3) : e$2 ? e$2.createBufferSink(a$1, t$3, n$3) : Promise.resolve(null);
				},
				dischargePreBuffer: function() {
					e$2.dischargePreBuffer();
				},
				finalisePlayList: function(t$3, e$3) {
					w$2.pushPlayListTraceMetrics(t$3, e$3);
				},
				getAllMediaInfos: function() {
					return s$1;
				},
				getBuffer: Rt$1,
				getBufferController: function() {
					return e$2;
				},
				getBufferLevel: function() {
					return e$2 ? e$2.getBufferLevel() : 0;
				},
				getFragmentModel: function() {
					return x$1;
				},
				getMediaInfo: function() {
					return a$1;
				},
				getMediaSource: function() {
					return e$2.getMediaSource();
				},
				getRepresentation: Dt$1,
				getRepresentationController: function() {
					return c$2;
				},
				getScheduleController: Nt$1,
				getStreamId: W$1,
				getStreamInfo: function() {
					return q$1;
				},
				getType: $$1,
				initialize: function(a$2, o$3, s$2) {
					g$2 = Pt(b$2).create({
						events: R.default,
						eventBus: y$2,
						streamInfo: q$1,
						timelineConverter: Y$1,
						dashConstants: I.default,
						segmentBaseController: t$2.segmentBaseController,
						type: K$1
					}), r$2 = _t(b$2).create({
						streamInfo: q$1,
						type: K$1,
						timelineConverter: Y$1,
						dashMetrics: w$2,
						mediaPlayerModel: P$1,
						baseURLController: t$2.baseURLController,
						errHandler: N$1,
						segmentsController: g$2,
						settings: j$1,
						boxParser: T$2,
						events: R.default,
						eventBus: y$2,
						errors: V,
						debug: (0, C.default)(b$2).getInstance(),
						dashConstants: I.default,
						constants: S$1.default,
						urlUtils: St(b$2).getInstance()
					}), l$2 = q$1.manifestInfo.isDynamic, r$2.initialize(l$2), E$2.registerStreamType(K$1, i$2), c$2 = bt(b$2).create({
						streamInfo: q$1,
						type: K$1,
						abrController: E$2,
						dashMetrics: w$2,
						playbackController: F$1,
						timelineConverter: Y$1,
						dashConstants: I.default,
						events: R.default,
						eventBus: y$2,
						errors: V,
						isDynamic: l$2,
						adapter: _$2,
						segmentsController: g$2
					}), e$2 = function(t$3, e$3) {
						let n$3 = null;
						return t$3 ? (n$3 = t$3 !== S$1.default.TEXT || e$3 ? at(b$2).create({
							abrController: E$2,
							capabilities: v$2,
							errHandler: N$1,
							fragmentModel: x$1,
							manifestModel: M$1,
							mediaController: O$1,
							mediaPlayerModel: P$1,
							playbackController: F$1,
							representationController: c$2,
							settings: j$1,
							streamInfo: q$1,
							textController: H$1,
							type: t$3
						}) : lt(b$2).create({
							errHandler: N$1,
							fragmentModel: x$1,
							mimeType: L$1,
							settings: j$1,
							streamInfo: q$1,
							textController: H$1,
							type: t$3
						}), n$3) : (N$1.error(new G.default(V.MEDIASOURCE_TYPE_UNSUPPORTED_CODE, V.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + "not properly defined")), null);
					}(K$1, s$2), e$2 && e$2.initialize(a$2), f$2 = st(b$2).create({
						streamInfo: q$1,
						type: K$1,
						mimeType: L$1,
						adapter: _$2,
						dashMetrics: w$2,
						mediaPlayerModel: P$1,
						fragmentModel: x$1,
						abrController: E$2,
						playbackController: F$1,
						textController: H$1,
						mediaController: O$1,
						bufferController: e$2,
						representationController: c$2,
						settings: j$1
					}), f$2.initialize(o$3), n$2 = 0, h$2 = !1, m$2 = !1;
				},
				isBufferingCompleted: xt$1,
				prepareInnerPeriodPlaybackSeeking: function(t$3) {
					return new Promise(((n$3) => {
						if (e$2.hasBufferAtTime(t$3.seekTime)) return e$2.pruneBuffer(), Q$1(e$2.getContinuousBufferTimeForTargetTime(t$3.seekTime)) && e$2.setIsBufferingCompleted(!0), void n$3();
						Ct$1(), x$1.abortRequests(), e$2.prepareForPlaybackSeek().then((() => {
							const n$4 = e$2.getAllRangesWithSafetyFactor(t$3.seekTime);
							return e$2.clearBuffers(n$4);
						})).then((() => {
							const a$2 = e$2.getContinuousBufferTimeForTargetTime(t$3.seekTime);
							if (Q$1(a$2)) e$2.setIsBufferingCompleted(!0), n$3();
							else {
								const r$3 = isNaN(a$2) ? t$3.seekTime : a$2;
								qt$1(r$3), e$2.setSeekTarget(r$3);
								const i$3 = [];
								i$3.push(e$2.updateAppendWindow());
								const l$3 = Dt$1();
								i$3.push(e$2.updateBufferTimestampOffset(l$3)), Promise.all(i$3).then((() => {
									f$2.setInitSegmentRequired(!0), f$2.setCheckPlaybackQuality(!1), f$2.startScheduleTimer(), n$3();
								}));
							}
						})).catch(((t$4) => {
							o$2.error(t$4);
						}));
					}));
				},
				prepareOuterPeriodPlaybackSeeking: function() {
					return new Promise(((t$3, n$3) => {
						try {
							Ct$1(), x$1.abortRequests(), e$2.prepareForPlaybackSeek().then((() => e$2.pruneAllSafely())).then((() => {
								t$3();
							}));
						} catch (t$4) {
							n$3(t$4);
						}
					}));
				},
				prepareQualityChange: function(t$3) {
					t$3.newRepresentation && (u$2 && u$2.enabled && o$2.warn(`Canceling queued representation switch to ${u$2.newRepresentation.id} for ${K$1}`), t$3.isAdaptationSetSwitch ? (o$2.debug(`Preparing quality switch to different AdaptationSet for type ${K$1}`), function(t$4) {
						const e$3 = t$4.newRepresentation;
						d$2 = !0, Ct$1(), f$2.setSwitchTrack(!0);
						const n$3 = e$3.mediaInfo;
						ct$1(n$3), dt$1(new Ut({
							newMediaInfo: n$3,
							newRepresentation: e$3
						})).then((() => {
							ft$1(t$4);
						}));
					}(t$3)) : (o$2.debug(`Preparing quality within the same AdaptationSet for type ${K$1}`), function(t$4) {
						const e$3 = t$4.newRepresentation;
						d$2 = !0, Ct$1(), c$2.prepareQualityChange(e$3), ft$1(t$4);
					}(t$3)));
				},
				prepareTrackSwitch: function(t$3) {
					let n$3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
					return new Promise(((a$2) => {
						o$2.debug(`Preparing track switch for type ${K$1}`);
						const r$3 = K$1 === S$1.default.TEXT || n$3 || j$1.get().streaming.trackSwitchMode[K$1] === S$1.default.TRACK_SWITCH_MODE_ALWAYS_REPLACE && F$1.getTimeToStreamEnd(q$1) > j$1.get().streaming.buffer.stallThreshold;
						e$2.getIsBufferingCompleted() && !r$3 ? function(t$4) {
							return new Promise(((n$4) => {
								const a$3 = c$2.getCurrentRepresentation();
								e$2.prepareForNonReplacementTrackSwitch(a$3, t$4).then((() => {
									y$2.trigger(R.default.BUFFERING_COMPLETED, {}, {
										streamId: q$1.id,
										mediaType: K$1
									}), n$4();
								})).catch((() => {
									y$2.trigger(R.default.BUFFERING_COMPLETED, {}, {
										streamId: q$1.id,
										mediaType: K$1
									}), n$4();
								}));
							}));
						}(t$3).then((() => {
							a$2();
						})) : (f$2.setSwitchTrack(!0), r$3 ? function(t$4) {
							return new Promise(((n$4) => {
								y$2.trigger(R.default.BUFFER_REPLACEMENT_STARTED, {
									mediaType: K$1,
									streamId: q$1.id
								}, {
									mediaType: K$1,
									streamId: q$1.id
								}), x$1.abortRequests();
								const a$3 = Dt$1();
								e$2.prepareForReplacementTrackSwitch(a$3, t$4).then((() => {
									Ot$1(), n$4();
								})).catch((() => {
									Ot$1(), n$4();
								}));
							}));
						}(t$3).then((() => {
							a$2();
						})) : function(t$4) {
							return new Promise(((n$4) => {
								const a$3 = () => {
									const r$4 = x$1.getRequests({ state: B.FRAGMENT_MODEL_LOADING });
									if (r$4 && 0 !== r$4.length) y$2.once(D.default.FRAGMENT_LOADING_COMPLETED, a$3, i$2);
									else {
										const a$4 = Dt$1();
										e$2.prepareForNonReplacementTrackSwitch(a$4, t$4).then((() => {
											Lt$1(), n$4();
										})).catch(((t$5) => {
											o$2.error(t$5), Lt$1(), n$4();
										}));
									}
								};
								a$3();
							}));
						}(t$3).then((() => {
							a$2();
						})));
					}));
				},
				probeNextRequest: function() {
					const t$3 = Dt$1();
					return r$2.getNextSegmentRequestIdempotent(a$1, t$3);
				},
				reset: function(t$3, n$3) {
					r$2 && r$2.reset(), e$2 && (e$2.reset(t$3, n$3), e$2 = null), f$2 && (f$2.reset(), f$2 = null), c$2 && (c$2.reset(), c$2 = null), g$2 && (g$2 = null), E$2 && E$2.unRegisterStreamType(W$1(), K$1), y$2.off(R.default.INIT_FRAGMENT_NEEDED, Z$1, i$2), y$2.off(R.default.MEDIA_FRAGMENT_NEEDED, J$1, i$2), y$2.off(R.default.INIT_FRAGMENT_LOADED, Mt$1, i$2), y$2.off(R.default.MEDIA_FRAGMENT_LOADED, zt$1, i$2), y$2.off(R.default.BUFFER_LEVEL_STATE_CHANGED, nt$1, i$2), y$2.off(R.default.BUFFER_CLEARED, rt$1, i$2), y$2.off(R.default.SEEK_TARGET, jt$1, i$2), y$2.off(R.default.FRAGMENT_LOADING_ABANDONED, Tt$1, i$2), y$2.off(R.default.FRAGMENT_LOADING_COMPLETED, vt$1, i$2), y$2.off(R.default.SET_FRAGMENTED_TEXT_AFTER_DISABLED, wt$1, i$2), y$2.off(R.default.SET_NON_FRAGMENTED_TEXT, It$1, i$2), y$2.off(R.default.QUOTA_EXCEEDED, At$1, i$2), y$2.off(R.default.SOURCE_BUFFER_ERROR, it$1, i$2), y$2.off(R.default.BYTES_APPENDED_END_FRAGMENT, ot$1, i$2), X$1(), K$1 = null, q$1 = null;
				},
				selectMediaInfo: dt$1,
				setExplicitBufferingTime: qt$1,
				setMediaInfoArray: function(t$3) {
					s$1 = t$3;
				},
				setMediaSource: function(t$3) {
					return e$2.setMediaSource(t$3, a$1);
				},
				setTrackSwitchInProgress: function(t$3) {
					p$2 = t$3;
				},
				updateStreamInfo: function(t$3) {
					return q$1 = t$3, xt$1() ? Promise.resolve() : e$2.updateAppendWindow();
				}
			}, o$2 = (0, C.default)(b$2).getInstance().getLogger(i$2), X$1(), y$2.on(R.default.INIT_FRAGMENT_NEEDED, Z$1, i$2), y$2.on(R.default.MEDIA_FRAGMENT_NEEDED, J$1, i$2), y$2.on(R.default.INIT_FRAGMENT_LOADED, Mt$1, i$2), y$2.on(R.default.MEDIA_FRAGMENT_LOADED, zt$1, i$2), y$2.on(R.default.BUFFER_LEVEL_STATE_CHANGED, nt$1, i$2), y$2.on(R.default.BUFFER_CLEARED, rt$1, i$2), y$2.on(R.default.SEEK_TARGET, jt$1, i$2), y$2.on(R.default.FRAGMENT_LOADING_ABANDONED, Tt$1, i$2), y$2.on(R.default.FRAGMENT_LOADING_COMPLETED, vt$1, i$2), y$2.on(R.default.QUOTA_EXCEEDED, At$1, i$2), y$2.on(R.default.SET_FRAGMENTED_TEXT_AFTER_DISABLED, wt$1, i$2), y$2.on(R.default.SET_NON_FRAGMENTED_TEXT, It$1, i$2), y$2.on(R.default.SOURCE_BUFFER_ERROR, it$1, i$2), y$2.on(R.default.BYTES_APPENDED_END_FRAGMENT, ot$1, i$2), i$2;
		}
		jt.__dashjs_factory_name = "StreamProcessor";
		var qt = N.default.getClassFactory(jt), Bt = class {
			constructor() {
				this.streamId = null, this.segmentType = null, this.index = NaN, this.bytes = null, this.start = NaN, this.end = NaN, this.duration = NaN, this.representation = null, this.endFragment = null;
			}
		}, Gt = n$1(7263);
		function Ht() {
			let t$2, e$2;
			function n$2() {
				e$2 && (e$2.onloadend = e$2.onerror = e$2.onprogress = e$2.onload = null, e$2.abort(), e$2 = null);
			}
			return t$2 = {
				load: function(t$3, a$1) {
					if (e$2 = null, e$2 = new XMLHttpRequest(), e$2.open(t$3.method, t$3.url, !0), t$3.responseType && (e$2.responseType = t$3.responseType), t$3.headers) for (let n$3 in t$3.headers) {
						let a$2 = t$3.headers[n$3];
						a$2 && e$2.setRequestHeader(n$3, a$2);
					}
					return e$2.withCredentials = "include" === t$3.credentials, e$2.timeout = t$3.timeout, e$2.onload = function() {
						a$1.url = this.responseURL, a$1.status = this.status, a$1.statusText = this.statusText, a$1.headers = Gt.default.parseHttpHeaders(this.getAllResponseHeaders()), a$1.data = this.response;
					}, t$3.customData && (e$2.onloadend = t$3.customData.onloadend, e$2.onprogress = t$3.customData.onprogress, e$2.onabort = t$3.customData.onabort, e$2.ontimeout = t$3.customData.ontimeout), e$2.send(), t$3.customData.abort = n$2.bind(this), !0;
				},
				abort: n$2,
				getXhr: function() {
					return e$2;
				},
				reset: function() {
					n$2(), t$2 = null;
				},
				resetInitialSettings: function() {
					n$2();
				}
			}, t$2;
		}
		Ht.__dashjs_factory_name = "XHRLoader";
		var Yt = N.default.getClassFactory(Ht);
		function Vt() {
			const t$2 = this.context, e$2 = (0, K.default)(t$2).getInstance();
			let n$2, a$1, r$2;
			function i$2(t$3, e$3, n$3) {
				t$3.customData.reader.read().then(n$3).catch((function() {
					l$2(t$3);
				}));
			}
			function l$2(t$3) {
				t$3.customData.onloadend && t$3.customData.onloadend();
			}
			function o$2() {
				return "undefined" != typeof performance && "function" == typeof performance.now ? performance.now() : Date.now();
			}
			function s$1() {
				if (this.customData.abortController) this.customData.abortController.abort();
				else if (this.customData.reader) try {
					this.customData.reader.cancel(), this.onabort();
				} catch (t$3) {}
			}
			function u$2(t$3, e$3) {
				try {
					if ((t$3 = t$3.filter(((n$3) => n$3.bytes > e$3 / 4 / t$3.length))).length > 1) {
						let e$4 = 0;
						const n$3 = (t$3[t$3.length - 1].timestamp - t$3[0].timestamp) / t$3.length;
						return t$3.forEach(((a$2, r$3) => {
							const i$3 = t$3[r$3 + 1];
							if (i$3) {
								const t$4 = i$3.timestamp - a$2.timestamp;
								e$4 += t$4 < n$3 ? t$4 : 0;
							}
						})), e$4;
					}
					return null;
				} catch (t$4) {
					return null;
				}
			}
			function d$2(t$3, e$3) {
				return 8 * t$3 / e$3;
			}
			return r$2 = (0, C.default)(t$2).getInstance().getLogger(n$2), n$2 = {
				abort: s$1,
				calculateDownloadedTime: u$2,
				load: function(t$3, n$3) {
					const c$2 = function(t$4) {
						const e$3 = new Headers();
						if (t$4.headers) for (let n$4 in t$4.headers) {
							let a$2 = t$4.headers[n$4];
							a$2 && e$3.append(n$4, a$2);
						}
						return e$3;
					}(t$3), f$2 = function(t$4) {
						let e$3;
						return "function" == typeof window.AbortController && (e$3 = new AbortController(), t$4.customData.abortController = e$3, e$3.signal.onabort = t$4.customData.onabort), t$4.customData.abort = s$1.bind(t$4), e$3;
					}(t$3), g$2 = function(t$4, e$3, n$4) {
						return new Request(t$4.url, {
							method: t$4.method,
							headers: e$3,
							credentials: t$4.credentials,
							signal: n$4 ? n$4.signal : void 0
						});
					}(t$3, c$2, f$2);
					fetch(g$2).then(((l$3) => {
						(function(t$4, n$4, l$4) {
							(function(t$5, e$3) {
								t$5.status = e$3.status, t$5.statusText = e$3.statusText, t$5.url = e$3.url;
								const n$5 = {};
								for (const t$6 of e$3.headers.keys()) n$5[t$6] = e$3.headers.get(t$6);
								t$5.headers = n$5;
							})(l$4, t$4), t$4.ok || n$4.customData.onloadend();
							let s$2 = 0, c$3 = !1, f$3 = new Uint8Array(), g$3 = 0;
							n$4.customData.reader = t$4.body.getReader();
							let m$2 = [], h$2 = [], p$2 = [], b$2 = !0;
							const y$2 = e$2.get().streaming.abr.throughput.lowLatencyDownloadTimeCalculationMode, E$2 = (t$5) => {
								let { value: e$3, done: _$2 } = t$5;
								_$2 ? function() {
									if (f$3) {
										const t$6 = function() {
											let t$7 = null;
											return y$2 === S$1.default.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING ? t$7 = function() {
												const t$8 = function(t$9, e$4) {
													try {
														let n$5, a$2;
														if (n$5 = t$9.slice(0, -1), a$2 = e$4.slice(0, -1), n$5.length !== a$2.length && r$2.warn(`[FetchLoader] Moof and Mdat data arrays have different lengths. Moof: ${n$5.length}, Mdat: ${a$2.length}`), n$5.length <= 1) return null;
														let i$3 = [], l$5 = 0, o$3 = 0;
														for (let t$10 = 0; t$10 < n$5.length; t$10++) if (n$5[t$10] && a$2[t$10]) {
															let e$5 = a$2[t$10].timestamp - n$5[t$10].timestamp;
															if (e$5 > 1) {
																const n$6 = d$2(a$2[t$10].bytes, e$5);
																i$3.push(n$6), o$3 = 0;
															} else {
																0 === o$3 && (o$3 = n$5[t$10].timestamp, l$5 = 0);
																let e$6 = a$2[t$10].timestamp - o$3;
																if (e$6 > 1) {
																	l$5 += a$2[t$10].bytes;
																	const n$6 = d$2(l$5, e$6);
																	i$3.push(n$6), o$3 = 0;
																} else l$5 += a$2[t$10].bytes;
															}
														}
														return i$3.length > 0 ? i$3.reduce(((t$10, e$5) => t$10 + e$5), 0) / i$3.length : null;
													} catch (t$10) {
														return null;
													}
												}(h$2, p$2);
												return t$8 ? 8 * s$2 / t$8 : null;
											}() : y$2 === S$1.default.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.DOWNLOADED_DATA && (t$7 = u$2(m$2, s$2)), t$7;
										}();
										n$4.customData.onprogress({
											loaded: s$2,
											total: s$2,
											lengthComputable: !0,
											time: t$6
										}), l$4.data = f$3.buffer;
									}
									n$4.customData.onloadend();
								}() : (e$3 && e$3.length > 0 && function(t$6) {
									f$3 = function(t$7, e$5) {
										if (0 === t$7.length) return e$5;
										const n$5 = new Uint8Array(t$7.length + e$5.length);
										return n$5.set(t$7), n$5.set(e$5, t$7.length), n$5;
									}(f$3, t$6), s$2 += t$6.length, m$2.push({
										timestamp: o$2(),
										bytes: t$6.length
									}), y$2 === S$1.default.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING && b$2 && a$1.findLastTopIsoBoxCompleted(["moof"], f$3, g$3).found && (b$2 = !1, h$2.push({ timestamp: o$2() }));
									const e$4 = a$1.findLastTopIsoBoxCompleted(["moov", "mdat"], f$3, g$3);
									e$4.found ? function(t$7) {
										const e$5 = function(t$8) {
											let e$6;
											return t$8 === f$3.length ? (e$6 = f$3, f$3 = new Uint8Array()) : (e$6 = new Uint8Array(f$3.subarray(0, t$8)), f$3 = f$3.subarray(t$8)), e$6;
										}(t$7.startOffsetOfLastFoundTargetBox + t$7.sizeOfLastFoundTargetBox);
										y$2 !== S$1.default.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING || b$2 || (b$2 = !0, p$2.push({
											timestamp: o$2(),
											bytes: e$5.length
										})), n$4.customData.onprogress({
											data: e$5.buffer,
											lengthComputable: !1,
											noTrace: !0
										}), g$3 = 0;
									}(e$4) : function(t$7) {
										g$3 = t$7.startOffsetOfLastCompletedBox + t$7.sizeOfLastCompletedBox, c$3 || (n$4.customData.onprogress({
											lengthComputable: !1,
											noTrace: !0
										}), c$3 = !0);
									}(e$4);
								}(e$3), i$2(n$4, 0, E$2));
							};
							i$2(n$4, 0, E$2);
						})(l$3, t$3, n$3);
					})).catch((() => {
						l$2(t$3);
					}));
				},
				reset: function() {},
				setConfig: function(t$3) {
					a$1 = t$3.boxParser;
				}
			}, n$2;
		}
		Vt.__dashjs_factory_name = "FetchLoader";
		var Kt = N.default.getClassFactory(Vt), Wt = n$1(913), $t = class {
			constructor() {
				this.period = null, this.index = -1, this.type = null;
			}
		};
		class Xt {
			constructor(t$2, e$2, n$2, a$1) {
				this.url = t$2 || "", this.serviceLocation = e$2 || t$2 || "", this.dvbPriority = n$2 || 1, this.dvbWeight = a$1 || 1, this.availabilityTimeOffset = 0, this.availabilityTimeComplete = !0, this.queryParams = {};
			}
		}
		Xt.DEFAULT_DVB_PRIORITY = 1, Xt.DEFAULT_DVB_WEIGHT = 1;
		var Qt = Xt, Zt = class {
			constructor() {
				this.schemeIdUri = null, this.value = null, this.id = null;
			}
			init(t$2) {
				t$2 && (this.schemeIdUri = t$2.schemeIdUri ? t$2.schemeIdUri : null, this.value = null !== t$2.value && void 0 !== t$2.value ? t$2.value.toString() : null, this.id = t$2.id ? t$2.id : null, t$2[I.default.DVB_URL] && (this.dvbUrl = t$2[I.default.DVB_URL]), t$2[I.default.DVB_MIMETYPE] && (this.dvbMimeType = t$2[I.default.DVB_MIMETYPE]), t$2[I.default.DVB_FONTFAMILY] && (this.dvbFontFamily = t$2[I.default.DVB_FONTFAMILY]));
			}
			inArray(t$2) {
				return !!t$2 && t$2.some(((t$3) => this.schemeIdUri === t$3.schemeIdUri && (this.value ? this.value.toString().match(t$3.value) : "".match(t$3.value))));
			}
		}, Jt = class extends Zt {
			constructor() {
				super(), this.version = null, this.sessionID = null, this.contentID = null, this.mode = null, this.keys = null, this.includeInRequests = null;
			}
			init(t$2) {
				super.init(t$2), t$2 && (this.version = t$2.version, this.sessionID = t$2.sessionID, this.contentID = t$2.contentID, this.mode = t$2.mode ?? "query", this.keys = t$2.keys ? t$2.keys.split(" ") : null, this.includeInRequests = t$2.includeInRequests ? t$2.includeInRequests.split(" ") : ["segment"], this.schemeIdUri = t$2.schemeIdUri);
			}
		}, te = class {
			constructor() {
				this.adaptationSets = null, this.adaptationSetsArray = [], this.cmcdParameters = null, this.serviceLocations = null, this.serviceLocationsArray = [];
			}
		}, ee = class extends Zt {
			constructor() {
				super(), this.ref = null, this.refId = null, this.robustness = null, this.keyId = null, this.cencDefaultKid = null, this.pssh = null, this.pro = null, this.laUrl = null;
			}
			init(t$2) {
				super.init(t$2), t$2 && (this.ref = t$2.hasOwnProperty(I.default.REF) ? t$2[I.default.REF] : null, this.refId = t$2.hasOwnProperty(I.default.REF_ID) ? t$2[I.default.REF_ID] : null, this.robustness = t$2.hasOwnProperty(I.default.ROBUSTNESS) ? t$2[I.default.ROBUSTNESS] : null, this.cencDefaultKid = t$2.hasOwnProperty(I.default.CENC_DEFAULT_KID) ? t$2[I.default.CENC_DEFAULT_KID] : null, this.pssh = t$2.hasOwnProperty(I.default.PSSH) ? t$2[I.default.PSSH] : null, this.pro = t$2.hasOwnProperty(I.default.PRO) ? t$2[I.default.PRO] : null, this.laUrl = t$2.hasOwnProperty(I.default.LA_URL) ? t$2[I.default.LA_URL] : t$2.hasOwnProperty(I.default.LA_URL_LOWER_CASE) ? t$2[I.default.LA_URL_LOWER_CASE] : null);
			}
			mergeAttributesFromReference(t$2) {
				[
					"schemeIdUri",
					"value",
					"id",
					"robustness",
					"cencDefaultKid",
					"pro",
					"pssh",
					"laUrl"
				].forEach(((e$2) => {
					null === this[e$2] && (this[e$2] = t$2[e$2]);
				}));
			}
		}, ne = class {
			constructor() {
				this.defaultServiceLocation = null, this.defaultServiceLocationArray = [], this.queryBeforeStart = !1, this.serverUrl = null, this.clientRequirement = !0;
			}
		}, ae = class {
			constructor() {
				this.type = "", this.duration = NaN, this.presentationTime = NaN, this.id = NaN, this.messageData = "", this.eventStream = null, this.presentationTimeDelta = NaN, this.parsedMessageData = null;
			}
		}, re = class {
			constructor() {
				this.adaptionSet = null, this.representation = null, this.period = null, this.timescale = 1, this.value = "", this.schemeIdUri = "", this.presentationTimeOffset = 0;
			}
		}, ie = class {
			constructor() {
				this.availabilityEndTime = Number.POSITIVE_INFINITY, this.availabilityStartTime = null, this.manifest = null, this.maxSegmentDuration = Number.POSITIVE_INFINITY, this.mediaPresentationDuration = NaN, this.minimumUpdatePeriod = NaN, this.publishTime = null, this.suggestedPresentationDelay = 0, this.timeShiftBufferDepth = Number.POSITIVE_INFINITY;
			}
		}, le = class {
			constructor(t$2, e$2) {
				this.url = t$2 || "", this.serviceLocation = e$2 || null, this.queryParams = {};
			}
		}, oe = n$1(7393), se = class {
			constructor(t$2, e$2, n$2) {
				this.url = t$2 || "", this.serviceLocation = e$2 || null, this.ttl = n$2 || NaN, this.queryParams = {};
			}
		};
		class ue {
			constructor() {
				this.id = null, this.index = -1, this.duration = NaN, this.start = NaN, this.mpd = null, this.nextPeriodId = null, this.isEncrypted = !1;
			}
		}
		ue.DEFAULT_ID = "defaultId";
		var de = ue, ce = class {
			constructor() {
				this.id = null, this.inband = !1, this.type = "encoder", this.applicationScheme = null, this.wallClockTime = null, this.presentationTime = NaN, this.UTCTiming = null;
			}
		}, fe = class {
			constructor() {
				this.absoluteIndex = NaN, this.adaptation = null, this.availabilityTimeComplete = !0, this.availabilityTimeOffset = 0, this.bandwidth = NaN, this.bitrateInKbit = NaN, this.bitsPerPixel = NaN, this.codecFamily = null, this.codecPrivateData = null, this.codecs = null, this.essentialProperties = [], this.fragmentDuration = null, this.frameRate = null, this.height = NaN, this.id = null, this.indexRange = null, this.initialization = null, this.maxPlayoutRate = NaN, this.mediaFinishedInformation = {
					numberOfSegments: 0,
					mediaTimeOfLastSignaledSegment: NaN
				}, this.mediaInfo = null, this.mimeType = null, this.mseTimeOffset = NaN, this.pixelsPerSecond = NaN, this.presentationTimeOffset = 0, this.qualityRanking = NaN, this.range = null, this.scanType = null, this.segments = null, this.segmentDuration = NaN, this.segmentInfoType = null, this.supplementalProperties = [], this.startNumber = 1, this.timescale = 1, this.width = NaN, this.endNumber = null;
			}
			hasInitialization() {
				return null !== this.initialization || null !== this.range;
			}
			hasSegments() {
				return this.segmentInfoType !== I.default.BASE_URL && this.segmentInfoType !== I.default.SEGMENT_BASE && !this.indexRange;
			}
		}, ge = n$1(5717);
		function me() {
			let t$2, e$2, n$2, a$1;
			const r$2 = this.context, i$2 = St(r$2).getInstance(), l$2 = Number.isInteger || function(t$3) {
				return "number" == typeof t$3 && isFinite(t$3) && Math.floor(t$3) === t$3;
			};
			function o$2(t$3, e$3) {
				if (!t$3) throw new Error("adaptation is not defined");
				if (!e$3) throw new Error("type is not defined");
				if (t$3.Representation && t$3.Representation.length) {
					const n$4 = v$2(t$3.Representation[0]);
					if (n$4 && n$4.some(((t$4) => S$1.default.THUMBNAILS_SCHEME_ID_URIS.indexOf(t$4.schemeIdUri) >= 0))) return e$3 === S$1.default.IMAGE;
				}
				if (t$3.ContentComponent && t$3.ContentComponent.length > 0) {
					if (t$3.ContentComponent.length > 1) return e$3 === S$1.default.MUXED;
					if (t$3.ContentComponent[0].contentType === e$3) return !0;
				}
				const n$3 = e$3 === S$1.default.TEXT ? /* @__PURE__ */ new RegExp("(ttml|vtt|wvtt|stpp)") : new RegExp(e$3);
				if (t$3.Representation && t$3.Representation.length) {
					const e$4 = t$3.Representation[0].codecs;
					if (n$3.test(e$4)) return !0;
				}
				if (t$3.hasOwnProperty(I.default.MIME_TYPE)) return n$3.test(t$3.mimeType);
				if (t$3.Representation) {
					let e$4;
					for (let a$2 = 0; a$2 < t$3.Representation.length; a$2++) if (e$4 = t$3.Representation[a$2], e$4.hasOwnProperty(I.default.MIME_TYPE)) return n$3.test(e$4.mimeType);
				}
				return !1;
			}
			function s$1(t$3) {
				if (!t$3) throw new Error("adaptation is not defined");
				if (t$3.hasOwnProperty(I.default.SEGMENT_TEMPLATE) || t$3.hasOwnProperty(I.default.SEGMENT_TIMELINE) || t$3.hasOwnProperty(I.default.SEGMENT_LIST) || t$3.hasOwnProperty(I.default.SEGMENT_BASE)) return !0;
				if (t$3.Representation && t$3.Representation.length > 0) {
					const e$3 = t$3.Representation[0];
					if (e$3.hasOwnProperty(I.default.SEGMENT_TEMPLATE) || e$3.hasOwnProperty(I.default.SEGMENT_TIMELINE) || e$3.hasOwnProperty(I.default.SEGMENT_LIST) || e$3.hasOwnProperty(I.default.SEGMENT_BASE)) return !0;
				}
				return !1;
			}
			function u$2(t$3) {
				return o$2(t$3, S$1.default.VIDEO);
			}
			function d$2(t$3) {
				return o$2(t$3, S$1.default.TEXT);
			}
			function c$2(t$3) {
				return o$2(t$3, S$1.default.IMAGE);
			}
			function f$2(t$3) {
				return t$3 && t$3.Representation && t$3.Representation.sort(((t$4, e$3) => t$4.bandwidth - e$3.bandwidth)), t$3;
			}
			function g$2(t$3, e$3) {
				return t$3 && t$3.Period && l$2(e$3) && t$3.Period[e$3] ? t$3.Period[e$3].AdaptationSet : [];
			}
			function m$2(t$3) {
				return t$3 && t$3.Period ? t$3.Period : [];
			}
			function h$2(t$3) {
				const e$3 = p$2(t$3);
				return e$3 && e$3.length > 0;
			}
			function p$2(t$3) {
				let e$3 = [];
				if (!t$3) return e$3;
				const n$3 = b$2(t$3);
				return e$3 = e$3.concat(n$3), t$3.hasOwnProperty(I.default.ADAPTATION_SET) && t$3[I.default.ADAPTATION_SET].length > 0 && t$3[I.default.ADAPTATION_SET].forEach(((t$4) => {
					const n$4 = b$2(t$4);
					e$3 = e$3.concat(n$4);
				})), e$3;
			}
			function b$2(t$3) {
				return t$3 && t$3.hasOwnProperty(I.default.CONTENT_PROTECTION) && 0 !== t$3.ContentProtection.length ? t$3[I.default.CONTENT_PROTECTION].map(((t$4) => {
					const e$3 = new ee();
					return e$3.init(t$4), e$3;
				})) : [];
			}
			function y$2(t$3) {
				let e$3 = !1;
				return t$3 && t$3.hasOwnProperty("type") && (e$3 = t$3.type === I.default.DYNAMIC), e$3;
			}
			function E$2(t$3) {
				if (!t$3) return null;
				const e$3 = t$3[I.default.FRAMERATE];
				if (!e$3) return null;
				if ("string" == typeof e$3 && e$3.includes("/")) {
					const [t$4, n$3] = e$3.split("/").map(((t$5) => parseInt(t$5, 10)));
					if (!isNaN(t$4) && !isNaN(n$3) && 0 !== n$3) return t$4 / n$3;
				}
				return parseInt(e$3);
			}
			function _$2(t$3, e$3) {
				return e$3 && e$3.hasOwnProperty(t$3) && e$3[t$3].length ? e$3[t$3].map(((t$4) => {
					const e$4 = new Zt();
					return e$4.init(t$4), e$4;
				})) : [];
			}
			function T$2(t$3, e$3) {
				if (!e$3) return [];
				let n$3 = function(t$4, e$4) {
					if (!e$4 || !e$4.length) return [];
					let n$4 = e$4[0][t$4] || [];
					return 0 === n$4.length ? [] : 1 === e$4.length ? n$4 : n$4.filter(((n$5) => e$4.slice(1).every(((e$5) => e$5.hasOwnProperty(t$4) && e$5[t$4].some(((t$5) => t$5.schemeIdUri === n$5.schemeIdUri && t$5.value === n$5.value))))));
				}(t$3, e$3[I.default.REPRESENTATION]);
				return e$3.hasOwnProperty(t$3) && e$3[t$3].length && n$3.push(...e$3[t$3]), n$3.map(((t$4) => {
					const e$4 = new Zt();
					return e$4.init(t$4), e$4;
				}));
			}
			function v$2(t$3) {
				return _$2(I.default.ESSENTIAL_PROPERTY, t$3);
			}
			function w$2(t$3) {
				return _$2(I.default.SUPPLEMENTAL_PROPERTY, t$3);
			}
			function k$1(t$3) {
				if (!t$3 || !t$3.S) return NaN;
				let e$3 = t$3.S[0], n$3 = t$3.S[1];
				return e$3.hasOwnProperty("d") ? e$3.d : n$3.t - e$3.t;
			}
			function A$1(t$3) {
				const e$3 = t$3.presentationTimeOffset;
				return t$3.adaptation.period.start - e$3;
			}
			function R$1(t$3, e$3) {
				if (!t$3) throw new Error("Period cannot be null or undefined");
				let n$3 = de.DEFAULT_ID + "_" + e$3;
				return t$3.hasOwnProperty(I.default.ID) && t$3.id.toString().length > 0 && "__proto__" !== t$3.id && (n$3 = t$3.id.toString()), n$3;
			}
			function N$1(t$3, e$3, n$3) {
				const a$2 = [];
				let r$3;
				if (!t$3) return a$2;
				for (r$3 = 0; r$3 < t$3.length; r$3++) {
					const i$3 = new re();
					if (i$3.timescale = 1, i$3.representation = e$3, !t$3[r$3].hasOwnProperty(S$1.default.SCHEME_ID_URI)) throw new Error("Invalid EventStream. SchemeIdUri has to be set");
					i$3.schemeIdUri = t$3[r$3].schemeIdUri, t$3[r$3].hasOwnProperty(I.default.TIMESCALE) && (i$3.timescale = t$3[r$3].timescale), t$3[r$3].hasOwnProperty(I.default.VALUE) && (i$3.value = t$3[r$3].value), a$2.push(i$3), i$3.period = n$3;
				}
				return a$2;
			}
			function D$1(t$3) {
				const e$3 = [], n$3 = t$3.BaseURL || [t$3.baseUri];
				let a$2 = !1;
				return n$3.some(((n$4) => {
					if (n$4) {
						const r$3 = new Qt();
						let l$3 = n$4.__text || n$4;
						return i$2.isRelative(l$3) && (a$2 = !0, t$3.baseUri && (l$3 = i$2.resolve(l$3, t$3.baseUri))), r$3.url = l$3, n$4.hasOwnProperty(I.default.SERVICE_LOCATION) && n$4.serviceLocation.length ? r$3.serviceLocation = n$4.serviceLocation : r$3.serviceLocation = l$3, n$4.hasOwnProperty(I.default.DVB_PRIORITY) && (r$3.dvbPriority = n$4[I.default.DVB_PRIORITY]), n$4.hasOwnProperty(I.default.DVB_WEIGHT) && (r$3.dvbWeight = n$4[I.default.DVB_WEIGHT]), n$4.hasOwnProperty(I.default.AVAILABILITY_TIME_OFFSET) && (r$3.availabilityTimeOffset = n$4[I.default.AVAILABILITY_TIME_OFFSET]), n$4.hasOwnProperty(I.default.AVAILABILITY_TIME_COMPLETE) && (r$3.availabilityTimeComplete = "false" !== n$4[I.default.AVAILABILITY_TIME_COMPLETE]), e$3.push(r$3), a$2;
					}
				})), e$3;
			}
			function x$1(t$3) {
				const e$3 = new ne();
				return e$3.serverUrl = t$3.__text, t$3.hasOwnProperty(I.default.DEFAULT_SERVICE_LOCATION) && (e$3.defaultServiceLocation = t$3[I.default.DEFAULT_SERVICE_LOCATION], e$3.defaultServiceLocationArray = e$3.defaultServiceLocation.split(" ")), t$3.hasOwnProperty(I.default.QUERY_BEFORE_START) && (e$3.queryBeforeStart = "true" === t$3[I.default.QUERY_BEFORE_START].toLowerCase()), t$3.hasOwnProperty(I.default.CLIENT_REQUIREMENT) && (e$3.clientRequirement = "false" !== t$3[I.default.CLIENT_REQUIREMENT].toLowerCase()), e$3;
			}
			function M$1(t$3) {
				const e$3 = new te();
				return t$3.hasOwnProperty(I.default.CMCD_PARAMETERS) && t$3[I.default.CMCD_PARAMETERS].schemeIdUri === S$1.default.CTA_5004_2023_SCHEME && (e$3.cmcdParameters = new Jt(), e$3.cmcdParameters.init(t$3[I.default.CMCD_PARAMETERS])), t$3.hasOwnProperty(I.default.SERVICE_LOCATIONS) && "" !== t$3[I.default.SERVICE_LOCATIONS] && (e$3.serviceLocations = t$3[I.default.SERVICE_LOCATIONS], e$3.serviceLocationsArray = e$3.serviceLocations.toString().split(" ")), t$3.hasOwnProperty(I.default.ADAPTATION_SETS) && "" !== t$3[I.default.ADAPTATION_SETS] && (e$3.adaptationSets = t$3[I.default.ADAPTATION_SETS], e$3.adaptationSetsArray = e$3.adaptationSets.toString().split(" ")), e$3;
			}
			return t$2 = {
				getAccessibilityForAdaptation: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.ACCESSIBILITY) && t$3[I.default.ACCESSIBILITY].length ? t$3[I.default.ACCESSIBILITY].map(((t$4) => {
						const e$3 = new Zt();
						return e$3.init(t$4), e$3;
					})) : [];
				},
				getAdaptationForId: function(t$3, e$3, n$3) {
					const a$2 = g$2(e$3, n$3);
					let r$3, i$3;
					for (r$3 = 0, i$3 = a$2.length; r$3 < i$3; r$3++) if (a$2[r$3].hasOwnProperty(I.default.ID) && a$2[r$3].id === t$3) return a$2[r$3];
					return null;
				},
				getAdaptationForIndex: function(t$3, e$3, n$3) {
					const a$2 = g$2(e$3, n$3);
					return a$2.length > 0 && l$2(t$3) ? a$2[t$3] : null;
				},
				getAdaptationsForPeriod: function(t$3) {
					const n$3 = t$3 && l$2(t$3.index) ? t$3.mpd.manifest.Period[t$3.index] : null, a$2 = [];
					let r$3, i$3, s$2;
					if (n$3 && n$3.AdaptationSet) for (s$2 = 0; s$2 < n$3.AdaptationSet.length; s$2++) i$3 = n$3.AdaptationSet[s$2], r$3 = new $t(), i$3.hasOwnProperty(I.default.ID) && (r$3.id = i$3.id), r$3.index = s$2, r$3.period = t$3, o$2(i$3, S$1.default.MUXED) ? r$3.type = S$1.default.MUXED : o$2(i$3, S$1.default.AUDIO) ? r$3.type = S$1.default.AUDIO : u$2(i$3) ? r$3.type = S$1.default.VIDEO : d$2(i$3) ? r$3.type = S$1.default.TEXT : c$2(i$3) ? r$3.type = S$1.default.IMAGE : e$2.warn("Unknown Adaptation stream type"), a$2.push(r$3);
					return a$2;
				},
				getAdaptationsForType: function(t$3, e$3, n$3) {
					const a$2 = g$2(t$3, e$3);
					let r$3, i$3;
					const l$3 = [];
					for (r$3 = 0, i$3 = a$2.length; r$3 < i$3; r$3++) o$2(a$2[r$3], n$3) && l$3.push(f$2(a$2[r$3]));
					return l$3;
				},
				getAudioChannelConfigurationForAdaptation: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.AUDIO_CHANNEL_CONFIGURATION) && t$3[I.default.AUDIO_CHANNEL_CONFIGURATION].length ? t$3[I.default.AUDIO_CHANNEL_CONFIGURATION].map(((t$4) => {
						const e$3 = new Zt();
						return e$3.init(t$4), e$3;
					})) : [];
				},
				getAudioChannelConfigurationForRepresentation: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.AUDIO_CHANNEL_CONFIGURATION) && t$3[I.default.AUDIO_CHANNEL_CONFIGURATION].length ? t$3[I.default.AUDIO_CHANNEL_CONFIGURATION].map(((t$4) => {
						const e$3 = new Zt();
						return e$3.init(t$4), e$3;
					})) : [];
				},
				getAvailabilityStartTime: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.AVAILABILITY_START_TIME) && null !== t$3.availabilityStartTime ? t$3.availabilityStartTime.getTime() : null;
				},
				getBandwidth: function(t$3) {
					return t$3 && t$3.bandwidth ? t$3.bandwidth : NaN;
				},
				getBaseURLsFromElement: D$1,
				getBitrateListForAdaptation: function(t$3) {
					const e$3 = f$2(t$3);
					return (e$3 && e$3.Representation ? e$3.Representation : []).map(((t$4) => ({
						bandwidth: t$4.bandwidth,
						width: t$4.width || 0,
						height: t$4.height || 0,
						scanType: t$4.scanType || null,
						id: t$4.id || null
					})));
				},
				getCodec: function(t$3, e$3, n$3) {
					let a$2 = null;
					if (t$3 && t$3.Representation && t$3.Representation.length > 0) {
						const r$3 = l$2(e$3) && e$3 >= 0 && e$3 < t$3.Representation.length ? t$3.Representation[e$3] : t$3.Representation[0];
						r$3 && (a$2 = r$3.mimeType + ";codecs=\"" + r$3.codecs + "\"", n$3 && void 0 !== r$3.width && (a$2 += ";width=\"" + r$3.width + "\";height=\"" + r$3.height + "\""));
					}
					return a$2 && (a$2 = a$2.replace(/\sprofiles=[^;]*/g, "")), a$2;
				},
				getCombinedEssentialPropertiesForAdaptationSet: function(t$3) {
					return T$2(I.default.ESSENTIAL_PROPERTY, t$3);
				},
				getCombinedSupplementalPropertiesForAdaptationSet: function(t$3) {
					return T$2(I.default.SUPPLEMENTAL_PROPERTY, t$3);
				},
				getContentProtectionByAdaptation: function(t$3) {
					return b$2(t$3);
				},
				getContentProtectionByManifest: function(t$3) {
					let e$3 = [];
					if (!t$3) return e$3;
					const n$3 = b$2(t$3);
					return e$3 = e$3.concat(n$3), t$3.hasOwnProperty(I.default.PERIOD) && t$3[I.default.PERIOD].length > 0 && t$3[I.default.PERIOD].forEach(((t$4) => {
						const n$4 = p$2(t$4);
						e$3 = e$3.concat(n$4);
					})), e$3;
				},
				getContentProtectionByPeriod: p$2,
				getContentSteering: function(t$3) {
					if (t$3 && t$3.hasOwnProperty(I.default.CONTENT_STEERING)) return x$1(t$3[I.default.CONTENT_STEERING][0]);
				},
				getDuration: function(t$3) {
					let e$3;
					return e$3 = t$3 && t$3.hasOwnProperty(I.default.MEDIA_PRESENTATION_DURATION) ? t$3.mediaPresentationDuration : t$3 && "dynamic" == t$3.type ? Number.POSITIVE_INFINITY : Number.MAX_SAFE_INTEGER || Number.MAX_VALUE, e$3;
				},
				getEssentialPropertiesForAdaptationSet: function(t$3) {
					return _$2(I.default.ESSENTIAL_PROPERTY, t$3);
				},
				getEssentialPropertiesForRepresentation: v$2,
				getEventStreamForAdaptationSet: function(t$3, e$3, n$3) {
					let a$2, r$3, i$3;
					return t$3 && t$3.Period && e$3 && e$3.period && l$2(e$3.period.index) && (r$3 = t$3.Period[e$3.period.index], r$3 && r$3.AdaptationSet && l$2(e$3.index) && (i$3 = r$3.AdaptationSet[e$3.index], i$3 && (a$2 = i$3.InbandEventStream))), N$1(a$2, null, n$3);
				},
				getEventStreamForRepresentation: function(t$3, e$3, n$3) {
					let a$2, r$3, i$3, o$3;
					return t$3 && t$3.Period && e$3 && e$3.adaptation && e$3.adaptation.period && l$2(e$3.adaptation.period.index) && (r$3 = t$3.Period[e$3.adaptation.period.index], r$3 && r$3.AdaptationSet && l$2(e$3.adaptation.index) && (i$3 = r$3.AdaptationSet[e$3.adaptation.index], i$3 && i$3.Representation && l$2(e$3.index) && (o$3 = i$3.Representation[e$3.index], o$3 && (a$2 = o$3.InbandEventStream)))), N$1(a$2, e$3, n$3);
				},
				getEventsForPeriod: function(t$3) {
					const e$3 = t$3 && t$3.mpd && t$3.mpd.manifest ? t$3.mpd.manifest : null, n$3 = e$3 ? e$3.Period : null, r$3 = n$3 && t$3 && l$2(t$3.index) ? n$3[t$3.index].EventStream : null, i$3 = [];
					let o$3, s$2;
					if (r$3) for (o$3 = 0; o$3 < r$3.length; o$3++) {
						const e$4 = new re();
						if (e$4.period = t$3, e$4.timescale = 1, !r$3[o$3].hasOwnProperty(S$1.default.SCHEME_ID_URI)) throw new Error("Invalid EventStream. SchemeIdUri has to be set");
						for (e$4.schemeIdUri = r$3[o$3][S$1.default.SCHEME_ID_URI], r$3[o$3].hasOwnProperty(I.default.TIMESCALE) && (e$4.timescale = r$3[o$3][I.default.TIMESCALE]), r$3[o$3].hasOwnProperty(I.default.VALUE) && (e$4.value = r$3[o$3][I.default.VALUE]), r$3[o$3].hasOwnProperty(I.default.PRESENTATION_TIME_OFFSET) && (e$4.presentationTimeOffset = r$3[o$3][I.default.PRESENTATION_TIME_OFFSET]), s$2 = 0; r$3[o$3].Event && s$2 < r$3[o$3].Event.length; s$2++) {
							const n$4 = r$3[o$3].Event[s$2], l$3 = new ae();
							l$3.presentationTime = 0, l$3.eventStream = e$4, n$4.hasOwnProperty(I.default.PRESENTATION_TIME) && (l$3.presentationTime = n$4.presentationTime);
							const u$3 = e$4.presentationTimeOffset ? e$4.presentationTimeOffset / e$4.timescale : 0;
							l$3.calculatedPresentationTime = l$3.presentationTime / e$4.timescale + t$3.start - u$3, n$4.hasOwnProperty(I.default.DURATION) && (l$3.duration = n$4.duration / e$4.timescale), n$4.hasOwnProperty(I.default.ID) ? l$3.id = parseInt(n$4.id) : l$3.id = null, n$4.Signal && n$4.Signal.Binary ? l$3.messageData = a$1.decodeArray(n$4.Signal.Binary.toString()) : l$3.messageData = n$4.messageData || n$4.__cdata || n$4.__text, i$3.push(l$3);
						}
					}
					return i$3;
				},
				getFramerate: E$2,
				getId: function(t$3) {
					return t$3 && t$3[I.default.ID] || null;
				},
				getIndexForAdaptation: function(t$3, e$3, n$3) {
					if (!t$3) return -1;
					const a$2 = g$2(e$3, n$3);
					for (let e$4 = 0; e$4 < a$2.length; e$4++) if ((0, oe.default)(r$2).getInstance().areEqual(a$2[e$4], t$3)) return e$4;
					return -1;
				},
				getIsDynamic: y$2,
				getIsFragmented: s$1,
				getIsText: d$2,
				getIsTypeOf: o$2,
				getLabelsForAdaptation: function(t$3) {
					if (!t$3 || !t$3.Label) return [];
					const e$3 = [];
					for (let n$3 = 0; n$3 < t$3.Label.length; n$3++) e$3.push({
						lang: t$3.Label[n$3].lang,
						text: t$3.Label[n$3].__text || t$3.Label[n$3]
					});
					return e$3;
				},
				getLanguageForAdaptation: function(t$3) {
					let e$3 = "";
					return t$3 && t$3.hasOwnProperty(I.default.LANG) && (e$3 = t$3.lang), e$3;
				},
				getLocation: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.LOCATION) ? t$3[I.default.LOCATION].map(((t$4) => {
						const e$3 = t$4.__text || t$4, n$3 = t$4.hasOwnProperty(I.default.SERVICE_LOCATION) ? t$4[I.default.SERVICE_LOCATION] : null;
						return new le(e$3, n$3);
					})) : [];
				},
				getManifestUpdatePeriod: function(t$3) {
					let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n$3 = NaN;
					return t$3 && t$3.hasOwnProperty(I.default.MINIMUM_UPDATE_PERIOD) && (n$3 = t$3.minimumUpdatePeriod), isNaN(n$3) ? n$3 : Math.max(n$3 - e$3, 1);
				},
				getMimeType: function(t$3) {
					return t$3 && t$3.Representation && t$3.Representation.length > 0 ? t$3.Representation[0].mimeType : null;
				},
				getMpd: function(t$3) {
					const e$3 = new ie();
					return t$3 && (e$3.manifest = t$3, t$3.hasOwnProperty(I.default.AVAILABILITY_START_TIME) ? e$3.availabilityStartTime = new Date(t$3.availabilityStartTime.getTime()) : t$3.loadedTime && (e$3.availabilityStartTime = new Date(t$3.loadedTime.getTime())), t$3.hasOwnProperty(I.default.AVAILABILITY_END_TIME) && (e$3.availabilityEndTime = new Date(t$3.availabilityEndTime.getTime())), t$3.hasOwnProperty(I.default.MINIMUM_UPDATE_PERIOD) && (e$3.minimumUpdatePeriod = t$3.minimumUpdatePeriod), t$3.hasOwnProperty(I.default.MEDIA_PRESENTATION_DURATION) && (e$3.mediaPresentationDuration = t$3.mediaPresentationDuration), t$3.hasOwnProperty(I.default.SUGGESTED_PRESENTATION_DELAY) && (e$3.suggestedPresentationDelay = t$3.suggestedPresentationDelay), t$3.hasOwnProperty(I.default.TIMESHIFT_BUFFER_DEPTH) && (e$3.timeShiftBufferDepth = t$3.timeShiftBufferDepth), t$3.hasOwnProperty(I.default.MAX_SEGMENT_DURATION) && (e$3.maxSegmentDuration = t$3.maxSegmentDuration), t$3.hasOwnProperty(I.default.PUBLISH_TIME) && (e$3.publishTime = new Date(t$3.publishTime))), e$3;
				},
				getPatchLocation: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.PATCH_LOCATION) ? t$3[I.default.PATCH_LOCATION].map(((t$4) => {
						const e$3 = t$4.__text || t$4, n$3 = t$4.hasOwnProperty(I.default.SERVICE_LOCATION) ? t$4[I.default.SERVICE_LOCATION] : null;
						let a$2 = t$4.hasOwnProperty(I.default.TTL) ? 1e3 * parseFloat(t$4[I.default.TTL]) : NaN;
						return new se(e$3, n$3, a$2);
					})) : [];
				},
				getProducerReferenceTimesForAdaptation: function(t$3) {
					const e$3 = t$3 && t$3.hasOwnProperty(I.default.PRODUCER_REFERENCE_TIME) ? t$3[I.default.PRODUCER_REFERENCE_TIME] : [];
					(t$3 && t$3.hasOwnProperty(I.default.REPRESENTATION) ? t$3[I.default.REPRESENTATION] : []).forEach(((t$4) => {
						t$4.hasOwnProperty(I.default.PRODUCER_REFERENCE_TIME) && e$3.push(...t$4[I.default.PRODUCER_REFERENCE_TIME]);
					}));
					const n$3 = [];
					return e$3.forEach(((t$4) => {
						const e$4 = new ce();
						t$4.hasOwnProperty(I.default.ID) && (e$4[I.default.ID] = parseInt(t$4[I.default.ID]), t$4.hasOwnProperty(I.default.WALL_CLOCK_TIME) && (e$4[I.default.WALL_CLOCK_TIME] = t$4[I.default.WALL_CLOCK_TIME], t$4.hasOwnProperty(I.default.PRESENTATION_TIME) && (e$4[I.default.PRESENTATION_TIME] = t$4[I.default.PRESENTATION_TIME], t$4.hasOwnProperty(I.default.INBAND) && (e$4[I.default.INBAND] = "false" !== t$4[I.default.INBAND]), t$4.hasOwnProperty(I.default.TYPE) && (e$4[I.default.TYPE] = t$4[I.default.TYPE]), n$3.push(e$4))));
					})), n$3;
				},
				getPublishTime: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.PUBLISH_TIME) ? new Date(t$3[I.default.PUBLISH_TIME]) : null;
				},
				getRealPeriodForIndex: function(t$3, e$3) {
					const n$3 = m$2(e$3);
					return n$3.length > 0 && l$2(t$3) ? n$3[t$3] : null;
				},
				getRealPeriods: m$2,
				getRegularPeriods: function(t$3) {
					const a$2 = !!t$3 && y$2(t$3.manifest), r$3 = [];
					let i$3, l$3, o$3 = null, s$2 = null, u$3 = null, d$3 = null;
					for (l$3 = 0, i$3 = t$3 && t$3.manifest && t$3.manifest.Period ? t$3.manifest.Period.length : 0; l$3 < i$3; l$3++) s$2 = t$3.manifest.Period[l$3], s$2.hasOwnProperty(I.default.START) ? (d$3 = new de(), d$3.start = s$2.start) : null !== o$3 && o$3.hasOwnProperty(I.default.DURATION) && null !== u$3 ? (d$3 = new de(), d$3.start = parseFloat((u$3.start + u$3.duration).toFixed(5))) : 0 !== l$3 || a$2 || (d$3 = new de(), d$3.start = 0), null !== u$3 && isNaN(u$3.duration) && (null !== d$3 ? u$3.duration = parseFloat((d$3.start - u$3.start).toFixed(5)) : e$2.warn("First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback")), null !== d$3 && (d$3.id = R$1(s$2, l$3), d$3.index = l$3, d$3.mpd = t$3, d$3.isEncrypted = h$2(s$2), s$2.hasOwnProperty(I.default.DURATION) && (d$3.duration = s$2.duration), u$3 && (u$3.nextPeriodId = d$3.id), r$3.push(d$3), o$3 = s$2, u$3 = d$3), s$2 = null, d$3 = null;
					return 0 === r$3.length || null !== u$3 && isNaN(u$3.duration) && (u$3.duration = parseFloat((function(t$4) {
						(function() {
							if (!n$2 || !n$2.hasOwnProperty("error")) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
						})();
						const e$3 = y$2(t$4.mpd.manifest);
						let a$3;
						return t$4.mpd.manifest.mediaPresentationDuration ? a$3 = t$4.mpd.manifest.mediaPresentationDuration : t$4.duration ? a$3 = t$4.duration : e$3 ? a$3 = Number.POSITIVE_INFINITY : n$2.error(new G.default(V.MANIFEST_ERROR_ID_PARSE_CODE, "Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.", t$4)), a$3;
					}(u$3) - u$3.start).toFixed(5))), r$3;
				},
				getRepresentationCount: function(t$3) {
					return t$3 && t$3.Representation ? t$3.Representation.length : 0;
				},
				getRepresentationFor: function(t$3, e$3) {
					return e$3 && e$3.Representation && e$3.Representation.length > 0 && l$2(t$3) ? e$3.Representation[t$3] : null;
				},
				getRepresentationSortFunction: function() {
					return (t$3, e$3) => t$3.bandwidth - e$3.bandwidth;
				},
				getRepresentationsForAdaptation: function(t$3, e$3) {
					const n$3 = [], a$2 = function(t$4) {
						if (t$4 && t$4.period && l$2(t$4.period.index)) {
							const e$4 = t$4.period.mpd.manifest.Period[t$4.period.index];
							if (e$4 && e$4.AdaptationSet && l$2(t$4.index)) return f$2(e$4.AdaptationSet[t$4.index]);
						}
					}(t$3);
					let r$3, i$3;
					if (a$2 && a$2.Representation) {
						if (t$3 && t$3.period && l$2(t$3.period.index)) {
							const e$4 = D$1(t$3.period.mpd.manifest);
							e$4 && (i$3 = e$4[0]);
						}
						for (let l$3 = 0, o$3 = a$2.Representation.length; l$3 < o$3; ++l$3) {
							const o$4 = a$2.Representation[l$3], u$3 = new fe();
							if (u$3.index = l$3, u$3.adaptation = t$3, u$3.mediaInfo = e$3, o$4.hasOwnProperty(I.default.ID) && (u$3.id = o$4.id), o$4.hasOwnProperty(I.default.CODECS) && (u$3.codecs = o$4.codecs, u$3.codecFamily = Gt.default.getCodecFamily(u$3.codecs)), o$4.hasOwnProperty(I.default.MIME_TYPE) && (u$3.mimeType = o$4[I.default.MIME_TYPE]), o$4.hasOwnProperty(I.default.CODEC_PRIVATE_DATA) && (u$3.codecPrivateData = o$4.codecPrivateData), o$4.hasOwnProperty(I.default.BANDWITH) && (u$3.bandwidth = o$4.bandwidth, u$3.bitrateInKbit = o$4.bandwidth / 1e3), o$4.hasOwnProperty(I.default.WIDTH) && (u$3.width = o$4.width), o$4.hasOwnProperty(I.default.HEIGHT) && (u$3.height = o$4.height), o$4.hasOwnProperty(I.default.SCAN_TYPE) && (u$3.scanType = o$4.scanType), o$4.hasOwnProperty(I.default.FRAMERATE) && (u$3.frameRate = E$2(o$4)), o$4.hasOwnProperty(I.default.QUALITY_RANKING) && (u$3.qualityRanking = o$4[I.default.QUALITY_RANKING]), o$4.hasOwnProperty(I.default.MAX_PLAYOUT_RATE) && (u$3.maxPlayoutRate = o$4.maxPlayoutRate), o$4.hasOwnProperty(I.default.SEGMENT_BASE) ? (r$3 = o$4.SegmentBase, u$3.segmentInfoType = I.default.SEGMENT_BASE) : o$4.hasOwnProperty(I.default.SEGMENT_LIST) ? (r$3 = o$4.SegmentList, r$3.hasOwnProperty(I.default.SEGMENT_TIMELINE) ? u$3.segmentInfoType = I.default.SEGMENT_TIMELINE : u$3.segmentInfoType = I.default.SEGMENT_LIST) : o$4.hasOwnProperty(I.default.SEGMENT_TEMPLATE) ? (r$3 = o$4.SegmentTemplate, r$3.hasOwnProperty(I.default.SEGMENT_TIMELINE) ? u$3.segmentInfoType = I.default.SEGMENT_TIMELINE : u$3.segmentInfoType = I.default.SEGMENT_TEMPLATE, r$3.hasOwnProperty(I.default.INITIALIZATION_MINUS) && (u$3.initialization = r$3.initialization.split("$Bandwidth$").join(o$4.bandwidth).split("$RepresentationID$").join(o$4.id))) : u$3.segmentInfoType = I.default.BASE_URL, u$3.essentialProperties = v$2(o$4), u$3.supplementalProperties = w$2(o$4), r$3) {
								if (r$3.hasOwnProperty(I.default.INITIALIZATION)) {
									const t$4 = r$3.Initialization;
									t$4.hasOwnProperty(I.default.SOURCE_URL) && (u$3.initialization = t$4.sourceURL), t$4.hasOwnProperty(I.default.RANGE) && (u$3.range = t$4.range);
								} else d$2(a$2) && s$1(a$2) && a$2.mimeType && -1 === a$2.mimeType.indexOf("application/mp4") && (u$3.range = 0);
								r$3.hasOwnProperty(I.default.TIMESCALE) && (u$3.timescale = r$3.timescale), r$3.hasOwnProperty(I.default.DURATION) ? u$3.segmentDuration = r$3.duration / u$3.timescale : o$4.hasOwnProperty(I.default.SEGMENT_TEMPLATE) && (r$3 = o$4.SegmentTemplate, r$3.hasOwnProperty(I.default.SEGMENT_TIMELINE) && (u$3.segmentDuration = k$1(r$3.SegmentTimeline) / u$3.timescale)), r$3.hasOwnProperty(I.default.MEDIA) && (u$3.media = r$3.media), r$3.hasOwnProperty(I.default.START_NUMBER) && (u$3.startNumber = parseInt(r$3.startNumber)), r$3.hasOwnProperty(I.default.INDEX_RANGE) && (u$3.indexRange = r$3.indexRange), r$3.hasOwnProperty(I.default.PRESENTATION_TIME_OFFSET) && (u$3.presentationTimeOffset = r$3.presentationTimeOffset / u$3.timescale), r$3.hasOwnProperty(I.default.AVAILABILITY_TIME_OFFSET) ? u$3.availabilityTimeOffset = r$3.availabilityTimeOffset : i$3 && void 0 !== i$3.availabilityTimeOffset && (u$3.availabilityTimeOffset = i$3.availabilityTimeOffset), r$3.hasOwnProperty(I.default.AVAILABILITY_TIME_COMPLETE) ? u$3.availabilityTimeComplete = "false" !== r$3.availabilityTimeComplete : i$3 && void 0 !== i$3.availabilityTimeComplete && (u$3.availabilityTimeComplete = i$3.availabilityTimeComplete), r$3.hasOwnProperty(I.default.END_NUMBER) && (u$3.endNumber = r$3[I.default.END_NUMBER]);
							}
							u$3.mseTimeOffset = A$1(u$3), u$3.path = [
								t$3.period.index,
								t$3.index,
								l$3
							], isNaN(u$3.width) || isNaN(u$3.height) || isNaN(u$3.frameRate) || (u$3.pixelsPerSecond = Math.max(1, u$3.width * u$3.height * u$3.frameRate), isNaN(u$3.bandwidth) || (u$3.bitsPerPixel = u$3.bandwidth / u$3.pixelsPerSecond)), n$3.push(u$3);
						}
					}
					return n$3;
				},
				getRolesForAdaptation: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.ROLE) && t$3[I.default.ROLE].length ? t$3[I.default.ROLE].map(((t$4) => {
						t$4.schemeIdUri === S$1.default.DASH_ROLE_SCHEME_ID && "Main" === t$4.value && (t$4.value = I.default.MAIN);
						const e$3 = new Zt();
						return e$3.init(t$4), e$3;
					})) : [];
				},
				getSegmentAlignment: function(t$3) {
					return !(!t$3 || !t$3.hasOwnProperty(I.default.SEGMENT_ALIGNMENT)) && "true" === t$3[I.default.SEGMENT_ALIGNMENT];
				},
				getSelectionPriority: function(t$3) {
					try {
						const e$3 = t$3 && void 0 !== t$3.selectionPriority ? parseInt(t$3.selectionPriority) : 1;
						return isNaN(e$3) ? 1 : e$3;
					} catch (t$4) {
						return 1;
					}
				},
				getServiceDescriptions: function(t$3) {
					const e$3 = [];
					if (t$3 && t$3.hasOwnProperty(I.default.SERVICE_DESCRIPTION)) for (const n$3 of t$3.ServiceDescription) {
						let t$4 = null, a$2 = null, r$3 = null, i$3 = null, l$3 = null, o$3 = null, s$2 = null, u$3 = null;
						for (const e$4 in n$3) if (n$3.hasOwnProperty(e$4)) if (e$4 === I.default.ID) t$4 = n$3[e$4];
						else if (e$4 === I.default.SERVICE_DESCRIPTION_SCOPE) a$2 = n$3[e$4].schemeIdUri;
						else if (e$4 === I.default.SERVICE_DESCRIPTION_LATENCY) r$3 = {
							target: parseInt(n$3[e$4].target),
							max: parseInt(n$3[e$4].max),
							min: parseInt(n$3[e$4].min),
							referenceId: parseInt(n$3[e$4].referenceId)
						};
						else if (e$4 === I.default.SERVICE_DESCRIPTION_PLAYBACK_RATE) i$3 = {
							max: parseFloat(n$3[e$4].max),
							min: parseFloat(n$3[e$4].min)
						};
						else if (e$4 === I.default.SERVICE_DESCRIPTION_OPERATING_QUALITY) l$3 = {
							mediaType: n$3[e$4].mediaType,
							max: parseInt(n$3[e$4].max),
							min: parseInt(n$3[e$4].min),
							target: parseInt(n$3[e$4].target),
							type: n$3[e$4].type,
							maxQualityDifference: parseInt(n$3[e$4].maxQualityDifference)
						};
						else if (e$4 === I.default.SERVICE_DESCRIPTION_OPERATING_BANDWIDTH) o$3 = {
							mediaType: n$3[e$4].mediaType,
							max: parseInt(n$3[e$4].max),
							min: parseInt(n$3[e$4].min),
							target: parseInt(n$3[e$4].target)
						};
						else if (e$4 === I.default.CONTENT_STEERING) {
							let t$5 = n$3[e$4];
							t$5 = Array.isArray(t$5) ? t$5.at(t$5.length - 1) : t$5, s$2 = x$1(t$5);
						} else e$4 === I.default.CLIENT_DATA_REPORTING && (u$3 = M$1(n$3[e$4]));
						e$3.push({
							id: t$4,
							schemeIdUri: a$2,
							latency: r$3,
							playbackRate: i$3,
							operatingQuality: l$3,
							operatingBandwidth: o$3,
							contentSteering: s$2,
							clientDataReporting: u$3
						});
					}
					return e$3;
				},
				getSubSegmentAlignment: function(t$3) {
					return !(!t$3 || !t$3.hasOwnProperty(I.default.SUB_SEGMENT_ALIGNMENT)) && "true" === t$3[I.default.SUB_SEGMENT_ALIGNMENT];
				},
				getSuggestedPresentationDelay: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.SUGGESTED_PRESENTATION_DELAY) ? t$3.suggestedPresentationDelay : null;
				},
				getSupplementalPropertiesForAdaptationSet: function(t$3) {
					return _$2(I.default.SUPPLEMENTAL_PROPERTY, t$3);
				},
				getSupplementalPropertiesForRepresentation: w$2,
				getUTCTimingSources: function(t$3) {
					const e$3 = y$2(t$3), n$3 = !!t$3 && t$3.hasOwnProperty(I.default.AVAILABILITY_START_TIME), a$2 = t$3 ? t$3.UTCTiming : null, r$3 = [];
					return (e$3 || n$3) && a$2 && a$2.forEach((function(t$4) {
						const e$4 = new ge.default();
						t$4.hasOwnProperty(S$1.default.SCHEME_ID_URI) && (e$4.schemeIdUri = t$4.schemeIdUri, t$4.hasOwnProperty(I.default.VALUE) && (e$4.value = t$4.value.toString(), r$3.push(e$4)));
					})), r$3;
				},
				getViewpointForAdaptation: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.VIEWPOINT) && t$3[I.default.VIEWPOINT].length ? t$3[I.default.VIEWPOINT].map(((t$4) => {
						const e$3 = new Zt();
						return e$3.init(t$4), e$3;
					})) : [];
				},
				hasProfile: function(t$3, e$3) {
					let n$3 = !1;
					return t$3 && t$3.profiles && t$3.profiles.length > 0 && (n$3 = -1 !== t$3.profiles.indexOf(e$3)), n$3;
				},
				isPeriodEncrypted: h$2,
				setConfig: function(t$3) {
					t$3 && (t$3.errHandler && (n$2 = t$3.errHandler), t$3.BASE64 && (a$1 = t$3.BASE64));
				}
			}, e$2 = (0, C.default)(r$2).getInstance().getLogger(t$2), t$2;
		}
		me.__dashjs_factory_name = "DashManifestModel";
		var he = N.default.getSingletonFactory(me);
		const pe = {
			MANIFEST: "m",
			AUDIO: "a",
			VIDEO: "v",
			MUXED: "av",
			INIT: "i",
			CAPTION: "c",
			TIMED_TEXT: "tt",
			KEY: "k",
			OTHER: "o"
		}, be = pe, ye = "v", Ee = "l", _e = "d", Te = "s";
		class ve {
			constructor(t$2, e$2) {
				Array.isArray(t$2) && (t$2 = t$2.map(((t$3) => t$3 instanceof ve ? t$3 : new ve(t$3)))), this.value = t$2, this.params = e$2;
			}
		}
		const we = "Dict";
		function Se(t$2, e$2, n$2, a$1) {
			return new Error(`failed to ${t$2} "${r$2 = e$2, Array.isArray(r$2) ? JSON.stringify(r$2) : r$2 instanceof Map ? "Map{}" : r$2 instanceof Set ? "Set{}" : "object" == typeof r$2 ? JSON.stringify(r$2) : String(r$2)}" as ${n$2}`, { cause: a$1 });
			var r$2;
		}
		function Ie(t$2, e$2, n$2) {
			return Se("serialize", t$2, e$2, n$2);
		}
		class ke {
			constructor(t$2) {
				this.description = t$2;
			}
		}
		const Ae = "Bare Item", Re = "Boolean", Ne = "Byte Sequence";
		const Ce = "Integer";
		function De(t$2) {
			return t$2 < -999999999999999 || 999999999999999 < t$2;
		}
		function xe(t$2) {
			if (De(t$2)) throw Ie(t$2, Ce);
			return t$2.toString();
		}
		function Me(t$2, e$2) {
			if (t$2 < 0) return -Me(-t$2, e$2);
			const n$2 = Math.pow(10, e$2);
			if (Math.abs(t$2 * n$2 % 1 - .5) < Number.EPSILON) {
				const e$3 = Math.floor(t$2 * n$2);
				return (e$3 % 2 == 0 ? e$3 : e$3 + 1) / n$2;
			}
			return Math.round(t$2 * n$2) / n$2;
		}
		const ze = "Decimal";
		function Oe(t$2) {
			const e$2 = Me(t$2, 3);
			if (Math.floor(Math.abs(e$2)).toString().length > 12) throw Ie(t$2, ze);
			const n$2 = e$2.toString();
			return n$2.includes(".") ? n$2 : `${n$2}.0`;
		}
		const Pe = "String", Le = /[\x00-\x1f\x7f]+/;
		function Fe(t$2) {
			return t$2.description || t$2.toString().slice(7, -1);
		}
		const Ue = "Token";
		function je(t$2) {
			const e$2 = Fe(t$2);
			if (!1 === /^([a-zA-Z*])([!#$%&'*+\-.^_`|~\w:/]*)$/.test(e$2)) throw Ie(e$2, Ue);
			return e$2;
		}
		function qe(t$2) {
			switch (typeof t$2) {
				case "number":
					if (!Number.isFinite(t$2)) throw Ie(t$2, Ae);
					return Number.isInteger(t$2) ? xe(t$2) : Oe(t$2);
				case "string": return function(t$3) {
					if (Le.test(t$3)) throw Ie(t$3, Pe);
					return `"${t$3.replace(/\\/g, "\\\\").replace(/"/g, "\\\"")}"`;
				}(t$2);
				case "symbol": return je(t$2);
				case "boolean": return function(t$3) {
					if ("boolean" != typeof t$3) throw Ie(t$3, Re);
					return t$3 ? "?1" : "?0";
				}(t$2);
				case "object":
					if (t$2 instanceof Date) return function(t$3) {
						return `@${xe(t$3.getTime() / 1e3)}`;
					}(t$2);
					if (t$2 instanceof Uint8Array) return function(t$3) {
						if (!1 === ArrayBuffer.isView(t$3)) throw Ie(t$3, Ne);
						return `:${e$2 = t$3, btoa(String.fromCharCode(...e$2))}:`;
						var e$2;
					}(t$2);
					if (t$2 instanceof ke) return je(t$2);
				default: throw Ie(t$2, Ae);
			}
		}
		const Be = "Key";
		function Ge(t$2) {
			if (!1 === /^[a-z*][a-z0-9\-_.*]*$/.test(t$2)) throw Ie(t$2, Be);
			return t$2;
		}
		function He(t$2) {
			return null == t$2 ? "" : Object.entries(t$2).map(((t$3) => {
				let [e$2, n$2] = t$3;
				return !0 === n$2 ? `;${Ge(e$2)}` : `;${Ge(e$2)}=${qe(n$2)}`;
			})).join("");
		}
		function Ye(t$2) {
			return t$2 instanceof ve ? `${qe(t$2.value)}${He(t$2.params)}` : qe(t$2);
		}
		const Ve = (t$2) => Math.round(t$2), Ke = (t$2) => 100 * Ve(t$2 / 100), We = {
			br: Ve,
			d: Ve,
			bl: Ke,
			dl: Ke,
			mtp: Ke,
			nor: (t$2, e$2) => (null != e$2 && e$2.baseUrl && (t$2 = function(t$3, e$3) {
				const n$2 = new URL(t$3), a$1 = new URL(e$3);
				if (n$2.origin !== a$1.origin) return t$3;
				const r$2 = n$2.pathname.split("/").slice(1), i$2 = a$1.pathname.split("/").slice(1, -1);
				for (; r$2[0] === i$2[0];) r$2.shift(), i$2.shift();
				for (; i$2.length;) i$2.shift(), r$2.unshift("..");
				return r$2.join("/");
			}(t$2, e$2.baseUrl)), encodeURIComponent(t$2)),
			rtp: Ke,
			tb: Ve
		};
		function $e(t$2) {
			let e$2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			return t$2 ? function(t$3, e$3) {
				return function(t$4) {
					let e$4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { whitespace: !0 };
					if ("object" != typeof t$4) throw Ie(t$4, we);
					const n$2 = t$4 instanceof Map ? t$4.entries() : Object.entries(t$4), a$1 = (null == e$4 ? void 0 : e$4.whitespace) ? " " : "";
					return Array.from(n$2).map(((t$5) => {
						let [e$5, n$3] = t$5;
						n$3 instanceof ve == 0 && (n$3 = new ve(n$3));
						let a$2 = Ge(e$5);
						var r$2;
						return !0 === n$3.value ? a$2 += He(n$3.params) : (a$2 += "=", Array.isArray(n$3.value) ? a$2 += `(${(r$2 = n$3).value.map(Ye).join(" ")})${He(r$2.params)}` : a$2 += Ye(n$3)), a$2;
					})).join(`,${a$1}`);
				}(t$3, e$3);
			}(function(t$3, e$3) {
				const n$2 = {};
				if (null == t$3 || "object" != typeof t$3) return n$2;
				const a$1 = Object.keys(t$3).sort(), r$2 = Object.assign({}, We, null == e$3 ? void 0 : e$3.formatters), i$2 = null == e$3 ? void 0 : e$3.filter;
				return a$1.forEach(((a$2) => {
					if (null == i$2 ? void 0 : i$2(a$2)) return;
					let l$2 = t$3[a$2];
					const o$2 = r$2[a$2];
					o$2 && (l$2 = o$2(l$2, e$3)), "v" === a$2 && 1 === l$2 || "pr" == a$2 && 1 === l$2 || function(t$4) {
						return "number" == typeof t$4 ? Number.isFinite(t$4) : null != t$4 && "" !== t$4 && !1 !== t$4;
					}(l$2) && (function(t$4) {
						return "ot" === t$4 || "sf" === t$4 || "st" === t$4;
					}(a$2) && "string" == typeof l$2 && (l$2 = new ke(l$2)), n$2[a$2] = l$2);
				})), n$2;
			}(t$2, e$2), Object.assign({ whitespace: !1 }, e$2)) : "";
		}
		const Xe = "CMCD-Object", Qe = "CMCD-Request", Ze = "CMCD-Session", Je = "CMCD-Status", tn = {
			[Xe]: [
				"br",
				"d",
				"ot",
				"tb"
			],
			[Qe]: [
				"bl",
				"dl",
				"mtp",
				"nor",
				"nrr",
				"su"
			],
			[Ze]: [
				"cid",
				"pr",
				"sf",
				"sid",
				"st",
				"v"
			],
			[Je]: ["bs", "rtp"]
		}, en = "segment";
		function nn() {
			let t$2, e$2, n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2 = this.context, b$2 = (0, A.default)(p$2).getInstance(), y$2 = (0, K.default)(p$2).getInstance(), E$2 = (0, C.default)(p$2).getInstance();
			function _$2() {
				a$1 = {
					pr: 1,
					nor: null,
					st: null,
					sf: null,
					sid: `${Gt.default.generateUuid()}`,
					cid: null
				}, f$2 = {}, c$2 = {}, g$2 = {}, d$2 = void 0, m$2 = void 0, h$2 = !1, I$1();
			}
			function T$2() {
				I$1();
			}
			function v$2() {
				m$2 || (m$2 = Date.now());
			}
			function w$2() {
				m$2 && !a$1.msd && (a$1.msd = Date.now() - m$2);
			}
			function I$1() {
				if (!l$2) return;
				const t$3 = l$2.getStreamController();
				if (!t$3) return;
				if ("function" != typeof t$3.getActiveStream) return;
				const e$3 = t$3.getActiveStream();
				e$3 && (u$2 = e$3.getStreamProcessors());
			}
			function k$1(t$3) {
				try {
					const e$3 = N$1(), n$3 = e$3.version ? e$3.keys : y$2.get().streaming.cmcd.enabledKeys;
					return Object.keys(t$3).filter(((t$4) => n$3.includes(t$4))).reduce(((e$4, n$4) => (e$4[n$4] = t$3[n$4], e$4)), {});
				} catch (e$3) {
					return t$3;
				}
			}
			function R$1() {
				const t$3 = N$1();
				return function(t$4) {
					if (Object.keys(t$4).length) {
						if (1 !== parseInt(t$4.version)) return n$2.error("version parameter must be defined in 1."), !1;
						if (!t$4.keys) return n$2.error("keys parameter must be defined."), !1;
					}
					const e$3 = t$4.version, a$2 = y$2.get().streaming.cmcd && y$2.get().streaming.cmcd.enabled;
					return e$3 || a$2;
				}(t$3) && function(t$4) {
					let e$3 = y$2.get().streaming.cmcd.includeInRequests;
					t$4.version && (e$3 = t$4.includeInRequests ?? [en]);
					const a$2 = S$1.default.CMCD_AVAILABLE_REQUESTS, r$3 = e$3.filter(((t$5) => !a$2.includes(t$5)));
					return r$3.length === e$3.length ? (n$2.error("None of the request types are supported."), !1) : (r$3.map(((t$5) => {
						n$2.warn(`request type ${t$5} is not supported.`);
					})), !0);
				}(t$3) && function(t$4) {
					const e$3 = S$1.default.CMCD_AVAILABLE_KEYS, a$2 = S$1.default.CMCD_V2_AVAILABLE_KEYS, r$3 = t$4.version ? t$4.keys : y$2.get().streaming.cmcd.enabledKeys, i$3 = y$2.get().streaming.cmcd.version, l$3 = r$3.filter(((t$5) => !(e$3.includes(t$5) || 2 === i$3 && a$2.includes(t$5))));
					return l$3.length === r$3.length && r$3.length > 0 ? (n$2.error(`None of the keys are implemented for CMCD version ${i$3}.`), !1) : (l$3.map(((t$5) => {
						n$2.warn(`key parameter ${t$5} is not implemented for CMCD version ${i$3}.`);
					})), !0);
				}(t$3);
			}
			function N$1() {
				let t$3 = {};
				if (o$2) {
					const e$3 = o$2.getServiceDescriptionSettings();
					y$2.get().streaming.cmcd.applyParametersFromMpd && e$3.clientDataReporting && e$3.clientDataReporting.cmcdParameters && (t$3 = e$3.clientDataReporting.cmcdParameters);
				}
				return t$3;
			}
			function x$1(t$3) {
				try {
					let n$3 = null;
					if (t$3.type, (e$3 = t$3.mediaType) !== S$1.default.VIDEO && e$3 !== S$1.default.AUDIO || d$2 && d$2 != S$1.default.AUDIO || (d$2 = e$3), function(t$4) {
						const e$4 = N$1();
						let n$4 = y$2.get().streaming.cmcd.includeInRequests;
						e$4.version && (n$4 = e$4.includeInRequests ? e$4.includeInRequests : [en]);
						const a$2 = {
							[z.HTTPRequest.INIT_SEGMENT_TYPE]: "segment",
							[z.HTTPRequest.MEDIA_SEGMENT_TYPE]: "segment",
							[z.HTTPRequest.XLINK_EXPANSION_TYPE]: "xlink",
							[z.HTTPRequest.MPD_TYPE]: "mpd",
							[z.HTTPRequest.CONTENT_STEERING_TYPE]: "steering",
							[z.HTTPRequest.OTHER_TYPE]: "other"
						};
						return n$4.some(((e$5) => a$2[t$4] === e$5));
					}(t$3.type)) {
						if (t$3.type === z.HTTPRequest.MPD_TYPE) return function() {
							const t$4 = P$1();
							return t$4.ot = be.MANIFEST, t$4;
						}();
						if (t$3.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE) return O$1(t$3.mediaType), M$1(t$3, t$3.mediaType);
						if (t$3.type === z.HTTPRequest.INIT_SEGMENT_TYPE) return function() {
							const t$4 = P$1();
							return t$4.ot = be.INIT, t$4.su = !0, t$4;
						}();
						if (t$3.type === z.HTTPRequest.OTHER_TYPE || t$3.type === z.HTTPRequest.XLINK_EXPANSION_TYPE) return function() {
							const t$4 = P$1();
							return t$4.ot = be.OTHER, t$4;
						}();
						if (t$3.type === z.HTTPRequest.LICENSE) return function() {
							const t$4 = P$1();
							return t$4.ot = be.KEY, t$4;
						}();
						if (t$3.type === z.HTTPRequest.CONTENT_STEERING_TYPE) return function(t$4) {
							const e$4 = d$2 ? M$1(t$4, d$2) : P$1();
							return e$4.ot = be.OTHER, e$4;
						}(t$3);
					}
					return n$3;
				} catch (t$4) {
					return null;
				}
				var e$3;
			}
			function M$1(t$3, e$3) {
				O$1(e$3);
				const n$3 = P$1(), o$3 = function(t$4) {
					try {
						return parseInt(t$4.bandwidth / 1e3);
					} catch (t$5) {
						return null;
					}
				}(t$3), d$3 = function(t$4) {
					try {
						return isNaN(t$4.duration) ? NaN : Math.round(1e3 * t$4.duration);
					} catch (t$5) {
						return null;
					}
				}(t$3), m$3 = function(t$4) {
					try {
						return 100 * parseInt(s$1.getSafeAverageThroughput(t$4) / 100);
					} catch (t$5) {
						return null;
					}
				}(e$3), h$3 = function(t$4) {
					try {
						const e$4 = a$1.pr, n$4 = i$2.getCurrentBufferLevel(t$4);
						return isNaN(e$4) || isNaN(n$4) ? null : 100 * parseInt(n$4 / e$4 * 10);
					} catch (t$5) {
						return null;
					}
				}(e$3), p$3 = L$1(e$3), b$3 = function(t$4) {
					try {
						const e$4 = r$2.getPossibleVoRepresentationsFilteredBySettings(t$4).map(((t$5) => t$5.bitrateInKbit));
						return Math.max(...e$4);
					} catch (t$5) {
						return null;
					}
				}(t$3.representation?.mediaInfo), E$3 = a$1.pr, _$3 = function(t$4) {
					if (u$2 && 0 !== u$2.length) {
						for (let e$4 of u$2) if (e$4.getType() === t$4) return e$4.probeNextRequest();
					}
				}(e$3);
				let T$3;
				e$3 === S$1.default.VIDEO && (T$3 = be.VIDEO), e$3 === S$1.default.AUDIO && (T$3 = be.AUDIO), e$3 === S$1.default.TEXT && (T$3 = "application/mp4" === t$3.representation.mediaInfo.mimeType ? be.TIMED_TEXT : be.CAPTION);
				let v$3 = y$2.get().streaming.cmcd.rtp;
				return v$3 || (v$3 = function(t$4) {
					try {
						let e$4 = l$2.getPlaybackRate();
						e$4 || (e$4 = 1);
						let { bandwidth: n$4, mediaType: a$2, representation: r$3, duration: i$3 } = t$4;
						if (!r$3.mediaInfo) return NaN;
						let o$4 = L$1(a$2);
						0 === o$4 && (o$4 = 500);
						let s$2 = n$4 * i$3 / 1e3 / (o$4 / e$4 / 1e3), u$3 = y$2.get().streaming.cmcd.rtpSafetyFactor && !isNaN(y$2.get().streaming.cmcd.rtpSafetyFactor) ? y$2.get().streaming.cmcd.rtpSafetyFactor : 5;
						return 100 * (parseInt(s$2 * u$3 / 100) + 1);
					} catch (t$5) {
						return NaN;
					}
				}(t$3)), isNaN(v$3) || (n$3.rtp = v$3), _$3 && (t$3.url !== _$3.url ? n$3.nor = encodeURIComponent(Gt.default.getRelativeUrl(t$3.url, _$3.url)) : _$3.range && (n$3.nrr = _$3.range)), o$3 && (n$3.br = o$3), T$3 && (n$3.ot = T$3), isNaN(d$3) || (n$3.d = d$3), isNaN(m$3) || (n$3.mtp = m$3), isNaN(h$3) || (n$3.dl = h$3), isNaN(p$3) || (n$3.bl = p$3), isNaN(b$3) || (n$3.tb = b$3), isNaN(E$3) || 1 === E$3 || (n$3.pr = E$3), f$2[e$3] && (n$3.bs = !0, f$2[e$3] = !1), !c$2[e$3] && g$2[e$3] || (n$3.su = !0, c$2[e$3] = !1, g$2[e$3] = !0), n$3;
			}
			function O$1(t$3) {
				g$2.hasOwnProperty(t$3) || (g$2[t$3] = !1), c$2.hasOwnProperty(t$3) || (c$2[t$3] = !1), f$2.hasOwnProperty(t$3) || (f$2[t$3] = !1);
			}
			function P$1() {
				const t$3 = N$1(), e$3 = {};
				let n$3 = y$2.get().streaming.cmcd.cid ? y$2.get().streaming.cmcd.cid : a$1.cid;
				if (n$3 = t$3.contentID ? t$3.contentID : n$3, e$3.v = y$2.get().streaming.cmcd.version ?? 1, e$3.sid = y$2.get().streaming.cmcd.sid ? y$2.get().streaming.cmcd.sid : a$1.sid, e$3.sid = t$3.sessionID ? t$3.sessionID : e$3.sid, e$3.sid = `${e$3.sid}`, n$3 && (e$3.cid = `${n$3}`), isNaN(a$1.pr) || 1 === a$1.pr || null === a$1.pr || (e$3.pr = a$1.pr), a$1.st && (e$3.st = a$1.st), a$1.sf && (e$3.sf = a$1.sf), 2 === e$3.v) {
					let t$4 = 1e3 * l$2.getCurrentLiveLatency();
					isNaN(t$4) || (e$3.ltc = t$4);
					const n$4 = a$1.msd;
					h$2 || isNaN(n$4) || (e$3.msd = n$4, h$2 = !0);
				}
				return e$3;
			}
			function L$1(t$3) {
				try {
					const e$3 = i$2.getCurrentBufferLevel(t$3);
					return isNaN(e$3) ? null : 100 * parseInt(10 * e$3);
				} catch (t$4) {
					return null;
				}
			}
			function F$1(t$3) {
				try {
					a$1.pr = t$3.playbackRate;
				} catch (t$4) {}
			}
			function U$1(e$3) {
				try {
					const n$3 = t$2.getIsDynamic(e$3.data) ? Ee : ye, r$3 = e$3.protocol && "MSS" === e$3.protocol ? Te : _e;
					a$1.st = `${n$3}`, a$1.sf = `${r$3}`;
				} catch (t$3) {}
			}
			function j$1(t$3) {
				try {
					t$3.state && t$3.mediaType && t$3.state === D.default.BUFFER_EMPTY && (f$2[t$3.mediaType] || (f$2[t$3.mediaType] = !0), c$2[t$3.mediaType] || (c$2[t$3.mediaType] = !0));
				} catch (t$4) {}
			}
			function q$1() {
				for (let t$3 in f$2) f$2.hasOwnProperty(t$3) && (f$2[t$3] = !0);
				for (let t$3 in c$2) c$2.hasOwnProperty(t$3) && (c$2[t$3] = !0);
			}
			return e$2 = {
				getCmcdData: x$1,
				getQueryParameter: function(t$3) {
					try {
						if (R$1()) {
							const e$3 = x$1(t$3), n$3 = $e(k$1(e$3));
							return b$2.trigger(Wt.default.CMCD_DATA_GENERATED, {
								url: t$3.url,
								mediaType: t$3.mediaType,
								cmcdData: e$3,
								cmcdString: n$3
							}), {
								key: "CMCD",
								value: n$3
							};
						}
						return null;
					} catch (t$4) {
						return null;
					}
				},
				getHeaderParameters: function(t$3) {
					try {
						if (R$1()) {
							const e$3 = x$1(t$3), n$3 = function(t$4) {
								let e$4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
								const n$4 = {};
								if (!t$4) return n$4;
								const a$2 = Object.entries(t$4), r$3 = Object.entries(tn).concat(Object.entries((null == e$4 ? void 0 : e$4.customHeaderMap) || {})), i$3 = a$2.reduce(((t$5, e$5) => {
									var n$5, a$3;
									const [i$4, l$3] = e$5, o$3 = (null === (n$5 = r$3.find(((t$6) => t$6[1].includes(i$4)))) || void 0 === n$5 ? void 0 : n$5[0]) || Qe;
									return null !== (a$3 = t$5[o$3]) && void 0 !== a$3 || (t$5[o$3] = {}), t$5[o$3][i$4] = l$3, t$5;
								}), {});
								return Object.entries(i$3).reduce(((t$5, n$5) => {
									let [a$3, r$4] = n$5;
									return t$5[a$3] = $e(r$4, e$4), t$5;
								}), n$4);
							}(k$1(e$3), 1 === y$2.get().streaming.cmcd.version ? {} : { customHeaderMap: {
								[Qe]: ["ltc"],
								[Ze]: ["msd"]
							} });
							return b$2.trigger(Wt.default.CMCD_DATA_GENERATED, {
								url: t$3.url,
								mediaType: t$3.mediaType,
								cmcdData: e$3,
								headers: n$3
							}), n$3;
						}
						return null;
					} catch (t$4) {
						return null;
					}
				},
				getCmcdParametersFromManifest: N$1,
				setConfig: function(t$3) {
					t$3 && (t$3.abrController && (r$2 = t$3.abrController), t$3.dashMetrics && (i$2 = t$3.dashMetrics), t$3.throughputController && (s$1 = t$3.throughputController), t$3.playbackController && (l$2 = t$3.playbackController), t$3.serviceDescriptionController && (o$2 = t$3.serviceDescriptionController));
				},
				reset: function() {
					b$2.off(D.default.PLAYBACK_RATE_CHANGED, F$1, this), b$2.off(D.default.MANIFEST_LOADED, U$1, this), b$2.off(D.default.BUFFER_LEVEL_STATE_CHANGED, j$1, e$2), b$2.off(D.default.PLAYBACK_SEEKED, q$1, e$2), b$2.off(D.default.PLAYBACK_STARTED, v$2, e$2), b$2.off(D.default.PLAYBACK_PLAYING, w$2, e$2), _$2();
				},
				initialize: function(t$3) {
					b$2.on(D.default.PLAYBACK_RATE_CHANGED, F$1, e$2), b$2.on(D.default.MANIFEST_LOADED, U$1, e$2), b$2.on(D.default.BUFFER_LEVEL_STATE_CHANGED, j$1, e$2), b$2.on(D.default.PLAYBACK_SEEKED, q$1, e$2), b$2.on(D.default.PERIOD_SWITCH_COMPLETED, T$2, e$2), t$3 ? b$2.on(D.default.MANIFEST_LOADING_STARTED, v$2, e$2) : b$2.on(D.default.PLAYBACK_STARTED, v$2, e$2), b$2.on(D.default.PLAYBACK_PLAYING, w$2, e$2);
				},
				isCmcdEnabled: R$1
			}, t$2 = he(p$2).getInstance(), n$2 = E$2.getLogger(e$2), _$2(), e$2;
		}
		nn.__dashjs_factory_name = "CmcdModel";
		var an = N.default.getSingletonFactory(nn);
		const rn = "CMSD-Dynamic", ln = "CMSD-Static", on = pe;
		function sn(t$2, e$2, n$2) {
			return Se("parse", t$2, e$2, n$2);
		}
		const un = "List";
		function dn(t$2, e$2) {
			return {
				value: t$2,
				src: e$2
			};
		}
		const cn = "Inner List";
		const fn = "Date", gn = `${Ce} or ${ze}`;
		function mn(t$2) {
			let e$2, n$2 = 1, a$1 = "";
			const r$2 = sn(t$2, gn);
			if ("-" === t$2[0] && (n$2 = -1, t$2 = t$2.substring(1)), t$2.length <= 0) throw r$2;
			const i$2 = /^(\d+)?/g, l$2 = i$2.exec(t$2);
			if (0 === l$2[0].length) throw r$2;
			if (a$1 += l$2[1], "." === (t$2 = t$2.substring(i$2.lastIndex))[0]) {
				if (a$1.length > 12) throw r$2;
				const i$3 = /^(\.\d+)?/g, l$3 = i$3.exec(t$2);
				if (t$2 = t$2.substring(i$3.lastIndex), 0 === l$3[0].length || l$3[1].length > 4) throw r$2;
				if (a$1 += l$3[1], a$1.length > 16) throw r$2;
				e$2 = parseFloat(a$1) * n$2;
			} else {
				if (a$1.length > 15) throw r$2;
				if (e$2 = parseInt(a$1) * n$2, De(e$2)) throw sn(a$1, gn);
			}
			return dn(e$2, t$2);
		}
		function hn(t$2, e$2) {
			const n$2 = t$2[0];
			if ("\"" === n$2) return function(t$3) {
				let e$3 = "", n$3 = 0;
				if ("\"" !== t$3[n$3]) throw sn(t$3, Pe);
				for (n$3++; t$3.length > n$3;) {
					if ("\\" === t$3[n$3]) {
						if (t$3.length <= n$3 + 1) throw sn(t$3, Pe);
						if (n$3++, "\"" !== t$3[n$3] && "\\" !== t$3[n$3]) throw sn(t$3, Pe);
						e$3 += t$3[n$3];
					} else {
						if ("\"" === t$3[n$3]) return dn(e$3, t$3.substring(++n$3));
						if (Le.test(t$3[n$3])) throw sn(t$3, Pe);
						e$3 += t$3[n$3];
					}
					n$3++;
				}
				throw sn(t$3, Pe);
			}(t$2);
			if (/^[-0-9]/.test(n$2)) return mn(t$2);
			if ("?" === n$2) return function(t$3) {
				let e$3 = 0;
				if ("?" !== t$3[e$3]) throw sn(t$3, Re);
				if (e$3++, "1" === t$3[e$3]) return dn(!0, t$3.substring(++e$3));
				if ("0" === t$3[e$3]) return dn(!1, t$3.substring(++e$3));
				throw sn(t$3, Re);
			}(t$2);
			if (":" === n$2) return function(t$3) {
				if (":" !== t$3[0]) throw sn(t$3, Ne);
				if (!1 === (t$3 = t$3.substring(1)).includes(":")) throw sn(t$3, Ne);
				const e$3 = /(^.*?)(:)/g, n$3 = e$3.exec(t$3)[1];
				return t$3 = t$3.substring(e$3.lastIndex), dn(new Uint8Array([...atob(n$3)].map(((t$4) => t$4.charCodeAt(0)))), t$3);
			}(t$2);
			if (/^[a-zA-Z*]/.test(n$2)) return function(t$3, e$3) {
				if (!1 === /^[a-zA-Z*]$/.test(t$3[0])) throw sn(t$3, Ue);
				const n$3 = /^([!#$%&'*+\-.^_`|~\w:/]+)/g, a$1 = n$3.exec(t$3)[1];
				return t$3 = t$3.substring(n$3.lastIndex), dn(!1 === (null == e$3 ? void 0 : e$3.useSymbol) ? new ke(a$1) : Symbol.for(a$1), t$3);
			}(t$2, e$2);
			if ("@" === n$2) return function(t$3) {
				let e$3 = 0;
				if ("@" !== t$3[e$3]) throw sn(t$3, fn);
				e$3++;
				const n$3 = mn(t$3.substring(e$3));
				if (!1 === Number.isInteger(n$3.value)) throw sn(t$3, fn);
				return dn(/* @__PURE__ */ new Date(1e3 * n$3.value), n$3.src);
			}(t$2);
			throw sn(t$2, Ae);
		}
		function pn(t$2) {
			let e$2 = 0;
			if (!1 === /^[a-z*]$/.test(t$2[e$2])) throw sn(t$2, Be);
			let n$2 = "";
			for (; t$2.length > e$2;) {
				if (!1 === /^[a-z0-9_\-.*]$/.test(t$2[e$2])) return dn(n$2, t$2.substring(e$2));
				n$2 += t$2[e$2], e$2++;
			}
			return dn(n$2, t$2.substring(e$2));
		}
		function bn(t$2, e$2) {
			let n$2;
			for (; t$2.length > 0 && ";" === t$2[0];) {
				const a$1 = pn(t$2 = t$2.substring(1).trim()), r$2 = a$1.value;
				let i$2 = !0;
				if ("=" === (t$2 = a$1.src)[0]) {
					const n$3 = hn(t$2 = t$2.substring(1), e$2);
					i$2 = n$3.value, t$2 = n$3.src;
				}
				n$2 ??= {}, n$2[r$2] = i$2;
			}
			return dn(n$2, t$2);
		}
		function yn(t$2, e$2) {
			const n$2 = hn(t$2, e$2), a$1 = bn(t$2 = n$2.src, e$2);
			return t$2 = a$1.src, dn(new ve(n$2.value, a$1.value), t$2);
		}
		function En(t$2, e$2) {
			return "(" === t$2[0] ? function(t$3, e$3) {
				if ("(" !== t$3[0]) throw sn(t$3, cn);
				t$3 = t$3.substring(1);
				const n$2 = [];
				for (; t$3.length > 0;) {
					if (")" === (t$3 = t$3.trim())[0]) {
						const a$2 = bn(t$3 = t$3.substring(1), e$3);
						return dn(new ve(n$2, a$2.value), a$2.src);
					}
					const a$1 = yn(t$3, e$3);
					if (n$2.push(a$1.value), " " !== (t$3 = a$1.src)[0] && ")" !== t$3[0]) throw sn(t$3, cn);
				}
				throw sn(t$3, cn);
			}(t$2, e$2) : yn(t$2, e$2);
		}
		const _n = ln.toLowerCase(), Tn = rn.toLowerCase(), vn = [
			"mb",
			"st",
			"sf",
			"v"
		], wn = "stream", Sn = {
			video: on.VIDEO,
			audio: on.AUDIO,
			text: on.TIMED_TEXT,
			stream: wn
		};
		function In() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2;
			function l$2() {
				r$2 = {}, i$2 = {};
			}
			function o$2(t$3) {
				t$3 && Object.keys(t$3).forEach(((e$3) => {
					vn.includes(e$3) || delete t$3[e$3];
				}));
			}
			function s$1(t$3) {
				try {
					return (e$3 = t$3) ? Object.entries(function(t$4, e$4) {
						try {
							const { src: n$3, value: a$2 } = function(t$5, e$5) {
								const n$4 = {};
								for (; t$5.length > 0;) {
									let a$3;
									const r$3 = pn(t$5), i$3 = r$3.value;
									if ("=" === (t$5 = r$3.src)[0]) {
										const n$5 = En(t$5.substring(1), e$5);
										a$3 = n$5.value, t$5 = n$5.src;
									} else {
										const n$5 = bn(t$5, e$5);
										a$3 = new ve(!0, n$5.value), t$5 = n$5.src;
									}
									if (n$4[i$3] = a$3, 0 === (t$5 = t$5.trim()).length) return dn(n$4, t$5);
									if ("," !== t$5[0]) throw sn(t$5, we);
									if (0 === (t$5 = t$5.substring(1).trim()).length || "," === t$5[0]) throw sn(t$5, we);
								}
								return dn(n$4, t$5);
							}(t$4.trim(), e$4);
							if ("" !== n$3) throw sn(n$3, we);
							return a$2;
						} catch (e$5) {
							throw sn(t$4, we, e$5);
						}
					}(e$3)).reduce(((t$4, e$4) => {
						let [n$3, a$2] = e$4;
						const { value: r$3 } = a$2;
						return t$4[n$3] = "symbol" == typeof r$3 ? Fe(r$3) : r$3, t$4;
					}), {}) : {};
				} catch (t$4) {
					a$1.error("Failed to parse CMSD-Static response header value:", t$4);
				}
				var e$3;
			}
			function u$2(t$3) {
				try {
					const n$3 = (e$3 = t$3) ? function(t$4, e$4) {
						try {
							const { src: n$4, value: a$2 } = function(t$5, e$5) {
								const n$5 = [];
								for (; t$5.length > 0;) {
									const a$3 = En(t$5, e$5);
									if (n$5.push(a$3.value), 0 === (t$5 = a$3.src.trim()).length) return dn(n$5, t$5);
									if ("," !== t$5[0]) throw sn(t$5, un);
									if (0 === (t$5 = t$5.substring(1).trim()).length || "," === t$5[0]) throw sn(t$5, un);
								}
								return dn(n$5, t$5);
							}(t$4.trim(), e$4);
							if ("" !== n$4) throw sn(n$4, un);
							return a$2;
						} catch (e$5) {
							throw sn(t$4, un, e$5);
						}
					}(e$3) : [];
					return n$3[n$3.length - 1]?.params || {};
				} catch (t$4) {
					return a$1.error("Failed to parse CMSD-Dynamic response header value:", t$4), {};
				}
				var e$3;
			}
			function d$2(t$3) {
				return Sn[t$3] || on.OTHER;
			}
			function c$2(t$3, e$3, n$3) {
				const a$2 = t$3 === ln ? r$2 : i$2, l$3 = a$2[e$3] || {}, o$3 = a$2[wn] || {};
				return l$3[n$3] || o$3[n$3];
			}
			return n$2 = {
				setConfig: function() {},
				initialize: function() {},
				reset: function() {
					l$2();
				},
				parseResponseHeaders: function(t$3, n$3) {
					let a$2 = null, l$3 = null;
					for (const n$4 in t$3) {
						const r$3 = t$3[n$4];
						switch (n$4) {
							case _n:
								a$2 = s$1(r$3), e$2.trigger(R.default.CMSD_STATIC_HEADER, a$2);
								break;
							case Tn: l$3 || (l$3 = u$2(r$3));
						}
					}
					let c$3 = wn;
					return a$2 && a$2.ot ? c$3 = a$2.ot : n$3 && (c$3 = d$2(n$3)), o$2(r$2[c$3]), o$2(i$2[c$3]), a$2 && (r$2[c$3] = Object.assign(r$2[c$3] || {}, a$2)), l$3 && (i$2[c$3] = Object.assign(i$2[c$3] || {}, l$3)), {
						static: a$2,
						dynamic: l$3
					};
				},
				getMaxBitrate: function(t$3) {
					let e$3 = d$2(t$3);
					return c$2(rn, e$3, "mb") || -1;
				},
				getEstimatedThroughput: function(t$3) {
					let e$3 = d$2(t$3);
					return c$2(rn, e$3, "etp") || null;
				},
				getResponseDelay: function(t$3) {
					let e$3 = d$2(t$3);
					return c$2(rn, e$3, "rd") || null;
				},
				getRoundTripTime: function(t$3) {
					let e$3 = d$2(t$3);
					return c$2(rn, e$3, "rtt") || null;
				}
			}, a$1 = (0, C.default)(t$2).getInstance().getLogger(n$2), l$2(), n$2;
		}
		In.__dashjs_factory_name = "CmsdModel";
		var kn = N.default.getSingletonFactory(In), An = n$1(1926);
		function Rn() {
			let t$2, e$2;
			function n$2() {
				e$2 = {};
			}
			return t$2 = {
				reset: function() {
					n$2();
				},
				processResponseHeaders: function(t$3) {
					if (!(t$3 && t$3.headers && t$3.request && t$3.request.url)) return;
					const n$3 = t$3.headers[S$1.default.COMMON_ACCESS_TOKEN_HEADER];
					if (n$3) {
						const a$1 = Gt.default.getHostFromUrl(t$3.request.url);
						a$1 && (e$2[a$1] = n$3);
					}
				},
				getCommonAccessTokenForUrl: function(t$3) {
					if (!t$3) return null;
					const n$3 = Gt.default.getHostFromUrl(t$3);
					return n$3 ? e$2[n$3] ? e$2[n$3] : null : void 0;
				}
			}, n$2(), t$2;
		}
		Rn.__dashjs_factory_name = "CommonAccessTokenController";
		var Nn = N.default.getSingletonFactory(Rn);
		function Cn() {
			let t$2, e$2;
			return t$2 = {
				setConfig: function(t$3) {
					t$3 && t$3.serviceDescriptionController && (e$2 = t$3.serviceDescriptionController);
				},
				isAdaptationsIncluded: function(t$3) {
					const { adaptationSetsArray: n$2 } = e$2?.getServiceDescriptionSettings()?.clientDataReporting ?? {};
					return !n$2 || 0 === n$2?.length || n$2.includes(t$3);
				},
				isServiceLocationIncluded: function(t$3, n$2) {
					if (t$3 === z.HTTPRequest.CONTENT_STEERING_TYPE) return !0;
					const { serviceLocationsArray: a$1 } = e$2?.getServiceDescriptionSettings()?.clientDataReporting ?? {};
					return !a$1 || 0 === a$1?.length || a$1.includes(n$2);
				}
			}, t$2;
		}
		Cn.__dashjs_factory_name = "ClientDataReportingController";
		var Dn = N.default.getSingletonFactory(Cn);
		function xn() {
			let t$2, e$2, n$2;
			const a$1 = this.context;
			function r$2(t$3, e$3, n$3, a$2, r$3) {
				const i$2 = function(t$4, e$4) {
					let n$4 = [];
					return n$4 = e$4 === I.default.PERIOD ? t$4[I.default.SUPPLEMENTAL_PROPERTY] || [] : [...t$4[I.default.ESSENTIAL_PROPERTY] || [], ...t$4[I.default.SUPPLEMENTAL_PROPERTY] || []], n$4.find(((t$5) => t$5.schemeIdUri === S$1.default.URL_QUERY_INFO_SCHEME && t$5.UrlQueryInfo || t$5.schemeIdUri === S$1.default.EXT_URL_QUERY_INFO_SCHEME && t$5.ExtUrlQueryInfo));
				}(e$3, r$3);
				(function(t$4, e$4, n$4, a$3) {
					n$4.initialQueryString = "";
					let r$4 = "";
					const i$3 = t$4?.ExtUrlQueryInfo || t$4?.UrlQueryInfo;
					r$4 = i$3 && i$3.queryString ? e$4 && e$4.length > 0 ? e$4 + "&" + i$3.queryString : i$3.queryString : e$4, "true" === i$3?.useMPDUrlQuery && a$3 && (r$4 = r$4 ? r$4 + "&" + a$3 : a$3), n$4.initialQueryString = r$4;
				})(i$2, a$2.initialQueryString, t$3, n$3), function(t$4, e$4, n$4) {
					if (!t$4) return void (e$4.finalQueryString = n$4);
					e$4.finalQueryString = (t$4?.ExtUrlQueryInfo?.queryTemplate || t$4?.UrlQueryInfo?.queryTemplate || "") === I.default.QUERY_PART ? e$4?.initialQueryString : "";
				}(i$2, t$3, a$2.finalQueryString), t$3.sameOriginOnly = i$2?.ExtUrlQueryInfo?.sameOriginOnly, t$3.queryParams = Gt.default.parseQueryParams(t$3?.finalQueryString), t$3.includeInRequests = function(t$4, e$4) {
					return t$4 ? t$4.ExtUrlQueryInfo?.includeInRequests ? t$4.ExtUrlQueryInfo.includeInRequests.split(" ") : [I.default.SEGMENT_TYPE] : e$4;
				}(i$2, a$2.includeInRequests);
			}
			return e$2 = (0, C.default)(a$1).getInstance().getLogger(t$2), t$2 = {
				getFinalQueryString: function(t$3) {
					try {
						if (!n$2) return null;
						if (t$3.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE || t$3.type === z.HTTPRequest.INIT_SEGMENT_TYPE) {
							const e$3 = t$3.representation;
							if (!e$3) return null;
							const a$2 = e$3.adaptation, r$3 = a$2.period, i$2 = n$2.period[r$3.index].adaptation[a$2.index].representation[e$3.index], l$2 = new URL(t$3.url), o$2 = !i$2.sameOriginOnly || n$2.origin === l$2.origin;
							if (i$2.includeInRequests.includes(I.default.SEGMENT_TYPE) && o$2) return i$2.queryParams;
						} else if (t$3.type === z.HTTPRequest.MPD_TYPE) {
							if ([I.default.MPD_TYPE, I.default.MPD_PATCH_TYPE].some(((t$4) => n$2.includeInRequests.includes(t$4)))) return n$2.queryParams;
						} else if (t$3.type === z.HTTPRequest.CONTENT_STEERING_TYPE && n$2.includeInRequests.includes(I.default.STEERING_TYPE)) return n$2.queryParams;
					} catch (t$4) {
						return e$2.error(t$4), null;
					}
				},
				createFinalQueryStrings: function(t$3) {
					n$2 = {
						origin: new URL(t$3.url).origin,
						period: []
					};
					const e$3 = t$3.url.split("?")[1];
					r$2(n$2, t$3, e$3, {
						initialQueryString: "",
						includeInRequests: []
					}, I.default.MPD), t$3.Period.forEach(((t$4) => {
						const a$2 = { adaptation: [] };
						r$2(a$2, t$4, e$3, n$2, I.default.PERIOD), t$4.AdaptationSet.forEach(((t$5) => {
							const n$3 = { representation: [] };
							r$2(n$3, t$5, e$3, a$2, I.default.ADAPTATION_SET), t$5.Representation.forEach(((t$6) => {
								const a$3 = {};
								r$2(a$3, t$6, e$3, n$3, I.default.REPRESENTATION), n$3.representation.push(a$3);
							})), a$2.adaptation.push(n$3);
						})), n$2.period.push(a$2);
					}));
				}
			}, t$2;
		}
		xn.__dashjs_factory_name = "ExtUrlQueryInfoController";
		var Mn = N.default.getSingletonFactory(xn), zn = class {
			constructor(t$2) {
				this.url = t$2.url, this.method = t$2.method, this.responseType = void 0 !== t$2.responseType ? t$2.responseType : null, this.headers = void 0 !== t$2.headers ? t$2.headers : {}, this.credentials = void 0 !== t$2.credentials ? t$2.credentials : null, this.mode = void 0 !== t$2.mode ? t$2.mode : null, this.timeout = void 0 !== t$2.timeout ? t$2.timeout : 0, this.cmcd = void 0 !== t$2.cmcd ? t$2.cmcd : null, this.customData = void 0 !== t$2.customData ? t$2.customData : null;
			}
		}, On = class {
			constructor(t$2) {
				this.request = t$2.request, this.url = void 0 !== t$2.url ? t$2.url : null, this.redirected = void 0 !== t$2.redirected && t$2.redirected, this.status = void 0 !== t$2.status ? t$2.status : null, this.statusText = void 0 !== t$2.statusText ? t$2.statusText : "", this.type = void 0 !== t$2.type ? t$2.type : "", this.headers = void 0 !== t$2.headers ? t$2.headers : {}, this.data = void 0 !== t$2.data ? t$2.data : null, this.resourceTiming = void 0 !== t$2.resourceTiming ? t$2.resourceTiming : null;
			}
		};
		function Pn(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.errHandler, a$1 = t$2.dashMetrics, r$2 = t$2.mediaPlayerModel, i$2 = t$2.boxParser, l$2 = t$2.errors, o$2 = t$2.requestTimeout || 0, s$1 = (0, A.default)(e$2).getInstance(), u$2 = (0, K.default)(e$2).getInstance();
			let d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, w$2;
			function I$1(t$3, l$3) {
				const d$3 = function() {
					C$1();
				}, k$1 = function(e$3) {
					const n$3 = /* @__PURE__ */ new Date();
					F$1 && (F$1 = !1, (!e$3.lengthComputable || e$3.lengthComputable && e$3.total !== e$3.loaded) && (P$1.firstByteDate = n$3, Y$1.resourceTiming.responseStart = n$3.getTime())), e$3.lengthComputable && (P$1.bytesLoaded = Y$1.length = e$3.loaded, P$1.bytesTotal = Y$1.resourceTiming.encodedBodySize = e$3.total, Y$1.length = e$3.total, Y$1.resourceTiming.encodedBodySize = e$3.loaded), e$3.noTrace || (L$1.push({
						s: j$1,
						d: e$3.time ? e$3.time : n$3.getTime() - j$1.getTime(),
						b: [e$3.loaded ? e$3.loaded - q$1 : 0],
						t: e$3.throughput
					}), P$1.traces = L$1, j$1 = n$3, q$1 = e$3.loaded), B$1 && (clearTimeout(B$1), B$1 = null), u$2.get().streaming.fragmentRequestProgressTimeout > 0 && (B$1 = setTimeout((function() {
						w$2.warn("Abort request " + H$1.url + " due to progress timeout"), K$1.abort(H$1), d$3();
					}), u$2.get().streaming.fragmentRequestProgressTimeout)), t$3.progress && e$3 && t$3.progress(e$3);
				}, A$1 = function() {
					C$1(!0);
				}, N$1 = function(t$4) {
					let e$3;
					if (t$4.lengthComputable) {
						let n$3 = t$4.loaded / t$4.total * 100;
						e$3 = "Request timeout: loaded: " + t$4.loaded + ", out of: " + t$4.total + " : " + n$3.toFixed(3) + "% Completed";
					} else e$3 = "Request timeout: non-computable download size";
					w$2.warn(e$3);
				}, C$1 = function() {
					let e$3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
					-1 !== c$2.indexOf(H$1) && c$2.splice(c$2.indexOf(H$1), 1), B$1 && (clearTimeout(B$1), B$1 = null), _$2.processResponseHeaders(Y$1), D$1(), x$1(), function(t$4) {
						const e$4 = E$2.getResponseInterceptors();
						return e$4 ? e$4.reduce(((t$5, e$5) => t$5.then(((t$6) => e$5(t$6)))), Promise.resolve(t$4)) : Promise.resolve(t$4);
					}(Y$1).then(((n$3) => {
						if (Y$1 = n$3, function(t$4, e$4, n$4) {
							const r$3 = t$4.customData.request, i$3 = u$2.get().streaming.cmsd && u$2.get().streaming.cmsd.enabled ? p$2.parseResponseHeaders(e$4.headers, r$3.mediaType) : null;
							a$1.addHttpRequest(r$3, e$4.url, e$4.status, e$4.headers, n$4, i$3);
						}(H$1, Y$1, L$1), e$3) t$3.abort && t$3.abort(P$1);
						else if (P$1.type === z.HTTPRequest.MPD_TYPE && (a$1.addManifestUpdate(P$1), s$1.trigger(R.default.MANIFEST_LOADING_FINISHED, { requestObject: P$1 })), Y$1.status >= 200 && Y$1.status <= 299 && Y$1.data) t$3.success && t$3.success(Y$1.data, Y$1.statusText, Y$1.url), t$3.complete && t$3.complete(P$1, Y$1.statusText);
						else {
							try {
								404 === Y$1.status && u$2.get().streaming.utcSynchronization.enableBackgroundSyncAfterSegmentDownloadError && P$1.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE && r$2.getRetryAttemptsForType(z.HTTPRequest.MEDIA_SEGMENT_TYPE) === l$3 && s$1.trigger(R.default.ATTEMPT_BACKGROUND_SYNC);
							} catch (t$4) {}
							O$1();
						}
					}));
				}, D$1 = function() {
					P$1.startDate = U$1, P$1.endDate = /* @__PURE__ */ new Date(), P$1.firstByteDate = P$1.firstByteDate || U$1;
				}, x$1 = function() {
					Y$1.resourceTiming.responseEnd = Date.now(), function(t$4, e$3) {
						if (!u$2.get().streaming.abr.throughput.useResourceTimingApi) return;
						if ("undefined" == typeof performance || t$4.range) return;
						const n$3 = performance.getEntriesByType("resource");
						if (void 0 === n$3 || n$3.length <= 0) return;
						let a$2 = 0, r$3 = null;
						for (; a$2 < n$3.length;) {
							if (n$3[a$2].name === t$4.url) {
								r$3 = n$3[a$2];
								break;
							}
							a$2 += 1;
						}
						(function(t$5) {
							return t$5 && !isNaN(t$5.responseStart) && t$5.responseStart > 0 && !isNaN(t$5.responseEnd) && t$5.responseEnd > 0 && !isNaN(t$5.transferSize) && t$5.transferSize > 0;
						})(r$3) && (t$4.customData.request.resourceTimingValues = r$3, e$3.resourceTiming.startTime = r$3.startTime, e$3.resourceTiming.encodedBodySize = r$3.encodedBodySize, e$3.resourceTiming.responseStart = r$3.startTime, e$3.resourceTiming.responseEnd = r$3.responseEnd, e$3.resourceTiming.duration = r$3.duration);
					}(H$1, Y$1);
				}, M$1 = function(t$4, e$3, n$3) {
					return new Promise(((a$2) => {
						(function(t$5) {
							const e$4 = E$2.getRequestInterceptors();
							return e$4 ? e$4.reduce(((t$6, e$5) => t$6.then(((t$7) => e$5(t$7)))), Promise.resolve(t$5)) : Promise.resolve(t$5);
						})(e$3).then(((r$3) => {
							(e$3 = r$3).customData.onloadend = d$3, e$3.customData.onprogress = k$1, e$3.customData.onabort = A$1, e$3.customData.ontimeout = N$1, n$3.resourceTiming.startTime = Date.now(), t$4.load(e$3, n$3), a$2();
						}));
					}));
				}, O$1 = function() {
					if (l$3 > 0) {
						l$3--, t$3 && t$3.request && (t$3.request.retryAttempts += 1);
						let e$3 = { config: t$3 };
						g$2.push(e$3), e$3.timeout = setTimeout((function() {
							-1 !== g$2.indexOf(e$3) && (g$2.splice(g$2.indexOf(e$3), 1), I$1(t$3, l$3));
						}), r$2.getRetryIntervalsForType(P$1.type));
					} else {
						if (P$1.type === z.HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) return;
						n$2.error(new G.default(m$2[P$1.type], P$1.url + " is not available", {
							request: P$1,
							response: Y$1
						})), t$3.error && t$3.error(P$1, "error", Y$1.statusText, Y$1), t$3.complete && t$3.complete(P$1, Y$1.statusText);
					}
				}, P$1 = t$3.request, L$1 = [];
				let F$1, U$1, j$1, q$1, B$1, H$1, Y$1;
				if (P$1.bytesLoaded = NaN, P$1.bytesTotal = NaN, P$1.firstByteDate = null, P$1.traces = [], F$1 = !0, U$1 = /* @__PURE__ */ new Date(), j$1 = U$1, q$1 = 0, B$1 = null, !a$1 || !n$2) throw new Error("config object is not correct or missing");
				const V$1 = function(t$4) {
					let n$3, r$3;
					return t$4.hasOwnProperty("availabilityTimeComplete") && !1 === t$4.availabilityTimeComplete && window.fetch && "arraybuffer" === t$4.responseType && t$4.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE ? (y$2 || (y$2 = Kt(e$2).create(), y$2.setConfig({
						dashMetrics: a$1,
						boxParser: i$2
					})), n$3 = y$2, r$3 = S$1.default.FILE_LOADER_TYPES.FETCH) : (b$2 || (b$2 = Yt(e$2).create()), n$3 = b$2, r$3 = S$1.default.FILE_LOADER_TYPES.XHR), {
						loader: n$3,
						fileLoaderType: r$3
					};
				}(P$1), K$1 = V$1.loader;
				var W$1;
				P$1.fileLoaderType = V$1.fileLoaderType, P$1.headers = {}, function(t$4) {
					const e$3 = t$4?.serviceLocation, n$3 = t$4?.mediaInfo?.id?.toString();
					if (T$2.isServiceLocationIncluded(t$4.type, e$3) && T$2.isAdaptationsIncluded(n$3) && h$2.isCmcdEnabled()) {
						const e$4 = h$2.getCmcdParametersFromManifest(), n$4 = e$4.mode ? e$4.mode : u$2.get().streaming.cmcd.mode;
						if (n$4 === S$1.default.CMCD_MODE_QUERY) {
							t$4.url = Gt.default.removeQueryParameterFromUrl(t$4.url, S$1.default.CMCD_QUERY_KEY);
							const e$5 = function(t$5) {
								try {
									const e$6 = [], n$5 = h$2.getQueryParameter(t$5);
									return n$5 && e$6.push(n$5), e$6;
								} catch (t$6) {
									return [];
								}
							}(t$4);
							t$4.url = Gt.default.addAdditionalQueryParameterToUrl(t$4.url, e$5);
						} else n$4 === S$1.default.CMCD_MODE_HEADER && (t$4.headers = Object.assign(t$4.headers, h$2.getHeaderParameters(t$4)));
					}
				}(W$1 = P$1), 0 === W$1.retryAttempts && function(t$4) {
					let e$3 = v$2.getFinalQueryString(t$4);
					e$3 && (t$4.url = Gt.default.addAdditionalQueryParameterToUrl(t$4.url, e$3));
				}(W$1), function(t$4) {
					if (t$4.queryParams) {
						const e$3 = Object.keys(t$4.queryParams).map(((e$4) => ({
							key: e$4,
							value: t$4.queryParams[e$4]
						})));
						t$4.url = Gt.default.addAdditionalQueryParameterToUrl(t$4.url, e$3);
					}
				}(W$1), function(t$4) {
					const e$3 = _$2.getCommonAccessTokenForUrl(t$4.url);
					e$3 && (t$4.headers[S$1.default.COMMON_ACCESS_TOKEN_HEADER] = e$3);
				}(W$1), P$1.range && (P$1.headers.Range = "bytes=" + P$1.range);
				const $$1 = E$2.getXHRWithCredentialsForType(P$1.type);
				H$1 = new zn({
					url: P$1.url,
					method: z.HTTPRequest.GET,
					responseType: P$1.responseType,
					headers: P$1.headers,
					credentials: $$1 ? "include" : "omit",
					timeout: o$2,
					cmcd: h$2.getCmcdData(P$1),
					customData: { request: P$1 }
				}), Y$1 = new On({
					request: H$1,
					resourceTiming: {
						startTime: Date.now(),
						encodedBodySize: 0
					},
					status: 0
				});
				let X$1 = (/* @__PURE__ */ new Date()).getTime();
				if (isNaN(P$1.delayLoadingTime) || X$1 >= P$1.delayLoadingTime) return c$2.push(H$1), M$1(K$1, H$1, Y$1);
				{
					let t$4 = {
						httpRequest: H$1,
						httpResponse: Y$1
					};
					return f$2.push(t$4), t$4.delayTimeout = setTimeout((function() {
						if (-1 !== f$2.indexOf(t$4)) {
							f$2.splice(f$2.indexOf(t$4), 1);
							try {
								U$1 = /* @__PURE__ */ new Date(), j$1 = U$1, c$2.push(t$4.httpRequest), M$1(K$1, t$4.httpRequest, t$4.httpResponse);
							} catch (e$3) {
								t$4.httpRequest.onloadend();
							}
						}
					}), P$1.delayLoadingTime - X$1), Promise.resolve();
				}
			}
			return d$2 = {
				abort: function() {
					g$2.forEach(((t$3) => {
						clearTimeout(t$3.timeout), t$3.config.request && t$3.config.abort && t$3.config.abort(t$3.config.request);
					})), g$2 = [], f$2.forEach(((t$3) => clearTimeout(t$3.delayTimeout))), f$2 = [], c$2.forEach(((t$3) => {
						const e$3 = t$3.customData;
						e$3 && (e$3.request && e$3.request.type === z.HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE || (e$3.onloadend = e$3.onprogress = void 0, e$3.abort && e$3.abort()));
					})), c$2 = [];
				},
				load: function(t$3) {
					return t$3.request ? I$1(t$3, r$2.getRetryAttemptsForType(t$3.request.type)) : (t$3.error && t$3.error(t$3.request, "error"), Promise.resolve());
				},
				reset: function() {
					c$2 = [], f$2 = [], g$2 = [], b$2 && b$2.reset(), y$2 && y$2.reset(), b$2 = null, y$2 = null;
				},
				resetInitialSettings: function() {
					b$2 && b$2.resetInitialSettings();
				},
				setConfig: function(t$3) {
					t$3 && (t$3.commonAccessTokenController && (_$2 = t$3.commonAccessTokenController), t$3.extUrlQueryInfoController && (v$2 = t$3.extUrlQueryInfoController));
				}
			}, w$2 = (0, C.default)(e$2).getInstance().getLogger(d$2), c$2 = [], f$2 = [], g$2 = [], h$2 = an(e$2).getInstance(), T$2 = Dn(e$2).getInstance(), p$2 = kn(e$2).getInstance(), E$2 = (0, An.default)(e$2).getInstance(), _$2 = Nn(e$2).getInstance(), v$2 = Mn(e$2).getInstance(), m$2 = {
				[z.HTTPRequest.MPD_TYPE]: l$2.DOWNLOAD_ERROR_ID_MANIFEST_CODE,
				[z.HTTPRequest.XLINK_EXPANSION_TYPE]: l$2.DOWNLOAD_ERROR_ID_XLINK_CODE,
				[z.HTTPRequest.INIT_SEGMENT_TYPE]: l$2.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE,
				[z.HTTPRequest.MEDIA_SEGMENT_TYPE]: l$2.DOWNLOAD_ERROR_ID_CONTENT_CODE,
				[z.HTTPRequest.INDEX_SEGMENT_TYPE]: l$2.DOWNLOAD_ERROR_ID_CONTENT_CODE,
				[z.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: l$2.DOWNLOAD_ERROR_ID_CONTENT_CODE,
				[z.HTTPRequest.OTHER_TYPE]: l$2.DOWNLOAD_ERROR_ID_CONTENT_CODE
			}, d$2;
		}
		Pn.__dashjs_factory_name = "HTTPLoader";
		var Ln = N.default.getClassFactory(Pn);
		function Fn() {
			let t$2, e$2;
			function n$2() {
				e$2 = {};
			}
			function a$1() {
				n$2();
			}
			return a$1(), t$2 = {
				getLoader: function(t$3) {
					for (var n$3 in e$2) if (e$2.hasOwnProperty(n$3) && t$3.startsWith(n$3)) return e$2[n$3];
					return Ln;
				},
				registerLoader: function(t$3, n$3) {
					e$2[t$3] = n$3;
				},
				unregisterLoader: function(t$3) {
					e$2[t$3] && delete e$2[t$3];
				},
				unregisterAllLoader: n$2,
				reset: a$1
			}, t$2;
		}
		Fn.__dashjs_factory_name = "SchemeLoaderFactory";
		var Un = N.default.getSingletonFactory(Fn);
		function jn(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context;
			let n$2, a$1, r$2;
			return a$1 = Un(e$2).getInstance(), n$2 = {
				abort: function() {
					r$2 && r$2.abort();
				},
				load: function(n$3) {
					if (!r$2) r$2 = a$1.getLoader(n$3 && n$3.request ? n$3.request.url : null)(e$2).create({
						errHandler: t$2.errHandler,
						mediaPlayerModel: t$2.mediaPlayerModel,
						dashMetrics: t$2.dashMetrics,
						boxParser: t$2.boxParser ? t$2.boxParser : null,
						constants: t$2.constants ? t$2.constants : null,
						dashConstants: t$2.dashConstants ? t$2.dashConstants : null,
						urlUtils: t$2.urlUtils ? t$2.urlUtils : null,
						requestTimeout: isNaN(t$2.requestTimeout) ? 0 : t$2.requestTimeout,
						errors: t$2.errors
					});
					r$2.load(n$3);
				},
				reset: function() {
					a$1 && (a$1.reset(), a$1 = null), r$2 && "function" == typeof r$2.reset && r$2.reset(), r$2 = null;
				},
				resetInitialSettings: function() {
					r$2 && "function" == typeof r$2.resetInitialSettings && r$2.resetInitialSettings();
				}
			}, n$2;
		}
		jn.__dashjs_factory_name = "URLLoader";
		var qn = N.default.getClassFactory(jn), Bn = class extends P {
			constructor(t$2) {
				super(t$2), this.checkForExistenceOnly = !0;
			}
		};
		function Gn(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.eventBus, a$1 = t$2.events, r$2 = t$2.urlUtils, i$2 = t$2.errors, l$2 = t$2.streamId;
			let o$2, s$1;
			return o$2 = {
				abort: function() {
					s$1 && s$1.abort();
				},
				checkForExistence: function(t$3) {
					const e$3 = function(e$4) {
						n$2.trigger(a$1.CHECK_FOR_EXISTENCE_COMPLETED, {
							request: t$3,
							exists: e$4
						});
					};
					if (t$3) {
						let n$3 = new Bn(t$3.url);
						s$1.load({
							request: n$3,
							success: function() {
								e$3(!0);
							},
							error: function() {
								e$3(!1);
							}
						});
					} else e$3(!1);
				},
				load: function(t$3) {
					const e$3 = function(e$4, r$3) {
						n$2.trigger(a$1.LOADING_COMPLETED, {
							request: t$3,
							response: e$4 || null,
							error: r$3 || null,
							sender: o$2
						});
					};
					t$3 ? s$1.load({
						request: t$3,
						progress: function(e$4) {
							n$2.trigger(a$1.LOADING_PROGRESS, {
								request: t$3,
								stream: e$4.stream,
								streamId: l$2
							}), e$4.data && n$2.trigger(a$1.LOADING_DATA_PROGRESS, {
								request: t$3,
								response: e$4.data || null,
								error: null,
								sender: o$2
							});
						},
						success: function(t$4) {
							e$3(t$4);
						},
						error: function(t$4, n$3, a$2) {
							e$3(void 0, new G.default(i$2.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE, a$2, n$3));
						},
						abort: function(t$4) {
							t$4 && n$2.trigger(a$1.LOADING_ABANDONED, {
								mediaType: t$4.mediaType,
								request: t$4,
								sender: o$2
							});
						}
					}) : e$3(void 0, new G.default(i$2.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE, i$2.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE));
				},
				reset: function() {
					s$1 && (s$1.abort(), s$1.reset(), s$1 = null);
				},
				resetInitialSettings: function() {
					s$1 && s$1.resetInitialSettings();
				}
			}, s$1 = qn(e$2).create({
				errHandler: t$2.errHandler,
				errors: i$2,
				dashMetrics: t$2.dashMetrics,
				mediaPlayerModel: t$2.mediaPlayerModel,
				urlUtils: r$2,
				constants: S$1.default,
				boxParser: t$2.boxParser,
				dashConstants: t$2.dashConstants,
				requestTimeout: t$2.settings.get().streaming.fragmentRequestTimeout
			}), o$2;
		}
		Gn.__dashjs_factory_name = "FragmentLoader";
		var Hn = N.default.getClassFactory(Gn);
		function Yn(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance(), a$1 = t$2.errHandler, r$2 = t$2.mediaPlayerModel, i$2 = t$2.dashMetrics, l$2 = (0, C.default)(e$2).getInstance(), o$2 = t$2.streamInfo;
			let s$1, u$2, d$2;
			function c$2() {
				return o$2.id;
			}
			function f$2() {
				for (let t$3 in d$2) d$2[t$3].reset();
				d$2 = {};
			}
			function g$2(t$3) {
				if (!t$3.sender) return;
				const e$3 = t$3.request, a$2 = t$3.response, r$3 = e$3.isInitializationRequest(), i$3 = e$3.representation.mediaInfo.streamInfo;
				if (t$3.error && (e$3.mediaType === S$1.default.AUDIO || e$3.mediaType === S$1.default.VIDEO || e$3.mediaType === S$1.default.TEXT && e$3.representation.mediaInfo.isFragmented) && n$2.trigger(R.default.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD, { entry: t$3.request.serviceLocation }), !a$2 || !i$3) return void u$2.warn("No " + e$3.mediaType + " bytes to push or stream is inactive.");
				const l$3 = function(t$4, e$4, n$3, a$3) {
					const r$4 = new Bt();
					return r$4.streamId = n$3, r$4.segmentType = e$4.type, r$4.start = e$4.startTime, r$4.duration = e$4.duration, r$4.end = r$4.start + r$4.duration, r$4.bytes = t$4, r$4.index = e$4.index, r$4.representation = e$4.representation, r$4.endFragment = a$3, r$4;
				}(a$2, e$3, o$2.id, t$3.type !== R.default.FRAGMENT_LOADING_PROGRESS);
				n$2.trigger(r$3 ? R.default.INIT_FRAGMENT_LOADED : R.default.MEDIA_FRAGMENT_LOADED, {
					chunk: l$3,
					request: e$3
				}, {
					streamId: i$3.id,
					mediaType: e$3.mediaType
				});
			}
			return s$1 = {
				getStreamId: c$2,
				getModel: function(s$2) {
					let u$3 = d$2[s$2];
					return u$3 || (u$3 = B(e$2).create({
						streamInfo: o$2,
						type: s$2,
						dashMetrics: i$2,
						fragmentLoader: Hn(e$2).create({
							dashMetrics: i$2,
							mediaPlayerModel: r$2,
							errHandler: a$1,
							settings: t$2.settings,
							boxParser: t$2.boxParser,
							eventBus: n$2,
							events: R.default,
							errors: V,
							dashConstants: t$2.dashConstants,
							urlUtils: t$2.urlUtils,
							streamId: c$2()
						}),
						debug: l$2,
						eventBus: n$2,
						events: R.default
					}), d$2[s$2] = u$3), u$3;
				},
				reset: function() {
					n$2.off(D.default.FRAGMENT_LOADING_COMPLETED, g$2, this), n$2.off(D.default.FRAGMENT_LOADING_PROGRESS, g$2, this), f$2();
				}
			}, u$2 = l$2.getLogger(s$1), f$2(), n$2.on(D.default.FRAGMENT_LOADING_COMPLETED, g$2, s$1), n$2.on(D.default.FRAGMENT_LOADING_PROGRESS, g$2, s$1), s$1;
		}
		Yn.__dashjs_factory_name = "FragmentController";
		var Vn = N.default.getClassFactory(Yn), Kn = class {
			constructor() {
				this.url = null, this.width = null, this.height = null, this.x = null, this.y = null;
			}
		}, Wn = class {
			constructor() {
				this.bitrate = 0, this.width = 0, this.height = 0, this.tilesHor = 0, this.tilesVert = 0, this.widthPerTile = 0, this.heightPerTile = 0, this.startNumber = 0, this.segmentDuration = 0, this.timescale = 0, this.templateUrl = "", this.id = "";
			}
		};
		class $n {
			constructor(t$2) {
				if (this.offset = t$2._offset, this.type = t$2.type, this.size = t$2.size, this.boxes = [], t$2.boxes) for (let e$2 = 0; e$2 < t$2.boxes.length; e$2++) this.boxes.push(new $n(t$2.boxes[e$2]));
				switch (this.isComplete = !0, t$2.type) {
					case "sidx":
						if (this.timescale = t$2.timescale, this.earliest_presentation_time = t$2.earliest_presentation_time, this.first_offset = t$2.first_offset, this.references = t$2.references, t$2.references) {
							this.references = [];
							for (let e$2 = 0; e$2 < t$2.references.length; e$2++) {
								let n$2 = {
									reference_type: t$2.references[e$2].reference_type,
									referenced_size: t$2.references[e$2].referenced_size,
									subsegment_duration: t$2.references[e$2].subsegment_duration
								};
								this.references.push(n$2);
							}
						}
						break;
					case "emsg":
						this.id = t$2.id, this.version = 1 === t$2.version ? 1 : 0, this.value = t$2.value, this.timescale = t$2.timescale, this.scheme_id_uri = t$2.scheme_id_uri, this.presentation_time_delta = 1 === t$2.version ? t$2.presentation_time : t$2.presentation_time_delta, this.event_duration = t$2.event_duration, this.message_data = t$2.message_data;
						break;
					case "mdhd":
						this.timescale = t$2.timescale;
						break;
					case "mfhd":
						this.sequence_number = t$2.sequence_number;
						break;
					case "subs":
						this.entry_count = t$2.entry_count, this.entries = t$2.entries;
						break;
					case "tfhd":
						this.base_data_offset = t$2.base_data_offset, this.sample_description_index = t$2.sample_description_index, this.default_sample_duration = t$2.default_sample_duration, this.default_sample_size = t$2.default_sample_size, this.default_sample_flags = t$2.default_sample_flags, this.flags = t$2.flags;
						break;
					case "tfdt":
						this.version = t$2.version, this.baseMediaDecodeTime = t$2.baseMediaDecodeTime, this.flags = t$2.flags;
						break;
					case "trun":
						if (this.sample_count = t$2.sample_count, this.first_sample_flags = t$2.first_sample_flags, this.data_offset = t$2.data_offset, this.flags = t$2.flags, this.samples = t$2.samples, t$2.samples) {
							this.samples = [];
							for (let e$2 = 0, n$2 = t$2.samples.length; e$2 < n$2; e$2++) {
								let n$3 = {
									sample_size: t$2.samples[e$2].sample_size,
									sample_duration: t$2.samples[e$2].sample_duration,
									sample_composition_time_offset: t$2.samples[e$2].sample_composition_time_offset
								};
								this.samples.push(n$3);
							}
						}
						break;
					case "prft": this.version = t$2.version, this.reference_track_ID = t$2.reference_track_ID, this.ntp_timestamp_sec = t$2.ntp_timestamp_sec, this.ntp_timestamp_frac = t$2.ntp_timestamp_frac, this.media_time = t$2.media_time, this.flags = t$2.flags;
				}
			}
			getChildBox(t$2) {
				for (let e$2 = 0; e$2 < this.boxes.length; e$2++) if (this.boxes[e$2].type === t$2) return this.boxes[e$2];
			}
			getChildBoxes(t$2) {
				let e$2 = [];
				for (let n$2 = 0; n$2 < this.boxes.length; n$2++) this.boxes[n$2].type === t$2 && e$2.push(this.boxes[n$2]);
				return e$2;
			}
		}
		var Xn = $n;
		function Qn() {
			let t$2, e$2;
			function n$2(t$3) {
				let n$3 = [];
				if (!t$3 || !e$2 || "function" != typeof e$2.fetchAll) return n$3;
				let r$2, i$2 = e$2.fetchAll(t$3);
				for (let t$4 = 0, e$3 = i$2.length; t$4 < e$3; t$4++) r$2 = a$1(i$2[t$4]), r$2 && n$3.push(r$2);
				return n$3;
			}
			function a$1(t$3) {
				if (!t$3) return null;
				let e$3 = new Xn(t$3);
				return t$3.hasOwnProperty("_incomplete") && (e$3.isComplete = !t$3._incomplete), e$3;
			}
			return t$2 = {
				getBox: function(t$3) {
					return t$3 && e$2 && e$2.boxes && 0 !== e$2.boxes.length && "function" == typeof e$2.fetch ? a$1(e$2.fetch(t$3)) : null;
				},
				getBoxes: n$2,
				setData: function(t$3) {
					e$2 = t$3;
				},
				getLastBox: function() {
					if (!e$2 || !e$2.boxes || !e$2.boxes.length) return null;
					let t$3 = n$2(e$2.boxes[e$2.boxes.length - 1].type);
					return t$3.length > 0 ? t$3[t$3.length - 1] : null;
				}
			}, t$2;
		}
		Qn.__dashjs_factory_name = "IsoFile";
		var Zn = N.default.getClassFactory(Qn), Jn = n$1(6877), ta = class {
			constructor(t$2) {
				let { found: e$2, sizeOfLastCompletedBox: n$2, sizeOfLastFoundTargetBox: a$1, startOffsetOfLastCompletedBox: r$2, startOffsetOfLastFoundTargetBox: i$2, typeOfLastCompletedBox: l$2, typeOfLastTargetBox: o$2 } = t$2;
				this.found = void 0 !== e$2 && e$2, this.sizeOfLastCompletedBox = void 0 !== n$2 ? n$2 : 0, this.sizeOfLastFoundTargetBox = void 0 !== a$1 ? a$1 : 0, this.startOffsetOfLastCompletedBox = void 0 !== r$2 ? r$2 : 0, this.startOffsetOfLastFoundTargetBox = void 0 !== i$2 ? i$2 : 0, this.typeOfLastCompletedBox = void 0 !== l$2 ? l$2 : null, this.typeOfLastTargetBox = void 0 !== o$2 ? o$2 : null;
			}
		};
		function ea() {
			let t$2, e$2, n$2 = this.context;
			function a$1(t$3) {
				if (!t$3) return null;
				void 0 === t$3.fileStart && (t$3.fileStart = 0);
				let e$3 = Jn.parseBuffer(t$3), a$2 = Zn(n$2).create();
				return a$2.setData(e$3), a$2;
			}
			function r$2(t$3, e$3) {
				return t$3[e$3 + 3] >>> 0 | t$3[e$3 + 2] << 8 >>> 0 | t$3[e$3 + 1] << 16 >>> 0 | t$3[e$3] << 24 >>> 0;
			}
			function i$2(t$3, e$3) {
				return String.fromCharCode(t$3[e$3++]) + String.fromCharCode(t$3[e$3++]) + String.fromCharCode(t$3[e$3++]) + String.fromCharCode(t$3[e$3]);
			}
			return e$2 = {
				findInitRange: function(e$3) {
					let n$3, r$3, i$3 = null;
					const l$2 = a$1(e$3);
					if (!l$2) return i$3;
					const o$2 = l$2.getBox("ftyp"), s$1 = l$2.getBox("moov");
					return t$2.debug("Searching for initialization."), s$1 && s$1.isComplete && (n$3 = o$2 ? o$2.offset : s$1.offset, r$3 = s$1.offset + s$1.size - 1, i$3 = n$3 + "-" + r$3, t$2.debug("Found the initialization.  Range: " + i$3)), i$3;
				},
				findLastTopIsoBoxCompleted: function(t$3, e$3, n$3) {
					if (void 0 === n$3 && (n$3 = 0), !e$3 || n$3 + 8 >= e$3.byteLength) return new ta({ found: !1 });
					const a$2 = e$3 instanceof ArrayBuffer ? new Uint8Array(e$3) : e$3;
					let l$2, o$2 = 0, s$1 = 0, u$2 = null;
					for (; n$3 < a$2.byteLength;) {
						const e$4 = r$2(a$2, n$3), d$2 = i$2(a$2, n$3 + 4);
						if (0 === e$4) break;
						n$3 + e$4 <= a$2.byteLength && (t$3.indexOf(d$2) >= 0 ? l$2 = new ta({
							found: !0,
							startOffsetOfLastFoundTargetBox: n$3,
							sizeOfLastFoundTargetBox: e$4,
							typeOfLastTargetBox: d$2
						}) : (o$2 = n$3, s$1 = e$4, u$2 = d$2)), n$3 += e$4;
					}
					return l$2 || new ta({
						found: !1,
						startOffsetOfLastCompletedBox: o$2,
						sizeOfLastCompletedBox: s$1,
						typeOfLastCompletedBox: u$2
					});
				},
				getMediaTimescaleFromMoov: function(t$3) {
					let e$3 = a$1(t$3), n$3 = e$3 ? e$3.getBox("mdhd") : void 0;
					return n$3 ? n$3.timescale : NaN;
				},
				getSamplesInfo: function(t$3) {
					if (!t$3 || 0 === t$3.byteLength) return {
						sampleList: [],
						lastSequenceNumber: NaN,
						totalDuration: NaN,
						numSequences: NaN
					};
					let e$3, n$3, r$3, i$3, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2 = a$1(t$3), _$2 = E$2.getBoxes("moof"), T$2 = E$2.getBoxes("mfhd");
					b$2 = E$2.getBoxes("moof").length, p$2 = T$2[T$2.length - 1].sequence_number, r$3 = 0, o$2 = [];
					let v$2 = -1, w$2 = -1;
					for (f$2 = 0; f$2 < _$2.length; f$2++) {
						let t$4 = _$2[f$2], a$2 = t$4.getChildBoxes("traf");
						for (d$2 = 0; d$2 < a$2.length; d$2++) {
							let f$3 = a$2[d$2], p$3 = f$3.getChildBox("tfhd"), b$3 = f$3.getChildBox("tfdt");
							l$2 = b$3.baseMediaDecodeTime;
							let E$3 = f$3.getChildBoxes("trun"), _$3 = f$3.getChildBoxes("subs");
							for (c$2 = 0; c$2 < E$3.length; c$2++) {
								let a$3 = E$3[c$2];
								for (r$3 = a$3.sample_count, h$2 = (p$3.base_data_offset || 0) + (a$3.data_offset || 0), u$2 = 0; u$2 < r$3; u$2++) {
									s$1 = a$3.samples[u$2], e$3 = void 0 !== s$1.sample_duration ? s$1.sample_duration : p$3.default_sample_duration, i$3 = void 0 !== s$1.sample_size ? s$1.sample_size : p$3.default_sample_size, n$3 = void 0 !== s$1.sample_composition_time_offset ? s$1.sample_composition_time_offset : 0;
									let r$4 = {
										dts: l$2,
										cts: l$2 + n$3,
										duration: e$3,
										offset: t$4.offset + h$2,
										size: i$3,
										subSizes: [i$3]
									};
									if (_$3) for (g$2 = 0; g$2 < _$3.length; g$2++) {
										let t$5 = _$3[g$2];
										if (v$2 < t$5.entry_count - 1 && u$2 > w$2 && (v$2++, w$2 += t$5.entries[v$2].sample_delta), u$2 == w$2) {
											r$4.subSizes = [];
											let e$4 = t$5.entries[v$2];
											for (m$2 = 0; m$2 < e$4.subsample_count; m$2++) r$4.subSizes.push(e$4.subsamples[m$2].subsample_size);
										}
									}
									o$2.push(r$4), h$2 += i$3, l$2 += e$3;
								}
							}
							y$2 = l$2 - b$3.baseMediaDecodeTime;
						}
					}
					return {
						sampleList: o$2,
						lastSequenceNumber: p$2,
						totalDuration: y$2,
						numSequences: b$2
					};
				},
				parse: a$1
			}, t$2 = (0, C.default)(n$2).getInstance().getLogger(e$2), e$2;
		}
		ea.__dashjs_factory_name = "BoxParser";
		var na = N.default.getSingletonFactory(ea);
		function aa(t$2) {
			const e$2 = this.context, n$2 = t$2.adapter, a$1 = t$2.baseURLController, r$2 = t$2.streamInfo, i$2 = t$2.timelineConverter, l$2 = t$2.debug, o$2 = t$2.eventBus, s$1 = t$2.events, u$2 = t$2.dashConstants, d$2 = St(e$2).getInstance();
			let c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2;
			function _$2(t$3, e$3) {
				const r$3 = new Wn();
				r$3.id = t$3.id, r$3.bitrate = t$3.bandwidth, r$3.width = t$3.width, r$3.height = t$3.height, r$3.tilesHor = 1, r$3.tilesVert = 1, t$3.essentialProperties && t$3.essentialProperties.forEach(((t$4) => {
					if (S$1.default.THUMBNAILS_SCHEME_ID_URIS.indexOf(t$4.schemeIdUri) >= 0 && t$4.value) {
						const e$4 = t$4.value.split("x");
						2 !== e$4.length || isNaN(e$4[0]) || isNaN(e$4[1]) || (r$3.tilesHor = parseInt(e$4[0], 10), r$3.tilesVert = parseInt(e$4[1], 10));
					}
				})), e$3 ? b$2.updateSegmentData(t$3).then(((e$4) => {
					(function(t$4, e$5, r$4) {
						let l$3 = [];
						e$5.segments = function(t$5, e$6) {
							const a$2 = [];
							let r$5, l$4, o$3, s$2, u$3 = 0;
							for (r$5 = 0, l$4 = t$5.segments.length; r$5 < l$4; r$5++) o$3 = t$5.segments[r$5], s$2 = ht(i$2, n$2.getIsDynamic(), e$6, o$3.startTime, o$3.duration, o$3.timescale, o$3.media, o$3.mediaRange, u$3), s$2 && (a$2.push(s$2), s$2 = null, u$3++);
							return a$2;
						}(r$4, e$5), e$5.fragmentDuration = e$5.segmentDuration || (e$5.segments && e$5.segments.length > 0 ? e$5.segments[0].duration : NaN), t$4.segmentDuration = e$5.segments[0].duration, t$4.readThumbnail = function(t$5, n$3) {
							let r$5 = null;
							l$3.some(((e$6) => {
								if (e$6.start <= t$5 && e$6.end > t$5) return r$5 = e$6.url, !0;
							})), r$5 ? n$3(r$5) : e$5.segments.some(((r$6) => {
								if (r$6.mediaStartTime <= t$5 && r$6.mediaStartTime + r$6.duration > t$5) {
									const t$6 = a$1.resolve(e$5.path), i$3 = new zn({
										method: "get",
										url: t$6.url,
										responseType: "arraybuffer",
										customData: {
											request: { range: r$6.mediaRange },
											onloadend: function(t$7) {
												let e$6 = E$2.getSamplesInfo(t$7.target.response), a$2 = new Blob([t$7.target.response.slice(e$6.sampleList[0].offset, e$6.sampleList[0].offset + e$6.sampleList[0].size)], { type: "image/jpeg" }), i$4 = window.URL.createObjectURL(a$2);
												l$3.push({
													start: r$6.mediaStartTime,
													end: r$6.mediaStartTime + r$6.duration,
													url: i$4
												}), n$3 && n$3(i$4);
											}
										}
									}), o$3 = new On({ request: i$3 });
									return y$2.load(i$3, o$3), !0;
								}
							}));
						};
					})(r$3, t$3, e$4);
				})) : (r$3.startNumber = t$3.startNumber, r$3.segmentDuration = t$3.segmentDuration, r$3.timescale = t$3.timescale, r$3.templateUrl = function(t$4) {
					const e$4 = d$2.isRelative(t$4.media) ? d$2.resolve(t$4.media, a$1.resolve(t$4.path).url) : t$4.media;
					return e$4 ? gt(e$4, t$4.id) : "";
				}(t$3)), r$3.tilesHor > 0 && r$3.tilesVert > 0 && (r$3.widthPerTile = r$3.width / r$3.tilesHor, r$3.heightPerTile = r$3.height / r$3.tilesVert, f$2.push(r$3));
			}
			function T$2() {
				f$2 = [], g$2 = [], h$2 = -1, p$2 = null, m$2 && (m$2.reset(), m$2 = null);
			}
			return c$2 = {
				addTracks: function() {
					if (!r$2 || !n$2) return;
					if (p$2 = n$2.getMediaInfoForType(r$2, S$1.default.IMAGE), !p$2) return;
					const t$3 = n$2.getVoRepresentations(p$2);
					t$3 && t$3.length > 0 && t$3.forEach(((t$4) => {
						(t$4.segmentInfoType === I.default.SEGMENT_TEMPLATE && t$4.segmentDuration > 0 && t$4.media || t$4.segmentInfoType === I.default.SEGMENT_TIMELINE) && _$2(t$4), t$4.segmentInfoType === I.default.SEGMENT_BASE && _$2(t$4, !0), g$2.push(t$4);
					})), f$2.length > 0 && f$2.sort(((t$4, e$3) => t$4.bitrate - e$3.bitrate));
				},
				getCurrentTrack: function() {
					return h$2 < 0 ? null : f$2[h$2];
				},
				getCurrentTrackIndex: function() {
					return h$2;
				},
				getRepresentations: function() {
					return g$2;
				},
				getThumbnailRequestForTime: function(t$3) {
					let e$3;
					const a$2 = n$2.getVoRepresentations(p$2);
					for (let t$4 = 0; t$4 < a$2.length; t$4++) if (f$2[h$2].id === a$2[t$4].id) {
						e$3 = a$2[t$4];
						break;
					}
					return m$2.getSegmentRequestForTime(p$2, e$3, t$3);
				},
				getTracks: function() {
					return f$2;
				},
				reset: T$2,
				setTrackById: function(t$3) {
					if (!f$2 || 0 === f$2.length) return;
					const e$3 = f$2.findIndex(((e$4) => e$4.id === t$3));
					-1 !== e$3 && (h$2 = e$3);
				},
				setTrackByIndex: function(t$3) {
					f$2 && 0 !== f$2.length && (t$3 >= f$2.length && (t$3 = f$2.length - 1), h$2 = t$3);
				}
			}, T$2(), y$2 = Yt(e$2).create({}), E$2 = na(e$2).getInstance(), b$2 = Pt(e$2).create({
				events: s$1,
				eventBus: o$2,
				streamInfo: r$2,
				timelineConverter: i$2,
				dashConstants: u$2,
				dashMetrics: t$2.dashMetrics,
				segmentBaseController: t$2.segmentBaseController,
				type: S$1.default.IMAGE
			}), m$2 = _t(e$2).create({
				streamInfo: r$2,
				type: S$1.default.IMAGE,
				timelineConverter: i$2,
				segmentsController: b$2,
				baseURLController: a$1,
				debug: l$2,
				eventBus: o$2,
				events: s$1,
				dashConstants: u$2,
				urlUtils: d$2
			}), m$2.initialize(!!n$2 && n$2.getIsDynamic()), c$2;
		}
		aa.__dashjs_factory_name = "ThumbnailTracks";
		var ra = N.default.getClassFactory(aa);
		function ia(t$2) {
			const e$2 = this.context, n$2 = t$2.streamInfo;
			let a$1, r$2;
			function i$2(t$3) {
				r$2.setTrackByIndex(t$3);
			}
			function l$2() {
				r$2 && r$2.reset();
			}
			return a$1 = {
				getCurrentTrack: function() {
					return r$2.getCurrentTrack();
				},
				getCurrentTrackIndex: function() {
					return r$2.getCurrentTrackIndex();
				},
				getPossibleVoRepresentations: function() {
					return r$2.getRepresentations();
				},
				getStreamId: function() {
					return n$2.id;
				},
				initialize: function() {
					r$2.addTracks();
					const t$3 = r$2.getTracks();
					t$3 && t$3.length > 0 && i$2(0);
				},
				provide: function(t$3, e$3) {
					if ("function" != typeof e$3) return;
					const n$3 = r$2.getCurrentTrack();
					let a$2, i$3;
					if (!n$3 || n$3.segmentDuration <= 0 || null == t$3) return void e$3(null);
					i$3 = r$2.getThumbnailRequestForTime(t$3), i$3 && (n$3.segmentDuration = i$3.duration), a$2 = t$3 % n$3.segmentDuration;
					const l$3 = Math.floor(a$2 * n$3.tilesHor * n$3.tilesVert / n$3.segmentDuration), o$2 = new Kn();
					if (o$2.width = Math.floor(n$3.widthPerTile), o$2.height = Math.floor(n$3.heightPerTile), o$2.x = Math.floor(l$3 % n$3.tilesHor) * n$3.widthPerTile, o$2.y = Math.floor(l$3 / n$3.tilesHor) * n$3.heightPerTile, "readThumbnail" in n$3) return n$3.readThumbnail(t$3, ((t$4) => {
						o$2.url = t$4, e$3(o$2);
					}));
					if (i$3) o$2.url = i$3.url, n$3.segmentDuration = NaN;
					else {
						const e$4 = Math.floor(t$3 / n$3.segmentDuration);
						o$2.url = function(t$4, e$5) {
							const n$4 = e$5 + t$4.startNumber;
							return gt(t$4.templateUrl, void 0, n$4, void 0, t$4.bandwidth, (n$4 - 1) * t$4.segmentDuration * t$4.timescale);
						}(n$3, e$4);
					}
					e$3(o$2);
				},
				reset: l$2,
				setTrackByIndex: i$2,
				setTrackById: function(t$3) {
					r$2.setTrackById(t$3);
				}
			}, l$2(), r$2 = ra(e$2).create({
				streamInfo: n$2,
				adapter: t$2.adapter,
				baseURLController: t$2.baseURLController,
				timelineConverter: t$2.timelineConverter,
				debug: t$2.debug,
				eventBus: t$2.eventBus,
				events: t$2.events,
				dashConstants: t$2.dashConstants,
				dashMetrics: t$2.dashMetrics,
				segmentBaseController: t$2.segmentBaseController
			}), a$1;
		}
		ia.__dashjs_factory_name = "ThumbnailController";
		var la = N.default.getClassFactory(ia);
		function oa(t$2) {
			let e$2;
			t$2 = t$2 || {};
			let n$2 = [];
			const a$1 = (0, A.default)(this.context).getInstance(), r$2 = t$2.updateEventName, i$2 = t$2.addBlacklistEventName;
			function l$2(t$3) {
				-1 === n$2.indexOf(t$3) && (n$2.push(t$3), a$1.trigger(r$2, { entry: t$3 }));
			}
			function o$2(t$3) {
				l$2(t$3.entry);
			}
			return e$2 = {
				add: l$2,
				remove: function(t$3) {
					const e$3 = n$2.indexOf(t$3);
					-1 !== e$3 && n$2.splice(e$3, 1);
				},
				contains: function(t$3) {
					return !!(n$2.length && t$3 && t$3.length) && -1 !== n$2.indexOf(t$3);
				},
				reset: function() {
					i$2 && a$1.off(i$2, o$2, e$2), n$2 = [];
				}
			}, i$2 && a$1.on(i$2, o$2, e$2), e$2;
		}
		oa.__dashjs_factory_name = "BlackListController";
		var sa = N.default.getClassFactory(oa);
		const ua = [
			S$1.default.VIDEO,
			S$1.default.AUDIO,
			S$1.default.TEXT,
			S$1.default.MUXED,
			S$1.default.IMAGE
		];
		function da(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance(), a$1 = St(e$2).getInstance(), r$2 = t$2.manifestModel, i$2 = t$2.mediaPlayerModel, l$2 = t$2.dashMetrics, o$2 = t$2.manifestUpdater, s$1 = t$2.adapter, u$2 = t$2.timelineConverter, d$2 = t$2.capabilities, c$2 = t$2.errHandler, f$2 = t$2.abrController, g$2 = t$2.playbackController, m$2 = t$2.throughputController, h$2 = t$2.eventController, p$2 = t$2.mediaController, b$2 = t$2.protectionController, y$2 = t$2.textController, E$2 = t$2.videoModel;
			let _$2 = t$2.streamInfo;
			const T$2 = t$2.settings;
			let v$2, w$2, k$1, N$1, D$1, x$1, M$1, z$1, O$1, P$1, L$1, F$1, U$1, j$1, q$1, B$1;
			function H$1(t$3, e$3, n$3) {
				return new Promise(((a$2, i$3) => {
					J$1(), et$1();
					let l$3 = E$2.getElement();
					const o$3 = [];
					ua.forEach(((e$4) => {
						if ((e$4 !== S$1.default.TEXT || t$3) && (e$4 !== S$1.default.VIDEO || !l$3 || l$3 && /^VIDEO$/i.test(l$3.nodeName))) {
							const a$3 = n$3.find(((t$4) => t$4.mediaInfo.type === e$4));
							o$3.push(Y$1(e$4, t$3, a$3));
						}
					})), Promise.all(o$3).then((() => {
						return t$4 = e$3, new Promise(((e$4) => {
							const n$4 = {}, a$3 = k$1.map(((e$5) => {
								const n$5 = e$5.getRepresentation();
								return e$5.createBufferSinks(t$4, n$5);
							}));
							Promise.all(a$3).then(((t$5) => {
								t$5.forEach(((t$6) => {
									t$6 && (n$4[t$6.getType()] = t$6);
								})), e$4(n$4);
							})).catch((() => {
								e$4(n$4);
							}));
						}));
						var t$4;
					})).then(((e$4) => {
						if (0 === k$1.length) {
							const t$4 = "No streams to play.";
							c$2.error(new G.default(V.MANIFEST_ERROR_ID_NOSTREAMS_CODE, t$4, r$2.getValue())), w$2.fatal(t$4);
						} else ct$1();
						t$3 && y$2.createTracks(_$2), a$2(e$4);
					})).catch(((t$4) => {
						i$3(t$4);
					}));
				}));
			}
			function Y$1(a$2, l$3, o$3) {
				let h$3, b$3 = s$1.getAllMediaInfoForType(_$2, a$2), E$3 = [], v$3 = null;
				if (!b$3 || 0 === b$3.length) return w$2.info("No " + a$2 + " data."), Promise.resolve();
				a$2 === S$1.default.VIDEO && (M$1 = !0), a$2 === S$1.default.AUDIO && (z$1 = !0);
				for (let t$3 = 0, e$3 = b$3.length; t$3 < e$3; t$3++) v$3 = b$3[t$3], a$2 === S$1.default.TEXT && v$3.isEmbedded && (y$2.addEmbeddedTrack(_$2, v$3), E$3.push(v$3)), K$1(v$3) && p$2.addTrack(v$3);
				if (E$3.length > 0 && (p$2.setInitialMediaSettingsForType(a$2, _$2), y$2.addMediaInfosToBuffer(_$2, a$2, E$3)), b$3 = b$3.filter(((t$3) => !t$3.isEmbedded)), 0 === b$3.length) return Promise.resolve();
				if (a$2 === S$1.default.IMAGE) return P$1 = la(e$2).create({
					streamInfo: _$2,
					adapter: s$1,
					baseURLController: t$2.baseURLController,
					timelineConverter: t$2.timelineConverter,
					debug: j$1,
					eventBus: n$2,
					events: R.default,
					dashConstants: I.default,
					dashMetrics: t$2.dashMetrics,
					segmentBaseController: t$2.segmentBaseController
				}), P$1.initialize(), Promise.resolve();
				n$2.trigger(R.default.STREAM_INITIALIZING, {
					streamInfo: _$2,
					mediaInfo: v$3
				}), p$2.setInitialMediaSettingsForType(a$2, _$2);
				let A$1 = function(n$3, a$3) {
					const l$4 = n$3 && n$3.length > 0 ? n$3[0] : null;
					let o$4 = O$1.getModel(l$4 ? l$4.type : null);
					const h$4 = l$4 ? l$4.type : null, b$4 = l$4 ? l$4.mimeType : null, E$4 = l$4 ? l$4.isFragmented : null;
					let v$4 = qt(e$2).create({
						abrController: f$2,
						adapter: s$1,
						baseURLController: t$2.baseURLController,
						boxParser: U$1,
						capabilities: d$2,
						dashMetrics: t$2.dashMetrics,
						errHandler: c$2,
						fragmentModel: o$4,
						manifestModel: r$2,
						mediaController: p$2,
						mediaPlayerModel: i$2,
						mimeType: b$4,
						playbackController: g$2,
						segmentBaseController: t$2.segmentBaseController,
						segmentBlacklistController: L$1,
						settings: T$2,
						streamInfo: _$2,
						textController: y$2,
						throughputController: m$2,
						timelineConverter: u$2,
						type: h$4
					});
					return v$4.initialize(a$3, M$1, E$4), k$1.push(v$4), v$4.setMediaInfoArray(n$3), h$4 === S$1.default.TEXT && y$2.addMediaInfosToBuffer(_$2, h$4, n$3, o$4), v$4;
				}(b$3, l$3);
				if (h$3 = p$2.getCurrentTrackFor(a$2, _$2.id), h$3) {
					const t$3 = a$2 === S$1.default.TEXT && h$3.isEmbedded ? b$3[0] : h$3, e$3 = new Ut({
						newMediaInfo: t$3,
						previouslySelectedRepresentation: o$3
					});
					return A$1.selectMediaInfo(e$3);
				}
				return Promise.resolve();
			}
			function K$1(t$3) {
				const e$3 = t$3 ? t$3.type : null;
				let n$3;
				return e$3 === S$1.default.MUXED ? (n$3 = "Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines", w$2.fatal(n$3), c$2.error(new G.default(V.MANIFEST_ERROR_ID_MULTIPLEXED_CODE, n$3, r$2.getValue())), !1) : !(e$3 !== S$1.default.TEXT && e$3 !== S$1.default.IMAGE && t$3.contentProtection && t$3.contentProtection.length > 0 && !d$2.supportsEncryptedMedia() && (c$2.error(new G.default(V.CAPABILITY_MEDIAKEYS_ERROR_CODE, V.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE)), 1));
			}
			function W$1(t$3) {
				let e$3 = k$1 ? k$1.length : 0;
				for (let n$3 = 0; n$3 < e$3; n$3++) {
					let e$4 = k$1[n$3].getFragmentModel();
					e$4.abortRequests(), e$4.resetInitialSettings(), k$1[n$3].reset(!1, t$3);
				}
				y$2 && y$2.deactivateStream(_$2), P$1 && (P$1.reset(), P$1 = null), k$1 = [], D$1 = !1, x$1 = !1, ft$1(!1), X$1(!1), n$2.trigger(R.default.STREAM_DEACTIVATED, { streamInfo: _$2 });
			}
			function $$1(t$3) {
				W$1(t$3), N$1 = !1, M$1 = !1, z$1 = !1, q$1 = !1, B$1 = [];
			}
			function X$1(t$3) {
				q$1 = t$3;
			}
			function Q$1() {
				return _$2 ? _$2.start : NaN;
			}
			function Z$1() {
				return _$2 ? _$2.id : null;
			}
			function J$1() {
				if (!E$2 || !f$2) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
			}
			function tt$1(t$3) {
				t$3.error && (c$2.error(t$3.error), w$2.fatal(t$3.error.message));
			}
			function et$1() {
				if (h$2) {
					const t$3 = s$1.getEventsFor(_$2);
					t$3 && t$3.length > 0 && h$2.addInlineEvents(t$3, _$2.id);
				}
			}
			function nt$1(t$3) {
				let e$3 = at$1(t$3);
				return e$3 ? e$3.getMediaInfo() : null;
			}
			function at$1(t$3) {
				return t$3 ? k$1.find(((e$3) => e$3.getType() === t$3)) : null;
			}
			function rt$1() {
				let t$3 = ut$1();
				const e$3 = t$3.length;
				if (0 !== e$3) {
					for (let n$3 = 0; n$3 < e$3; n$3++) if (!t$3[n$3].isBufferingCompleted() && (t$3[n$3].getType() === S$1.default.AUDIO || t$3[n$3].getType() === S$1.default.VIDEO)) return void w$2.debug("onBufferingCompleted - One streamProcessor has finished but", t$3[n$3].getType(), "one is not buffering completed");
					w$2.debug("onBufferingCompleted - trigger STREAM_BUFFERING_COMPLETED"), x$1 = !0, n$2.trigger(R.default.STREAM_BUFFERING_COMPLETED, { streamInfo: _$2 }, { streamInfo: _$2 });
				} else w$2.warn("onBufferingCompleted - can't trigger STREAM_BUFFERING_COMPLETED because no streamProcessor is defined");
			}
			function it$1(t$3) {
				h$2 && h$2.addInbandEvents(t$3.events, _$2.id);
			}
			function lt$1() {
				ct$1();
			}
			function ot$1(t$3) {
				return t$3 && t$3.type ? st$1(t$3.type) : null;
			}
			function st$1(t$3) {
				return t$3 ? ut$1().filter((function(e$3) {
					return e$3.getType() === t$3;
				}))[0] : null;
			}
			function ut$1() {
				let t$3, e$3, n$3 = [];
				for (let a$2 = 0; a$2 < k$1.length; a$2++) e$3 = k$1[a$2], t$3 = e$3.getType(), t$3 !== S$1.default.AUDIO && t$3 !== S$1.default.VIDEO && t$3 !== S$1.default.TEXT || n$3.push(e$3);
				return n$3;
			}
			function dt$1() {
				const t$3 = k$1.length;
				for (let e$3 = 0; e$3 < t$3 && k$1[e$3]; e$3++) k$1[e$3].getScheduleController().startScheduleTimer();
			}
			function ct$1() {
				const t$3 = k$1.length;
				if (b$2) {
					b$2.clearMediaInfoArray();
					for (let e$3 = 0; e$3 < t$3 && k$1[e$3]; e$3++) {
						const t$4 = k$1[e$3].getType(), n$3 = k$1[e$3].getMediaInfo();
						if (t$4 === S$1.default.AUDIO || t$4 === S$1.default.VIDEO || t$4 === S$1.default.TEXT && n$3 && n$3.isFragmented) {
							let t$5 = k$1[e$3].getMediaInfo();
							t$5 && b$2.initializeForMedia(t$5);
						}
					}
					b$2.handleKeySystemFromManifest();
				}
				N$1 || (N$1 = !0, E$2.waitForReadyState(S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, (() => {
					n$2.trigger(R.default.STREAM_INITIALIZED, { streamInfo: _$2 });
				})));
			}
			function ft$1(t$3) {
				F$1 = t$3;
			}
			function gt$1() {
				return F$1;
			}
			return v$2 = {
				activate: function(t$3, e$3) {
					let a$2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
					return new Promise(((r$3, i$3) => {
						if (!D$1) return gt$1() ? (D$1 = !0, n$2.trigger(R.default.STREAM_ACTIVATED, { streamInfo: _$2 }), void r$3(e$3)) : void function(t$4, e$4) {
							return H$1(t$4, e$4, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : []);
						}(t$3, e$3, a$2).then(((t$4) => {
							D$1 = !0, a$2 && a$2.length > 0 && dt$1(), n$2.trigger(R.default.STREAM_ACTIVATED, { streamInfo: _$2 }), r$3(t$4);
						})).catch(((t$4) => {
							i$3(t$4);
						}));
						r$3(e$3);
					}));
				},
				checkAndHandleCompletedBuffering: function() {
					x$1 || k$1.forEach(((t$3) => {
						t$3.checkAndHandleCompletedBuffering();
					}));
				},
				deactivate: W$1,
				getAdapter: function() {
					return s$1;
				},
				getCurrentMediaInfoForType: function(t$3) {
					const e$3 = st$1(t$3);
					return e$3 ? e$3.getMediaInfo() : null;
				},
				getCurrentRepresentationForType: function(t$3) {
					const e$3 = st$1(t$3);
					return e$3 ? e$3.getRepresentation() : null;
				},
				getDuration: function() {
					return _$2 ? _$2.duration : NaN;
				},
				getHasAudioTrack: function() {
					return z$1;
				},
				getHasFinishedBuffering: function() {
					return x$1;
				},
				getHasVideoTrack: function() {
					return M$1;
				},
				getId: Z$1,
				getIsActive: function() {
					return D$1;
				},
				getIsEndedEventSignaled: function() {
					return q$1;
				},
				getPreloaded: gt$1,
				getRepresentationForTypeById: function(t$3, e$3) {
					let n$3;
					if (t$3 === S$1.default.IMAGE) {
						if (!P$1) return null;
						n$3 = P$1.getPossibleVoRepresentations();
					} else n$3 = function(t$4) {
						let e$4 = at$1(t$4);
						return e$4 ? e$4.getAllMediaInfos() : [];
					}(t$3).flatMap(((t$4) => f$2.getPossibleVoRepresentationsFilteredBySettings(t$4, !0)));
					if (!n$3 || 0 === n$3.length) return null;
					const a$2 = n$3.filter(((t$4) => t$4.id === e$3));
					return a$2 && a$2.length > 0 ? a$2[0] : null;
				},
				getRepresentationForTypeByIndex: function(t$3, e$3) {
					let n$3;
					if (t$3 === S$1.default.IMAGE) {
						if (!P$1) return null;
						n$3 = P$1.getPossibleVoRepresentations();
					} else {
						const e$4 = nt$1(t$3);
						n$3 = f$2.getPossibleVoRepresentationsFilteredBySettings(e$4, !0);
					}
					return n$3[e$3 = Math.max(Math.min(e$3, n$3.length - 1), 0)];
				},
				getRepresentationsByType: function(t$3) {
					if (J$1(), t$3 === S$1.default.IMAGE) return P$1 ? P$1.getPossibleVoRepresentations() : [];
					const e$3 = nt$1(t$3);
					return f$2.getPossibleVoRepresentationsFilteredBySettings(e$3, !0);
				},
				getStartTime: Q$1,
				getStreamId: function() {
					return _$2 ? _$2.id : null;
				},
				getStreamInfo: function() {
					return _$2;
				},
				getStreamProcessors: ut$1,
				getThumbnailController: function() {
					return P$1;
				},
				initialize: function() {
					n$2.on(R.default.BUFFERING_COMPLETED, rt$1, v$2), n$2.on(R.default.INBAND_EVENTS, it$1, v$2), n$2.on(R.default.DATA_UPDATE_COMPLETED, lt$1, v$2), b$2 && (n$2.on(R.default.KEY_ERROR, tt$1, v$2), n$2.on(R.default.SERVER_CERTIFICATE_UPDATED, tt$1, v$2), n$2.on(R.default.LICENSE_REQUEST_COMPLETE, tt$1, v$2), n$2.on(R.default.KEY_SYSTEM_SELECTED, tt$1, v$2), n$2.on(R.default.KEY_SESSION_CREATED, tt$1, v$2)), y$2.initializeForStream(_$2), n$2.trigger(R.default.STREAM_UPDATED, { streamInfo: _$2 });
				},
				initializeForTextWithMediaSource: function(t$3) {
					return new Promise(((e$3, n$3) => {
						Y$1(S$1.default.TEXT, t$3, null).then((() => function() {
							const t$4 = st$1(S$1.default.TEXT);
							return t$4 ? t$4.createBufferSinks() : Promise.resolve();
						}())).then((() => {
							y$2.createTracks(_$2), e$3();
						})).catch(((t$4) => {
							n$3(t$4);
						}));
					}));
				},
				prepareQualityChange: function(t$3) {
					const e$3 = st$1(t$3.mediaType);
					e$3 && e$3.prepareQualityChange(t$3);
				},
				prepareTrackChange: function(t$3) {
					if (!D$1 || !_$2) return;
					x$1 = !1;
					let e$3 = t$3.newMediaInfo, n$3 = r$2.getValue(), a$2 = ot$1(e$3);
					if (!a$2) return;
					let i$3 = g$2.getTime();
					if (w$2.info("Stream -  Process track changed at current time " + i$3), n$3.refreshManifestOnSwitchTrack) B$1.push(t$3), o$2.getIsUpdating() || (w$2.debug("Stream -  Refreshing manifest for switch track"), o$2.refreshManifest());
					else {
						a$2.clearScheduleTimer(), a$2.setTrackSwitchInProgress(!0);
						const n$4 = a$2.getRepresentation();
						a$2.selectMediaInfo(new Ut({ newMediaInfo: e$3 })).then((() => {
							const e$4 = !!(t$3 && t$3.options && t$3.options.hasOwnProperty("replaceBuffer")) && t$3.options.replaceBuffer;
							return a$2.prepareTrackSwitch(n$4, e$4);
						})).then((() => {
							a$2.setTrackSwitchInProgress(!1);
						}));
					}
				},
				reset: function(t$3) {
					O$1 && (O$1.reset(), O$1 = null), f$2 && _$2 && f$2.clearDataForStream(_$2.id), L$1 && (L$1.reset(), L$1 = null), y$2 && _$2 && y$2.clearDataForStream(_$2.id), p$2 && _$2 && p$2.clearDataForStream(_$2.id), $$1(t$3), _$2 = null, n$2.off(R.default.BUFFERING_COMPLETED, rt$1, v$2), n$2.off(R.default.INBAND_EVENTS, it$1, v$2), n$2.off(R.default.DATA_UPDATE_COMPLETED, lt$1, v$2), b$2 && (n$2.off(R.default.KEY_ERROR, tt$1, v$2), n$2.off(R.default.SERVER_CERTIFICATE_UPDATED, tt$1, v$2), n$2.off(R.default.LICENSE_REQUEST_COMPLETE, tt$1, v$2), n$2.off(R.default.KEY_SYSTEM_SELECTED, tt$1, v$2), n$2.off(R.default.KEY_SESSION_CREATED, tt$1, v$2));
				},
				setIsEndedEventSignaled: X$1,
				setMediaSource: function(t$3) {
					return new Promise(((e$3, n$3) => {
						const a$2 = [];
						for (let e$4 = 0; e$4 < k$1.length;) K$1(k$1[e$4].getMediaInfo()) ? (a$2.push(k$1[e$4].setMediaSource(t$3)), e$4++) : (k$1[e$4].reset(), k$1.splice(e$4, 1));
						Promise.all(a$2).then((() => {
							for (let t$4 = 0; t$4 < k$1.length; t$4++) k$1[t$4].dischargePreBuffer();
							if (0 === k$1.length) {
								const t$4 = "No streams to play.";
								c$2.error(new G.default(V.MANIFEST_ERROR_ID_NOSTREAMS_CODE, t$4 + "nostreams", r$2.getValue())), w$2.fatal(t$4);
							}
							e$3();
						})).catch(((t$4) => {
							w$2.error(t$4), n$3(t$4);
						}));
					}));
				},
				startPreloading: function(t$3, e$3) {
					let n$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
					return new Promise(((a$2, r$3) => {
						gt$1() ? r$3() : (w$2.info(`[startPreloading] Preloading next stream with id ${Z$1()}`), ft$1(!0), H$1(t$3, e$3, n$3).then((() => {
							for (let t$4 = 0; t$4 < k$1.length && k$1[t$4]; t$4++) k$1[t$4].setExplicitBufferingTime(Q$1()), k$1[t$4].getScheduleController().startScheduleTimer();
							a$2();
						})).catch((() => {
							ft$1(!1), r$3();
						})));
					}));
				},
				startScheduleControllers: dt$1,
				triggerProtectionError: function(t$3) {
					tt$1(t$3);
				},
				updateData: function(t$3) {
					return new Promise(((e$3) => {
						_$2 = t$3, h$2 && et$1();
						let a$2, r$3 = [];
						for (let t$4 = 0, e$4 = k$1.length; t$4 < e$4; t$4++) {
							let e$5 = k$1[t$4];
							const n$3 = e$5.getMediaInfo();
							r$3.push(e$5.updateStreamInfo(_$2));
							let a$3 = s$1.getAllMediaInfoForType(_$2, e$5.getType());
							if (a$3 = a$3.filter(((t$5) => !t$5.isEmbedded)), e$5.setMediaInfoArray(a$3), a$3) for (let t$5 = 0; t$5 < a$3.length; t$5++) s$1.areMediaInfosEqual(n$3, a$3[t$5]) && r$3.push(e$5.selectMediaInfo(new Ut({ newMediaInfo: a$3[t$5] })));
						}
						Promise.all(r$3).then((() => {
							let t$4 = [];
							for (; B$1.length > 0;) {
								let e$4 = B$1.pop(), n$3 = e$4.newMediaInfo;
								if (a$2 = ot$1(e$4.oldMediaInfo), !a$2) return;
								const r$4 = a$2.getRepresentation();
								a$2.setTrackSwitchInProgress(!0), t$4.push(a$2.prepareTrackSwitch(r$4)), t$4.push(a$2.selectMediaInfo(new Ut({ newMediaInfo: n$3 })));
							}
							return Promise.all(t$4);
						})).then((() => {
							ct$1(), a$2 && a$2.setTrackSwitchInProgress(!1), n$2.trigger(R.default.STREAM_UPDATED, { streamInfo: _$2 }), e$3();
						})).catch(((t$4) => {
							c$2.error(t$4);
						}));
					}));
				}
			}, function() {
				try {
					j$1 = (0, C.default)(e$2).getInstance(), w$2 = j$1.getLogger(v$2), $$1(), U$1 = na(e$2).getInstance(), L$1 = sa(e$2).create({
						updateEventName: R.default.SEGMENT_LOCATION_BLACKLIST_CHANGED,
						addBlacklistEventName: R.default.SEGMENT_LOCATION_BLACKLIST_ADD
					}), O$1 = Vn(e$2).create({
						streamInfo: _$2,
						mediaPlayerModel: i$2,
						dashMetrics: l$2,
						errHandler: c$2,
						settings: T$2,
						boxParser: U$1,
						dashConstants: I.default,
						urlUtils: a$1
					});
				} catch (t$3) {
					throw t$3;
				}
			}(), v$2;
		}
		da.__dashjs_factory_name = "Stream";
		var ca = N.default.getClassFactory(da), fa = class {
			constructor(t$2) {
				this.url = t$2 || null, this.type = z.HTTPRequest.CONTENT_STEERING_TYPE, this.responseType = "json";
			}
		}, ga = class {
			constructor() {
				this.version = null, this.ttl = 300, this.reloadUri = null, this.pathwayPriority = [], this.pathwayClones = [];
			}
		};
		function ma() {
			const t$2 = this.context, e$2 = St(t$2).getInstance();
			let n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2;
			function b$2(t$3) {
				_$2(t$3, "baseUrl");
			}
			function y$2(t$3) {
				_$2(t$3, "location");
			}
			function E$2(t$3) {
				var e$3, n$3;
				t$3 && t$3.throughputValues && t$3.throughputValues.serviceLocation && (e$3 = t$3.throughputValues.serviceLocation, n$3 = t$3.throughputValues, l$2[e$3] || (l$2[e$3] = []), l$2[e$3].push(n$3), l$2[e$3].length > 4 && l$2[e$3].shift());
			}
			function _$2(t$3, e$3) {
				if (t$3 && t$3.request && t$3.request.serviceLocation) {
					const n$3 = t$3.request.serviceLocation;
					-1 === i$2[e$3].all.indexOf(n$3) && i$2[e$3].all.push(n$3), i$2[e$3].current = n$3;
				}
			}
			function T$2() {
				const t$3 = f$2.getValue();
				let e$3 = p$2.getContentSteering(t$3);
				return e$3 || (e$3 = g$2.getServiceDescriptionSettings().contentSteering), e$3;
			}
			function v$2() {
				return new Promise(((t$3) => {
					try {
						const n$3 = T$2();
						if (!n$3 || !n$3.serverUrl) return void t$3();
						const o$3 = function(t$4) {
							let n$4 = t$4.serverUrl;
							r$2 && r$2.reloadUri && (n$4 = e$2.isRelative(r$2.reloadUri) ? e$2.resolve(r$2.reloadUri, t$4.serverUrl) : r$2.reloadUri);
							const a$2 = [], o$4 = i$2.baseUrl.all.concat(i$2.location.all);
							if (o$4.length > 0) {
								const t$5 = o$4.map(((t$6) => {
									const e$4 = function(t$7) {
										if (!t$7 || !l$2[t$7] || 0 === l$2[t$7].length) return -1;
										const e$5 = m$2.getArithmeticMean(l$2[t$7], l$2[t$7].length, !0);
										return parseInt(1e3 * e$5);
									}(t$6);
									return {
										serviceLocation: t$6,
										throughput: e$4
									};
								}));
								let e$3 = "", n$5 = "";
								t$5.forEach(((t$6, a$3) => {
									0 !== a$3 && (e$3 += ",", n$5 += ","), e$3 += t$6.serviceLocation, n$5 += t$6.throughput > -1 ? t$6.throughput : "";
								})), a$2.push({
									key: "_DASH_pathway",
									value: `"${e$3}"`
								}), a$2.push({
									key: "_DASH_throughput",
									value: n$5
								});
							}
							return n$4 = Gt.default.addAdditionalQueryParameterToUrl(n$4, a$2), n$4;
						}(n$3), u$3 = new fa(o$3);
						s$1.load({
							request: u$3,
							success: (e$3) => {
								(function(t$4) {
									t$4 && t$4[I.default.CONTENT_STEERING_RESPONSE.VERSION] && 1 === parseInt(t$4[I.default.CONTENT_STEERING_RESPONSE.VERSION]) && (r$2 = new ga(), r$2.version = t$4[I.default.CONTENT_STEERING_RESPONSE.VERSION], t$4[I.default.CONTENT_STEERING_RESPONSE.TTL] && !isNaN(t$4[I.default.CONTENT_STEERING_RESPONSE.TTL]) && (r$2.ttl = t$4[I.default.CONTENT_STEERING_RESPONSE.TTL]), t$4[I.default.CONTENT_STEERING_RESPONSE.RELOAD_URI] && (r$2.reloadUri = t$4[I.default.CONTENT_STEERING_RESPONSE.RELOAD_URI]), t$4[I.default.CONTENT_STEERING_RESPONSE.PATHWAY_PRIORITY] && (r$2.pathwayPriority = t$4[I.default.CONTENT_STEERING_RESPONSE.PATHWAY_PRIORITY]), t$4[I.default.CONTENT_STEERING_RESPONSE.PATHWAY_CLONES] && (r$2.pathwayClones = t$4[I.default.CONTENT_STEERING_RESPONSE.PATHWAY_CLONES], r$2.pathwayClones = r$2.pathwayClones.filter(((t$5) => function(t$6) {
										return t$6[I.default.CONTENT_STEERING_RESPONSE.BASE_ID] && t$6[I.default.CONTENT_STEERING_RESPONSE.ID] && t$6[I.default.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT] && t$6[I.default.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][I.default.CONTENT_STEERING_RESPONSE.HOST];
									}(t$5)))), k$1());
								})(e$3), h$2.trigger(D.default.CONTENT_STEERING_REQUEST_COMPLETED, {
									currentSteeringResponseData: r$2,
									url: o$3
								}), t$3();
							},
							error: (e$3, n$4, i$3, l$3) => {
								(function(t$4, e$4) {
									try {
										switch (a$1.warn("Error fetching data from content steering server", t$4), e$4.status) {
											case 410: break;
											case 429:
												const t$5 = e$4 && e$4.getResponseHeader ? e$4.getResponseHeader("retry-after") : null;
												null !== t$5 && (r$2 || (r$2 = {}), r$2.ttl = parseInt(t$5)), k$1();
												break;
											default: k$1();
										}
									} catch (t$5) {
										a$1.error(t$5);
									}
								})(e$3, l$3), t$3(e$3);
							},
							complete: () => {
								i$2.baseUrl.all = w$2(i$2.baseUrl), i$2.location.all = w$2(i$2.location);
							}
						});
					} catch (e$3) {
						t$3(e$3);
					}
				}));
			}
			function w$2(t$3) {
				return t$3.all && 0 !== t$3.all.length && t$3.current ? t$3.all.filter(((e$3) => e$3 === t$3.current)) : [];
			}
			function S$2(t$3) {
				try {
					const e$3 = [];
					return t$3 && 0 !== t$3.length && r$2 && r$2.pathwayClones && 0 !== r$2.pathwayClones.length ? (r$2.pathwayClones.forEach(((n$3) => {
						let a$2 = t$3.filter(((t$4) => n$3[I.default.CONTENT_STEERING_RESPONSE.BASE_ID] === t$4.serviceLocation)), r$3 = null;
						if (a$2 && a$2.length > 0 && (r$3 = a$2[0]), r$3) {
							const t$4 = new URL(r$3.url);
							let a$3 = n$3[I.default.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][I.default.CONTENT_STEERING_RESPONSE.HOST];
							a$3 = Gt.default.stringHasProtocol(a$3) ? a$3 : `${t$4.protocol}//${a$3}`;
							const i$3 = {
								synthesizedUrl: `${a$3}${t$4.pathname}`,
								serviceLocation: n$3[I.default.CONTENT_STEERING_RESPONSE.ID],
								queryParams: n$3[I.default.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][I.default.CONTENT_STEERING_RESPONSE.PARAMS],
								reference: r$3
							};
							e$3.push(i$3);
						}
					})), e$3) : e$3;
				} catch (t$4) {
					return a$1.error(t$4), [];
				}
			}
			function k$1() {
				r$2 && r$2.ttl && !isNaN(r$2.ttl) && (o$2 && clearTimeout(o$2), o$2 = setTimeout((() => {
					v$2();
				}), 1e3 * r$2.ttl));
			}
			function A$1() {
				o$2 && clearTimeout(o$2), o$2 = null;
			}
			function R$1() {
				r$2 = null, l$2 = {}, i$2 = {
					baseUrl: {
						current: null,
						all: []
					},
					location: {
						current: null,
						all: []
					}
				}, A$1();
			}
			return n$2 = {
				reset: function() {
					R$1(), h$2.off(D.default.FRAGMENT_LOADING_STARTED, b$2, n$2), h$2.off(D.default.MANIFEST_LOADING_STARTED, y$2, n$2), h$2.off(D.default.THROUGHPUT_MEASUREMENT_STORED, E$2, n$2);
				},
				setConfig: function(t$3) {
					t$3 && (t$3.adapter && (p$2 = t$3.adapter), t$3.errHandler && (u$2 = t$3.errHandler), t$3.dashMetrics && (d$2 = t$3.dashMetrics), t$3.mediaPlayerModel && (c$2 = t$3.mediaPlayerModel), t$3.manifestModel && (f$2 = t$3.manifestModel), t$3.serviceDescriptionController && (g$2 = t$3.serviceDescriptionController), t$3.throughputController && (m$2 = t$3.throughputController), t$3.eventBus && (h$2 = t$3.eventBus));
				},
				loadSteeringData: v$2,
				getCurrentSteeringResponseData: function() {
					return r$2;
				},
				shouldQueryBeforeStart: function() {
					const t$3 = T$2();
					return !!t$3 && t$3.queryBeforeStart;
				},
				getSteeringDataFromManifest: T$2,
				stopSteeringRequestTimer: A$1,
				getSynthesizedBaseUrlElements: function(t$3) {
					try {
						return S$2(t$3).map(((t$4) => {
							const e$3 = new Qt(t$4.synthesizedUrl, t$4.serviceLocation);
							return e$3.queryParams = t$4.queryParams, e$3.dvbPriority = t$4.reference.dvbPriority, e$3.dvbWeight = t$4.reference.dvbWeight, e$3.availabilityTimeOffset = t$4.reference.availabilityTimeOffset, e$3.availabilityTimeComplete = t$4.reference.availabilityTimeComplete, e$3;
						}));
					} catch (t$4) {
						return a$1.error(t$4), [];
					}
				},
				getSynthesizedLocationElements: function(t$3) {
					try {
						return S$2(t$3).map(((t$4) => {
							const e$3 = new le(t$4.synthesizedUrl, t$4.serviceLocation);
							return e$3.queryParams = t$4.queryParams, e$3;
						}));
					} catch (t$4) {
						return a$1.error(t$4), [];
					}
				},
				initialize: function() {
					s$1 = qn(t$2).create({
						errHandler: u$2,
						dashMetrics: d$2,
						mediaPlayerModel: c$2,
						errors: V
					}), h$2.on(D.default.FRAGMENT_LOADING_STARTED, b$2, n$2), h$2.on(D.default.MANIFEST_LOADING_STARTED, y$2, n$2), h$2.on(D.default.THROUGHPUT_MEASUREMENT_STORED, E$2, n$2);
				}
			}, a$1 = (0, C.default)(t$2).getInstance().getLogger(n$2), R$1(), n$2;
		}
		ma.__dashjs_factory_name = "ContentSteeringController";
		var ha = N.default.getSingletonFactory(ma);
		function pa() {
			const t$2 = this.context, e$2 = (0, K.default)(t$2).getInstance();
			let n$2, a$1, r$2;
			return n$2 = {
				select: function(t$3) {
					if (!t$3 || 0 === t$3.length) return null;
					let n$3 = null;
					return e$2.get().streaming.applyContentSteering && (n$3 = function(t$4) {
						const e$3 = r$2.getCurrentSteeringResponseData();
						return e$3 && e$3.pathwayPriority && e$3.pathwayPriority.length > 0 ? function() {
							let t$5 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], e$4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], n$4 = 0, r$3 = null;
							for (; n$4 < t$5.length;) {
								const i$2 = t$5[n$4], l$2 = e$4.findIndex(((t$6) => t$6.serviceLocation && t$6.serviceLocation === i$2));
								if (-1 !== l$2 && !a$1.contains(e$4[l$2].serviceLocation)) {
									r$3 = e$4[l$2];
									break;
								}
								n$4 += 1;
							}
							return r$3;
						}(e$3.pathwayPriority, t$4) : null;
					}(t$3)), n$3 || (n$3 = function(t$4) {
						return t$4[0];
					}(t$3)), n$3;
				},
				setConfig: function(t$3) {
					t$3.blacklistController && (a$1 = t$3.blacklistController), t$3.contentSteeringController && (r$2 = t$3.contentSteeringController);
				},
				reset: function() {
					a$1.reset();
				}
			}, a$1 = sa(t$2).create({
				updateEventName: R.default.SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED,
				addBlacklistEventName: R.default.SERVICE_LOCATION_LOCATION_BLACKLIST_ADD
			}), r$2 = ha(t$2).getInstance(), n$2;
		}
		pa.__dashjs_factory_name = "LocationSelector";
		var ba = N.default.getClassFactory(pa);
		function ya() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance(), n$2 = St(t$2).getInstance();
			let a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2;
			function b$2() {
				i$2 = NaN, u$2 = !1, o$2 = !0, s$1 = !1, y$2();
			}
			function y$2() {
				null !== l$2 && (clearTimeout(l$2), l$2 = null);
			}
			function E$2(t$3) {
				y$2(), s$1 || (isNaN(t$3) && !isNaN(i$2) && (t$3 = 1e3 * i$2), isNaN(t$3) || (r$2.debug("Refresh manifest in " + t$3 + " milliseconds."), l$2 = setTimeout(v$2, t$3)));
			}
			function _$2() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				u$2 = !0;
				const e$3 = c$2.getValue();
				let a$2 = e$3.url;
				a$2 && (a$2 = Gt.default.removeQueryParameterFromUrl(a$2, S$1.default.CMCD_QUERY_KEY));
				let r$3 = null;
				const i$3 = g$2.getPatchLocation(e$3), l$3 = f$2.select(i$3);
				let o$3 = null;
				if (l$3 && !t$3) a$2 = l$3.url, r$3 = l$3.serviceLocation, o$3 = l$3.queryParams;
				else {
					const t$4 = function(t$5) {
						const e$4 = g$2.getLocation(t$5), n$4 = h$2.getSynthesizedLocationElements(e$4);
						return e$4.concat(n$4);
					}(e$3), n$3 = f$2.select(t$4);
					n$3 && (a$2 = n$3.url, r$3 = n$3.serviceLocation, o$3 = n$3.queryParams);
				}
				n$2.isRelative(a$2) && (a$2 = n$2.resolve(a$2, e$3.url)), d$2.load(a$2, r$3, o$3);
			}
			function T$2(t$3) {
				if (t$3) {
					if (g$2.getIsPatch(t$3)) {
						let e$3 = t$3;
						t$3 = c$2.getValue();
						let n$4 = g$2.isPatchValid(t$3, e$3), a$3 = n$4;
						if (n$4) {
							let n$5 = g$2.getPublishTime(t$3);
							g$2.applyPatchToManifest(t$3, e$3);
							let r$3 = g$2.getPublishTime(t$3);
							a$3 = n$5.getTime() !== r$3.getTime();
						}
						if (!a$3) return r$2.debug("Patch provided is invalid, performing full manifest refresh"), void _$2(!0);
						t$3.loadedTime = /* @__PURE__ */ new Date();
					}
				} else (t$3 = c$2.getValue()).loadedTime = /* @__PURE__ */ new Date();
				if (c$2.getValue() && c$2.getValue().type === I.default.DYNAMIC && t$3.type === I.default.STATIC) return e$2.trigger(R.default.DYNAMIC_TO_STATIC), u$2 = !1, void (s$1 = !0);
				c$2.setValue(t$3);
				const n$3 = /* @__PURE__ */ new Date(), a$2 = (n$3.getTime() - t$3.loadedTime.getTime()) / 1e3;
				i$2 = g$2.getManifestUpdatePeriod(t$3, a$2), 1e3 * i$2 > 2147483647 && (i$2 = 2147483.647), e$2.trigger(R.default.MANIFEST_UPDATED, { manifest: t$3 }), r$2.info("Manifest has been refreshed at " + n$3 + "[" + n$3.getTime() / 1e3 + "] "), o$2 || E$2();
			}
			function v$2() {
				o$2 || (u$2 ? E$2(p$2.get().streaming.manifestUpdateRetryInterval) : _$2());
			}
			function w$2(t$3) {
				t$3.error ? t$3.error.code === V.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE && m$2.error(t$3.error) : T$2(t$3.manifest);
			}
			function k$1() {
				o$2 = !1, E$2();
			}
			function N$1() {
				o$2 = !p$2.get().streaming.scheduling.scheduleWhilePaused, o$2 && y$2();
			}
			function x$1() {
				u$2 = !1;
			}
			return a$1 = {
				initialize: function() {
					b$2(), e$2.on(R.default.STREAMS_COMPOSED, x$1, this), e$2.on(D.default.PLAYBACK_STARTED, k$1, this), e$2.on(D.default.PLAYBACK_PAUSED, N$1, this), e$2.on(R.default.INTERNAL_MANIFEST_LOADED, w$2, this);
				},
				setManifest: function(t$3) {
					T$2(t$3);
				},
				refreshManifest: _$2,
				getIsUpdating: function() {
					return u$2;
				},
				setConfig: function(t$3) {
					t$3 && (t$3.manifestModel && (c$2 = t$3.manifestModel), t$3.adapter && (g$2 = t$3.adapter), t$3.manifestLoader && (d$2 = t$3.manifestLoader), t$3.errHandler && (m$2 = t$3.errHandler), t$3.locationSelector && (f$2 = t$3.locationSelector), t$3.settings && (p$2 = t$3.settings), t$3.contentSteeringController && (h$2 = t$3.contentSteeringController));
				},
				reset: function() {
					e$2.off(D.default.PLAYBACK_STARTED, k$1, this), e$2.off(D.default.PLAYBACK_PAUSED, N$1, this), e$2.off(R.default.STREAMS_COMPOSED, x$1, this), e$2.off(R.default.INTERNAL_MANIFEST_LOADED, w$2, this), b$2();
				}
			}, r$2 = (0, C.default)(t$2).getInstance().getLogger(a$1), f$2 = ba(t$2).create(), a$1;
		}
		ya.__dashjs_factory_name = "ManifestUpdater";
		var Ea = N.default.getClassFactory(ya);
		function _a() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance(), n$2 = St(t$2).getInstance();
			let a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2;
			function E$2() {
				d$2 = [], c$2 = [], f$2 = null, g$2 = null, h$2 = null, m$2 = NaN, i$2 = !1, l$2 = !1, p$2 = o$2.get().streaming.utcSynchronization.timeBetweenSyncAttempts;
			}
			function _$2() {
				o$2.get().streaming.utcSynchronization.enabled && !i$2 && !l$2 && h$2 && h$2.value && h$2.schemeIdUri && !isNaN(m$2) && !isNaN(o$2.get().streaming.utcSynchronization.backgroundAttempts) && (g$2 && (Date.now() - g$2) / 1e3 < 30 || (d$2 = [], l$2 = !0, T$2(isNaN(o$2.get().streaming.utcSynchronization.backgroundAttempts) ? 2 : o$2.get().streaming.utcSynchronization.backgroundAttempts)));
			}
			function T$2(t$3) {
				try {
					if (t$3 <= 0) return void L$1();
					const e$3 = Date.now();
					s$1[h$2.schemeIdUri](h$2.value, (function(n$3) {
						const r$3 = w$2(e$3, Date.now(), n$3);
						d$2.push(r$3), T$2(t$3 - 1);
					}), (function() {
						L$1();
					}));
				} catch (t$4) {
					L$1();
				}
			}
			function v$2() {
				let t$3 = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null) || 0;
				if (!c$2 || 0 === c$2.length || t$3 >= c$2.length) return void S$2();
				let e$3 = c$2[t$3];
				if (e$3) if (s$1.hasOwnProperty(e$3.schemeIdUri)) {
					const n$3 = (/* @__PURE__ */ new Date()).getTime();
					s$1[e$3.schemeIdUri](e$3.value, (function(t$4) {
						const a$2 = (/* @__PURE__ */ new Date()).getTime(), r$3 = w$2(n$3, a$2, t$4);
						h$2 = e$3, S$2(r$3);
					}), (function() {
						v$2(t$3 + 1);
					}));
				} else v$2(t$3 + 1);
				else S$2();
			}
			function w$2(t$3, e$3, n$3) {
				return n$3 - (e$3 - (e$3 - t$3) / 2);
			}
			function S$2() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : NaN, e$3 = isNaN(t$3);
				e$3 && o$2.get().streaming.utcSynchronization.useManifestDateHeaderTimeSource ? function() {
					let t$4 = u$2.getLatestMPDRequestHeaderValueByID("Date"), e$4 = null !== t$4 ? new Date(t$4).getTime() : NaN;
					isNaN(e$4) ? P$1(!0) : P$1(!1, e$4 - Date.now());
				}() : P$1(e$3, t$3);
			}
			function I$1(t$3) {
				let e$3 = Date.parse(t$3);
				return isNaN(e$3) && (e$3 = function(t$4) {
					let e$4, n$3, a$2 = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+\-])([0-9]{2})([0-9]{2}))?/.exec(t$4);
					return e$4 = Date.UTC(parseInt(a$2[1], 10), parseInt(a$2[2], 10) - 1, parseInt(a$2[3], 10), parseInt(a$2[4], 10), parseInt(a$2[5], 10), a$2[6] && (parseInt(a$2[6], 10) || 0), a$2[7] && 1e3 * parseFloat(a$2[7]) || 0), a$2[9] && a$2[10] && (n$3 = 60 * parseInt(a$2[9], 10) + parseInt(a$2[10], 10), e$4 += ("+" === a$2[8] ? -1 : 1) * n$3 * 60 * 1e3), new Date(e$4).getTime();
				}(t$3)), e$3;
			}
			function k$1(t$3) {
				return Date.parse(t$3);
			}
			function N$1(t$3) {
				return Date.parse(t$3);
			}
			function D$1(t$3, e$3, n$3) {
				n$3();
			}
			function x$1(t$3, e$3, n$3) {
				let a$2 = I$1(t$3);
				isNaN(a$2) ? n$3() : e$3(a$2);
			}
			function M$1(t$3, e$3, a$2, r$3, i$3) {
				let l$3, o$3, s$2 = !1, u$3 = new XMLHttpRequest(), d$3 = i$3 ? z.HTTPRequest.HEAD : z.HTTPRequest.GET, c$3 = e$3.match(/\S+/g);
				if (e$3 = c$3.shift(), l$3 = function() {
					s$2 || (s$2 = !0, c$3.length ? M$1(t$3, c$3.join(" "), a$2, r$3, i$3) : r$3());
				}, o$3 = function() {
					let e$4, n$3;
					200 === u$3.status && (e$4 = i$3 ? u$3.getResponseHeader("Date") : u$3.response, n$3 = t$3(e$4), isNaN(n$3) || (a$2(n$3), s$2 = !0));
				}, n$2.isRelative(e$3)) {
					const t$4 = y$2.resolve();
					t$4 && (e$3 = n$2.resolve(e$3, t$4.url));
				}
				u$3.open(d$3, e$3), u$3.timeout = 5e3, u$3.onload = o$3, u$3.onloadend = l$3, u$3.send();
			}
			function O$1(t$3, e$3, n$3) {
				M$1(N$1, t$3, e$3, n$3, !0);
			}
			function P$1(t$3, n$3) {
				if (isNaN(m$2) || isNaN(n$3) || t$3 || function(t$4) {
					try {
						const e$3 = F$1(t$4), n$4 = isNaN(p$2) ? 30 : p$2, a$2 = isNaN(o$2.get().streaming.utcSynchronization.timeBetweenSyncAttemptsAdjustmentFactor) ? 2 : o$2.get().streaming.utcSynchronization.timeBetweenSyncAttemptsAdjustmentFactor, i$3 = isNaN(o$2.get().streaming.utcSynchronization.maximumTimeBetweenSyncAttempts) ? 600 : o$2.get().streaming.utcSynchronization.maximumTimeBetweenSyncAttempts, l$3 = isNaN(o$2.get().streaming.utcSynchronization.minimumTimeBetweenSyncAttempts) ? 2 : o$2.get().streaming.utcSynchronization.minimumTimeBetweenSyncAttempts;
						let s$2;
						e$3 ? (s$2 = Math.min(n$4 * a$2, i$3), r$2.debug(`Increasing timeBetweenSyncAttempts to ${s$2}`)) : (s$2 = Math.max(n$4 / a$2, l$3), r$2.debug(`Decreasing timeBetweenSyncAttempts to ${s$2}`)), p$2 = s$2;
					} catch (t$5) {}
				}(n$3), !t$3 && !isNaN(n$3)) {
					f$2 = Date.now(), i$2 = !1;
					const t$4 = isNaN(m$2);
					m$2 = n$3, t$4 && _$2(), r$2.debug(`Completed UTC sync. Setting client - server offset to ${n$3}`);
				}
				t$3 && (h$2 = null, i$2 = !1, b$2.error(new G.default(V.TIME_SYNC_FAILED_ERROR_CODE, V.TIME_SYNC_FAILED_ERROR_MESSAGE))), e$2.trigger(R.default.UPDATE_TIME_SYNC_OFFSET, { offset: n$3 }), e$2.trigger(R.default.TIME_SYNCHRONIZATION_COMPLETED);
			}
			function L$1() {
				if (!d$2 || 0 === d$2.length) return;
				const t$3 = d$2.reduce(((t$4, e$3) => t$4 + e$3), 0) / d$2.length;
				F$1(t$3) ? r$2.debug("Completed background UTC sync. Offset is within allowed threshold and is not adjusted.") : (r$2.debug(`Completed background UTC sync. Setting client - server offset to ${t$3}`), m$2 = t$3, e$2.trigger(R.default.UPDATE_TIME_SYNC_OFFSET, { offset: m$2 })), l$2 = !1, g$2 = Date.now();
			}
			function F$1(t$3) {
				try {
					if (isNaN(m$2)) return !0;
					const e$3 = o$2.get().streaming.utcSynchronization.maximumAllowedDrift && !isNaN(o$2.get().streaming.utcSynchronization.maximumAllowedDrift) ? o$2.get().streaming.utcSynchronization.maximumAllowedDrift : 100;
					return t$3 >= m$2 - e$3 && t$3 <= m$2 + e$3;
				} catch (t$4) {
					return !0;
				}
			}
			return a$1 = {
				initialize: function() {
					E$2(), s$1 = {
						"urn:mpeg:dash:utc:http-head:2014": O$1,
						"urn:mpeg:dash:utc:http-xsdate:2014": M$1.bind(null, I$1),
						"urn:mpeg:dash:utc:http-iso:2014": M$1.bind(null, k$1),
						"urn:mpeg:dash:utc:direct:2014": x$1,
						"urn:mpeg:dash:utc:http-head:2012": O$1,
						"urn:mpeg:dash:utc:http-xsdate:2012": M$1.bind(null, I$1),
						"urn:mpeg:dash:utc:http-iso:2012": M$1.bind(null, k$1),
						"urn:mpeg:dash:utc:direct:2012": x$1,
						"urn:mpeg:dash:utc:http-ntp:2014": D$1,
						"urn:mpeg:dash:utc:ntp:2014": D$1,
						"urn:mpeg:dash:utc:sntp:2014": D$1
					};
				},
				attemptSync: function(t$3, n$3) {
					c$2 = t$3, i$2 || (function(t$4) {
						try {
							if (!t$4 || !o$2.get().streaming.utcSynchronization.enabled) return !1;
							const e$3 = isNaN(p$2) ? 30 : p$2;
							return !(f$2 && e$3 && !isNaN(e$3)) || (Date.now() - f$2) / 1e3 >= e$3;
						} catch (t$5) {
							return !0;
						}
					}(n$3) ? (i$2 = !0, v$2()) : e$2.trigger(R.default.TIME_SYNCHRONIZATION_COMPLETED));
				},
				setConfig: function(t$3) {
					t$3 && (t$3.dashMetrics && (u$2 = t$3.dashMetrics), t$3.baseURLController && (y$2 = t$3.baseURLController), t$3.errHandler && (b$2 = t$3.errHandler), t$3.settings && (o$2 = t$3.settings));
				},
				reset: function() {
					E$2(), e$2.off(R.default.ATTEMPT_BACKGROUND_SYNC, _$2, a$1);
				}
			}, r$2 = (0, C.default)(t$2).getInstance().getLogger(a$1), e$2.on(R.default.ATTEMPT_BACKGROUND_SYNC, _$2, a$1), a$1;
		}
		_a.__dashjs_factory_name = "TimeSyncController";
		const Ta = N.default.getSingletonFactory(_a);
		Ta.HTTP_TIMEOUT_MS = 5e3, N.default.updateSingletonFactory(_a.__dashjs_factory_name, Ta);
		var va = Ta;
		function wa() {
			let t$2, e$2, n$2, a$1, r$2;
			const i$2 = this.context, l$2 = (0, A.default)(i$2).getInstance();
			return t$2 = {
				attachMediaSource: function(t$3) {
					let n$3 = window.URL.createObjectURL(e$2);
					return t$3.setSource(n$3), "managedMediaSource" === a$1 && (t$3.setDisableRemotePlayback(!0), e$2.addEventListener("startstreaming", (() => {
						l$2.trigger(D.default.MANAGED_MEDIA_SOURCE_START_STREAMING);
					})), e$2.addEventListener("endstreaming", (() => {
						l$2.trigger(D.default.MANAGED_MEDIA_SOURCE_END_STREAMING);
					}))), n$3;
				},
				createMediaSource: function() {
					let t$3 = "WebKitMediaSource" in window, n$3 = "MediaSource" in window;
					return "ManagedMediaSource" in window ? (e$2 = new ManagedMediaSource(), a$1 = "managedMediaSource", r$2.info("Created ManagedMediaSource")) : n$3 ? (e$2 = new MediaSource(), a$1 = "mediaSource", r$2.info("Created MediaSource")) : t$3 && (e$2 = new WebKitMediaSource(), r$2.info("Created WebkitMediaSource")), e$2;
				},
				detachMediaSource: function(t$3) {
					t$3.setSource(null);
				},
				setConfig: function(t$3) {
					t$3 && t$3.settings && (n$2 = t$3.settings);
				},
				setDuration: function t$3(a$2) {
					e$2 && "open" === e$2.readyState && (null === a$2 && isNaN(a$2) || e$2.duration !== a$2 && (a$2 !== Infinity || n$2.get().streaming.buffer.mediaSourceDurationInfinity || (a$2 = Math.pow(2, 32)), function(t$4) {
						let e$3 = t$4.sourceBuffers;
						for (let t$5 = 0; t$5 < e$3.length; t$5++) if (e$3[t$5].updating) return !0;
						return !1;
					}(e$2) ? setTimeout(t$3.bind(null, a$2), 50) : (r$2.info("Set MediaSource duration:" + a$2), e$2.duration = a$2)));
				},
				setSeekable: function(t$3, n$3) {
					e$2 && "function" == typeof e$2.setLiveSeekableRange && "function" == typeof e$2.clearLiveSeekableRange && "open" === e$2.readyState && t$3 >= 0 && t$3 < n$3 && (e$2.clearLiveSeekableRange(), e$2.setLiveSeekableRange(t$3, n$3));
				},
				signalEndOfStream: function(t$3) {
					if (!t$3 || "open" !== t$3.readyState) return;
					let e$3 = t$3.sourceBuffers;
					for (let t$4 = 0; t$4 < e$3.length; t$4++) {
						if (e$3[t$4].updating) return;
						if (0 === e$3[t$4].buffered.length) return;
					}
					r$2.info("call to mediaSource endOfStream"), t$3.endOfStream();
				}
			}, r$2 = (0, C.default)(i$2).getInstance().getLogger(t$2), t$2;
		}
		wa.__dashjs_factory_name = "MediaSourceController";
		var Sa = N.default.getSingletonFactory(wa);
		function Ia() {
			const t$2 = "urn:mpeg:dash:event:2012", e$2 = 1, n$2 = "urn:mpeg:dash:event:callback:2015", a$1 = 1, r$2 = 300, i$2 = "discarded", l$2 = "updated", o$2 = "added", s$1 = this.context, u$2 = (0, A.default)(s$1).getInstance();
			let d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2;
			function T$2() {
				if (!p$2 || !b$2) throw new Error("setConfig function has to be called previously");
			}
			function v$2() {
				_$2 = !1, f$2 = {}, g$2 = {}, m$2 = null, E$2 = !1, h$2 = Date.now() / 1e3;
			}
			function w$2() {
				try {
					if (!E$2) {
						E$2 = !0;
						const t$3 = b$2.getTime();
						let e$3 = t$3 - h$2;
						e$3 = h$2 > 0 ? Math.max(0, e$3) : 0, S$2(g$2, e$3, t$3), S$2(f$2, e$3, t$3), I$1(g$2), I$1(f$2), h$2 = t$3, E$2 = !1;
					}
				} catch (t$3) {
					E$2 = !1, c$2.error(t$3);
				}
			}
			function S$2(t$3, e$3, n$3) {
				try {
					const a$2 = function(a$3) {
						if (void 0 !== a$3) {
							const r$3 = isNaN(a$3.duration) ? 0 : a$3.duration;
							a$3.calculatedPresentationTime <= n$3 && a$3.calculatedPresentationTime + e$3 + r$3 >= n$3 ? z$1(a$3, D.default.EVENT_MODE_ON_START) : (M$1(n$3, r$3 + e$3, a$3.calculatedPresentationTime) || function(t$4) {
								try {
									const e$4 = t$4.eventStream.period.start + t$4.eventStream.period.duration;
									return t$4.calculatedPresentationTime > e$4;
								} catch (t$5) {
									return c$2.error(t$5), !1;
								}
							}(a$3)) && (c$2.debug(`Removing event ${a$3.id} from period ${a$3.eventStream.period.id} as it is expired or invalid`), function(t$4, e$4) {
								try {
									const n$4 = e$4.eventStream.schemeIdUri, a$4 = e$4.eventStream.period.id, r$4 = e$4.eventStream.value, i$3 = e$4.id;
									t$4[a$4][n$4] = t$4[a$4][n$4].filter(((t$5) => r$4 && t$5.eventStream.value && t$5.eventStream.value !== r$4 || t$5.id !== i$3)), 0 === t$4[a$4][n$4].length && delete t$4[a$4][n$4];
								} catch (t$5) {
									c$2.error(t$5);
								}
							}(t$3, a$3));
						}
					};
					x$1(t$3, a$2);
				} catch (t$4) {
					c$2.error(t$4);
				}
			}
			function I$1(t$3) {
				try {
					for (const e$3 in t$3) t$3.hasOwnProperty(e$3) && 0 === Object.keys(t$3[e$3]).length && delete t$3[e$3];
				} catch (t$4) {
					c$2.error(t$4);
				}
			}
			function k$1(t$3, e$3) {
				let n$3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
				const a$2 = t$3.eventStream.schemeIdUri, r$3 = t$3.eventStream.value, s$2 = t$3.id;
				let u$3 = i$2;
				e$3[a$2] || (e$3[a$2] = []);
				const d$3 = e$3[a$2].findIndex(((t$4) => (!r$3 || t$4.eventStream.value && t$4.eventStream.value === r$3) && t$4.id === s$2));
				if (-1 === d$3) e$3[a$2].push(t$3), t$3.triggeredReceivedEvent = !1, t$3.triggeredStartEvent = !1, u$3 = o$2;
				else if (n$3) {
					const n$4 = e$3[a$2][d$3];
					t$3.triggeredReceivedEvent = n$4.triggeredReceivedEvent, t$3.triggeredStartEvent = n$4.triggeredStartEvent, e$3[a$2][d$3] = t$3, u$3 = l$2;
				}
				return u$3;
			}
			function R$1(t$3) {
				try {
					if (t$3.eventStream.value == e$2) {
						const e$3 = t$3.calculatedPresentationTime;
						let n$3;
						n$3 = 4294967295 == t$3.calculatedPresentationTime ? NaN : t$3.calculatedPresentationTime + t$3.duration, u$2.trigger(D.default.MANIFEST_VALIDITY_CHANGED, {
							id: t$3.id,
							validUntil: e$3,
							newDuration: n$3,
							newManifestValidAfter: NaN
						}, { mode: D.default.EVENT_MODE_ON_START });
					}
				} catch (t$4) {
					c$2.error(t$4);
				}
			}
			function N$1(t$3) {
				try {
					const e$3 = b$2.getTime();
					x$1(t$3, (function(t$4) {
						const n$3 = t$4.eventStream && t$4.eventStream.period && !isNaN(t$4.eventStream.period.duration) ? t$4.eventStream.period.duration : NaN, a$2 = t$4.eventStream && t$4.eventStream.period && !isNaN(t$4.eventStream.period.start) ? t$4.eventStream.period.start : NaN;
						if (isNaN(n$3) || isNaN(a$2)) return;
						const i$3 = t$4.calculatedPresentationTime;
						Math.abs(i$3 - e$3) < r$2 && z$1(t$4, D.default.EVENT_MODE_ON_START);
					}));
				} catch (t$4) {
					c$2.error(t$4);
				}
			}
			function x$1(t$3, e$3) {
				try {
					if (t$3) {
						const n$3 = Object.keys(t$3);
						for (let a$2 = 0; a$2 < n$3.length; a$2++) {
							const r$3 = t$3[n$3[a$2]], i$3 = Object.keys(r$3);
							for (let t$4 = 0; t$4 < i$3.length; t$4++) r$3[i$3[t$4]].forEach(((t$5) => {
								void 0 !== t$5 && e$3(t$5);
							}));
						}
					}
				} catch (t$4) {
					c$2.error(t$4);
				}
			}
			function M$1(t$3, e$3, n$3) {
				try {
					return t$3 - e$3 > n$3;
				} catch (t$4) {
					return c$2.error(t$4), !1;
				}
			}
			function z$1(r$3, i$3) {
				try {
					const l$3 = b$2.getTime(), o$3 = r$3.id;
					if (i$3 === D.default.EVENT_MODE_ON_RECEIVE && !r$3.triggeredReceivedEvent) return c$2.debug(`Received event ${o$3}`), r$3.triggeredReceivedEvent = !0, void u$2.trigger(r$3.eventStream.schemeIdUri, { event: r$3 }, { mode: i$3 });
					r$3.triggeredStartEvent || (r$3.eventStream.schemeIdUri === t$2 && r$3.eventStream.value == e$2 ? 0 === r$3.duration && 0 === r$3.presentationTimeDelta || (c$2.debug(`Starting manifest refresh event ${o$3} at ${l$3}`), function() {
						try {
							T$2(), p$2.refreshManifest();
						} catch (t$3) {
							c$2.error(t$3);
						}
					}()) : r$3.eventStream.schemeIdUri === n$2 && r$3.eventStream.value == a$1 ? (c$2.debug(`Starting callback event ${o$3} at ${l$3}`), function(t$3) {
						try {
							let e$3 = Yt(s$1).create({});
							const n$3 = new zn({
								method: "get",
								url: t$3,
								responseType: "arraybuffer",
								customData: {}
							}), a$2 = new On({ request: n$3 });
							e$3.load(n$3, a$2);
						} catch (t$4) {
							c$2.error(t$4);
						}
					}(r$3.messageData instanceof Uint8Array ? Gt.default.uint8ArrayToString(r$3.messageData) : r$3.messageData)) : (c$2.debug(`Starting event ${o$3} from period ${r$3.eventStream.period.id} at ${l$3}`), u$2.trigger(r$3.eventStream.schemeIdUri, { event: r$3 }, { mode: i$3 }), y$2.get().streaming.events.deleteEventMessageDataTimeout > -1 && setTimeout((() => {
						delete r$3.messageData, delete r$3.parsedMessageData;
					}), y$2.get().streaming.events.deleteEventMessageDataTimeout)), r$3.triggeredStartEvent = !0);
				} catch (t$3) {
					c$2.error(t$3);
				}
			}
			return d$2 = {
				addInlineEvents: function(t$3, e$3) {
					try {
						if (T$2(), f$2[e$3] || (f$2[e$3] = {}), t$3) for (let n$3 = 0; n$3 < t$3.length; n$3++) {
							let a$2 = t$3[n$3];
							if (!M$1(b$2.getTime(), isNaN(a$2.duration) ? 0 : a$2.duration, a$2.calculatedPresentationTime)) {
								let t$4 = k$1(a$2, f$2[e$3], !0);
								t$4 === o$2 ? (c$2.debug(`Added inline event with id ${a$2.id} from period ${e$3}`), z$1(a$2, D.default.EVENT_MODE_ON_RECEIVE)) : t$4 === l$2 && c$2.debug(`Updated inline event with id ${a$2.id} from period ${e$3}`);
							}
						}
					} catch (t$4) {
						throw t$4;
					}
				},
				addInbandEvents: function(e$3, n$3) {
					try {
						T$2(), g$2[n$3] || (g$2[n$3] = {});
						for (let a$2 = 0; a$2 < e$3.length; a$2++) {
							let r$3 = e$3[a$2];
							M$1(b$2.getTime(), isNaN(r$3.duration) ? 0 : r$3.duration, r$3.calculatedPresentationTime) || (k$1(r$3, g$2[n$3], !1) === o$2 ? (r$3.eventStream.schemeIdUri === t$2 && R$1(r$3), c$2.debug(`Added inband event with id ${r$3.id} from period ${n$3}`), z$1(r$3, D.default.EVENT_MODE_ON_RECEIVE)) : c$2.debug(`Inband event with scheme_id_uri ${r$3.eventStream.schemeIdUri}, value ${r$3.eventStream.value}, period id ${n$3} and event id ${r$3.id} was ignored because it has been added before.`));
						}
						w$2();
					} catch (t$3) {
						throw t$3;
					}
				},
				getInbandEvents: function() {
					return g$2;
				},
				getInlineEvents: function() {
					return f$2;
				},
				start: function() {
					try {
						T$2(), c$2.debug("Start Event Controller");
						const t$3 = y$2.get().streaming.events.eventControllerRefreshDelay;
						_$2 || isNaN(t$3) || (_$2 = !0, m$2 = setInterval(w$2, t$3));
					} catch (t$3) {
						throw t$3;
					}
				},
				setConfig: function(t$3) {
					try {
						if (!t$3) return;
						t$3.manifestUpdater && (p$2 = t$3.manifestUpdater), t$3.playbackController && (b$2 = t$3.playbackController), t$3.settings && (y$2 = t$3.settings);
					} catch (t$4) {
						throw t$4;
					}
				},
				reset: function() {
					(function() {
						try {
							null !== m$2 && _$2 && (clearInterval(m$2), m$2 = null, _$2 = !1, function() {
								try {
									N$1(g$2), N$1(f$2);
								} catch (t$3) {
									c$2.error(t$3);
								}
							}());
						} catch (t$3) {
							throw t$3;
						}
					})(), v$2();
				}
			}, c$2 = (0, C.default)(s$1).getInstance().getLogger(d$2), v$2(), d$2;
		}
		Ia.__dashjs_factory_name = "EventController";
		var ka = N.default.getSingletonFactory(Ia), Aa = {
			LEVELS: {
				SUGGESTION: "Suggestion",
				WARNING: "Warning",
				ERROR: "Error"
			},
			EVENTS: {
				NO_UTC_TIMING_ELEMENT: {
					key: "NO_UTC_TIMING_ELEMENT",
					message: "No UTCTiming element is present in the manifest. You may experience playback failures. For a detailed validation use https://conformance.dashif.org/"
				},
				NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE: {
					key: "NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE",
					message: "SMPTE 2052-1:2013 defines the attribute name as \"imageType\" and does not define \"imagetype\""
				},
				INVALID_DVR_WINDOW: {
					key: "INVALID_DVR_WINDOW",
					message: "No valid segment found when applying a specification compliant DVR window calculation. Using SegmentTimeline entries as a fallback."
				}
			}
		}, Ra = n$1(445), Na = n$1(1923);
		function Ca() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, w$2, I$1, N$1, x$1, M$1, z$1, O$1, P$1, L$1, F$1, U$1, j$1, q$1, B$1, H$1, Y$1, K$1, W$1, $$1, X$1, Q$1, Z$1, tt$1, et$1, nt$1, at$1, rt$1, it$1;
			function lt$1() {
				if (!(o$2 && o$2.hasOwnProperty("load") && w$2 && w$2.hasOwnProperty("initialize") && w$2.hasOwnProperty("reset") && w$2.hasOwnProperty("getClientTimeOffset") && s$1 && v$2 && d$2 && B$1)) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
			}
			function ot$1() {
				(function() {
					try {
						const t$3 = u$2.getStreamsInfo();
						if (!N$1 && 0 === t$3.length) throw new Error("There are no periods in the MPD");
						N$1 && t$3.length > 0 && d$2.updateManifestUpdateInfo({
							currentTime: B$1.getTime(),
							buffered: q$1.getBufferRange(),
							presentationStartTime: t$3[0].start,
							clientTimeOffset: w$2.getClientTimeOffset()
						}), I$1.length > 0 && function(t$4) {
							0 !== t$4.length ? I$1 = I$1.filter(((e$3) => {
								const n$4 = t$4.filter(((t$5) => t$5.id === e$3.getId())).length > 0 || e$3.getId() === N$1.getId();
								return n$4 || (a$1.debug(`Removing stream ${e$3.getId()}`), e$3.reset(!0), e$3 = null), n$4;
							})) : a$1.warn("No periods included in the current manifest. Skipping the filtering of outdated stream objects.");
						}(t$3);
						const n$3 = [];
						for (let e$3 = 0, a$2 = t$3.length; e$3 < a$2; e$3++) {
							const a$3 = t$3[e$3];
							n$3.push(ut$1(a$3)), d$2.addManifestUpdateStreamInfo(a$3);
						}
						Promise.all(n$3).then((() => new Promise(((e$3, n$4) => {
							N$1 ? e$3() : dt$1(t$3, e$3, n$4);
						})))).then((() => {
							e$2.trigger(R.default.STREAMS_COMPOSED), Mt$1();
						})).catch(((t$4) => {
							throw t$4;
						}));
					} catch (t$3) {
						v$2.error(new G.default(V.MANIFEST_ERROR_ID_NOSTREAMS_CODE, t$3.message + " nostreamscomposed", s$1.getValue())), U$1 = !0, ee$1();
					}
				})();
			}
			function st$1() {
				nt$1 = !0;
			}
			function ut$1(e$3) {
				let n$3 = Zt$1(e$3.id);
				return n$3 ? n$3.updateData(e$3) : (n$3 = ca(t$2).create({
					manifestModel: s$1,
					mediaPlayerModel: Y$1,
					dashMetrics: d$2,
					manifestUpdater: l$2,
					adapter: u$2,
					timelineConverter: w$2,
					capabilities: r$2,
					capabilitiesFilter: i$2,
					errHandler: v$2,
					baseURLController: m$2,
					segmentBaseController: h$2,
					textController: M$1,
					abrController: b$2,
					playbackController: B$1,
					throughputController: y$2,
					eventController: _$2,
					mediaController: E$2,
					protectionController: x$1,
					videoModel: q$1,
					streamInfo: e$3,
					settings: et$1
				}), I$1.push(n$3), n$3.initialize(), Promise.resolve());
			}
			function dt$1(t$3, n$3, r$3) {
				try {
					wt$1();
					const i$3 = d$2.getCurrentDVRInfo().range;
					if (i$3.end < i$3.start) {
						at$1 && clearTimeout(at$1);
						const l$4 = Math.min(1e3 * (-1 * (i$3.end - i$3.start) + 2), 2147483647);
						a$1.debug(`Waiting for ${l$4} ms before playback can start`), e$2.trigger(R.default.AST_IN_FUTURE, { delay: l$4 }), at$1 = setTimeout((() => {
							dt$1(t$3, n$3, r$3);
						}), l$4);
						return;
					}
					et$1.get().streaming.applyProducerReferenceTime && H$1.calculateProducerReferenceTimeOffsets(t$3);
					const l$3 = t$3[0].manifestInfo;
					if (et$1.get().streaming.applyServiceDescription && H$1.applyServiceDescription(l$3), u$2.getIsDynamic()) {
						const t$4 = qt$1(0, l$3);
						B$1.computeAndSetLiveDelay(t$4, l$3);
					}
					(et$1.get().streaming.applyContentSteering && g$2.shouldQueryBeforeStart() ? g$2.loadSteeringData() : Promise.resolve()).then((() => {
						const t$4 = s$1.getValue();
						t$4 && m$2.update(t$4), ct$1(), n$3();
					})).catch(((t$4) => {
						a$1.error(t$4), ct$1(), n$3();
					}));
				} catch (t$4) {
					r$3(t$4);
				}
			}
			function ct$1() {
				const t$3 = function() {
					let t$4;
					if (u$2.getIsDynamic()) {
						const e$3 = d$2.getCurrentDVRInfo();
						t$4 = (e$3 && e$3.range ? e$3.range.end : 0) - B$1.getOriginalLiveDelay();
						const n$4 = e$3 ? e$3.range : null;
						if (n$4) {
							if (isNaN(rt$1) && -1 === rt$1.toString().indexOf("posix:")) {
								const e$5 = Ft$1(!0);
								isNaN(e$5) || (a$1.info(`Start time from URI parameters: ${e$5}`), t$4 = Math.min(t$4, e$5));
							} else {
								a$1.info(`Start time provided by the app: ${rt$1}`);
								const e$5 = Ut$1(!0, rt$1);
								isNaN(e$5) || (t$4 = Math.min(t$4, e$5));
							}
							const e$4 = et$1.get().streaming.timeShiftBuffer.calcFromSegmentTimeline ? .1 : 0;
							t$4 = Math.max(t$4, n$4.start + e$4);
						}
					} else if (t$4 = ae$1()[0].getStreamInfo().start, isNaN(rt$1)) {
						const e$3 = Ft$1(!1);
						isNaN(e$3) || (a$1.info(`Start time from URI parameters: ${e$3}`), t$4 = Math.max(t$4, e$3));
					} else {
						a$1.info(`Start time provided by the app: ${rt$1}`);
						const e$3 = Ut$1(!1, rt$1);
						isNaN(e$3) || (t$4 = Math.max(t$4, e$3));
					}
					return t$4;
				}();
				let n$3 = vt$1(t$3);
				const r$3 = null !== n$3 ? n$3 : I$1[0];
				e$2.trigger(R.default.INITIAL_STREAM_SWITCH, { startTime: t$3 }), ft$1(r$3, null, t$3), Q$1 || (Q$1 = setInterval((function() {
					!L$1 && B$1.getTimeToStreamEnd() <= 0 && !B$1.isSeeking() && e$2.trigger(R.default.PLAYBACK_ENDED, { isLast: Qt$1().isLast });
				}), 200));
			}
			function ft$1(t$3, n$3, r$3) {
				try {
					if (L$1 || !t$3 || n$3 === t$3 && t$3.getIsActive()) return;
					L$1 = !0, e$2.trigger(R.default.PERIOD_SWITCH_STARTED, {
						fromStreamInfo: n$3 ? n$3.getStreamInfo() : null,
						toStreamInfo: t$3.getStreamInfo()
					});
					let i$3 = !1, l$3 = [];
					N$1 = t$3, n$3 && (i$3 = _t$1(t$3, n$3), l$3 = ht$1(n$3), n$3.deactivate(i$3)), r$3 = isNaN(r$3) ? !i$3 && n$3 ? t$3.getStreamInfo().start : NaN : r$3, a$1.info(`Switch to stream ${t$3.getId()}. Seektime is ${r$3}, current playback time is ${B$1.getTime()}. Seamless period switch is set to ${i$3}`), tt$1 = tt$1.filter(((t$4) => t$4.getId() !== N$1.getId())), B$1.initialize(Qt$1(), !!n$3), q$1.getElement() ? gt$1({
						seekTime: r$3,
						keepBuffers: i$3,
						streamActivated: !1,
						representationsFromPreviousPeriod: l$3
					}) : mt$1({
						seekTime: r$3,
						keepBuffers: i$3
					});
				} catch (t$4) {
					L$1 = !1;
				}
			}
			function gt$1(t$3) {
				let e$3;
				function n$3() {
					if (!j$1 || "open" !== j$1.readyState) return;
					a$1.debug("MediaSource is open!"), window.URL.revokeObjectURL(e$3), j$1.removeEventListener("sourceopen", n$3), j$1.removeEventListener("webkitsourceopen", n$3), Lt$1();
					const r$4 = d$2.getCurrentDVRInfo();
					c$2.setSeekable(r$4.range.start, r$4.range.end), t$3.streamActivated ? (isNaN(t$3.seekTime) || B$1.seek(t$3.seekTime, !0, !0), N$1.setMediaSource(j$1).then((() => {
						N$1.initializeForTextWithMediaSource(j$1);
					}))) : mt$1(t$3);
				}
				function r$3() {
					j$1.addEventListener("sourceopen", n$3, !1), j$1.addEventListener("webkitsourceopen", n$3, !1), e$3 = c$2.attachMediaSource(q$1), a$1.debug("MediaSource attached to element.  Waiting on open...");
				}
				j$1 ? t$3.keepBuffers ? mt$1(t$3) : (c$2.detachMediaSource(q$1), r$3()) : (j$1 = c$2.createMediaSource(), r$3());
			}
			function mt$1(t$3) {
				const n$3 = t$3.representationsFromPreviousPeriod || [];
				N$1.activate(j$1, t$3.keepBuffers ? Z$1 : void 0, n$3).then(((n$4) => {
					n$4 && (Z$1 = n$4), isNaN(t$3.seekTime) || (e$2.trigger(R.default.SEEK_TARGET, { time: t$3.seekTime }, { streamId: N$1.getId() }), B$1.seek(t$3.seekTime, !1, !0), N$1.startScheduleControllers()), L$1 = !1, e$2.trigger(R.default.PERIOD_SWITCH_COMPLETED, { toStreamInfo: Qt$1() });
				}));
			}
			function ht$1(t$3) {
				return (t$3 ? t$3.getStreamProcessors() : []).map(((t$4) => t$4.getRepresentation()));
			}
			function pt$1(t$3) {
				const e$3 = vt$1(t$3.seekTime);
				e$3 && e$3 !== N$1 ? e$3 && e$3 !== N$1 && (bt$1(), function(t$4, e$4) {
					const n$3 = t$4 && !isNaN(t$4.seekTime) ? t$4.seekTime : NaN, a$2 = N$1.getStreamProcessors().map(((e$5) => e$5.prepareOuterPeriodPlaybackSeeking(t$4)));
					Promise.all(a$2).then((() => {
						ft$1(e$4, N$1, n$3);
					})).catch(((t$5) => {
						v$2.error(t$5);
					}));
				}(t$3, e$3)) : (bt$1(), function(t$4) {
					N$1.getStreamProcessors().forEach(((e$4) => e$4.prepareInnerPeriodPlaybackSeeking(t$4))), Vt$1(kt.USER_REQUEST_STOP_REASON);
				}(t$3)), Kt$1(It.SEEK_START_REASON);
			}
			function bt$1() {
				yt$1();
			}
			function yt$1() {
				tt$1 && tt$1.length > 0 && (tt$1.forEach(((t$3) => {
					t$3.deactivate(!0);
				})), tt$1 = []);
			}
			function Et$1(t$3) {
				if (t$3.newMediaInfo.streamInfo.id === N$1.getId()) {
					if (yt$1(), et$1.get().streaming.buffer.resetSourceBuffersForTrackSwitch && t$3.oldMediaInfo && t$3.oldMediaInfo.codec !== t$3.newMediaInfo.codec) {
						const t$4 = B$1.getTime();
						N$1.deactivate(!1), gt$1({
							seekTime: t$4,
							keepBuffers: !1,
							streamActivated: !1
						});
						return;
					}
					N$1.prepareTrackChange(t$3);
				}
			}
			function _t$1(t$3, e$3) {
				try {
					return et$1.get().streaming.buffer.reuseExistingSourceBuffers && (r$2.isProtectionCompatible(e$3.getStreamInfo(), t$3.getStreamInfo()) || nt$1) && r$2.supportsChangeType() && et$1.get().streaming.buffer.useChangeType;
				} catch (t$4) {
					return !1;
				}
			}
			function Tt$1(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
				if (j$1 && !t$3.getPreloaded() && _t$1(t$3, e$3)) {
					const n$3 = ht$1(e$3);
					t$3.startPreloading(j$1, Z$1, n$3).then((() => {
						tt$1.push(t$3);
					}));
				}
			}
			function vt$1(t$3) {
				if (isNaN(t$3)) return null;
				const e$3 = I$1.length;
				for (let n$3 = 0; n$3 < e$3; n$3++) {
					const e$4 = I$1[n$3];
					if (t$3 < parseFloat((e$4.getStartTime() + e$4.getDuration()).toFixed(5))) return e$4;
				}
				return null;
			}
			function wt$1() {
				try {
					const t$3 = u$2.getIsDynamic(), e$3 = u$2.getStreamsInfo()[0].manifestInfo, n$3 = B$1.getTime(), a$2 = w$2.calcTimeShiftBufferWindow(I$1, t$3), r$3 = Ot$1();
					if (void 0 === a$2.start || void 0 === a$2.end) return;
					r$3 && 0 !== r$3.length ? r$3.forEach(((t$4) => {
						d$2.addDVRInfo(t$4.getType(), n$3, e$3, a$2);
					})) : d$2.addDVRInfo(S$1.default.VIDEO, n$3, e$3, a$2);
				} catch (t$3) {}
			}
			function St$1(t$3) {
				if ($$1 && P$1) {
					const t$4 = Y$1.getInitialBufferLevel(), e$3 = [S$1.default.TEXT];
					(isNaN(t$4) || t$4 <= B$1.getBufferLevel(e$3) || u$2.getIsDynamic() && t$4 > B$1.getLiveDelay()) && ($$1 = !1, Kt$1(It.INITIAL_PLAYOUT_START_REASON), B$1.play());
				}
				t$3 && t$3.mediaType && d$2.addBufferLevel(t$3.mediaType, /* @__PURE__ */ new Date(), 1e3 * t$3.bufferLevel);
			}
			function At$1(t$3) {
				t$3.streamInfo.id === N$1.getId() && yt$1(), Zt$1(t$3.streamInfo.id).prepareQualityChange(t$3);
			}
			function Rt$1() {
				if (u$2.getIsDynamic() && 0 !== B$1.getOriginalLiveDelay() && N$1) {
					const t$3 = u$2.getStreamsInfo();
					if (t$3.length > 0) {
						const e$3 = t$3[0].manifestInfo, n$3 = qt$1(0, e$3);
						B$1.computeAndSetLiveDelay(n$3, e$3);
					}
				}
			}
			function Nt$1() {
				if (Ht$1()) {
					const t$3 = q$1.getPlaybackQuality();
					t$3 && d$2.addDroppedFrames(t$3);
				}
			}
			function Ct$1() {
				a$1.debug("[onPlaybackStarted]"), !$$1 && W$1 && Kt$1(It.RESUME_FROM_PAUSE_START_REASON), $$1 && ($$1 = !1), X$1 && (X$1 = !1, et$1.get().streaming.applyContentSteering && !g$2.shouldQueryBeforeStart() && g$2.loadSteeringData()), W$1 = !1;
			}
			function Dt$1(t$3) {
				a$1.debug("[onPlaybackPaused]"), t$3.ended || (W$1 = !0, Vt$1(kt.USER_REQUEST_STOP_REASON));
			}
			function xt$1(t$3) {
				a$1.debug(`Stream with id ${t$3.streamInfo.id} finished buffering`);
				const e$3 = t$3.streamInfo.isLast;
				j$1 && e$3 ? (a$1.info("[onStreamBufferingCompleted] calls signalEndOfStream of mediaSourceController."), c$2.signalEndOfStream(j$1)) : Mt$1();
			}
			function Mt$1() {
				if (!N$1) return;
				if (!N$1.getHasFinishedBuffering()) return void N$1.checkAndHandleCompletedBuffering();
				const t$3 = function() {
					let t$4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
					try {
						const e$4 = t$4 || N$1 || null;
						if (e$4) {
							const t$5 = e$4.getStreamInfo();
							return I$1.filter((function(e$5) {
								const n$3 = e$5.getStreamInfo();
								return n$3.start > t$5.start && t$5.id !== n$3.id;
							}));
						}
					} catch (t$5) {
						return [];
					}
				}(N$1);
				let e$3 = 0;
				for (; e$3 < t$3.length;) {
					const n$3 = t$3[e$3], a$2 = 0 === e$3 ? N$1 : t$3[e$3 - 1];
					!n$3.getPreloaded() && a$2.getHasFinishedBuffering() && j$1 && Tt$1(n$3, a$2), e$3 += 1;
				}
			}
			function zt$1() {
				Q$1 && (clearInterval(Q$1), Q$1 = null);
			}
			function Ot$1() {
				return N$1 ? N$1.getStreamProcessors() : [];
			}
			function Pt$1(t$3) {
				if (N$1 && !N$1.getIsEndedEventSignaled()) {
					N$1.setIsEndedEventSignaled(!0);
					const t$4 = function() {
						const t$5 = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null) || N$1 || null;
						if (!t$5) return null;
						const e$3 = t$5.getStreamInfo(), n$3 = e$3.start;
						let a$2 = 0, r$3 = -1, i$3 = NaN;
						for (; a$2 < I$1.length;) {
							const t$6 = I$1[a$2].getStreamInfo(), l$3 = t$6.start - n$3;
							l$3 > 0 && (isNaN(i$3) || l$3 < i$3) && e$3.id !== t$6.id && (i$3 = l$3, r$3 = a$2), a$2 += 1;
						}
						return r$3 >= 0 ? I$1[r$3] : null;
					}();
					t$4 ? (a$1.debug(`StreamController onEnded, found next stream with id ${t$4.getStreamInfo().id}. Switching from ${N$1.getStreamInfo().id} to ${t$4.getStreamInfo().id}`), ft$1(t$4, N$1, NaN)) : (a$1.debug("StreamController no next stream found"), N$1.setIsEndedEventSignaled(!1)), Vt$1(t$4 ? kt.END_OF_PERIOD_STOP_REASON : kt.END_OF_CONTENT_STOP_REASON);
				}
				t$3 && t$3.isLast && (zt$1(), g$2.stopSteeringRequestTimer());
			}
			function Lt$1(t$3) {
				const e$3 = t$3 || Qt$1().manifestInfo.duration;
				c$2.setDuration(e$3);
			}
			function Ft$1(t$3) {
				const e$3 = p$2.getURIFragmentData();
				if (!e$3 || !e$3.t) return NaN;
				const n$3 = ae$1()[0].getStreamInfo().start;
				return e$3.t = e$3.t.split(",")[0], jt$1(t$3, e$3.t, n$3);
			}
			function Ut$1(t$3, e$3) {
				let n$3 = 0;
				return t$3 || (n$3 = ae$1()[0].getStreamInfo().start), jt$1(t$3, e$3, n$3);
			}
			function jt$1(t$3, e$3, n$3) {
				const a$2 = u$2.getRegularPeriods()[0], r$3 = e$3.toString(), i$3 = -1 !== r$3.indexOf("posix:") ? "now" === r$3.substring(6) ? Date.now() / 1e3 : parseFloat(r$3.substring(6)) : NaN;
				return t$3 && !isNaN(i$3) ? w$2.calcPresentationTimeFromWallTime(/* @__PURE__ */ new Date(1e3 * i$3), a$2) : parseFloat(r$3) + n$3;
			}
			function qt$1(t$3, e$3) {
				try {
					return e$3 && !isNaN(e$3.maxFragmentDuration) && isFinite(e$3.maxFragmentDuration) ? e$3.maxFragmentDuration : NaN;
				} catch (t$4) {
					return NaN;
				}
			}
			function Bt$1() {
				const t$3 = s$1.getValue();
				m$2.initialize(t$3);
			}
			function Gt$1(t$3) {
				if (t$3.error) U$1 = !0, ee$1();
				else {
					a$1.info("Manifest updated... updating data system wide.");
					const n$3 = t$3.manifest;
					u$2.updatePeriods(n$3), i$2.filterUnsupportedFeatures(n$3).then((() => {
						m$2.initialize(n$3);
						let t$4 = u$2.getUTCTimingSources();
						!u$2.getIsDynamic() || t$4 && 0 !== t$4.length || e$2.trigger(D.default.CONFORMANCE_VIOLATION, {
							level: Aa.LEVELS.WARNING,
							event: Aa.EVENTS.NO_UTC_TIMING_ELEMENT
						});
						let a$2 = u$2.getIsDynamic() ? t$4.concat(K$1.getUTCTimingSources()) : t$4;
						f$2.attemptSync(a$2, u$2.getIsDynamic()), O$1.createFinalQueryStrings(n$3);
					}));
				}
			}
			function Ht$1() {
				return !!N$1 && N$1.getHasVideoTrack();
			}
			function Yt$1() {
				return !!N$1 && N$1.getHasAudioTrack();
			}
			function Vt$1(t$3, e$3) {
				e$3 = e$3 || /* @__PURE__ */ new Date(), Ot$1().forEach(((n$3) => {
					n$3.finalisePlayList(e$3, t$3);
				})), d$2.addPlayList();
			}
			function Kt$1(t$3) {
				d$2.createPlaylistMetrics(1e3 * B$1.getTime(), t$3);
			}
			function Wt$1(t$3) {
				x$1.updateKeyStatusesMap(t$3), function() {
					const t$4 = Ot$1();
					let a$2 = !1;
					t$4.forEach(((t$5) => {
						const e$3 = t$5.getMediaInfo();
						!e$3 || r$2.areKeyIdsUsable(e$3) ? e$3 && r$2.areKeyIdsExpired(e$3) && function(t$6) {
							const e$4 = Zt$1(t$6.getStreamId());
							e$4 && e$4.triggerProtectionError({ error: new G.default(Na.default.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, Na.default.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE) });
						}(t$5) : (a$2 = !0, function(t$6) {
							const e$4 = t$6.getAllMediaInfos().filter(((t$7) => r$2.areKeyIdsUsable(t$7)));
							if (e$4 && 0 !== e$4.length) E$2.setTrack(e$4[0], { replaceBuffer: !0 });
							else {
								const e$5 = t$6.getType();
								v$2.error(new G.default(V.NO_SUPPORTED_KEY_IDS, `Type: ${e$5}: ${V.NO_SUPPORTED_KEY_IDS_MESSAGE}`));
							}
						}(t$5));
					})), a$2 && (0 === B$1.getTime() ? e$2.once(D.default.FRAGMENT_LOADING_COMPLETED, (() => {
						$t$1();
					}), n$2) : B$1.isProgressing(500).then(((t$5) => {
						t$5 || $t$1();
					})));
				}();
			}
			function $t$1() {
				const t$3 = B$1.getTime();
				B$1.seek(t$3 + .01, !1, !1);
			}
			function Xt$1(t$3) {
				if (!t$3.error) return;
				let e$3;
				switch (t$3.error.code) {
					case 1:
						e$3 = "MEDIA_ERR_ABORTED";
						break;
					case 2:
						e$3 = "MEDIA_ERR_NETWORK";
						break;
					case 3:
						e$3 = "MEDIA_ERR_DECODE", it$1.counts.mediaErrorDecode += 1;
						break;
					case 4:
						e$3 = "MEDIA_ERR_SRC_NOT_SUPPORTED";
						break;
					case 5:
						e$3 = "MEDIA_ERR_ENCRYPTED";
						break;
					default: e$3 = "UNKNOWN";
				}
				"MEDIA_ERR_DECODE" === e$3 && et$1.get().errors.recoverAttempts.mediaErrorDecode >= it$1.counts.mediaErrorDecode ? function() {
					a$1.error("A MEDIA_ERR_DECODE occured: Resetting the MediaSource");
					const t$4 = B$1.getTime();
					N$1.deactivate(!1), a$1.info(`MediaSource has been resetted. Resuming playback from time ${t$4}`), gt$1({
						seekTime: t$4,
						keepBuffers: !1,
						streamActivated: !1
					});
				}() : (F$1 = !0, t$3.error.message && (e$3 += " (" + t$3.error.message + ")"), t$3.error.msExtendedCode && (e$3 += " (0x" + (t$3.error.msExtendedCode >>> 0).toString(16).toUpperCase() + ")"), a$1.fatal("Video Element Error: " + e$3), t$3.error && a$1.fatal(t$3.error), v$2.error(new G.default(t$3.error.code, e$3)), ee$1());
			}
			function Qt$1() {
				return N$1 ? N$1.getStreamInfo() : null;
			}
			function Zt$1(t$3) {
				for (let e$3 = 0, n$3 = I$1.length; e$3 < n$3; e$3++) if (I$1[e$3].getId() === t$3) return I$1[e$3];
				return null;
			}
			function Jt$1(t$3) {
				isNaN(t$3.newDuration) || Lt$1(t$3.newDuration);
			}
			function te$1() {
				I$1 = [], rt$1 = NaN, x$1 = null, L$1 = !1, N$1 = null, F$1 = !1, U$1 = !1, $$1 = !0, X$1 = !0, W$1 = !1, P$1 = !0, Q$1 = null, nt$1 = !1, tt$1 = [], at$1 = null, it$1 = { counts: { mediaErrorDecode: 0 } };
			}
			function ee$1() {
				lt$1(), f$2.reset(), Vt$1(F$1 || U$1 ? kt.FAILURE_STOP_REASON : kt.USER_REQUEST_STOP_REASON);
				for (let t$3 = 0, e$3 = I$1 ? I$1.length : 0; t$3 < e$3; t$3++) I$1[t$3].reset(F$1);
				e$2.off(D.default.PLAYBACK_TIME_UPDATED, Nt$1, n$2), e$2.off(D.default.PLAYBACK_SEEKING, pt$1, n$2), e$2.off(D.default.PLAYBACK_ERROR, Xt$1, n$2), e$2.off(D.default.PLAYBACK_STARTED, Ct$1, n$2), e$2.off(D.default.PLAYBACK_PAUSED, Dt$1, n$2), e$2.off(D.default.PLAYBACK_ENDED, Pt$1, n$2), e$2.off(D.default.METRIC_ADDED, ne$1, n$2), e$2.off(D.default.MANIFEST_VALIDITY_CHANGED, Jt$1, n$2), e$2.off(D.default.BUFFER_LEVEL_UPDATED, St$1, n$2), e$2.off(D.default.QUALITY_CHANGE_REQUESTED, At$1, n$2), e$2.off(D.default.CONTENT_STEERING_REQUEST_COMPLETED, Bt$1, n$2), R.default.KEY_SESSION_UPDATED && e$2.off(R.default.KEY_SESSION_UPDATED, st$1, n$2), e$2.off(R.default.MANIFEST_UPDATED, Gt$1, n$2), e$2.off(R.default.STREAM_BUFFERING_COMPLETED, xt$1, n$2), e$2.off(R.default.TIME_SYNCHRONIZATION_COMPLETED, ot$1, n$2), e$2.off(R.default.CURRENT_TRACK_CHANGED, Et$1, n$2), e$2.off(R.default.SETTING_UPDATED_LIVE_DELAY, Rt$1, n$2), e$2.off(R.default.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT, Rt$1, n$2), e$2.off(Ra.default.INTERNAL_KEY_STATUSES_CHANGED, Wt$1, n$2), m$2.reset(), l$2.reset(), _$2.reset(), d$2.clearAllCurrentMetrics(), s$1.setValue(null), o$2.reset(), w$2.reset(), T$2.reset(), j$1 && (c$2.detachMediaSource(q$1), j$1 = null), q$1 = null, x$1 && (x$1 = null, z$1 = null, s$1.getValue() && e$2.trigger(R.default.PROTECTION_DESTROYED, { data: s$1.getValue().url })), zt$1(), e$2.trigger(R.default.STREAM_TEARDOWN_COMPLETE), te$1();
			}
			function ne$1(t$3) {
				if (t$3.metric === k.DVR_INFO) {
					const e$3 = Yt$1() ? S$1.default.AUDIO : S$1.default.VIDEO;
					t$3.mediaType === e$3 && c$2.setSeekable(t$3.value.range.start, t$3.value.range.end);
				}
			}
			function ae$1() {
				return I$1;
			}
			return n$2 = {
				addDVRMetric: wt$1,
				getActiveStream: function() {
					return N$1;
				},
				getActiveStreamInfo: Qt$1,
				getActiveStreamProcessors: Ot$1,
				getAutoPlay: function() {
					return P$1;
				},
				getHasMediaOrInitialisationError: function() {
					return F$1 || U$1;
				},
				getInitialPlayback: function() {
					return $$1;
				},
				getIsStreamSwitchInProgress: function() {
					return L$1;
				},
				getStreamById: Zt$1,
				getStreamForTime: vt$1,
				getStreams: ae$1,
				getTimeRelativeToStreamId: function(t$3, e$3) {
					let n$3 = null, a$2 = 0, r$3 = 0, i$3 = null;
					for (let l$3 = 0; l$3 < I$1.length; l$3++) {
						if (n$3 = I$1[l$3], r$3 = n$3.getStartTime(), i$3 = n$3.getDuration(), Number.isFinite(r$3) && (a$2 = r$3), n$3.getId() === e$3) return t$3 - a$2;
						Number.isFinite(i$3) && (a$2 += i$3);
					}
					return null;
				},
				hasAudioTrack: Yt$1,
				hasVideoTrack: Ht$1,
				initialize: function(a$2, r$3) {
					lt$1(), P$1 = a$2, z$1 = r$3, w$2.initialize(), l$2 = Ea(t$2).create(), l$2.setConfig({
						manifestModel: s$1,
						adapter: u$2,
						manifestLoader: o$2,
						errHandler: v$2,
						settings: et$1,
						contentSteeringController: g$2
					}), l$2.initialize(), _$2 = ka(t$2).getInstance(), _$2.setConfig({
						manifestUpdater: l$2,
						playbackController: B$1,
						settings: et$1
					}), _$2.start(), O$1 = Mn(t$2).getInstance(), f$2.setConfig({
						dashMetrics: d$2,
						baseURLController: m$2,
						errHandler: v$2,
						settings: et$1
					}), f$2.initialize(), c$2.setConfig({ settings: et$1 }), x$1 && (e$2.trigger(R.default.PROTECTION_CREATED, { controller: x$1 }), x$1.setMediaElement(q$1.getElement()), z$1 && x$1.setProtectionData(z$1)), e$2.on(D.default.PLAYBACK_TIME_UPDATED, Nt$1, n$2), e$2.on(D.default.PLAYBACK_SEEKING, pt$1, n$2), e$2.on(D.default.PLAYBACK_ERROR, Xt$1, n$2), e$2.on(D.default.PLAYBACK_STARTED, Ct$1, n$2), e$2.on(D.default.PLAYBACK_PAUSED, Dt$1, n$2), e$2.on(D.default.PLAYBACK_ENDED, Pt$1, n$2), e$2.on(D.default.METRIC_ADDED, ne$1, n$2), e$2.on(D.default.MANIFEST_VALIDITY_CHANGED, Jt$1, n$2), e$2.on(D.default.BUFFER_LEVEL_UPDATED, St$1, n$2), e$2.on(D.default.QUALITY_CHANGE_REQUESTED, At$1, n$2), e$2.on(D.default.CONTENT_STEERING_REQUEST_COMPLETED, Bt$1, n$2), R.default.KEY_SESSION_UPDATED && e$2.on(R.default.KEY_SESSION_UPDATED, st$1, n$2), e$2.on(R.default.MANIFEST_UPDATED, Gt$1, n$2), e$2.on(R.default.STREAM_BUFFERING_COMPLETED, xt$1, n$2), e$2.on(R.default.TIME_SYNCHRONIZATION_COMPLETED, ot$1, n$2), e$2.on(R.default.CURRENT_TRACK_CHANGED, Et$1, n$2), e$2.on(R.default.SETTING_UPDATED_LIVE_DELAY, Rt$1, n$2), e$2.on(R.default.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT, Rt$1, n$2), e$2.on(Ra.default.INTERNAL_KEY_STATUSES_CHANGED, Wt$1, n$2);
				},
				load: function(t$3) {
					let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : NaN;
					lt$1(), rt$1 = e$3, o$2.load(t$3);
				},
				loadWithManifest: function(t$3) {
					let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : NaN;
					(function() {
						if (!l$2 || !l$2.hasOwnProperty("setManifest")) throw new Error("initialize function has to be called previously");
					})(), rt$1 = e$3, l$2.setManifest(t$3);
				},
				refreshManifest: function() {
					l$2.getIsUpdating() || l$2.refreshManifest();
				},
				reset: ee$1,
				setConfig: function(t$3) {
					t$3 && (t$3.capabilities && (r$2 = t$3.capabilities), t$3.capabilitiesFilter && (i$2 = t$3.capabilitiesFilter), t$3.manifestLoader && (o$2 = t$3.manifestLoader), t$3.manifestModel && (s$1 = t$3.manifestModel), t$3.mediaPlayerModel && (Y$1 = t$3.mediaPlayerModel), t$3.customParametersModel && (K$1 = t$3.customParametersModel), t$3.protectionController && (x$1 = t$3.protectionController), t$3.adapter && (u$2 = t$3.adapter), t$3.dashMetrics && (d$2 = t$3.dashMetrics), t$3.errHandler && (v$2 = t$3.errHandler), t$3.timelineConverter && (w$2 = t$3.timelineConverter), t$3.videoModel && (q$1 = t$3.videoModel), t$3.playbackController && (B$1 = t$3.playbackController), t$3.throughputController && (y$2 = t$3.throughputController), t$3.serviceDescriptionController && (H$1 = t$3.serviceDescriptionController), t$3.contentSteeringController && (g$2 = t$3.contentSteeringController), t$3.textController && (M$1 = t$3.textController), t$3.abrController && (b$2 = t$3.abrController), t$3.mediaController && (E$2 = t$3.mediaController), t$3.settings && (et$1 = t$3.settings), t$3.baseURLController && (m$2 = t$3.baseURLController), t$3.uriFragmentModel && (p$2 = t$3.uriFragmentModel), t$3.segmentBaseController && (h$2 = t$3.segmentBaseController), t$3.manifestUpdater && (l$2 = t$3.manifestUpdater));
				},
				setProtectionData: function(t$3) {
					z$1 = t$3, x$1 && x$1.setProtectionData(z$1);
				},
				switchToVideoElement: function(t$3) {
					N$1 && (B$1.initialize(Qt$1()), gt$1({
						seekTime: t$3,
						keepBuffers: !1,
						streamActivated: !0
					}));
				}
			}, a$1 = (0, C.default)(t$2).getInstance().getLogger(n$2), f$2 = va(t$2).getInstance(), c$2 = Sa(t$2).getInstance(), T$2 = J(t$2).getInstance(), te$1(), n$2;
		}
		Ca.__dashjs_factory_name = "StreamController";
		var Da = N.default.getSingletonFactory(Ca);
		function xa() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2;
			function m$2() {
				g$2.debug("Stopping the gap controller"), l$2 && (clearInterval(l$2), l$2 = null), function() {
					e$2.off(R.default.WALLCLOCK_TIME_UPDATED, E$2, this), e$2.off(R.default.INITIAL_STREAM_SWITCH, y$2, this), e$2.off(R.default.PLAYBACK_SEEKING, h$2, this), e$2.off(R.default.BUFFER_REPLACEMENT_STARTED, p$2, n$2), e$2.off(R.default.TRACK_CHANGE_RENDERED, b$2, n$2);
				}(), l$2 = null, o$2 = NaN, i$2 = 0, c$2 = null, f$2 = {};
			}
			function h$2() {
				c$2 && (clearTimeout(c$2), c$2 = null);
			}
			function p$2(t$3) {
				try {
					if (t$3.streamId !== u$2.getActiveStreamInfo().id || t$3.mediaType !== S$1.default.VIDEO && t$3.mediaType !== S$1.default.AUDIO) return;
					t$3.streamId === u$2.getActiveStreamInfo().id && (f$2[t$3.mediaType] = !0);
				} catch (t$4) {
					g$2.error(t$4);
				}
			}
			function b$2(t$3) {
				t$3 && t$3.mediaType && (f$2[t$3.mediaType] = !1);
			}
			function y$2() {
				l$2 || function() {
					try {
						l$2 || (g$2.debug("Starting the gap controller"), l$2 = setInterval((() => {
							_$2() && T$2(s$1.getTime());
						}), 100));
					} catch (t$3) {}
				}();
			}
			function E$2() {
				if (_$2(r$2.get().streaming.gaps.enableSeekFix) && (i$2++, i$2 >= 10)) {
					const t$3 = s$1.getTime();
					a$1 === t$3 ? T$2(t$3, !0) : (a$1 = t$3, o$2 = NaN), i$2 = 0;
				}
			}
			function _$2() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
				if (!u$2.getActiveStream()) return !1;
				const e$3 = Object.keys(f$2).some(((t$4) => f$2[t$4])), n$3 = !!t$3 && function() {
					const t$4 = u$2.getActiveStream(), e$4 = parseFloat((t$4.getStartTime() + t$4.getDuration()).toFixed(5));
					return s$1.getTime() + r$2.get().streaming.gaps.threshold >= e$4;
				}();
				return !e$3 && r$2.get().streaming.gaps.jumpGaps && u$2.getActiveStreamProcessors().length > 0 && (!s$1.isSeeking() || n$3) && !s$1.isPaused() && !u$2.getIsStreamSwitchInProgress() && !u$2.getHasMediaOrInitialisationError();
			}
			function T$2(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
				const n$3 = r$2.get().streaming.gaps.enableStallFix, a$2 = r$2.get().streaming.gaps.stallSeek, i$3 = r$2.get().streaming.gaps.smallGapLimit, l$3 = r$2.get().streaming.gaps.jumpLargeGaps, f$3 = d$2.getBufferRange();
				let m$3, h$3 = NaN, p$3 = !1;
				if (m$3 = function(t$4, e$4) {
					try {
						if (!t$4 || t$4.length <= 1 && e$4 > 0) return NaN;
						let n$4 = NaN, a$3 = 0;
						for (; isNaN(n$4) && a$3 < t$4.length;) {
							const i$4 = a$3 > 0 ? t$4.end(a$3 - 1) : 0;
							e$4 < t$4.start(a$3) && i$4 - e$4 < r$2.get().streaming.gaps.threshold && (n$4 = a$3), a$3 += 1;
						}
						return n$4;
					} catch (t$5) {
						return null;
					}
				}(f$3, t$3), !isNaN(m$3)) {
					const e$4 = f$3.start(m$3), n$4 = e$4 - t$3;
					n$4 > 0 && (n$4 <= i$3 || l$3) && (h$3 = e$4);
				}
				const b$3 = s$1.getTimeToStreamEnd();
				if (isNaN(h$3) && e$3 && isFinite(b$3) && !isNaN(b$3) && b$3 < i$3 && (h$3 = parseFloat(s$1.getStreamEndTime().toFixed(5)), p$3 = !0), n$3 && isNaN(h$3) && e$3 && isNaN(m$3) && function(t$4, e$4) {
					for (let n$4 = 0, a$3 = t$4.length; n$4 < a$3; n$4++) if (e$4 >= t$4.start(n$4) && e$4 <= t$4.end(n$4)) return !0;
					return !1;
				}(f$3, t$3) && (0 === a$2 ? (g$2.warn("Toggle play pause to break stall"), d$2.pause(), d$2.play()) : (g$2.warn(`Jumping ${a$2}s to break stall`), h$3 = t$3 + a$2)), h$3 > 0 && o$2 !== h$3 && h$3 > t$3 && !c$2) {
					const e$4 = h$3 - t$3;
					if (p$3) {
						const n$4 = u$2.getStreamForTime(h$3), a$3 = n$4 && !!n$4.getPreloaded();
						g$2.warn(`Jumping to end of stream because of gap from ${t$3} to ${h$3}. Gap duration: ${e$4}`), s$1.seek(h$3, !0, a$3);
					} else {
						const n$4 = s$1.getIsDynamic(), a$3 = m$3 > 0 ? f$3.end(m$3 - 1) : t$3, r$3 = n$4 ? 1e3 * Math.max(0, e$4 - .1) : 0;
						c$2 = window.setTimeout((() => {
							s$1.seek(h$3, !0, !0), g$2.warn(`Jumping gap occuring in period ${u$2.getActiveStream().getStreamId()} starting at ${a$3} and ending at ${h$3}. Jumping by: ${h$3 - a$3}`), c$2 = null;
						}), r$3);
					}
					o$2 = h$3;
				}
			}
			return n$2 = {
				reset: m$2,
				setConfig: function(t$3) {
					t$3 && (t$3.settings && (r$2 = t$3.settings), t$3.playbackController && (s$1 = t$3.playbackController), t$3.streamController && (u$2 = t$3.streamController), t$3.videoModel && (d$2 = t$3.videoModel));
				},
				initialize: function() {
					(function() {
						e$2.on(R.default.WALLCLOCK_TIME_UPDATED, E$2, this), e$2.on(R.default.INITIAL_STREAM_SWITCH, y$2, this), e$2.on(R.default.PLAYBACK_SEEKING, h$2, this), e$2.on(R.default.BUFFER_REPLACEMENT_STARTED, p$2, n$2), e$2.on(R.default.TRACK_CHANGE_RENDERED, b$2, n$2);
					})();
				}
			}, g$2 = (0, C.default)(t$2).getInstance().getLogger(n$2), m$2(), n$2;
		}
		xa.__dashjs_factory_name = "GapController";
		var Ma = N.default.getSingletonFactory(xa);
		function za() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2;
			function f$2() {
				a$1 = !1;
				const t$3 = Gt.default.parseUserAgent();
				r$2 = t$3 && t$3.browser && t$3.browser.name && "safari" === t$3.browser.name.toLowerCase();
			}
			function g$2() {
				a$1 = !1;
			}
			function m$2(t$3) {
				if (t$3.streamId !== o$2.getActiveStreamInfo().id || !d$2) return;
				const e$3 = s$1.getLiveDelay();
				s$1.getBufferLevel() > e$3 / 2 && (d$2 = !1);
			}
			function h$2(t$3) {
				t$3.streamId === o$2.getActiveStreamInfo().id && (d$2 = t$3.state === k.BUFFER_EMPTY);
			}
			function p$2() {
				u$2.getCatchupModeEnabled() || i$2.setPlaybackRate(1);
			}
			function b$2() {
				s$1.getIsDynamic() && u$2.getCatchupModeEnabled() && (u$2.getCatchupPlaybackRates().max > 0 || u$2.getCatchupPlaybackRates().min < 0) && !s$1.isPaused() && !s$1.isSeeking() && function() {
					try {
						if (!s$1.getTime() > 0 || a$1) return !1;
						if (E$2() === S$1.default.LIVE_CATCHUP_MODE_LOLP) return function(t$3, e$3) {
							try {
								return Math.abs(y$2()) > 0 || t$3 < e$3;
							} catch (t$4) {
								return !1;
							}
						}(s$1.getBufferLevel(), l$2.get().streaming.liveCatchup.playbackBufferMin);
						return function() {
							try {
								return Math.abs(y$2()) > 0;
							} catch (t$3) {
								return !1;
							}
						}();
					} catch (t$3) {
						return !1;
					}
				}() && function() {
					if (!a$1 && i$2) {
						let t$3;
						const e$3 = i$2.getPlaybackRate(), n$3 = u$2.getCatchupPlaybackRates(), o$3 = s$1.getBufferLevel(), f$3 = y$2(), g$3 = u$2.getCatchupMaxDrift();
						if (!isNaN(g$3) && g$3 > 0 && f$3 > g$3) c$2.info("[CatchupController]: Low Latency catchup mechanism. Latency too high, doing a seek to live point"), a$1 = !0, s$1.seekToCurrentLive(!0, !1);
						else {
							const a$2 = s$1.getCurrentLiveLatency(), u$3 = s$1.getLiveDelay();
							t$3 = E$2() === S$1.default.LIVE_CATCHUP_MODE_LOLP ? function(t$4, e$4, n$4, a$3, r$3) {
								let i$3;
								if (r$3 < a$3) {
									const e$5 = Math.abs(t$4.min), n$5 = 5 * (r$3 - a$3);
									i$3 = 1 - e$5 + 2 * e$5 / (1 + Math.pow(Math.E, -n$5)), c$2.debug("[LoL+ playback control_buffer-based] bufferLevel: " + r$3 + ", newRate: " + i$3);
								} else {
									if (Math.abs(e$4 - n$4) <= .02 * n$4) i$3 = 1;
									else {
										const a$4 = e$4 - n$4, r$4 = a$4 < 0 ? Math.abs(t$4.min) : t$4.max, l$3 = 5 * a$4;
										i$3 = 1 - r$4 + 2 * r$4 / (1 + Math.pow(Math.E, -l$3));
									}
									c$2.debug("[LoL+ playback control_latency-based] latency: " + e$4 + ", newRate: " + i$3);
								}
								return i$3;
							}(n$3, a$2, u$3, l$2.get().streaming.liveCatchup.playbackBufferMin, o$3) : function(t$4, e$4, n$4, a$3) {
								if (d$2) return 1;
								const r$3 = e$4 - n$4, i$3 = r$3 < 0 ? Math.abs(t$4.min) : t$4.max, l$3 = 5 * r$3;
								let o$4 = 1 - i$3 + 2 * i$3 / (1 + Math.pow(Math.E, -l$3));
								return s$1.getPlaybackStalled() && a$3 <= n$4 / 2 && r$3 > 0 && (o$4 = 1), o$4;
							}(n$3, a$2, u$3, o$3);
							const f$4 = r$2 ? .25 : .02 / (.5 / n$3.max);
							(t$3 && Math.abs(e$3 - t$3) >= f$4 || 1 == t$3) && (c$2.debug(`[CatchupController]: Setting playback rate to ${t$3}`), i$2.setPlaybackRate(t$3));
						}
					}
				}();
			}
			function y$2() {
				return s$1.getCurrentLiveLatency() - s$1.getLiveDelay();
			}
			function E$2() {
				const t$3 = l$2.get().streaming.liveCatchup.playbackBufferMin;
				return l$2.get().streaming.liveCatchup.mode !== S$1.default.LIVE_CATCHUP_MODE_LOLP || null === t$3 || isNaN(t$3) ? S$1.default.LIVE_CATCHUP_MODE_DEFAULT : S$1.default.LIVE_CATCHUP_MODE_LOLP;
			}
			function _$2() {
				u$2.getCatchupPlaybackRates(!0);
			}
			return n$2 = {
				reset: function() {
					e$2.off(D.default.BUFFER_LEVEL_UPDATED, m$2, n$2), e$2.off(D.default.BUFFER_LEVEL_STATE_CHANGED, h$2, n$2), e$2.off(D.default.PLAYBACK_PROGRESS, b$2, n$2), e$2.off(D.default.PLAYBACK_TIME_UPDATED, b$2, n$2), e$2.off(D.default.PLAYBACK_SEEKED, g$2, n$2), e$2.off(R.default.SETTING_UPDATED_CATCHUP_ENABLED, p$2, n$2), e$2.off(R.default.SETTING_UPDATED_PLAYBACK_RATE_MIN, _$2, n$2), e$2.off(R.default.SETTING_UPDATED_PLAYBACK_RATE_MAX, _$2, n$2), e$2.off(D.default.STREAM_INITIALIZED, _$2, n$2), f$2(), i$2.setPlaybackRate(1, !0);
				},
				setConfig: function(t$3) {
					t$3 && (t$3.settings && (l$2 = t$3.settings), t$3.videoModel && (i$2 = t$3.videoModel), t$3.streamController && (o$2 = t$3.streamController), t$3.playbackController && (s$1 = t$3.playbackController), t$3.mediaPlayerModel && (u$2 = t$3.mediaPlayerModel));
				},
				initialize: function() {
					e$2.on(D.default.BUFFER_LEVEL_UPDATED, m$2, n$2), e$2.on(D.default.BUFFER_LEVEL_STATE_CHANGED, h$2, n$2), e$2.on(D.default.PLAYBACK_PROGRESS, b$2, n$2), e$2.on(D.default.PLAYBACK_TIME_UPDATED, b$2, n$2), e$2.on(D.default.PLAYBACK_SEEKED, g$2, n$2), e$2.on(R.default.SETTING_UPDATED_CATCHUP_ENABLED, p$2, n$2), e$2.on(R.default.SETTING_UPDATED_PLAYBACK_RATE_MIN, _$2, n$2), e$2.on(R.default.SETTING_UPDATED_PLAYBACK_RATE_MAX, _$2, n$2), e$2.on(D.default.STREAM_INITIALIZED, _$2, n$2), _$2();
				}
			}, c$2 = (0, C.default)(t$2).getInstance().getLogger(n$2), f$2(), n$2;
		}
		za.__dashjs_factory_name = "CatchupController";
		var Oa = N.default.getSingletonFactory(za);
		const Pa = [S$1.default.SERVICE_DESCRIPTION_DVB_LL_SCHEME], La = "video", Fa = "audio";
		function Ua() {
			const t$2 = this.context;
			let e$2, n$2, a$1, r$2, i$2;
			function l$2() {
				n$2 = {
					liveDelay: NaN,
					liveCatchup: {
						maxDrift: NaN,
						playbackRate: {
							min: NaN,
							max: NaN
						}
					},
					minBitrate: {},
					maxBitrate: {},
					initialBitrate: {},
					contentSteering: null,
					clientDataReporting: null
				}, a$1 = [];
			}
			function o$2(t$3, e$3, a$2) {
				try {
					n$2[t$3][e$3] = a$2 / 1e3;
				} catch (t$4) {
					r$2.error(t$4);
				}
			}
			return e$2 = {
				getServiceDescriptionSettings: function() {
					return n$2;
				},
				getProducerReferenceTimeOffsets: function() {
					return a$1;
				},
				calculateProducerReferenceTimeOffsets: function(t$3) {
					try {
						let e$3 = [];
						if (t$3 && t$3.length > 0) {
							const n$3 = [
								S$1.default.VIDEO,
								S$1.default.AUDIO,
								S$1.default.TEXT
							], a$2 = i$2.getAvailabilityStartTime() / 1e3;
							t$3.forEach(((t$4) => {
								const r$3 = n$3.reduce(((e$4, n$4) => e$4.concat(i$2.getAllMediaInfoForType(t$4, n$4))), []).reduce(((e$4, n$4) => (i$2.getProducerReferenceTimes(t$4, n$4).forEach(((r$4) => {
									const l$3 = i$2.getVoRepresentations(n$4);
									if (l$3 && l$3.length > 0 && l$3[0].adaptation && l$3[0].segmentInfoType === I.default.SEGMENT_TEMPLATE) {
										const n$5 = l$3[0], i$3 = new Date(r$4[I.default.WALL_CLOCK_TIME]).getTime() / 1e3 - (r$4[I.default.PRESENTATION_TIME] / n$5[I.default.TIMESCALE] - n$5[I.default.PRESENTATION_TIME_OFFSET] + t$4.start), o$3 = a$2 - i$3;
										e$4.push({
											id: r$4[I.default.ID],
											to: o$3
										});
									}
								})), e$4)), []);
								e$3 = e$3.concat(r$3);
							}));
						}
						a$1 = e$3;
					} catch (t$4) {
						r$2.error(t$4), a$1 = [];
					}
				},
				applyServiceDescription: function(t$3) {
					if (!t$3 || !t$3.serviceDescriptions) return;
					const e$3 = t$3.serviceDescriptions.filter(((t$4) => Pa.includes(t$4.schemeIdUri))), i$3 = t$3.serviceDescriptions.filter(((t$4) => null == t$4.schemeIdUri));
					let l$3 = e$3.length > 0 ? e$3[e$3.length - 1] : i$3[i$3.length - 1];
					l$3 && (l$3.latency && l$3.latency.target > 0 && function(t$4) {
						let e$4;
						if (t$4.schemeIdUri, S$1.default.SERVICE_DESCRIPTION_DVB_LL_SCHEME, e$4 = function(t$5) {
							return {
								liveDelay: t$5.latency.target / 1e3,
								maxDrift: !isNaN(t$5.latency.max) && t$5.latency.max > t$5.latency.target ? (t$5.latency.max - t$5.latency.target + 500) / 1e3 : NaN,
								referenceId: t$5.latency.referenceId || NaN
							};
						}(t$4), a$1.length > 0) {
							let { to: t$5, id: i$4 } = function(t$6) {
								let e$5, n$3 = 0, r$3 = a$1.filter(((e$6) => e$6.id === t$6.referenceId));
								return 0 === r$3.length ? (n$3 = a$1.length > 0 ? a$1[0].to : 0, e$5 = a$1[0].id || NaN) : (n$3 = r$3[0].to || 0, e$5 = r$3[0].id || NaN), {
									to: n$3,
									id: e$5
								};
							}(e$4);
							n$2.liveDelay = e$4.liveDelay - t$5, n$2.liveCatchup.maxDrift = e$4.maxDrift, r$2.debug(`\n                Found latency properties coming from service description. Applied time offset of ${t$5} from ProducerReferenceTime element with id ${i$4}.\n                Live Delay: ${e$4.liveDelay - t$5}, Live catchup max drift: ${e$4.maxDrift}\n            `);
						} else n$2.liveDelay = e$4.liveDelay, n$2.liveCatchup.maxDrift = e$4.maxDrift, r$2.debug(`Found latency properties coming from service description: Live Delay: ${e$4.liveDelay}, Live catchup max drift: ${e$4.maxDrift}`);
					}(l$3), l$3.playbackRate && function(t$4) {
						const e$4 = t$4.playbackRate.min ? Math.round(1e3 * (t$4.playbackRate.min - 1)) / 1e3 : NaN, a$2 = t$4.playbackRate.max ? Math.round(1e3 * (t$4.playbackRate.max - 1)) / 1e3 : NaN;
						n$2.liveCatchup.playbackRate.min = e$4, n$2.liveCatchup.playbackRate.max = a$2, r$2.debug(`Found latency properties coming from service description: Live catchup min playback rate: ${e$4}`), r$2.debug(`Found latency properties coming from service description: Live catchup max playback rate: ${a$2}`);
					}(l$3), l$3.operatingQuality, l$3.operatingBandwidth && function(t$4) {
						if (!t$4 || !t$4.operatingBandwidth || !t$4.operatingBandwidth.mediaType || "all" === t$4.operatingBandwidth.mediaType) return;
						const e$4 = {};
						e$4.minBandwidth = t$4.operatingBandwidth.min, e$4.maxBandwidth = t$4.operatingBandwidth.max, e$4.targetBandwidth = t$4.operatingBandwidth.target;
						const n$3 = [];
						t$4.operatingBandwidth.mediaType === La || t$4.operatingBandwidth.mediaType === Fa ? n$3.push(t$4.operatingBandwidth.mediaType) : "any" === t$4.operatingBandwidth.mediaType && (n$3.push(Fa), n$3.push(La)), n$3.forEach(((t$5) => {
							isNaN(e$4.minBandwidth) || o$2("minBitrate", t$5, e$4.minBandwidth), isNaN(e$4.maxBandwidth) || o$2("maxBitrate", t$5, e$4.maxBandwidth), isNaN(e$4.targetBandwidth) || o$2("initialBitrate", t$5, e$4.targetBandwidth);
						}));
					}(l$3), l$3.contentSteering && function(t$4) {
						n$2.contentSteering = t$4.contentSteering;
					}(l$3), l$3.clientDataReporting && function(t$4) {
						n$2.clientDataReporting = t$4.clientDataReporting;
					}(l$3));
				},
				reset: function() {
					l$2();
				},
				setConfig: function(t$3) {
					t$3 && t$3.adapter && (i$2 = t$3.adapter);
				}
			}, r$2 = (0, C.default)(t$2).getInstance().getLogger(e$2), l$2(), e$2;
		}
		Ua.__dashjs_factory_name = "ServiceDescriptionController";
		var ja = N.default.getSingletonFactory(Ua);
		function qa() {
			let t$2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e$2 = [];
			if (t$2.irregular) return t$2.irregular;
			if (t$2.regular) return t$2.regular;
			if (t$2.language) {
				e$2 = e$2.concat(t$2.language, t$2.extendedLanguageSubtags || [], t$2.script || [], t$2.region || [], t$2.variants || []);
				const n$2 = t$2.extensions || [];
				let a$1 = -1;
				for (; ++a$1 < n$2.length;) {
					const t$3 = n$2[a$1];
					t$3.singleton && t$3.extensions && t$3.extensions.length > 0 && e$2.push(t$3.singleton, ...t$3.extensions);
				}
			}
			return t$2.privateuse && t$2.privateuse.length > 0 && e$2.push("x", ...t$2.privateuse), e$2.join("-");
		}
		function Ba(t$2) {
			const e$2 = "string" == typeof t$2 ? t$2.charCodeAt(0) : t$2;
			return e$2 >= 97 && e$2 <= 122 || e$2 >= 65 && e$2 <= 90;
		}
		function Ga(t$2) {
			const e$2 = "string" == typeof t$2 ? t$2.charCodeAt(0) : t$2;
			return e$2 >= 48 && e$2 <= 57;
		}
		function Ha(t$2) {
			return Ba(t$2) || Ga(t$2);
		}
		const Ya = [
			"art-lojban",
			"cel-gaulish",
			"no-bok",
			"no-nyn",
			"zh-guoyu",
			"zh-hakka",
			"zh-min",
			"zh-min-nan",
			"zh-xiang"
		], Va = {
			"en-gb-oed": "en-GB-oxendict",
			"i-ami": "ami",
			"i-bnn": "bnn",
			"i-default": null,
			"i-enochian": null,
			"i-hak": "hak",
			"i-klingon": "tlh",
			"i-lux": "lb",
			"i-mingo": null,
			"i-navajo": "nv",
			"i-pwn": "pwn",
			"i-tao": "tao",
			"i-tay": "tay",
			"i-tsu": "tsu",
			"sgn-be-fr": "sfb",
			"sgn-be-nl": "vgt",
			"sgn-ch-de": "sgg",
			"art-lojban": "jbo",
			"cel-gaulish": null,
			"no-bok": "nb",
			"no-nyn": "nn",
			"zh-guoyu": "cmn",
			"zh-hakka": "hak",
			"zh-min": null,
			"zh-min-nan": "nan",
			"zh-xiang": "hsn"
		}, Ka = {}.hasOwnProperty;
		function Wa(t$2) {
			let e$2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
			const n$2 = {
				language: null,
				extendedLanguageSubtags: [],
				script: null,
				region: null,
				variants: [],
				extensions: [],
				privateuse: [],
				irregular: null,
				regular: null
			}, a$1 = String(t$2), r$2 = a$1.toLowerCase();
			let i$2 = 0;
			if (null == t$2) throw new Error("Expected string, got `" + t$2 + "`");
			if (Ka.call(Va, r$2)) {
				const t$3 = Va[r$2];
				return void 0 !== e$2.normalize && null !== e$2.normalize && !e$2.normalize || "string" != typeof t$3 ? (n$2[Ya.includes(r$2) ? "regular" : "irregular"] = a$1, n$2) : Wa(t$3);
			}
			for (; Ba(r$2.charCodeAt(i$2)) && i$2 < 9;) i$2++;
			if (i$2 > 1 && i$2 < 9) {
				if (n$2.language = a$1.slice(0, i$2), i$2 < 4) {
					let t$3 = 0;
					for (; 45 === r$2.charCodeAt(i$2) && Ba(r$2.charCodeAt(i$2 + 1)) && Ba(r$2.charCodeAt(i$2 + 2)) && Ba(r$2.charCodeAt(i$2 + 3)) && !Ba(r$2.charCodeAt(i$2 + 4));) {
						if (t$3 > 2) return l$2(i$2, 3, "Too many extended language subtags, expected at most 3 subtags");
						n$2.extendedLanguageSubtags.push(a$1.slice(i$2 + 1, i$2 + 4)), i$2 += 4, t$3++;
					}
				}
				for (45 === r$2.charCodeAt(i$2) && Ba(r$2.charCodeAt(i$2 + 1)) && Ba(r$2.charCodeAt(i$2 + 2)) && Ba(r$2.charCodeAt(i$2 + 3)) && Ba(r$2.charCodeAt(i$2 + 4)) && !Ba(r$2.charCodeAt(i$2 + 5)) && (n$2.script = a$1.slice(i$2 + 1, i$2 + 5), i$2 += 5), 45 === r$2.charCodeAt(i$2) && (Ba(r$2.charCodeAt(i$2 + 1)) && Ba(r$2.charCodeAt(i$2 + 2)) && !Ba(r$2.charCodeAt(i$2 + 3)) ? (n$2.region = a$1.slice(i$2 + 1, i$2 + 3), i$2 += 3) : Ga(r$2.charCodeAt(i$2 + 1)) && Ga(r$2.charCodeAt(i$2 + 2)) && Ga(r$2.charCodeAt(i$2 + 3)) && !Ga(r$2.charCodeAt(i$2 + 4)) && (n$2.region = a$1.slice(i$2 + 1, i$2 + 4), i$2 += 4)); 45 === r$2.charCodeAt(i$2);) {
					const t$3 = i$2 + 1;
					let e$3 = t$3;
					for (; Ha(r$2.charCodeAt(e$3));) {
						if (e$3 - t$3 > 7) return l$2(e$3, 1, "Too long variant, expected at most 8 characters");
						e$3++;
					}
					if (!(e$3 - t$3 > 4 || e$3 - t$3 > 3 && Ga(r$2.charCodeAt(t$3)))) break;
					n$2.variants.push(a$1.slice(t$3, e$3)), i$2 = e$3;
				}
				for (; 45 === r$2.charCodeAt(i$2) && 120 !== r$2.charCodeAt(i$2 + 1) && Ha(r$2.charCodeAt(i$2 + 1)) && 45 === r$2.charCodeAt(i$2 + 2) && Ha(r$2.charCodeAt(i$2 + 3));) {
					let t$3 = i$2 + 2, e$3 = 0;
					for (; 45 === r$2.charCodeAt(t$3) && Ha(r$2.charCodeAt(t$3 + 1)) && Ha(r$2.charCodeAt(t$3 + 2));) {
						const n$3 = t$3 + 1;
						for (t$3 = n$3 + 2, e$3++; Ha(r$2.charCodeAt(t$3));) {
							if (t$3 - n$3 > 7) return l$2(t$3, 2, "Too long extension, expected at most 8 characters");
							t$3++;
						}
					}
					if (!e$3) return l$2(t$3, 4, "Empty extension, extensions must have at least 2 characters of content");
					n$2.extensions.push({
						singleton: a$1.charAt(i$2 + 1),
						extensions: a$1.slice(i$2 + 3, t$3).split("-")
					}), i$2 = t$3;
				}
			} else i$2 = 0;
			if (0 === i$2 && 120 === r$2.charCodeAt(i$2) || 45 === r$2.charCodeAt(i$2) && 120 === r$2.charCodeAt(i$2 + 1)) {
				i$2 = i$2 ? i$2 + 2 : 1;
				let t$3 = i$2;
				for (; 45 === r$2.charCodeAt(t$3) && Ha(r$2.charCodeAt(t$3 + 1));) {
					const e$3 = i$2 + 1;
					for (t$3 = e$3; Ha(r$2.charCodeAt(t$3));) {
						if (t$3 - e$3 > 7) return l$2(t$3, 5, "Too long private-use area, expected at most 8 characters");
						t$3++;
					}
					n$2.privateuse.push(a$1.slice(i$2 + 1, t$3)), i$2 = t$3;
				}
			}
			return i$2 !== a$1.length ? l$2(i$2, 6, "Found superfluous content after tag") : n$2;
			function l$2(t$3, a$2, r$3) {
				return e$2.warning && e$2.warning(r$3, a$2, t$3), e$2.forgiving ? n$2 : {
					language: null,
					extendedLanguageSubtags: [],
					script: null,
					region: null,
					variants: [],
					extensions: [],
					privateuse: [],
					irregular: null,
					regular: null
				};
			}
		}
		function $a(t$2, e$2) {
			return function(n$2, a$1) {
				let r$2 = Qa(n$2, "tag");
				const i$2 = Qa(null == a$1 ? "*" : a$1, "range"), l$2 = [];
				let o$2 = -1;
				for (; ++o$2 < i$2.length;) {
					const n$3 = i$2[o$2].toLowerCase();
					if (!e$2 && "*" === n$3) continue;
					let a$2 = -1;
					const s$1 = [];
					for (; ++a$2 < r$2.length;) if (t$2(r$2[a$2].toLowerCase(), n$3)) {
						if (!e$2) return r$2[a$2];
						l$2.push(r$2[a$2]);
					} else s$1.push(r$2[a$2]);
					r$2 = s$1;
				}
				return e$2 ? l$2 : void 0;
			};
		}
		$a((function(t$2, e$2) {
			return "*" === e$2 || t$2 === e$2 || t$2.includes(e$2 + "-");
		}), !0);
		const Xa = $a((function(t$2, e$2) {
			const n$2 = t$2.split("-"), a$1 = e$2.split("-");
			let r$2 = 0, i$2 = 0;
			if ("*" !== a$1[i$2] && n$2[r$2] !== a$1[i$2]) return !1;
			for (r$2++, i$2++; i$2 < a$1.length;) if ("*" !== a$1[i$2]) {
				if (!n$2[r$2]) return !1;
				if (n$2[r$2] !== a$1[i$2]) {
					if (1 === n$2[r$2].length) return !1;
					r$2++;
				} else r$2++, i$2++;
			} else i$2++;
			return !0;
		}), !0);
		function Qa(t$2, e$2) {
			const n$2 = t$2 && "string" == typeof t$2 ? [t$2] : t$2;
			if (!n$2 || "object" != typeof n$2 || !("length" in n$2)) throw new Error("Invalid " + e$2 + " `" + n$2 + "`, expected non-empty string");
			return n$2;
		}
		$a((function(t$2, e$2) {
			let n$2 = e$2;
			for (;;) {
				if ("*" === n$2 || t$2 === n$2) return !0;
				let e$3 = n$2.lastIndexOf("-");
				if (e$3 < 0) return !1;
				"-" === n$2.charAt(e$3 - 2) && (e$3 -= 2), n$2 = n$2.slice(0, e$3);
			}
		}), !1);
		const Za = [
			{
				from: "in",
				to: "id"
			},
			{
				from: "iw",
				to: "he"
			},
			{
				from: "ji",
				to: "yi"
			},
			{
				from: "jw",
				to: "jv"
			},
			{
				from: "mo",
				to: "ro"
			},
			{
				from: "scc",
				to: "sr"
			},
			{
				from: "scr",
				to: "hr"
			},
			{
				from: "aam",
				to: "aas"
			},
			{
				from: "adp",
				to: "dz"
			},
			{
				from: "aue",
				to: "ktz"
			},
			{
				from: "ayx",
				to: "nun"
			},
			{
				from: "bgm",
				to: "bcg"
			},
			{
				from: "bjd",
				to: "drl"
			},
			{
				from: "ccq",
				to: "rki"
			},
			{
				from: "cjr",
				to: "mom"
			},
			{
				from: "cka",
				to: "cmr"
			},
			{
				from: "cmk",
				to: "xch"
			},
			{
				from: "coy",
				to: "pij"
			},
			{
				from: "cqu",
				to: "quh"
			},
			{
				from: "drh",
				to: "mn"
			},
			{
				from: "drw",
				to: "fa-af"
			},
			{
				from: "gav",
				to: "dev"
			},
			{
				from: "gfx",
				to: "vaj"
			},
			{
				from: "ggn",
				to: "gvr"
			},
			{
				from: "gti",
				to: "nyc"
			},
			{
				from: "guv",
				to: "duz"
			},
			{
				from: "hrr",
				to: "jal"
			},
			{
				from: "ibi",
				to: "opa"
			},
			{
				from: "ilw",
				to: "gal"
			},
			{
				from: "jeg",
				to: "oyb"
			},
			{
				from: "kgc",
				to: "tdf"
			},
			{
				from: "kgh",
				to: "kml"
			},
			{
				from: "koj",
				to: "kwv"
			},
			{
				from: "krm",
				to: "bmf"
			},
			{
				from: "ktr",
				to: "dtp"
			},
			{
				from: "kvs",
				to: "gdj"
			},
			{
				from: "kwq",
				to: "yam"
			},
			{
				from: "kxe",
				to: "tvd"
			},
			{
				from: "kzj",
				to: "dtp"
			},
			{
				from: "kzt",
				to: "dtp"
			},
			{
				from: "lii",
				to: "raq"
			},
			{
				from: "lmm",
				to: "rmx"
			},
			{
				from: "meg",
				to: "cir"
			},
			{
				from: "mst",
				to: "mry"
			},
			{
				from: "mwj",
				to: "vaj"
			},
			{
				from: "myt",
				to: "mry"
			},
			{
				from: "nad",
				to: "xny"
			},
			{
				from: "ncp",
				to: "kdz"
			},
			{
				from: "nnx",
				to: "ngv"
			},
			{
				from: "nts",
				to: "pij"
			},
			{
				from: "oun",
				to: "vaj"
			},
			{
				from: "pcr",
				to: "adx"
			},
			{
				from: "pmc",
				to: "huw"
			},
			{
				from: "pmu",
				to: "phr"
			},
			{
				from: "ppa",
				to: "bfy"
			},
			{
				from: "ppr",
				to: "lcq"
			},
			{
				from: "pry",
				to: "prt"
			},
			{
				from: "puz",
				to: "pub"
			},
			{
				from: "sca",
				to: "hle"
			},
			{
				from: "skk",
				to: "oyb"
			},
			{
				from: "tdu",
				to: "dtp"
			},
			{
				from: "thc",
				to: "tpo"
			},
			{
				from: "thx",
				to: "oyb"
			},
			{
				from: "tie",
				to: "ras"
			},
			{
				from: "tkk",
				to: "twm"
			},
			{
				from: "tlw",
				to: "weo"
			},
			{
				from: "tmp",
				to: "tyj"
			},
			{
				from: "tne",
				to: "kak"
			},
			{
				from: "tnf",
				to: "fa-af"
			},
			{
				from: "tsf",
				to: "taj"
			},
			{
				from: "uok",
				to: "ema"
			},
			{
				from: "xba",
				to: "cax"
			},
			{
				from: "xia",
				to: "acn"
			},
			{
				from: "xkh",
				to: "waw"
			},
			{
				from: "xsj",
				to: "suj"
			},
			{
				from: "ybd",
				to: "rki"
			},
			{
				from: "yma",
				to: "lrr"
			},
			{
				from: "ymt",
				to: "mtm"
			},
			{
				from: "yos",
				to: "zom"
			},
			{
				from: "yuu",
				to: "yug"
			},
			{
				from: "asd",
				to: "snz"
			},
			{
				from: "dit",
				to: "dif"
			},
			{
				from: "llo",
				to: "ngt"
			},
			{
				from: "myd",
				to: "aog"
			},
			{
				from: "nns",
				to: "nbr"
			},
			{
				from: "agp",
				to: "apf"
			},
			{
				from: "ais",
				to: "ami"
			},
			{
				from: "ajt",
				to: "aeb"
			},
			{
				from: "baz",
				to: "nvo"
			},
			{
				from: "bhk",
				to: "fbl"
			},
			{
				from: "bic",
				to: "bir"
			},
			{
				from: "bjq",
				to: "bzc"
			},
			{
				from: "bkb",
				to: "ebk"
			},
			{
				from: "blg",
				to: "iba"
			},
			{
				from: "btb",
				to: "beb"
			},
			{
				from: "daf",
				to: "dnj"
			},
			{
				from: "dap",
				to: "njz"
			},
			{
				from: "djl",
				to: "dze"
			},
			{
				from: "dkl",
				to: "aqd"
			},
			{
				from: "drr",
				to: "kzk"
			},
			{
				from: "dud",
				to: "uth"
			},
			{
				from: "duj",
				to: "dwu"
			},
			{
				from: "dwl",
				to: "dbt"
			},
			{
				from: "elp",
				to: "amq"
			},
			{
				from: "gbc",
				to: "wny"
			},
			{
				from: "ggo",
				to: "esg"
			},
			{
				from: "ggr",
				to: "gtu"
			},
			{
				from: "gio",
				to: "aou"
			},
			{
				from: "gli",
				to: "kzk"
			},
			{
				from: "ill",
				to: "ilm"
			},
			{
				from: "izi",
				to: "eza"
			},
			{
				from: "jar",
				to: "jgk"
			},
			{
				from: "kdv",
				to: "zkd"
			},
			{
				from: "kgd",
				to: "ncq"
			},
			{
				from: "kpp",
				to: "jkm"
			},
			{
				from: "kxl",
				to: "kru"
			},
			{
				from: "kzh",
				to: "dgl"
			},
			{
				from: "lak",
				to: "ksp"
			},
			{
				from: "leg",
				to: "enl"
			},
			{
				from: "mgx",
				to: "jbk"
			},
			{
				from: "mnt",
				to: "wnn"
			},
			{
				from: "mof",
				to: "xnt"
			},
			{
				from: "mwd",
				to: "dmw"
			},
			{
				from: "nbf",
				to: "nru"
			},
			{
				from: "nbx",
				to: "ekc"
			},
			{
				from: "nln",
				to: "azd"
			},
			{
				from: "nlr",
				to: "nrk"
			},
			{
				from: "noo",
				to: "dtd"
			},
			{
				from: "nxu",
				to: "bpp"
			},
			{
				from: "pat",
				to: "kxr"
			},
			{
				from: "rmr",
				to: "emx"
			},
			{
				from: "sap",
				to: "aqt"
			},
			{
				from: "sgl",
				to: "isk"
			},
			{
				from: "smd",
				to: "kmb"
			},
			{
				from: "snb",
				to: "iba"
			},
			{
				from: "sul",
				to: "sgd"
			},
			{
				from: "sum",
				to: "ulw"
			},
			{
				from: "tgg",
				to: "bjp"
			},
			{
				from: "thw",
				to: "ola"
			},
			{
				from: "tid",
				to: "itd"
			},
			{
				from: "unp",
				to: "wro"
			},
			{
				from: "wgw",
				to: "wgb"
			},
			{
				from: "wit",
				to: "nol"
			},
			{
				from: "wiw",
				to: "nwo"
			},
			{
				from: "xrq",
				to: "dmw"
			},
			{
				from: "yen",
				to: "ynq"
			},
			{
				from: "yiy",
				to: "yrm"
			},
			{
				from: "zir",
				to: "scv"
			},
			{
				from: "sgn-br",
				to: "bzs"
			},
			{
				from: "sgn-co",
				to: "csn"
			},
			{
				from: "sgn-de",
				to: "gsg"
			},
			{
				from: "sgn-dk",
				to: "dsl"
			},
			{
				from: "sgn-fr",
				to: "fsl"
			},
			{
				from: "sgn-gb",
				to: "bfi"
			},
			{
				from: "sgn-gr",
				to: "gss"
			},
			{
				from: "sgn-ie",
				to: "isg"
			},
			{
				from: "sgn-it",
				to: "ise"
			},
			{
				from: "sgn-jp",
				to: "jsl"
			},
			{
				from: "sgn-mx",
				to: "mfs"
			},
			{
				from: "sgn-ni",
				to: "ncs"
			},
			{
				from: "sgn-nl",
				to: "dse"
			},
			{
				from: "sgn-no",
				to: "nsi"
			},
			{
				from: "sgn-pt",
				to: "psr"
			},
			{
				from: "sgn-se",
				to: "swl"
			},
			{
				from: "sgn-us",
				to: "ase"
			},
			{
				from: "sgn-za",
				to: "sfs"
			},
			{
				from: "sgn-es",
				to: "ssp"
			},
			{
				from: "zh-cmn",
				to: "zh"
			},
			{
				from: "zh-cmn-hans",
				to: "zh-hans"
			},
			{
				from: "zh-cmn-hant",
				to: "zh-hant"
			},
			{
				from: "zh-gan",
				to: "gan"
			},
			{
				from: "zh-wuu",
				to: "wuu"
			},
			{
				from: "zh-yue",
				to: "yue"
			},
			{
				from: "no-bokmal",
				to: "nb"
			},
			{
				from: "no-nynorsk",
				to: "nn"
			},
			{
				from: "aa-saaho",
				to: "ssy"
			},
			{
				from: "sh",
				to: "sr-latn"
			},
			{
				from: "cnr",
				to: "sr-me"
			},
			{
				from: "tl",
				to: "fil"
			},
			{
				from: "aju",
				to: "jrb"
			},
			{
				from: "als",
				to: "sq"
			},
			{
				from: "arb",
				to: "ar"
			},
			{
				from: "ayr",
				to: "ay"
			},
			{
				from: "azj",
				to: "az"
			},
			{
				from: "bcc",
				to: "bal"
			},
			{
				from: "bcl",
				to: "bik"
			},
			{
				from: "bxk",
				to: "luy"
			},
			{
				from: "bxr",
				to: "bua"
			},
			{
				from: "cld",
				to: "syr"
			},
			{
				from: "cmn",
				to: "zh"
			},
			{
				from: "cwd",
				to: "cr"
			},
			{
				from: "dgo",
				to: "doi"
			},
			{
				from: "dhd",
				to: "mwr"
			},
			{
				from: "dik",
				to: "din"
			},
			{
				from: "diq",
				to: "zza"
			},
			{
				from: "lbk",
				to: "bnc"
			},
			{
				from: "ekk",
				to: "et"
			},
			{
				from: "emk",
				to: "man"
			},
			{
				from: "esk",
				to: "ik"
			},
			{
				from: "fat",
				to: "ak"
			},
			{
				from: "fuc",
				to: "ff"
			},
			{
				from: "gaz",
				to: "om"
			},
			{
				from: "gbo",
				to: "grb"
			},
			{
				from: "gno",
				to: "gon"
			},
			{
				from: "gug",
				to: "gn"
			},
			{
				from: "gya",
				to: "gba"
			},
			{
				from: "hdn",
				to: "hai"
			},
			{
				from: "hea",
				to: "hmn"
			},
			{
				from: "ike",
				to: "iu"
			},
			{
				from: "kmr",
				to: "ku"
			},
			{
				from: "knc",
				to: "kr"
			},
			{
				from: "kng",
				to: "kg"
			},
			{
				from: "knn",
				to: "kok"
			},
			{
				from: "kpv",
				to: "kv"
			},
			{
				from: "lvs",
				to: "lv"
			},
			{
				from: "mhr",
				to: "chm"
			},
			{
				from: "mup",
				to: "raj"
			},
			{
				from: "khk",
				to: "mn"
			},
			{
				from: "npi",
				to: "ne"
			},
			{
				from: "ojg",
				to: "oj"
			},
			{
				from: "ory",
				to: "or"
			},
			{
				from: "pbu",
				to: "ps"
			},
			{
				from: "pes",
				to: "fa"
			},
			{
				from: "plt",
				to: "mg"
			},
			{
				from: "pnb",
				to: "lah"
			},
			{
				from: "quz",
				to: "qu"
			},
			{
				from: "rmy",
				to: "rom"
			},
			{
				from: "spy",
				to: "kln"
			},
			{
				from: "src",
				to: "sc"
			},
			{
				from: "swh",
				to: "sw"
			},
			{
				from: "ttq",
				to: "tmh"
			},
			{
				from: "tw",
				to: "ak"
			},
			{
				from: "umu",
				to: "del"
			},
			{
				from: "uzn",
				to: "uz"
			},
			{
				from: "xpe",
				to: "kpe"
			},
			{
				from: "xsl",
				to: "den"
			},
			{
				from: "ydd",
				to: "yi"
			},
			{
				from: "zai",
				to: "zap"
			},
			{
				from: "zsm",
				to: "ms"
			},
			{
				from: "zyb",
				to: "za"
			},
			{
				from: "him",
				to: "srx"
			},
			{
				from: "mnk",
				to: "man"
			},
			{
				from: "bh",
				to: "bho"
			},
			{
				from: "prs",
				to: "fa-af"
			},
			{
				from: "swc",
				to: "sw-cd"
			},
			{
				from: "aar",
				to: "aa"
			},
			{
				from: "abk",
				to: "ab"
			},
			{
				from: "ave",
				to: "ae"
			},
			{
				from: "afr",
				to: "af"
			},
			{
				from: "aka",
				to: "ak"
			},
			{
				from: "amh",
				to: "am"
			},
			{
				from: "arg",
				to: "an"
			},
			{
				from: "ara",
				to: "ar"
			},
			{
				from: "asm",
				to: "as"
			},
			{
				from: "ava",
				to: "av"
			},
			{
				from: "aym",
				to: "ay"
			},
			{
				from: "aze",
				to: "az"
			},
			{
				from: "bak",
				to: "ba"
			},
			{
				from: "bel",
				to: "be"
			},
			{
				from: "bul",
				to: "bg"
			},
			{
				from: "bih",
				to: "bho"
			},
			{
				from: "bis",
				to: "bi"
			},
			{
				from: "bam",
				to: "bm"
			},
			{
				from: "ben",
				to: "bn"
			},
			{
				from: "bod",
				to: "bo"
			},
			{
				from: "bre",
				to: "br"
			},
			{
				from: "bos",
				to: "bs"
			},
			{
				from: "cat",
				to: "ca"
			},
			{
				from: "che",
				to: "ce"
			},
			{
				from: "cha",
				to: "ch"
			},
			{
				from: "cos",
				to: "co"
			},
			{
				from: "cre",
				to: "cr"
			},
			{
				from: "ces",
				to: "cs"
			},
			{
				from: "chu",
				to: "cu"
			},
			{
				from: "chv",
				to: "cv"
			},
			{
				from: "cym",
				to: "cy"
			},
			{
				from: "dan",
				to: "da"
			},
			{
				from: "deu",
				to: "de"
			},
			{
				from: "div",
				to: "dv"
			},
			{
				from: "dzo",
				to: "dz"
			},
			{
				from: "ewe",
				to: "ee"
			},
			{
				from: "ell",
				to: "el"
			},
			{
				from: "eng",
				to: "en"
			},
			{
				from: "epo",
				to: "eo"
			},
			{
				from: "spa",
				to: "es"
			},
			{
				from: "est",
				to: "et"
			},
			{
				from: "eus",
				to: "eu"
			},
			{
				from: "fas",
				to: "fa"
			},
			{
				from: "ful",
				to: "ff"
			},
			{
				from: "fin",
				to: "fi"
			},
			{
				from: "fij",
				to: "fj"
			},
			{
				from: "fao",
				to: "fo"
			},
			{
				from: "fra",
				to: "fr"
			},
			{
				from: "fry",
				to: "fy"
			},
			{
				from: "gle",
				to: "ga"
			},
			{
				from: "gla",
				to: "gd"
			},
			{
				from: "glg",
				to: "gl"
			},
			{
				from: "grn",
				to: "gn"
			},
			{
				from: "guj",
				to: "gu"
			},
			{
				from: "glv",
				to: "gv"
			},
			{
				from: "hau",
				to: "ha"
			},
			{
				from: "heb",
				to: "he"
			},
			{
				from: "hin",
				to: "hi"
			},
			{
				from: "hmo",
				to: "ho"
			},
			{
				from: "hrv",
				to: "hr"
			},
			{
				from: "hat",
				to: "ht"
			},
			{
				from: "hun",
				to: "hu"
			},
			{
				from: "hye",
				to: "hy"
			},
			{
				from: "her",
				to: "hz"
			},
			{
				from: "ina",
				to: "ia"
			},
			{
				from: "ind",
				to: "id"
			},
			{
				from: "ile",
				to: "ie"
			},
			{
				from: "ibo",
				to: "ig"
			},
			{
				from: "iii",
				to: "ii"
			},
			{
				from: "ipk",
				to: "ik"
			},
			{
				from: "ido",
				to: "io"
			},
			{
				from: "isl",
				to: "is"
			},
			{
				from: "ita",
				to: "it"
			},
			{
				from: "iku",
				to: "iu"
			},
			{
				from: "jpn",
				to: "ja"
			},
			{
				from: "jav",
				to: "jv"
			},
			{
				from: "kat",
				to: "ka"
			},
			{
				from: "kon",
				to: "kg"
			},
			{
				from: "kik",
				to: "ki"
			},
			{
				from: "kua",
				to: "kj"
			},
			{
				from: "kaz",
				to: "kk"
			},
			{
				from: "kal",
				to: "kl"
			},
			{
				from: "khm",
				to: "km"
			},
			{
				from: "kan",
				to: "kn"
			},
			{
				from: "kor",
				to: "ko"
			},
			{
				from: "kau",
				to: "kr"
			},
			{
				from: "kas",
				to: "ks"
			},
			{
				from: "kur",
				to: "ku"
			},
			{
				from: "kom",
				to: "kv"
			},
			{
				from: "cor",
				to: "kw"
			},
			{
				from: "kir",
				to: "ky"
			},
			{
				from: "lat",
				to: "la"
			},
			{
				from: "ltz",
				to: "lb"
			},
			{
				from: "lug",
				to: "lg"
			},
			{
				from: "lim",
				to: "li"
			},
			{
				from: "lin",
				to: "ln"
			},
			{
				from: "lao",
				to: "lo"
			},
			{
				from: "lit",
				to: "lt"
			},
			{
				from: "lub",
				to: "lu"
			},
			{
				from: "lav",
				to: "lv"
			},
			{
				from: "mlg",
				to: "mg"
			},
			{
				from: "mah",
				to: "mh"
			},
			{
				from: "mri",
				to: "mi"
			},
			{
				from: "mkd",
				to: "mk"
			},
			{
				from: "mal",
				to: "ml"
			},
			{
				from: "mon",
				to: "mn"
			},
			{
				from: "mol",
				to: "ro"
			},
			{
				from: "mar",
				to: "mr"
			},
			{
				from: "msa",
				to: "ms"
			},
			{
				from: "mlt",
				to: "mt"
			},
			{
				from: "mya",
				to: "my"
			},
			{
				from: "nau",
				to: "na"
			},
			{
				from: "nob",
				to: "nb"
			},
			{
				from: "nde",
				to: "nd"
			},
			{
				from: "nep",
				to: "ne"
			},
			{
				from: "ndo",
				to: "ng"
			},
			{
				from: "nld",
				to: "nl"
			},
			{
				from: "nno",
				to: "nn"
			},
			{
				from: "nor",
				to: "no"
			},
			{
				from: "nbl",
				to: "nr"
			},
			{
				from: "nav",
				to: "nv"
			},
			{
				from: "nya",
				to: "ny"
			},
			{
				from: "oci",
				to: "oc"
			},
			{
				from: "oji",
				to: "oj"
			},
			{
				from: "orm",
				to: "om"
			},
			{
				from: "ori",
				to: "or"
			},
			{
				from: "oss",
				to: "os"
			},
			{
				from: "pan",
				to: "pa"
			},
			{
				from: "pli",
				to: "pi"
			},
			{
				from: "pol",
				to: "pl"
			},
			{
				from: "pus",
				to: "ps"
			},
			{
				from: "por",
				to: "pt"
			},
			{
				from: "que",
				to: "qu"
			},
			{
				from: "roh",
				to: "rm"
			},
			{
				from: "run",
				to: "rn"
			},
			{
				from: "ron",
				to: "ro"
			},
			{
				from: "rus",
				to: "ru"
			},
			{
				from: "kin",
				to: "rw"
			},
			{
				from: "san",
				to: "sa"
			},
			{
				from: "srd",
				to: "sc"
			},
			{
				from: "snd",
				to: "sd"
			},
			{
				from: "sme",
				to: "se"
			},
			{
				from: "sag",
				to: "sg"
			},
			{
				from: "hbs",
				to: "sr-latn"
			},
			{
				from: "sin",
				to: "si"
			},
			{
				from: "slk",
				to: "sk"
			},
			{
				from: "slv",
				to: "sl"
			},
			{
				from: "smo",
				to: "sm"
			},
			{
				from: "sna",
				to: "sn"
			},
			{
				from: "som",
				to: "so"
			},
			{
				from: "sqi",
				to: "sq"
			},
			{
				from: "srp",
				to: "sr"
			},
			{
				from: "ssw",
				to: "ss"
			},
			{
				from: "sot",
				to: "st"
			},
			{
				from: "sun",
				to: "su"
			},
			{
				from: "swe",
				to: "sv"
			},
			{
				from: "swa",
				to: "sw"
			},
			{
				from: "tam",
				to: "ta"
			},
			{
				from: "tel",
				to: "te"
			},
			{
				from: "tgk",
				to: "tg"
			},
			{
				from: "tha",
				to: "th"
			},
			{
				from: "tir",
				to: "ti"
			},
			{
				from: "tuk",
				to: "tk"
			},
			{
				from: "tgl",
				to: "fil"
			},
			{
				from: "tsn",
				to: "tn"
			},
			{
				from: "ton",
				to: "to"
			},
			{
				from: "tur",
				to: "tr"
			},
			{
				from: "tso",
				to: "ts"
			},
			{
				from: "tat",
				to: "tt"
			},
			{
				from: "twi",
				to: "ak"
			},
			{
				from: "tah",
				to: "ty"
			},
			{
				from: "uig",
				to: "ug"
			},
			{
				from: "ukr",
				to: "uk"
			},
			{
				from: "urd",
				to: "ur"
			},
			{
				from: "uzb",
				to: "uz"
			},
			{
				from: "ven",
				to: "ve"
			},
			{
				from: "vie",
				to: "vi"
			},
			{
				from: "vol",
				to: "vo"
			},
			{
				from: "wln",
				to: "wa"
			},
			{
				from: "wol",
				to: "wo"
			},
			{
				from: "xho",
				to: "xh"
			},
			{
				from: "yid",
				to: "yi"
			},
			{
				from: "yor",
				to: "yo"
			},
			{
				from: "zha",
				to: "za"
			},
			{
				from: "zho",
				to: "zh"
			},
			{
				from: "zul",
				to: "zu"
			},
			{
				from: "alb",
				to: "sq"
			},
			{
				from: "arm",
				to: "hy"
			},
			{
				from: "baq",
				to: "eu"
			},
			{
				from: "bur",
				to: "my"
			},
			{
				from: "chi",
				to: "zh"
			},
			{
				from: "cze",
				to: "cs"
			},
			{
				from: "dut",
				to: "nl"
			},
			{
				from: "fre",
				to: "fr"
			},
			{
				from: "geo",
				to: "ka"
			},
			{
				from: "ger",
				to: "de"
			},
			{
				from: "gre",
				to: "el"
			},
			{
				from: "ice",
				to: "is"
			},
			{
				from: "mac",
				to: "mk"
			},
			{
				from: "mao",
				to: "mi"
			},
			{
				from: "may",
				to: "ms"
			},
			{
				from: "per",
				to: "fa"
			},
			{
				from: "rum",
				to: "ro"
			},
			{
				from: "slo",
				to: "sk"
			},
			{
				from: "tib",
				to: "bo"
			},
			{
				from: "wel",
				to: "cy"
			},
			{
				from: "und-aaland",
				to: "und-ax"
			},
			{
				from: "hy-arevmda",
				to: "hyw"
			},
			{
				from: "und-arevmda",
				to: "und"
			},
			{
				from: "und-arevela",
				to: "und"
			},
			{
				from: "und-lojban",
				to: "und"
			},
			{
				from: "und-saaho",
				to: "und"
			},
			{
				from: "und-bokmal",
				to: "und"
			},
			{
				from: "und-nynorsk",
				to: "und"
			},
			{
				from: "und-hakka",
				to: "und"
			},
			{
				from: "und-xiang",
				to: "und"
			},
			{
				from: "und-hepburn-heploc",
				to: "und-alalc97"
			}
		], Ja = [
			{
				from: {
					field: "script",
					value: "qaai"
				},
				to: {
					field: "script",
					value: "zinh"
				}
			},
			{
				from: {
					field: "region",
					value: "bu"
				},
				to: {
					field: "region",
					value: "mm"
				}
			},
			{
				from: {
					field: "region",
					value: "ct"
				},
				to: {
					field: "region",
					value: "ki"
				}
			},
			{
				from: {
					field: "region",
					value: "dd"
				},
				to: {
					field: "region",
					value: "de"
				}
			},
			{
				from: {
					field: "region",
					value: "dy"
				},
				to: {
					field: "region",
					value: "bj"
				}
			},
			{
				from: {
					field: "region",
					value: "fx"
				},
				to: {
					field: "region",
					value: "fr"
				}
			},
			{
				from: {
					field: "region",
					value: "hv"
				},
				to: {
					field: "region",
					value: "bf"
				}
			},
			{
				from: {
					field: "region",
					value: "jt"
				},
				to: {
					field: "region",
					value: "um"
				}
			},
			{
				from: {
					field: "region",
					value: "mi"
				},
				to: {
					field: "region",
					value: "um"
				}
			},
			{
				from: {
					field: "region",
					value: "nh"
				},
				to: {
					field: "region",
					value: "vu"
				}
			},
			{
				from: {
					field: "region",
					value: "nq"
				},
				to: {
					field: "region",
					value: "aq"
				}
			},
			{
				from: {
					field: "region",
					value: "pu"
				},
				to: {
					field: "region",
					value: "um"
				}
			},
			{
				from: {
					field: "region",
					value: "pz"
				},
				to: {
					field: "region",
					value: "pa"
				}
			},
			{
				from: {
					field: "region",
					value: "qu"
				},
				to: {
					field: "region",
					value: "eu"
				}
			},
			{
				from: {
					field: "region",
					value: "rh"
				},
				to: {
					field: "region",
					value: "zw"
				}
			},
			{
				from: {
					field: "region",
					value: "tp"
				},
				to: {
					field: "region",
					value: "tl"
				}
			},
			{
				from: {
					field: "region",
					value: "uk"
				},
				to: {
					field: "region",
					value: "gb"
				}
			},
			{
				from: {
					field: "region",
					value: "vd"
				},
				to: {
					field: "region",
					value: "vn"
				}
			},
			{
				from: {
					field: "region",
					value: "wk"
				},
				to: {
					field: "region",
					value: "um"
				}
			},
			{
				from: {
					field: "region",
					value: "yd"
				},
				to: {
					field: "region",
					value: "ye"
				}
			},
			{
				from: {
					field: "region",
					value: "zr"
				},
				to: {
					field: "region",
					value: "cd"
				}
			},
			{
				from: {
					field: "region",
					value: "230"
				},
				to: {
					field: "region",
					value: "et"
				}
			},
			{
				from: {
					field: "region",
					value: "280"
				},
				to: {
					field: "region",
					value: "de"
				}
			},
			{
				from: {
					field: "region",
					value: "736"
				},
				to: {
					field: "region",
					value: "sd"
				}
			},
			{
				from: {
					field: "region",
					value: "886"
				},
				to: {
					field: "region",
					value: "ye"
				}
			},
			{
				from: {
					field: "region",
					value: "958"
				},
				to: {
					field: "region",
					value: "aa"
				}
			},
			{
				from: {
					field: "region",
					value: "020"
				},
				to: {
					field: "region",
					value: "ad"
				}
			},
			{
				from: {
					field: "region",
					value: "784"
				},
				to: {
					field: "region",
					value: "ae"
				}
			},
			{
				from: {
					field: "region",
					value: "004"
				},
				to: {
					field: "region",
					value: "af"
				}
			},
			{
				from: {
					field: "region",
					value: "028"
				},
				to: {
					field: "region",
					value: "ag"
				}
			},
			{
				from: {
					field: "region",
					value: "660"
				},
				to: {
					field: "region",
					value: "ai"
				}
			},
			{
				from: {
					field: "region",
					value: "008"
				},
				to: {
					field: "region",
					value: "al"
				}
			},
			{
				from: {
					field: "region",
					value: "051"
				},
				to: {
					field: "region",
					value: "am"
				}
			},
			{
				from: {
					field: "region",
					value: "024"
				},
				to: {
					field: "region",
					value: "ao"
				}
			},
			{
				from: {
					field: "region",
					value: "010"
				},
				to: {
					field: "region",
					value: "aq"
				}
			},
			{
				from: {
					field: "region",
					value: "032"
				},
				to: {
					field: "region",
					value: "ar"
				}
			},
			{
				from: {
					field: "region",
					value: "016"
				},
				to: {
					field: "region",
					value: "as"
				}
			},
			{
				from: {
					field: "region",
					value: "040"
				},
				to: {
					field: "region",
					value: "at"
				}
			},
			{
				from: {
					field: "region",
					value: "036"
				},
				to: {
					field: "region",
					value: "au"
				}
			},
			{
				from: {
					field: "region",
					value: "533"
				},
				to: {
					field: "region",
					value: "aw"
				}
			},
			{
				from: {
					field: "region",
					value: "248"
				},
				to: {
					field: "region",
					value: "ax"
				}
			},
			{
				from: {
					field: "region",
					value: "031"
				},
				to: {
					field: "region",
					value: "az"
				}
			},
			{
				from: {
					field: "region",
					value: "070"
				},
				to: {
					field: "region",
					value: "ba"
				}
			},
			{
				from: {
					field: "region",
					value: "052"
				},
				to: {
					field: "region",
					value: "bb"
				}
			},
			{
				from: {
					field: "region",
					value: "050"
				},
				to: {
					field: "region",
					value: "bd"
				}
			},
			{
				from: {
					field: "region",
					value: "056"
				},
				to: {
					field: "region",
					value: "be"
				}
			},
			{
				from: {
					field: "region",
					value: "854"
				},
				to: {
					field: "region",
					value: "bf"
				}
			},
			{
				from: {
					field: "region",
					value: "100"
				},
				to: {
					field: "region",
					value: "bg"
				}
			},
			{
				from: {
					field: "region",
					value: "048"
				},
				to: {
					field: "region",
					value: "bh"
				}
			},
			{
				from: {
					field: "region",
					value: "108"
				},
				to: {
					field: "region",
					value: "bi"
				}
			},
			{
				from: {
					field: "region",
					value: "204"
				},
				to: {
					field: "region",
					value: "bj"
				}
			},
			{
				from: {
					field: "region",
					value: "652"
				},
				to: {
					field: "region",
					value: "bl"
				}
			},
			{
				from: {
					field: "region",
					value: "060"
				},
				to: {
					field: "region",
					value: "bm"
				}
			},
			{
				from: {
					field: "region",
					value: "096"
				},
				to: {
					field: "region",
					value: "bn"
				}
			},
			{
				from: {
					field: "region",
					value: "068"
				},
				to: {
					field: "region",
					value: "bo"
				}
			},
			{
				from: {
					field: "region",
					value: "535"
				},
				to: {
					field: "region",
					value: "bq"
				}
			},
			{
				from: {
					field: "region",
					value: "076"
				},
				to: {
					field: "region",
					value: "br"
				}
			},
			{
				from: {
					field: "region",
					value: "044"
				},
				to: {
					field: "region",
					value: "bs"
				}
			},
			{
				from: {
					field: "region",
					value: "064"
				},
				to: {
					field: "region",
					value: "bt"
				}
			},
			{
				from: {
					field: "region",
					value: "104"
				},
				to: {
					field: "region",
					value: "mm"
				}
			},
			{
				from: {
					field: "region",
					value: "074"
				},
				to: {
					field: "region",
					value: "bv"
				}
			},
			{
				from: {
					field: "region",
					value: "072"
				},
				to: {
					field: "region",
					value: "bw"
				}
			},
			{
				from: {
					field: "region",
					value: "112"
				},
				to: {
					field: "region",
					value: "by"
				}
			},
			{
				from: {
					field: "region",
					value: "084"
				},
				to: {
					field: "region",
					value: "bz"
				}
			},
			{
				from: {
					field: "region",
					value: "124"
				},
				to: {
					field: "region",
					value: "ca"
				}
			},
			{
				from: {
					field: "region",
					value: "166"
				},
				to: {
					field: "region",
					value: "cc"
				}
			},
			{
				from: {
					field: "region",
					value: "180"
				},
				to: {
					field: "region",
					value: "cd"
				}
			},
			{
				from: {
					field: "region",
					value: "140"
				},
				to: {
					field: "region",
					value: "cf"
				}
			},
			{
				from: {
					field: "region",
					value: "178"
				},
				to: {
					field: "region",
					value: "cg"
				}
			},
			{
				from: {
					field: "region",
					value: "756"
				},
				to: {
					field: "region",
					value: "ch"
				}
			},
			{
				from: {
					field: "region",
					value: "384"
				},
				to: {
					field: "region",
					value: "ci"
				}
			},
			{
				from: {
					field: "region",
					value: "184"
				},
				to: {
					field: "region",
					value: "ck"
				}
			},
			{
				from: {
					field: "region",
					value: "152"
				},
				to: {
					field: "region",
					value: "cl"
				}
			},
			{
				from: {
					field: "region",
					value: "120"
				},
				to: {
					field: "region",
					value: "cm"
				}
			},
			{
				from: {
					field: "region",
					value: "156"
				},
				to: {
					field: "region",
					value: "cn"
				}
			},
			{
				from: {
					field: "region",
					value: "170"
				},
				to: {
					field: "region",
					value: "co"
				}
			},
			{
				from: {
					field: "region",
					value: "188"
				},
				to: {
					field: "region",
					value: "cr"
				}
			},
			{
				from: {
					field: "region",
					value: "192"
				},
				to: {
					field: "region",
					value: "cu"
				}
			},
			{
				from: {
					field: "region",
					value: "132"
				},
				to: {
					field: "region",
					value: "cv"
				}
			},
			{
				from: {
					field: "region",
					value: "531"
				},
				to: {
					field: "region",
					value: "cw"
				}
			},
			{
				from: {
					field: "region",
					value: "162"
				},
				to: {
					field: "region",
					value: "cx"
				}
			},
			{
				from: {
					field: "region",
					value: "196"
				},
				to: {
					field: "region",
					value: "cy"
				}
			},
			{
				from: {
					field: "region",
					value: "203"
				},
				to: {
					field: "region",
					value: "cz"
				}
			},
			{
				from: {
					field: "region",
					value: "278"
				},
				to: {
					field: "region",
					value: "de"
				}
			},
			{
				from: {
					field: "region",
					value: "276"
				},
				to: {
					field: "region",
					value: "de"
				}
			},
			{
				from: {
					field: "region",
					value: "262"
				},
				to: {
					field: "region",
					value: "dj"
				}
			},
			{
				from: {
					field: "region",
					value: "208"
				},
				to: {
					field: "region",
					value: "dk"
				}
			},
			{
				from: {
					field: "region",
					value: "212"
				},
				to: {
					field: "region",
					value: "dm"
				}
			},
			{
				from: {
					field: "region",
					value: "214"
				},
				to: {
					field: "region",
					value: "do"
				}
			},
			{
				from: {
					field: "region",
					value: "012"
				},
				to: {
					field: "region",
					value: "dz"
				}
			},
			{
				from: {
					field: "region",
					value: "218"
				},
				to: {
					field: "region",
					value: "ec"
				}
			},
			{
				from: {
					field: "region",
					value: "233"
				},
				to: {
					field: "region",
					value: "ee"
				}
			},
			{
				from: {
					field: "region",
					value: "818"
				},
				to: {
					field: "region",
					value: "eg"
				}
			},
			{
				from: {
					field: "region",
					value: "732"
				},
				to: {
					field: "region",
					value: "eh"
				}
			},
			{
				from: {
					field: "region",
					value: "232"
				},
				to: {
					field: "region",
					value: "er"
				}
			},
			{
				from: {
					field: "region",
					value: "724"
				},
				to: {
					field: "region",
					value: "es"
				}
			},
			{
				from: {
					field: "region",
					value: "231"
				},
				to: {
					field: "region",
					value: "et"
				}
			},
			{
				from: {
					field: "region",
					value: "246"
				},
				to: {
					field: "region",
					value: "fi"
				}
			},
			{
				from: {
					field: "region",
					value: "242"
				},
				to: {
					field: "region",
					value: "fj"
				}
			},
			{
				from: {
					field: "region",
					value: "238"
				},
				to: {
					field: "region",
					value: "fk"
				}
			},
			{
				from: {
					field: "region",
					value: "583"
				},
				to: {
					field: "region",
					value: "fm"
				}
			},
			{
				from: {
					field: "region",
					value: "234"
				},
				to: {
					field: "region",
					value: "fo"
				}
			},
			{
				from: {
					field: "region",
					value: "250"
				},
				to: {
					field: "region",
					value: "fr"
				}
			},
			{
				from: {
					field: "region",
					value: "249"
				},
				to: {
					field: "region",
					value: "fr"
				}
			},
			{
				from: {
					field: "region",
					value: "266"
				},
				to: {
					field: "region",
					value: "ga"
				}
			},
			{
				from: {
					field: "region",
					value: "826"
				},
				to: {
					field: "region",
					value: "gb"
				}
			},
			{
				from: {
					field: "region",
					value: "308"
				},
				to: {
					field: "region",
					value: "gd"
				}
			},
			{
				from: {
					field: "region",
					value: "268"
				},
				to: {
					field: "region",
					value: "ge"
				}
			},
			{
				from: {
					field: "region",
					value: "254"
				},
				to: {
					field: "region",
					value: "gf"
				}
			},
			{
				from: {
					field: "region",
					value: "831"
				},
				to: {
					field: "region",
					value: "gg"
				}
			},
			{
				from: {
					field: "region",
					value: "288"
				},
				to: {
					field: "region",
					value: "gh"
				}
			},
			{
				from: {
					field: "region",
					value: "292"
				},
				to: {
					field: "region",
					value: "gi"
				}
			},
			{
				from: {
					field: "region",
					value: "304"
				},
				to: {
					field: "region",
					value: "gl"
				}
			},
			{
				from: {
					field: "region",
					value: "270"
				},
				to: {
					field: "region",
					value: "gm"
				}
			},
			{
				from: {
					field: "region",
					value: "324"
				},
				to: {
					field: "region",
					value: "gn"
				}
			},
			{
				from: {
					field: "region",
					value: "312"
				},
				to: {
					field: "region",
					value: "gp"
				}
			},
			{
				from: {
					field: "region",
					value: "226"
				},
				to: {
					field: "region",
					value: "gq"
				}
			},
			{
				from: {
					field: "region",
					value: "300"
				},
				to: {
					field: "region",
					value: "gr"
				}
			},
			{
				from: {
					field: "region",
					value: "239"
				},
				to: {
					field: "region",
					value: "gs"
				}
			},
			{
				from: {
					field: "region",
					value: "320"
				},
				to: {
					field: "region",
					value: "gt"
				}
			},
			{
				from: {
					field: "region",
					value: "316"
				},
				to: {
					field: "region",
					value: "gu"
				}
			},
			{
				from: {
					field: "region",
					value: "624"
				},
				to: {
					field: "region",
					value: "gw"
				}
			},
			{
				from: {
					field: "region",
					value: "328"
				},
				to: {
					field: "region",
					value: "gy"
				}
			},
			{
				from: {
					field: "region",
					value: "344"
				},
				to: {
					field: "region",
					value: "hk"
				}
			},
			{
				from: {
					field: "region",
					value: "334"
				},
				to: {
					field: "region",
					value: "hm"
				}
			},
			{
				from: {
					field: "region",
					value: "340"
				},
				to: {
					field: "region",
					value: "hn"
				}
			},
			{
				from: {
					field: "region",
					value: "191"
				},
				to: {
					field: "region",
					value: "hr"
				}
			},
			{
				from: {
					field: "region",
					value: "332"
				},
				to: {
					field: "region",
					value: "ht"
				}
			},
			{
				from: {
					field: "region",
					value: "348"
				},
				to: {
					field: "region",
					value: "hu"
				}
			},
			{
				from: {
					field: "region",
					value: "360"
				},
				to: {
					field: "region",
					value: "id"
				}
			},
			{
				from: {
					field: "region",
					value: "372"
				},
				to: {
					field: "region",
					value: "ie"
				}
			},
			{
				from: {
					field: "region",
					value: "376"
				},
				to: {
					field: "region",
					value: "il"
				}
			},
			{
				from: {
					field: "region",
					value: "833"
				},
				to: {
					field: "region",
					value: "im"
				}
			},
			{
				from: {
					field: "region",
					value: "356"
				},
				to: {
					field: "region",
					value: "in"
				}
			},
			{
				from: {
					field: "region",
					value: "086"
				},
				to: {
					field: "region",
					value: "io"
				}
			},
			{
				from: {
					field: "region",
					value: "368"
				},
				to: {
					field: "region",
					value: "iq"
				}
			},
			{
				from: {
					field: "region",
					value: "364"
				},
				to: {
					field: "region",
					value: "ir"
				}
			},
			{
				from: {
					field: "region",
					value: "352"
				},
				to: {
					field: "region",
					value: "is"
				}
			},
			{
				from: {
					field: "region",
					value: "380"
				},
				to: {
					field: "region",
					value: "it"
				}
			},
			{
				from: {
					field: "region",
					value: "832"
				},
				to: {
					field: "region",
					value: "je"
				}
			},
			{
				from: {
					field: "region",
					value: "388"
				},
				to: {
					field: "region",
					value: "jm"
				}
			},
			{
				from: {
					field: "region",
					value: "400"
				},
				to: {
					field: "region",
					value: "jo"
				}
			},
			{
				from: {
					field: "region",
					value: "392"
				},
				to: {
					field: "region",
					value: "jp"
				}
			},
			{
				from: {
					field: "region",
					value: "404"
				},
				to: {
					field: "region",
					value: "ke"
				}
			},
			{
				from: {
					field: "region",
					value: "417"
				},
				to: {
					field: "region",
					value: "kg"
				}
			},
			{
				from: {
					field: "region",
					value: "116"
				},
				to: {
					field: "region",
					value: "kh"
				}
			},
			{
				from: {
					field: "region",
					value: "296"
				},
				to: {
					field: "region",
					value: "ki"
				}
			},
			{
				from: {
					field: "region",
					value: "174"
				},
				to: {
					field: "region",
					value: "km"
				}
			},
			{
				from: {
					field: "region",
					value: "659"
				},
				to: {
					field: "region",
					value: "kn"
				}
			},
			{
				from: {
					field: "region",
					value: "408"
				},
				to: {
					field: "region",
					value: "kp"
				}
			},
			{
				from: {
					field: "region",
					value: "410"
				},
				to: {
					field: "region",
					value: "kr"
				}
			},
			{
				from: {
					field: "region",
					value: "414"
				},
				to: {
					field: "region",
					value: "kw"
				}
			},
			{
				from: {
					field: "region",
					value: "136"
				},
				to: {
					field: "region",
					value: "ky"
				}
			},
			{
				from: {
					field: "region",
					value: "398"
				},
				to: {
					field: "region",
					value: "kz"
				}
			},
			{
				from: {
					field: "region",
					value: "418"
				},
				to: {
					field: "region",
					value: "la"
				}
			},
			{
				from: {
					field: "region",
					value: "422"
				},
				to: {
					field: "region",
					value: "lb"
				}
			},
			{
				from: {
					field: "region",
					value: "662"
				},
				to: {
					field: "region",
					value: "lc"
				}
			},
			{
				from: {
					field: "region",
					value: "438"
				},
				to: {
					field: "region",
					value: "li"
				}
			},
			{
				from: {
					field: "region",
					value: "144"
				},
				to: {
					field: "region",
					value: "lk"
				}
			},
			{
				from: {
					field: "region",
					value: "430"
				},
				to: {
					field: "region",
					value: "lr"
				}
			},
			{
				from: {
					field: "region",
					value: "426"
				},
				to: {
					field: "region",
					value: "ls"
				}
			},
			{
				from: {
					field: "region",
					value: "440"
				},
				to: {
					field: "region",
					value: "lt"
				}
			},
			{
				from: {
					field: "region",
					value: "442"
				},
				to: {
					field: "region",
					value: "lu"
				}
			},
			{
				from: {
					field: "region",
					value: "428"
				},
				to: {
					field: "region",
					value: "lv"
				}
			},
			{
				from: {
					field: "region",
					value: "434"
				},
				to: {
					field: "region",
					value: "ly"
				}
			},
			{
				from: {
					field: "region",
					value: "504"
				},
				to: {
					field: "region",
					value: "ma"
				}
			},
			{
				from: {
					field: "region",
					value: "492"
				},
				to: {
					field: "region",
					value: "mc"
				}
			},
			{
				from: {
					field: "region",
					value: "498"
				},
				to: {
					field: "region",
					value: "md"
				}
			},
			{
				from: {
					field: "region",
					value: "499"
				},
				to: {
					field: "region",
					value: "me"
				}
			},
			{
				from: {
					field: "region",
					value: "663"
				},
				to: {
					field: "region",
					value: "mf"
				}
			},
			{
				from: {
					field: "region",
					value: "450"
				},
				to: {
					field: "region",
					value: "mg"
				}
			},
			{
				from: {
					field: "region",
					value: "584"
				},
				to: {
					field: "region",
					value: "mh"
				}
			},
			{
				from: {
					field: "region",
					value: "807"
				},
				to: {
					field: "region",
					value: "mk"
				}
			},
			{
				from: {
					field: "region",
					value: "466"
				},
				to: {
					field: "region",
					value: "ml"
				}
			},
			{
				from: {
					field: "region",
					value: "496"
				},
				to: {
					field: "region",
					value: "mn"
				}
			},
			{
				from: {
					field: "region",
					value: "446"
				},
				to: {
					field: "region",
					value: "mo"
				}
			},
			{
				from: {
					field: "region",
					value: "580"
				},
				to: {
					field: "region",
					value: "mp"
				}
			},
			{
				from: {
					field: "region",
					value: "474"
				},
				to: {
					field: "region",
					value: "mq"
				}
			},
			{
				from: {
					field: "region",
					value: "478"
				},
				to: {
					field: "region",
					value: "mr"
				}
			},
			{
				from: {
					field: "region",
					value: "500"
				},
				to: {
					field: "region",
					value: "ms"
				}
			},
			{
				from: {
					field: "region",
					value: "470"
				},
				to: {
					field: "region",
					value: "mt"
				}
			},
			{
				from: {
					field: "region",
					value: "480"
				},
				to: {
					field: "region",
					value: "mu"
				}
			},
			{
				from: {
					field: "region",
					value: "462"
				},
				to: {
					field: "region",
					value: "mv"
				}
			},
			{
				from: {
					field: "region",
					value: "454"
				},
				to: {
					field: "region",
					value: "mw"
				}
			},
			{
				from: {
					field: "region",
					value: "484"
				},
				to: {
					field: "region",
					value: "mx"
				}
			},
			{
				from: {
					field: "region",
					value: "458"
				},
				to: {
					field: "region",
					value: "my"
				}
			},
			{
				from: {
					field: "region",
					value: "508"
				},
				to: {
					field: "region",
					value: "mz"
				}
			},
			{
				from: {
					field: "region",
					value: "516"
				},
				to: {
					field: "region",
					value: "na"
				}
			},
			{
				from: {
					field: "region",
					value: "540"
				},
				to: {
					field: "region",
					value: "nc"
				}
			},
			{
				from: {
					field: "region",
					value: "562"
				},
				to: {
					field: "region",
					value: "ne"
				}
			},
			{
				from: {
					field: "region",
					value: "574"
				},
				to: {
					field: "region",
					value: "nf"
				}
			},
			{
				from: {
					field: "region",
					value: "566"
				},
				to: {
					field: "region",
					value: "ng"
				}
			},
			{
				from: {
					field: "region",
					value: "558"
				},
				to: {
					field: "region",
					value: "ni"
				}
			},
			{
				from: {
					field: "region",
					value: "528"
				},
				to: {
					field: "region",
					value: "nl"
				}
			},
			{
				from: {
					field: "region",
					value: "578"
				},
				to: {
					field: "region",
					value: "no"
				}
			},
			{
				from: {
					field: "region",
					value: "524"
				},
				to: {
					field: "region",
					value: "np"
				}
			},
			{
				from: {
					field: "region",
					value: "520"
				},
				to: {
					field: "region",
					value: "nr"
				}
			},
			{
				from: {
					field: "region",
					value: "570"
				},
				to: {
					field: "region",
					value: "nu"
				}
			},
			{
				from: {
					field: "region",
					value: "554"
				},
				to: {
					field: "region",
					value: "nz"
				}
			},
			{
				from: {
					field: "region",
					value: "512"
				},
				to: {
					field: "region",
					value: "om"
				}
			},
			{
				from: {
					field: "region",
					value: "591"
				},
				to: {
					field: "region",
					value: "pa"
				}
			},
			{
				from: {
					field: "region",
					value: "604"
				},
				to: {
					field: "region",
					value: "pe"
				}
			},
			{
				from: {
					field: "region",
					value: "258"
				},
				to: {
					field: "region",
					value: "pf"
				}
			},
			{
				from: {
					field: "region",
					value: "598"
				},
				to: {
					field: "region",
					value: "pg"
				}
			},
			{
				from: {
					field: "region",
					value: "608"
				},
				to: {
					field: "region",
					value: "ph"
				}
			},
			{
				from: {
					field: "region",
					value: "586"
				},
				to: {
					field: "region",
					value: "pk"
				}
			},
			{
				from: {
					field: "region",
					value: "616"
				},
				to: {
					field: "region",
					value: "pl"
				}
			},
			{
				from: {
					field: "region",
					value: "666"
				},
				to: {
					field: "region",
					value: "pm"
				}
			},
			{
				from: {
					field: "region",
					value: "612"
				},
				to: {
					field: "region",
					value: "pn"
				}
			},
			{
				from: {
					field: "region",
					value: "630"
				},
				to: {
					field: "region",
					value: "pr"
				}
			},
			{
				from: {
					field: "region",
					value: "275"
				},
				to: {
					field: "region",
					value: "ps"
				}
			},
			{
				from: {
					field: "region",
					value: "620"
				},
				to: {
					field: "region",
					value: "pt"
				}
			},
			{
				from: {
					field: "region",
					value: "585"
				},
				to: {
					field: "region",
					value: "pw"
				}
			},
			{
				from: {
					field: "region",
					value: "600"
				},
				to: {
					field: "region",
					value: "py"
				}
			},
			{
				from: {
					field: "region",
					value: "634"
				},
				to: {
					field: "region",
					value: "qa"
				}
			},
			{
				from: {
					field: "region",
					value: "959"
				},
				to: {
					field: "region",
					value: "qm"
				}
			},
			{
				from: {
					field: "region",
					value: "960"
				},
				to: {
					field: "region",
					value: "qn"
				}
			},
			{
				from: {
					field: "region",
					value: "962"
				},
				to: {
					field: "region",
					value: "qp"
				}
			},
			{
				from: {
					field: "region",
					value: "963"
				},
				to: {
					field: "region",
					value: "qq"
				}
			},
			{
				from: {
					field: "region",
					value: "964"
				},
				to: {
					field: "region",
					value: "qr"
				}
			},
			{
				from: {
					field: "region",
					value: "965"
				},
				to: {
					field: "region",
					value: "qs"
				}
			},
			{
				from: {
					field: "region",
					value: "966"
				},
				to: {
					field: "region",
					value: "qt"
				}
			},
			{
				from: {
					field: "region",
					value: "967"
				},
				to: {
					field: "region",
					value: "eu"
				}
			},
			{
				from: {
					field: "region",
					value: "968"
				},
				to: {
					field: "region",
					value: "qv"
				}
			},
			{
				from: {
					field: "region",
					value: "969"
				},
				to: {
					field: "region",
					value: "qw"
				}
			},
			{
				from: {
					field: "region",
					value: "970"
				},
				to: {
					field: "region",
					value: "qx"
				}
			},
			{
				from: {
					field: "region",
					value: "971"
				},
				to: {
					field: "region",
					value: "qy"
				}
			},
			{
				from: {
					field: "region",
					value: "972"
				},
				to: {
					field: "region",
					value: "qz"
				}
			},
			{
				from: {
					field: "region",
					value: "638"
				},
				to: {
					field: "region",
					value: "re"
				}
			},
			{
				from: {
					field: "region",
					value: "642"
				},
				to: {
					field: "region",
					value: "ro"
				}
			},
			{
				from: {
					field: "region",
					value: "688"
				},
				to: {
					field: "region",
					value: "rs"
				}
			},
			{
				from: {
					field: "region",
					value: "643"
				},
				to: {
					field: "region",
					value: "ru"
				}
			},
			{
				from: {
					field: "region",
					value: "646"
				},
				to: {
					field: "region",
					value: "rw"
				}
			},
			{
				from: {
					field: "region",
					value: "682"
				},
				to: {
					field: "region",
					value: "sa"
				}
			},
			{
				from: {
					field: "region",
					value: "090"
				},
				to: {
					field: "region",
					value: "sb"
				}
			},
			{
				from: {
					field: "region",
					value: "690"
				},
				to: {
					field: "region",
					value: "sc"
				}
			},
			{
				from: {
					field: "region",
					value: "729"
				},
				to: {
					field: "region",
					value: "sd"
				}
			},
			{
				from: {
					field: "region",
					value: "752"
				},
				to: {
					field: "region",
					value: "se"
				}
			},
			{
				from: {
					field: "region",
					value: "702"
				},
				to: {
					field: "region",
					value: "sg"
				}
			},
			{
				from: {
					field: "region",
					value: "654"
				},
				to: {
					field: "region",
					value: "sh"
				}
			},
			{
				from: {
					field: "region",
					value: "705"
				},
				to: {
					field: "region",
					value: "si"
				}
			},
			{
				from: {
					field: "region",
					value: "744"
				},
				to: {
					field: "region",
					value: "sj"
				}
			},
			{
				from: {
					field: "region",
					value: "703"
				},
				to: {
					field: "region",
					value: "sk"
				}
			},
			{
				from: {
					field: "region",
					value: "694"
				},
				to: {
					field: "region",
					value: "sl"
				}
			},
			{
				from: {
					field: "region",
					value: "674"
				},
				to: {
					field: "region",
					value: "sm"
				}
			},
			{
				from: {
					field: "region",
					value: "686"
				},
				to: {
					field: "region",
					value: "sn"
				}
			},
			{
				from: {
					field: "region",
					value: "706"
				},
				to: {
					field: "region",
					value: "so"
				}
			},
			{
				from: {
					field: "region",
					value: "740"
				},
				to: {
					field: "region",
					value: "sr"
				}
			},
			{
				from: {
					field: "region",
					value: "728"
				},
				to: {
					field: "region",
					value: "ss"
				}
			},
			{
				from: {
					field: "region",
					value: "678"
				},
				to: {
					field: "region",
					value: "st"
				}
			},
			{
				from: {
					field: "region",
					value: "222"
				},
				to: {
					field: "region",
					value: "sv"
				}
			},
			{
				from: {
					field: "region",
					value: "534"
				},
				to: {
					field: "region",
					value: "sx"
				}
			},
			{
				from: {
					field: "region",
					value: "760"
				},
				to: {
					field: "region",
					value: "sy"
				}
			},
			{
				from: {
					field: "region",
					value: "748"
				},
				to: {
					field: "region",
					value: "sz"
				}
			},
			{
				from: {
					field: "region",
					value: "796"
				},
				to: {
					field: "region",
					value: "tc"
				}
			},
			{
				from: {
					field: "region",
					value: "148"
				},
				to: {
					field: "region",
					value: "td"
				}
			},
			{
				from: {
					field: "region",
					value: "260"
				},
				to: {
					field: "region",
					value: "tf"
				}
			},
			{
				from: {
					field: "region",
					value: "768"
				},
				to: {
					field: "region",
					value: "tg"
				}
			},
			{
				from: {
					field: "region",
					value: "764"
				},
				to: {
					field: "region",
					value: "th"
				}
			},
			{
				from: {
					field: "region",
					value: "762"
				},
				to: {
					field: "region",
					value: "tj"
				}
			},
			{
				from: {
					field: "region",
					value: "772"
				},
				to: {
					field: "region",
					value: "tk"
				}
			},
			{
				from: {
					field: "region",
					value: "626"
				},
				to: {
					field: "region",
					value: "tl"
				}
			},
			{
				from: {
					field: "region",
					value: "795"
				},
				to: {
					field: "region",
					value: "tm"
				}
			},
			{
				from: {
					field: "region",
					value: "788"
				},
				to: {
					field: "region",
					value: "tn"
				}
			},
			{
				from: {
					field: "region",
					value: "776"
				},
				to: {
					field: "region",
					value: "to"
				}
			},
			{
				from: {
					field: "region",
					value: "792"
				},
				to: {
					field: "region",
					value: "tr"
				}
			},
			{
				from: {
					field: "region",
					value: "780"
				},
				to: {
					field: "region",
					value: "tt"
				}
			},
			{
				from: {
					field: "region",
					value: "798"
				},
				to: {
					field: "region",
					value: "tv"
				}
			},
			{
				from: {
					field: "region",
					value: "158"
				},
				to: {
					field: "region",
					value: "tw"
				}
			},
			{
				from: {
					field: "region",
					value: "834"
				},
				to: {
					field: "region",
					value: "tz"
				}
			},
			{
				from: {
					field: "region",
					value: "804"
				},
				to: {
					field: "region",
					value: "ua"
				}
			},
			{
				from: {
					field: "region",
					value: "800"
				},
				to: {
					field: "region",
					value: "ug"
				}
			},
			{
				from: {
					field: "region",
					value: "581"
				},
				to: {
					field: "region",
					value: "um"
				}
			},
			{
				from: {
					field: "region",
					value: "840"
				},
				to: {
					field: "region",
					value: "us"
				}
			},
			{
				from: {
					field: "region",
					value: "858"
				},
				to: {
					field: "region",
					value: "uy"
				}
			},
			{
				from: {
					field: "region",
					value: "860"
				},
				to: {
					field: "region",
					value: "uz"
				}
			},
			{
				from: {
					field: "region",
					value: "336"
				},
				to: {
					field: "region",
					value: "va"
				}
			},
			{
				from: {
					field: "region",
					value: "670"
				},
				to: {
					field: "region",
					value: "vc"
				}
			},
			{
				from: {
					field: "region",
					value: "862"
				},
				to: {
					field: "region",
					value: "ve"
				}
			},
			{
				from: {
					field: "region",
					value: "092"
				},
				to: {
					field: "region",
					value: "vg"
				}
			},
			{
				from: {
					field: "region",
					value: "850"
				},
				to: {
					field: "region",
					value: "vi"
				}
			},
			{
				from: {
					field: "region",
					value: "704"
				},
				to: {
					field: "region",
					value: "vn"
				}
			},
			{
				from: {
					field: "region",
					value: "548"
				},
				to: {
					field: "region",
					value: "vu"
				}
			},
			{
				from: {
					field: "region",
					value: "876"
				},
				to: {
					field: "region",
					value: "wf"
				}
			},
			{
				from: {
					field: "region",
					value: "882"
				},
				to: {
					field: "region",
					value: "ws"
				}
			},
			{
				from: {
					field: "region",
					value: "973"
				},
				to: {
					field: "region",
					value: "xa"
				}
			},
			{
				from: {
					field: "region",
					value: "974"
				},
				to: {
					field: "region",
					value: "xb"
				}
			},
			{
				from: {
					field: "region",
					value: "975"
				},
				to: {
					field: "region",
					value: "xc"
				}
			},
			{
				from: {
					field: "region",
					value: "976"
				},
				to: {
					field: "region",
					value: "xd"
				}
			},
			{
				from: {
					field: "region",
					value: "977"
				},
				to: {
					field: "region",
					value: "xe"
				}
			},
			{
				from: {
					field: "region",
					value: "978"
				},
				to: {
					field: "region",
					value: "xf"
				}
			},
			{
				from: {
					field: "region",
					value: "979"
				},
				to: {
					field: "region",
					value: "xg"
				}
			},
			{
				from: {
					field: "region",
					value: "980"
				},
				to: {
					field: "region",
					value: "xh"
				}
			},
			{
				from: {
					field: "region",
					value: "981"
				},
				to: {
					field: "region",
					value: "xi"
				}
			},
			{
				from: {
					field: "region",
					value: "982"
				},
				to: {
					field: "region",
					value: "xj"
				}
			},
			{
				from: {
					field: "region",
					value: "983"
				},
				to: {
					field: "region",
					value: "xk"
				}
			},
			{
				from: {
					field: "region",
					value: "984"
				},
				to: {
					field: "region",
					value: "xl"
				}
			},
			{
				from: {
					field: "region",
					value: "985"
				},
				to: {
					field: "region",
					value: "xm"
				}
			},
			{
				from: {
					field: "region",
					value: "986"
				},
				to: {
					field: "region",
					value: "xn"
				}
			},
			{
				from: {
					field: "region",
					value: "987"
				},
				to: {
					field: "region",
					value: "xo"
				}
			},
			{
				from: {
					field: "region",
					value: "988"
				},
				to: {
					field: "region",
					value: "xp"
				}
			},
			{
				from: {
					field: "region",
					value: "989"
				},
				to: {
					field: "region",
					value: "xq"
				}
			},
			{
				from: {
					field: "region",
					value: "990"
				},
				to: {
					field: "region",
					value: "xr"
				}
			},
			{
				from: {
					field: "region",
					value: "991"
				},
				to: {
					field: "region",
					value: "xs"
				}
			},
			{
				from: {
					field: "region",
					value: "992"
				},
				to: {
					field: "region",
					value: "xt"
				}
			},
			{
				from: {
					field: "region",
					value: "993"
				},
				to: {
					field: "region",
					value: "xu"
				}
			},
			{
				from: {
					field: "region",
					value: "994"
				},
				to: {
					field: "region",
					value: "xv"
				}
			},
			{
				from: {
					field: "region",
					value: "995"
				},
				to: {
					field: "region",
					value: "xw"
				}
			},
			{
				from: {
					field: "region",
					value: "996"
				},
				to: {
					field: "region",
					value: "xx"
				}
			},
			{
				from: {
					field: "region",
					value: "997"
				},
				to: {
					field: "region",
					value: "xy"
				}
			},
			{
				from: {
					field: "region",
					value: "998"
				},
				to: {
					field: "region",
					value: "xz"
				}
			},
			{
				from: {
					field: "region",
					value: "720"
				},
				to: {
					field: "region",
					value: "ye"
				}
			},
			{
				from: {
					field: "region",
					value: "887"
				},
				to: {
					field: "region",
					value: "ye"
				}
			},
			{
				from: {
					field: "region",
					value: "175"
				},
				to: {
					field: "region",
					value: "yt"
				}
			},
			{
				from: {
					field: "region",
					value: "710"
				},
				to: {
					field: "region",
					value: "za"
				}
			},
			{
				from: {
					field: "region",
					value: "894"
				},
				to: {
					field: "region",
					value: "zm"
				}
			},
			{
				from: {
					field: "region",
					value: "716"
				},
				to: {
					field: "region",
					value: "zw"
				}
			},
			{
				from: {
					field: "region",
					value: "999"
				},
				to: {
					field: "region",
					value: "zz"
				}
			},
			{
				from: {
					field: "variants",
					value: "polytoni"
				},
				to: {
					field: "variants",
					value: "polyton"
				}
			},
			{
				from: {
					field: "variants",
					value: "heploc"
				},
				to: {
					field: "variants",
					value: "alalc97"
				}
			}
		], tr = { region: {
			172: [
				"ru",
				"am",
				"az",
				"by",
				"ge",
				"kg",
				"kz",
				"md",
				"tj",
				"tm",
				"ua",
				"uz"
			],
			200: ["cz", "sk"],
			530: [
				"cw",
				"sx",
				"bq"
			],
			532: [
				"cw",
				"sx",
				"bq"
			],
			536: ["sa", "iq"],
			582: [
				"fm",
				"mh",
				"mp",
				"pw"
			],
			810: [
				"ru",
				"am",
				"az",
				"by",
				"ee",
				"ge",
				"kz",
				"kg",
				"lv",
				"lt",
				"md",
				"tj",
				"tm",
				"ua",
				"uz"
			],
			830: ["je", "gg"],
			890: [
				"rs",
				"me",
				"si",
				"hr",
				"mk",
				"ba"
			],
			891: ["rs", "me"],
			an: [
				"cw",
				"sx",
				"bq"
			],
			cs: ["rs", "me"],
			fq: ["aq", "tf"],
			nt: ["sa", "iq"],
			pc: [
				"fm",
				"mh",
				"mp",
				"pw"
			],
			su: [
				"ru",
				"am",
				"az",
				"by",
				"ee",
				"ge",
				"kz",
				"kg",
				"lv",
				"lt",
				"md",
				"tj",
				"tm",
				"ua",
				"uz"
			],
			yu: ["rs", "me"],
			"062": ["034", "143"],
			ant: [
				"cw",
				"sx",
				"bq"
			],
			scg: ["rs", "me"],
			ntz: ["sa", "iq"],
			sun: [
				"ru",
				"am",
				"az",
				"by",
				"ee",
				"ge",
				"kz",
				"kg",
				"lv",
				"lt",
				"md",
				"tj",
				"tm",
				"ua",
				"uz"
			],
			yug: ["rs", "me"]
		} }, er = {
			aa: "aa-latn-et",
			aaa: "aaa-latn-ng",
			aab: "aab-latn-ng",
			aac: "aac-latn-pg",
			aad: "aad-latn-pg",
			aae: "aae-latn-it",
			"aae-grek": "aae-grek-it",
			aaf: "aaf-mlym-in",
			"aaf-arab": "aaf-arab-in",
			aag: "aag-latn-pg",
			aah: "aah-latn-pg",
			aai: "aai-latn-zz",
			aak: "aak-latn-zz",
			aal: "aal-latn-cm",
			aan: "aan-latn-br",
			aao: "aao-arab-dz",
			aap: "aap-latn-br",
			aaq: "aaq-latn-us",
			aas: "aas-latn-tz",
			aat: "aat-grek-gr",
			aau: "aau-latn-zz",
			aaw: "aaw-latn-pg",
			aax: "aax-latn-id",
			aaz: "aaz-latn-id",
			ab: "ab-cyrl-ge",
			aba: "aba-latn-ci",
			abb: "abb-latn-cm",
			abc: "abc-latn-ph",
			abd: "abd-latn-ph",
			abe: "abe-latn-ca",
			abf: "abf-latn-my",
			abg: "abg-latn-pg",
			abh: "abh-arab-tj",
			abi: "abi-latn-zz",
			abl: "abl-rjng-id",
			"abl-latn": "abl-latn-id",
			abm: "abm-latn-ng",
			abn: "abn-latn-ng",
			abo: "abo-latn-ng",
			abp: "abp-latn-ph",
			abq: "abq-cyrl-zz",
			abr: "abr-latn-gh",
			abs: "abs-latn-id",
			abt: "abt-latn-zz",
			abu: "abu-latn-ci",
			abv: "abv-arab-bh",
			abw: "abw-latn-pg",
			abx: "abx-latn-ph",
			aby: "aby-latn-zz",
			abz: "abz-latn-id",
			aca: "aca-latn-co",
			acb: "acb-latn-ng",
			acd: "acd-latn-zz",
			ace: "ace-latn-id",
			acf: "acf-latn-lc",
			ach: "ach-latn-ug",
			acm: "acm-arab-iq",
			acn: "acn-latn-cn",
			acp: "acp-latn-ng",
			acq: "acq-arab-ye",
			acr: "acr-latn-gt",
			acs: "acs-latn-br",
			act: "act-latn-nl",
			acu: "acu-latn-ec",
			acv: "acv-latn-us",
			acw: "acw-arab-sa",
			acx: "acx-arab-om",
			acy: "acy-latn-cy",
			"acy-arab": "acy-arab-cy",
			"acy-grek": "acy-grek-cy",
			acz: "acz-latn-sd",
			ada: "ada-latn-gh",
			adb: "adb-latn-tl",
			add: "add-latn-cm",
			ade: "ade-latn-zz",
			adf: "adf-arab-om",
			adg: "adg-latn-au",
			adh: "adh-latn-ug",
			adi: "adi-latn-in",
			"adi-tibt": "adi-tibt-cn",
			adj: "adj-latn-zz",
			adl: "adl-latn-in",
			adn: "adn-latn-id",
			ado: "ado-latn-pg",
			adp: "adp-tibt-bt",
			adq: "adq-latn-gh",
			adr: "adr-latn-id",
			adt: "adt-latn-au",
			adu: "adu-latn-ng",
			adw: "adw-latn-br",
			adx: "adx-tibt-cn",
			ady: "ady-cyrl-ru",
			adz: "adz-latn-zz",
			ae: "ae-avst-ir",
			aea: "aea-latn-au",
			aeb: "aeb-arab-tn",
			aec: "aec-arab-eg",
			aee: "aee-arab-af",
			aek: "aek-latn-nc",
			ael: "ael-latn-cm",
			aem: "aem-latn-vn",
			aeq: "aeq-arab-pk",
			aer: "aer-latn-au",
			aeu: "aeu-latn-cn",
			aew: "aew-latn-pg",
			aey: "aey-latn-zz",
			aez: "aez-latn-pg",
			af: "af-latn-za",
			afb: "afb-arab-kw",
			afd: "afd-latn-pg",
			afe: "afe-latn-ng",
			afh: "afh-latn-gh",
			afi: "afi-latn-pg",
			afk: "afk-latn-pg",
			afn: "afn-latn-ng",
			afo: "afo-latn-ng",
			afp: "afp-latn-pg",
			afs: "afs-latn-mx",
			afu: "afu-latn-gh",
			afz: "afz-latn-id",
			aga: "aga-latn-pe",
			agb: "agb-latn-ng",
			agc: "agc-latn-zz",
			agd: "agd-latn-zz",
			age: "age-latn-pg",
			agf: "agf-latn-id",
			agg: "agg-latn-zz",
			agh: "agh-latn-cd",
			agi: "agi-deva-in",
			agj: "agj-ethi-et",
			"agj-arab": "agj-arab-et",
			agk: "agk-latn-ph",
			agl: "agl-latn-pg",
			agm: "agm-latn-zz",
			agn: "agn-latn-ph",
			ago: "ago-latn-zz",
			agq: "agq-latn-cm",
			agr: "agr-latn-pe",
			ags: "ags-latn-cm",
			agt: "agt-latn-ph",
			agu: "agu-latn-gt",
			agv: "agv-latn-ph",
			agw: "agw-latn-sb",
			agx: "agx-cyrl-ru",
			agy: "agy-latn-ph",
			agz: "agz-latn-ph",
			aha: "aha-latn-zz",
			ahb: "ahb-latn-vu",
			ahg: "ahg-ethi-et",
			ahh: "ahh-latn-id",
			ahi: "ahi-latn-ci",
			ahk: "ahk-latn-mm",
			"ahk-mymr": "ahk-mymr-mm",
			"ahk-th": "ahk-latn-th",
			"ahk-thai": "ahk-thai-th",
			ahl: "ahl-latn-zz",
			ahm: "ahm-latn-ci",
			ahn: "ahn-latn-ng",
			aho: "aho-ahom-in",
			ahp: "ahp-latn-ci",
			ahr: "ahr-deva-in",
			ahs: "ahs-latn-ng",
			aht: "aht-latn-us",
			aia: "aia-latn-sb",
			aib: "aib-arab-cn",
			aic: "aic-latn-pg",
			aid: "aid-latn-au",
			aie: "aie-latn-pg",
			aif: "aif-latn-pg",
			aig: "aig-latn-ag",
			aij: "aij-hebr-il",
			aik: "aik-latn-ng",
			ail: "ail-latn-pg",
			aim: "aim-latn-in",
			ain: "ain-kana-jp",
			"ain-latn": "ain-latn-jp",
			aio: "aio-mymr-in",
			aip: "aip-latn-id",
			aiq: "aiq-arab-af",
			air: "air-latn-id",
			ait: "ait-latn-br",
			aiw: "aiw-latn-et",
			"aiw-arab": "aiw-arab-et",
			"aiw-ethi": "aiw-ethi-et",
			aix: "aix-latn-pg",
			aiy: "aiy-latn-cf",
			aja: "aja-latn-ss",
			ajg: "ajg-latn-zz",
			aji: "aji-latn-nc",
			ajn: "ajn-latn-au",
			ajp: "ajp-arab-jo",
			ajt: "ajt-arab-tn",
			ajw: "ajw-latn-ng",
			ajz: "ajz-latn-in",
			ak: "ak-latn-gh",
			akb: "akb-latn-id",
			"akb-batk": "akb-batk-id",
			akc: "akc-latn-id",
			akd: "akd-latn-ng",
			ake: "ake-latn-gy",
			akf: "akf-latn-ng",
			akg: "akg-latn-id",
			akh: "akh-latn-pg",
			aki: "aki-latn-pg",
			akk: "akk-xsux-iq",
			akl: "akl-latn-ph",
			ako: "ako-latn-sr",
			akp: "akp-latn-gh",
			akq: "akq-latn-pg",
			akr: "akr-latn-vu",
			aks: "aks-latn-tg",
			akt: "akt-latn-pg",
			aku: "aku-latn-cm",
			akv: "akv-cyrl-ru",
			akw: "akw-latn-cg",
			akz: "akz-latn-us",
			ala: "ala-latn-zz",
			alc: "alc-latn-cl",
			ald: "ald-latn-ci",
			ale: "ale-latn-us",
			alf: "alf-latn-ng",
			alh: "alh-latn-au",
			ali: "ali-latn-zz",
			alj: "alj-latn-ph",
			alk: "alk-laoo-la",
			all: "all-mlym-in",
			alm: "alm-latn-vu",
			aln: "aln-latn-xk",
			alo: "alo-latn-id",
			alp: "alp-latn-id",
			alq: "alq-latn-ca",
			alr: "alr-cyrl-ru",
			alt: "alt-cyrl-ru",
			alu: "alu-latn-sb",
			alw: "alw-ethi-et",
			alx: "alx-latn-pg",
			aly: "aly-latn-au",
			alz: "alz-latn-cd",
			am: "am-ethi-et",
			ama: "ama-latn-br",
			amb: "amb-latn-ng",
			amc: "amc-latn-pe",
			ame: "ame-latn-pe",
			amf: "amf-latn-et",
			"amf-ethi": "amf-ethi-et",
			amg: "amg-latn-au",
			ami: "ami-latn-tw",
			amj: "amj-latn-td",
			amk: "amk-latn-id",
			amm: "amm-latn-zz",
			amn: "amn-latn-zz",
			amo: "amo-latn-ng",
			amp: "amp-latn-zz",
			amq: "amq-latn-id",
			amr: "amr-latn-pe",
			ams: "ams-jpan-jp",
			amt: "amt-latn-pg",
			amu: "amu-latn-mx",
			amv: "amv-latn-id",
			amw: "amw-syrc-sy",
			"amw-arab": "amw-arab-sy",
			"amw-armi": "amw-armi-sy",
			"amw-latn": "amw-latn-sy",
			amx: "amx-latn-au",
			amy: "amy-latn-au",
			amz: "amz-latn-au",
			an: "an-latn-es",
			ana: "ana-latn-co",
			anb: "anb-latn-pe",
			anc: "anc-latn-zz",
			and: "and-latn-id",
			ane: "ane-latn-nc",
			anf: "anf-latn-gh",
			ang: "ang-latn-gb",
			anh: "anh-latn-pg",
			ani: "ani-cyrl-ru",
			anj: "anj-latn-pg",
			ank: "ank-latn-zz",
			anl: "anl-latn-mm",
			anm: "anm-latn-in",
			ann: "ann-latn-ng",
			ano: "ano-latn-co",
			anp: "anp-deva-in",
			anr: "anr-deva-in",
			ans: "ans-latn-co",
			ant: "ant-latn-au",
			anu: "anu-ethi-et",
			"anu-arab": "anu-arab-ss",
			"anu-latn": "anu-latn-ss",
			anv: "anv-latn-cm",
			anw: "anw-latn-ng",
			anx: "anx-latn-pg",
			any: "any-latn-zz",
			anz: "anz-latn-pg",
			aoa: "aoa-latn-st",
			aob: "aob-latn-pg",
			aoc: "aoc-latn-ve",
			aod: "aod-latn-pg",
			aoe: "aoe-latn-pg",
			aof: "aof-latn-pg",
			aog: "aog-latn-pg",
			aoi: "aoi-latn-au",
			aoj: "aoj-latn-zz",
			aok: "aok-latn-nc",
			aol: "aol-latn-id",
			aom: "aom-latn-zz",
			aon: "aon-latn-pg",
			aor: "aor-latn-vu",
			aos: "aos-latn-id",
			aot: "aot-beng-bd",
			"aot-latn": "aot-latn-in",
			aox: "aox-latn-gy",
			aoz: "aoz-latn-id",
			apb: "apb-latn-sb",
			apc: "apc-arab-sy",
			apd: "apd-arab-tg",
			ape: "ape-latn-zz",
			apf: "apf-latn-ph",
			apg: "apg-latn-id",
			aph: "aph-deva-np",
			api: "api-latn-br",
			apj: "apj-latn-us",
			apk: "apk-latn-us",
			apl: "apl-latn-us",
			apm: "apm-latn-us",
			apn: "apn-latn-br",
			apo: "apo-latn-pg",
			app: "app-latn-vu",
			apr: "apr-latn-zz",
			aps: "aps-latn-zz",
			apt: "apt-latn-in",
			apu: "apu-latn-br",
			apv: "apv-latn-br",
			apw: "apw-latn-us",
			apx: "apx-latn-id",
			apy: "apy-latn-br",
			apz: "apz-latn-zz",
			aqc: "aqc-cyrl-ru",
			aqd: "aqd-latn-ml",
			aqg: "aqg-latn-ng",
			aqk: "aqk-latn-ng",
			aqm: "aqm-latn-id",
			aqn: "aqn-latn-ph",
			aqr: "aqr-latn-nc",
			aqt: "aqt-latn-py",
			aqz: "aqz-latn-br",
			ar: "ar-arab-eg",
			arc: "arc-armi-ir",
			"arc-nbat": "arc-nbat-jo",
			"arc-palm": "arc-palm-sy",
			ard: "ard-latn-au",
			are: "are-latn-au",
			arh: "arh-latn-zz",
			ari: "ari-latn-us",
			arj: "arj-latn-br",
			ark: "ark-latn-br",
			arl: "arl-latn-pe",
			arn: "arn-latn-cl",
			aro: "aro-latn-bo",
			arp: "arp-latn-us",
			arq: "arq-arab-dz",
			arr: "arr-latn-br",
			ars: "ars-arab-sa",
			aru: "aru-latn-br",
			arw: "arw-latn-sr",
			arx: "arx-latn-br",
			ary: "ary-arab-ma",
			arz: "arz-arab-eg",
			as: "as-beng-in",
			asa: "asa-latn-tz",
			asb: "asb-latn-ca",
			asc: "asc-latn-id",
			ase: "ase-sgnw-us",
			asg: "asg-latn-zz",
			ash: "ash-latn-pe",
			asi: "asi-latn-id",
			asj: "asj-latn-cm",
			ask: "ask-arab-af",
			asl: "asl-latn-id",
			asn: "asn-latn-br",
			aso: "aso-latn-zz",
			ass: "ass-latn-cm",
			ast: "ast-latn-es",
			asu: "asu-latn-br",
			asv: "asv-latn-cd",
			asx: "asx-latn-pg",
			asy: "asy-latn-id",
			asz: "asz-latn-id",
			ata: "ata-latn-zz",
			atb: "atb-latn-cn",
			"atb-lisu": "atb-lisu-cn",
			atc: "atc-latn-pe",
			atd: "atd-latn-ph",
			ate: "ate-latn-pg",
			atg: "atg-latn-zz",
			ati: "ati-latn-ci",
			atj: "atj-latn-ca",
			atk: "atk-latn-ph",
			atl: "atl-latn-ph",
			atm: "atm-latn-ph",
			atn: "atn-arab-ir",
			ato: "ato-latn-cm",
			atp: "atp-latn-ph",
			atq: "atq-latn-id",
			atr: "atr-latn-br",
			ats: "ats-latn-us",
			att: "att-latn-ph",
			atu: "atu-latn-ss",
			atv: "atv-cyrl-ru",
			atw: "atw-latn-us",
			atx: "atx-latn-br",
			aty: "aty-latn-vu",
			atz: "atz-latn-ph",
			aua: "aua-latn-sb",
			auc: "auc-latn-ec",
			aud: "aud-latn-sb",
			aug: "aug-latn-bj",
			auh: "auh-latn-zm",
			aui: "aui-latn-pg",
			auj: "auj-arab-ly",
			"auj-latn": "auj-latn-ly",
			"auj-tfng": "auj-tfng-ly",
			auk: "auk-latn-pg",
			aul: "aul-latn-vu",
			aum: "aum-latn-ng",
			aun: "aun-latn-pg",
			auo: "auo-latn-ng",
			aup: "aup-latn-pg",
			auq: "auq-latn-id",
			aur: "aur-latn-pg",
			aut: "aut-latn-pf",
			auu: "auu-latn-id",
			auw: "auw-latn-id",
			auy: "auy-latn-zz",
			auz: "auz-arab-uz",
			av: "av-cyrl-ru",
			avb: "avb-latn-pg",
			avd: "avd-arab-ir",
			avi: "avi-latn-ci",
			avk: "avk-latn-001",
			avl: "avl-arab-zz",
			avm: "avm-latn-au",
			avn: "avn-latn-zz",
			avo: "avo-latn-br",
			avs: "avs-latn-pe",
			avt: "avt-latn-zz",
			avu: "avu-latn-zz",
			avv: "avv-latn-br",
			awa: "awa-deva-in",
			awb: "awb-latn-zz",
			awc: "awc-latn-ng",
			awe: "awe-latn-br",
			awg: "awg-latn-au",
			awh: "awh-latn-id",
			awi: "awi-latn-pg",
			awk: "awk-latn-au",
			awm: "awm-latn-pg",
			awn: "awn-ethi-et",
			awo: "awo-latn-zz",
			awr: "awr-latn-id",
			aws: "aws-latn-id",
			awt: "awt-latn-br",
			awu: "awu-latn-id",
			awv: "awv-latn-id",
			aww: "aww-latn-pg",
			awx: "awx-latn-zz",
			awy: "awy-latn-id",
			axb: "axb-latn-ar",
			axe: "axe-latn-au",
			axg: "axg-latn-br",
			axk: "axk-latn-cf",
			axl: "axl-latn-au",
			axm: "axm-armn-am",
			axx: "axx-latn-nc",
			ay: "ay-latn-bo",
			aya: "aya-latn-pg",
			ayb: "ayb-latn-zz",
			ayc: "ayc-latn-pe",
			ayd: "ayd-latn-au",
			aye: "aye-latn-ng",
			ayg: "ayg-latn-tg",
			ayh: "ayh-arab-ye",
			ayi: "ayi-latn-ng",
			ayk: "ayk-latn-ng",
			ayl: "ayl-arab-ly",
			ayn: "ayn-arab-ye",
			ayo: "ayo-latn-py",
			ayp: "ayp-arab-iq",
			ayq: "ayq-latn-pg",
			ays: "ays-latn-ph",
			ayt: "ayt-latn-ph",
			ayu: "ayu-latn-ng",
			ayz: "ayz-latn-id",
			az: "az-latn-az",
			"az-arab": "az-arab-ir",
			"az-iq": "az-arab-iq",
			"az-ir": "az-arab-ir",
			"az-ru": "az-cyrl-ru",
			azb: "azb-arab-ir",
			"azb-cyrl": "azb-cyrl-az",
			"azb-latn": "azb-latn-az",
			azd: "azd-latn-mx",
			azg: "azg-latn-mx",
			azm: "azm-latn-mx",
			azn: "azn-latn-mx",
			azo: "azo-latn-cm",
			azt: "azt-latn-ph",
			azz: "azz-latn-mx",
			ba: "ba-cyrl-ru",
			baa: "baa-latn-sb",
			bab: "bab-latn-gw",
			bac: "bac-latn-id",
			bae: "bae-latn-ve",
			baf: "baf-latn-cm",
			bag: "bag-latn-cm",
			bah: "bah-latn-bs",
			baj: "baj-latn-id",
			bal: "bal-arab-pk",
			ban: "ban-latn-id",
			bao: "bao-latn-co",
			bap: "bap-deva-np",
			bar: "bar-latn-at",
			bas: "bas-latn-cm",
			bau: "bau-latn-ng",
			bav: "bav-latn-zz",
			baw: "baw-latn-cm",
			bax: "bax-bamu-cm",
			bay: "bay-latn-id",
			bba: "bba-latn-zz",
			bbb: "bbb-latn-zz",
			bbc: "bbc-latn-id",
			bbd: "bbd-latn-zz",
			bbe: "bbe-latn-cd",
			bbf: "bbf-latn-pg",
			bbg: "bbg-latn-ga",
			bbi: "bbi-latn-cm",
			bbj: "bbj-latn-cm",
			bbk: "bbk-latn-cm",
			bbl: "bbl-geor-ge",
			bbm: "bbm-latn-cd",
			bbn: "bbn-latn-pg",
			bbo: "bbo-latn-bf",
			bbp: "bbp-latn-zz",
			bbq: "bbq-latn-cm",
			bbr: "bbr-latn-zz",
			bbs: "bbs-latn-ng",
			bbt: "bbt-latn-ng",
			bbu: "bbu-latn-ng",
			bbv: "bbv-latn-pg",
			bbw: "bbw-latn-cm",
			bbx: "bbx-latn-cm",
			bby: "bby-latn-cm",
			bca: "bca-latn-cn",
			"bca-hani": "bca-hani-cn",
			bcb: "bcb-latn-sn",
			bcd: "bcd-latn-id",
			bce: "bce-latn-cm",
			bcf: "bcf-latn-zz",
			bcg: "bcg-latn-gn",
			bch: "bch-latn-zz",
			bci: "bci-latn-ci",
			bcj: "bcj-latn-au",
			bck: "bck-latn-au",
			bcm: "bcm-latn-zz",
			bcn: "bcn-latn-zz",
			bco: "bco-latn-zz",
			bcp: "bcp-latn-cd",
			bcq: "bcq-ethi-zz",
			bcr: "bcr-latn-ca",
			bcs: "bcs-latn-ng",
			bct: "bct-latn-cd",
			bcu: "bcu-latn-zz",
			bcv: "bcv-latn-ng",
			bcw: "bcw-latn-cm",
			bcy: "bcy-latn-ng",
			bcz: "bcz-latn-sn",
			bda: "bda-latn-sn",
			bdb: "bdb-latn-id",
			bdc: "bdc-latn-co",
			bdd: "bdd-latn-zz",
			bde: "bde-latn-ng",
			bdf: "bdf-latn-pg",
			bdg: "bdg-latn-my",
			bdh: "bdh-latn-ss",
			bdi: "bdi-latn-sd",
			bdj: "bdj-latn-ss",
			bdk: "bdk-latn-az",
			bdl: "bdl-latn-id",
			bdm: "bdm-latn-td",
			bdn: "bdn-latn-cm",
			bdo: "bdo-latn-td",
			bdp: "bdp-latn-tz",
			bdq: "bdq-latn-vn",
			bdr: "bdr-latn-my",
			bds: "bds-latn-tz",
			bdt: "bdt-latn-cf",
			bdu: "bdu-latn-cm",
			bdv: "bdv-orya-in",
			bdw: "bdw-latn-id",
			bdx: "bdx-latn-id",
			bdy: "bdy-latn-au",
			bdz: "bdz-arab-pk",
			be: "be-cyrl-by",
			bea: "bea-latn-ca",
			"bea-cans": "bea-cans-ca",
			beb: "beb-latn-cm",
			bec: "bec-latn-cm",
			bed: "bed-latn-id",
			bee: "bee-deva-in",
			bef: "bef-latn-zz",
			beh: "beh-latn-zz",
			bei: "bei-latn-id",
			bej: "bej-arab-sd",
			bek: "bek-latn-pg",
			bem: "bem-latn-zm",
			beo: "beo-latn-pg",
			bep: "bep-latn-id",
			beq: "beq-latn-cg",
			bes: "bes-latn-td",
			bet: "bet-latn-zz",
			beu: "beu-latn-id",
			bev: "bev-latn-ci",
			bew: "bew-latn-id",
			bex: "bex-latn-zz",
			bey: "bey-latn-pg",
			bez: "bez-latn-tz",
			bfa: "bfa-latn-ss",
			"bfa-arab": "bfa-arab-ss",
			bfb: "bfb-deva-in",
			bfc: "bfc-latn-cn",
			bfd: "bfd-latn-cm",
			bfe: "bfe-latn-id",
			bff: "bff-latn-cf",
			bfg: "bfg-latn-id",
			bfh: "bfh-latn-pg",
			bfj: "bfj-latn-cm",
			bfl: "bfl-latn-cf",
			bfm: "bfm-latn-cm",
			bfn: "bfn-latn-tl",
			bfo: "bfo-latn-bf",
			bfp: "bfp-latn-cm",
			bfq: "bfq-taml-in",
			bfs: "bfs-latn-cn",
			"bfs-hani": "bfs-hani-cn",
			bft: "bft-arab-pk",
			bfu: "bfu-tibt-in",
			"bfu-takr": "bfu-takr-in",
			bfw: "bfw-orya-in",
			bfx: "bfx-latn-ph",
			bfy: "bfy-deva-in",
			bfz: "bfz-deva-in",
			bg: "bg-cyrl-bg",
			bga: "bga-latn-ng",
			bgb: "bgb-latn-id",
			bgc: "bgc-deva-in",
			bgd: "bgd-deva-in",
			bgf: "bgf-latn-cm",
			bgg: "bgg-latn-in",
			bgi: "bgi-latn-ph",
			bgj: "bgj-latn-cm",
			bgn: "bgn-arab-pk",
			bgo: "bgo-latn-gn",
			bgp: "bgp-arab-pk",
			bgq: "bgq-deva-in",
			bgr: "bgr-latn-in",
			bgs: "bgs-latn-ph",
			bgt: "bgt-latn-sb",
			bgu: "bgu-latn-ng",
			bgv: "bgv-latn-id",
			bgw: "bgw-deva-in",
			bgx: "bgx-grek-tr",
			bgy: "bgy-latn-id",
			bgz: "bgz-latn-id",
			bha: "bha-deva-in",
			bhb: "bhb-deva-in",
			bhc: "bhc-latn-id",
			bhd: "bhd-deva-in",
			"bhd-arab": "bhd-arab-in",
			"bhd-takr": "bhd-takr-in",
			bhe: "bhe-arab-pk",
			bhf: "bhf-latn-pg",
			bhg: "bhg-latn-zz",
			bhh: "bhh-cyrl-il",
			"bhh-hebr": "bhh-hebr-il",
			"bhh-latn": "bhh-latn-il",
			bhi: "bhi-deva-in",
			bhj: "bhj-deva-np",
			bhl: "bhl-latn-zz",
			bhm: "bhm-arab-om",
			bhn: "bhn-syrc-ge",
			bho: "bho-deva-in",
			bhp: "bhp-latn-id",
			bhq: "bhq-latn-id",
			bhr: "bhr-latn-mg",
			bhs: "bhs-latn-cm",
			bht: "bht-takr-in",
			"bht-deva": "bht-deva-in",
			"bht-latn": "bht-latn-in",
			bhu: "bhu-deva-in",
			bhv: "bhv-latn-id",
			bhw: "bhw-latn-id",
			bhy: "bhy-latn-zz",
			bhz: "bhz-latn-id",
			bi: "bi-latn-vu",
			bia: "bia-latn-au",
			bib: "bib-latn-zz",
			bid: "bid-latn-td",
			bie: "bie-latn-pg",
			bif: "bif-latn-gw",
			big: "big-latn-zz",
			bik: "bik-latn-ph",
			bil: "bil-latn-ng",
			bim: "bim-latn-zz",
			bin: "bin-latn-ng",
			bio: "bio-latn-zz",
			bip: "bip-latn-cd",
			biq: "biq-latn-zz",
			bir: "bir-latn-pg",
			bit: "bit-latn-pg",
			biu: "biu-latn-in",
			biv: "biv-latn-gh",
			biw: "biw-latn-cm",
			biy: "biy-deva-in",
			biz: "biz-latn-cd",
			bja: "bja-latn-cd",
			bjb: "bjb-latn-au",
			bjc: "bjc-latn-pg",
			bjf: "bjf-syrc-il",
			bjg: "bjg-latn-gw",
			bjh: "bjh-latn-zz",
			bji: "bji-ethi-zz",
			bjj: "bjj-deva-in",
			bjk: "bjk-latn-pg",
			bjl: "bjl-latn-pg",
			bjm: "bjm-arab-iq",
			bjn: "bjn-latn-id",
			bjo: "bjo-latn-zz",
			bjp: "bjp-latn-pg",
			bjr: "bjr-latn-zz",
			bjs: "bjs-latn-bb",
			bjt: "bjt-latn-sn",
			bju: "bju-latn-cm",
			bjv: "bjv-latn-td",
			bjw: "bjw-latn-ci",
			bjx: "bjx-latn-ph",
			bjy: "bjy-latn-au",
			bjz: "bjz-latn-zz",
			bka: "bka-latn-ng",
			bkc: "bkc-latn-zz",
			bkd: "bkd-latn-ph",
			bkf: "bkf-latn-cd",
			bkg: "bkg-latn-cf",
			bkh: "bkh-latn-cm",
			bki: "bki-latn-vu",
			bkj: "bkj-latn-cf",
			bkl: "bkl-latn-id",
			bkm: "bkm-latn-cm",
			bkn: "bkn-latn-id",
			bko: "bko-latn-cm",
			bkp: "bkp-latn-cd",
			bkq: "bkq-latn-zz",
			bkr: "bkr-latn-id",
			bks: "bks-latn-ph",
			bkt: "bkt-latn-cd",
			bku: "bku-latn-ph",
			bkv: "bkv-latn-zz",
			bkw: "bkw-latn-cg",
			bkx: "bkx-latn-tl",
			bky: "bky-latn-ng",
			bkz: "bkz-latn-id",
			bla: "bla-latn-ca",
			blb: "blb-latn-sb",
			blc: "blc-latn-ca",
			bld: "bld-latn-id",
			ble: "ble-latn-gw",
			blf: "blf-latn-id",
			blg: "blg-latn-my",
			blh: "blh-latn-lr",
			bli: "bli-latn-cd",
			blj: "blj-latn-id",
			blk: "blk-mymr-mm",
			blm: "blm-latn-ss",
			bln: "bln-latn-ph",
			blo: "blo-latn-bj",
			blp: "blp-latn-sb",
			blq: "blq-latn-pg",
			blr: "blr-latn-cn",
			"blr-tale": "blr-tale-cn",
			"blr-thai": "blr-thai-th",
			bls: "bls-latn-id",
			blt: "blt-tavt-vn",
			blv: "blv-latn-ao",
			blw: "blw-latn-ph",
			blx: "blx-latn-ph",
			bly: "bly-latn-bj",
			blz: "blz-latn-id",
			bm: "bm-latn-ml",
			bma: "bma-latn-ng",
			bmb: "bmb-latn-cd",
			bmc: "bmc-latn-pg",
			bmd: "bmd-latn-gn",
			bme: "bme-latn-cf",
			bmf: "bmf-latn-sl",
			bmg: "bmg-latn-cd",
			bmh: "bmh-latn-zz",
			bmi: "bmi-latn-td",
			bmj: "bmj-deva-np",
			bmk: "bmk-latn-zz",
			bml: "bml-latn-cd",
			bmm: "bmm-latn-mg",
			bmn: "bmn-latn-pg",
			bmo: "bmo-latn-cm",
			bmp: "bmp-latn-pg",
			bmq: "bmq-latn-ml",
			bmr: "bmr-latn-co",
			bms: "bms-latn-ne",
			bmu: "bmu-latn-zz",
			bmv: "bmv-latn-cm",
			bmw: "bmw-latn-cg",
			bmx: "bmx-latn-pg",
			bmz: "bmz-latn-pg",
			bn: "bn-beng-bd",
			bna: "bna-latn-id",
			bnb: "bnb-latn-my",
			bnc: "bnc-latn-ph",
			bnd: "bnd-latn-id",
			bne: "bne-latn-id",
			bnf: "bnf-latn-id",
			bng: "bng-latn-zz",
			bni: "bni-latn-cd",
			bnj: "bnj-latn-ph",
			bnk: "bnk-latn-vu",
			bnm: "bnm-latn-zz",
			bnn: "bnn-latn-tw",
			bno: "bno-latn-ph",
			bnp: "bnp-latn-zz",
			bnq: "bnq-latn-id",
			bnr: "bnr-latn-vu",
			bns: "bns-deva-in",
			bnu: "bnu-latn-id",
			bnv: "bnv-latn-id",
			bnw: "bnw-latn-pg",
			bnx: "bnx-latn-cd",
			bny: "bny-latn-my",
			bnz: "bnz-latn-cm",
			bo: "bo-tibt-cn",
			boa: "boa-latn-pe",
			bob: "bob-latn-ke",
			boe: "boe-latn-cm",
			bof: "bof-latn-bf",
			boh: "boh-latn-cd",
			boj: "boj-latn-zz",
			bok: "bok-latn-cg",
			bol: "bol-latn-ng",
			bom: "bom-latn-zz",
			bon: "bon-latn-zz",
			boo: "boo-latn-ml",
			bop: "bop-latn-pg",
			boq: "boq-latn-pg",
			bor: "bor-latn-br",
			bot: "bot-latn-ss",
			bou: "bou-latn-tz",
			bov: "bov-latn-gh",
			bow: "bow-latn-pg",
			box: "box-latn-bf",
			boy: "boy-latn-cf",
			boz: "boz-latn-ml",
			"boz-arab": "boz-arab-ml",
			bpa: "bpa-latn-vu",
			bpc: "bpc-latn-cm",
			bpd: "bpd-latn-cf",
			bpe: "bpe-latn-pg",
			bpg: "bpg-latn-id",
			bph: "bph-cyrl-ru",
			bpi: "bpi-latn-pg",
			bpj: "bpj-latn-cd",
			bpk: "bpk-latn-nc",
			bpl: "bpl-latn-au",
			bpm: "bpm-latn-pg",
			bpo: "bpo-latn-id",
			bpp: "bpp-latn-id",
			bpq: "bpq-latn-id",
			bpr: "bpr-latn-ph",
			bps: "bps-latn-ph",
			bpt: "bpt-latn-au",
			bpu: "bpu-latn-pg",
			bpv: "bpv-latn-id",
			bpw: "bpw-latn-pg",
			bpx: "bpx-deva-in",
			bpy: "bpy-beng-in",
			bpz: "bpz-latn-id",
			bqa: "bqa-latn-bj",
			bqb: "bqb-latn-id",
			bqc: "bqc-latn-zz",
			bqd: "bqd-latn-cm",
			bqf: "bqf-latn-gn",
			"bqf-arab": "bqf-arab-gn",
			bqg: "bqg-latn-tg",
			bqi: "bqi-arab-ir",
			bqj: "bqj-latn-sn",
			bqk: "bqk-latn-cf",
			bql: "bql-latn-pg",
			bqm: "bqm-latn-cm",
			bqo: "bqo-latn-cm",
			bqp: "bqp-latn-zz",
			bqq: "bqq-latn-id",
			bqr: "bqr-latn-id",
			bqs: "bqs-latn-pg",
			bqt: "bqt-latn-cm",
			bqu: "bqu-latn-cd",
			bqv: "bqv-latn-ci",
			bqw: "bqw-latn-ng",
			bqx: "bqx-latn-ng",
			bqz: "bqz-latn-cm",
			br: "br-latn-fr",
			bra: "bra-deva-in",
			brb: "brb-khmr-kh",
			"brb-laoo": "brb-laoo-la",
			"brb-latn": "brb-latn-vn",
			brc: "brc-latn-gy",
			brd: "brd-deva-np",
			brf: "brf-latn-cd",
			brg: "brg-latn-bo",
			brh: "brh-arab-pk",
			bri: "bri-latn-cm",
			brj: "brj-latn-vu",
			brk: "brk-arab-sd",
			brl: "brl-latn-bw",
			brm: "brm-latn-cd",
			brn: "brn-latn-cr",
			brp: "brp-latn-id",
			brq: "brq-latn-pg",
			brr: "brr-latn-sb",
			brs: "brs-latn-id",
			brt: "brt-latn-ng",
			bru: "bru-latn-vn",
			"bru-laoo": "bru-laoo-la",
			"bru-thai": "bru-thai-la",
			brv: "brv-laoo-la",
			brx: "brx-deva-in",
			bry: "bry-latn-pg",
			brz: "brz-latn-zz",
			bs: "bs-latn-ba",
			bsa: "bsa-latn-id",
			bsb: "bsb-latn-bn",
			bsc: "bsc-latn-sn",
			bse: "bse-latn-cm",
			bsf: "bsf-latn-ng",
			bsh: "bsh-arab-af",
			bsi: "bsi-latn-cm",
			bsj: "bsj-latn-zz",
			bsk: "bsk-arab-pk",
			"bsk-latn": "bsk-latn-pk",
			bsl: "bsl-latn-ng",
			bsm: "bsm-latn-id",
			bsn: "bsn-latn-co",
			bso: "bso-latn-td",
			bsp: "bsp-latn-gn",
			bsq: "bsq-bass-lr",
			bsr: "bsr-latn-ng",
			bss: "bss-latn-cm",
			bst: "bst-ethi-zz",
			bsu: "bsu-latn-id",
			bsv: "bsv-latn-gn",
			"bsv-arab": "bsv-arab-gn",
			bsw: "bsw-latn-et",
			"bsw-ethi": "bsw-ethi-et",
			bsx: "bsx-latn-ng",
			bsy: "bsy-latn-my",
			bta: "bta-latn-ng",
			btc: "btc-latn-cm",
			btd: "btd-batk-id",
			bte: "bte-latn-ng",
			btf: "btf-latn-td",
			btg: "btg-latn-ci",
			bth: "bth-latn-my",
			bti: "bti-latn-id",
			btj: "btj-latn-id",
			btm: "btm-batk-id",
			btn: "btn-latn-ph",
			bto: "bto-latn-ph",
			btp: "btp-latn-pg",
			btq: "btq-latn-my",
			btr: "btr-latn-vu",
			bts: "bts-latn-id",
			"bts-batk": "bts-batk-id",
			btt: "btt-latn-zz",
			btu: "btu-latn-ng",
			btv: "btv-deva-pk",
			btw: "btw-latn-ph",
			btx: "btx-latn-id",
			"btx-batk": "btx-batk-id",
			bty: "bty-latn-id",
			btz: "btz-latn-id",
			bua: "bua-cyrl-ru",
			bub: "bub-latn-td",
			buc: "buc-latn-yt",
			bud: "bud-latn-zz",
			bue: "bue-latn-ca",
			buf: "buf-latn-cd",
			bug: "bug-latn-id",
			buh: "buh-latn-cn",
			bui: "bui-latn-cg",
			buj: "buj-latn-ng",
			buk: "buk-latn-zz",
			bum: "bum-latn-cm",
			bun: "bun-latn-sl",
			buo: "buo-latn-zz",
			bup: "bup-latn-id",
			buq: "buq-latn-pg",
			bus: "bus-latn-zz",
			but: "but-latn-pg",
			buu: "buu-latn-zz",
			buv: "buv-latn-pg",
			buw: "buw-latn-ga",
			bux: "bux-latn-ng",
			buy: "buy-latn-sl",
			buz: "buz-latn-ng",
			bva: "bva-latn-td",
			bvb: "bvb-latn-gq",
			bvc: "bvc-latn-sb",
			bvd: "bvd-latn-sb",
			bve: "bve-latn-id",
			bvf: "bvf-latn-td",
			bvg: "bvg-latn-cm",
			bvh: "bvh-latn-ng",
			bvi: "bvi-latn-ss",
			bvj: "bvj-latn-ng",
			bvk: "bvk-latn-id",
			bvm: "bvm-latn-cm",
			bvn: "bvn-latn-pg",
			bvo: "bvo-latn-td",
			bvq: "bvq-latn-cf",
			bvr: "bvr-latn-au",
			bvt: "bvt-latn-id",
			bvu: "bvu-latn-id",
			bvv: "bvv-latn-ve",
			bvw: "bvw-latn-ng",
			bvx: "bvx-latn-cg",
			bvy: "bvy-latn-ph",
			bvz: "bvz-latn-id",
			bwa: "bwa-latn-nc",
			bwb: "bwb-latn-fj",
			bwc: "bwc-latn-zm",
			bwd: "bwd-latn-zz",
			bwe: "bwe-mymr-mm",
			"bwe-latn": "bwe-latn-mm",
			bwf: "bwf-latn-pg",
			bwg: "bwg-latn-mz",
			bwh: "bwh-latn-cm",
			bwi: "bwi-latn-ve",
			bwj: "bwj-latn-bf",
			bwk: "bwk-latn-pg",
			bwl: "bwl-latn-cd",
			bwm: "bwm-latn-pg",
			bwo: "bwo-latn-et",
			"bwo-ethi": "bwo-ethi-et",
			bwp: "bwp-latn-id",
			bwq: "bwq-latn-bf",
			bwr: "bwr-latn-zz",
			bws: "bws-latn-cd",
			bwt: "bwt-latn-cm",
			bwu: "bwu-latn-gh",
			bww: "bww-latn-cd",
			bwx: "bwx-latn-cn",
			bwy: "bwy-latn-bf",
			bwz: "bwz-latn-cg",
			bxa: "bxa-latn-sb",
			bxb: "bxb-latn-ss",
			bxc: "bxc-latn-gq",
			bxf: "bxf-latn-pg",
			bxg: "bxg-latn-cd",
			bxh: "bxh-latn-zz",
			bxi: "bxi-latn-au",
			bxj: "bxj-latn-au",
			bxl: "bxl-latn-bf",
			bxm: "bxm-cyrl-mn",
			"bxm-latn": "bxm-latn-mn",
			"bxm-mong": "bxm-mong-mn",
			bxn: "bxn-latn-au",
			bxo: "bxo-latn-ng",
			bxp: "bxp-latn-cm",
			bxq: "bxq-latn-ng",
			bxs: "bxs-latn-cm",
			bxu: "bxu-mong-cn",
			"bxu-cyrl": "bxu-cyrl-cn",
			"bxu-latn": "bxu-latn-cn",
			bxv: "bxv-latn-td",
			bxw: "bxw-latn-ml",
			bxz: "bxz-latn-pg",
			bya: "bya-latn-ph",
			byb: "byb-latn-cm",
			byc: "byc-latn-ng",
			byd: "byd-latn-id",
			bye: "bye-latn-zz",
			byf: "byf-latn-ng",
			byh: "byh-deva-np",
			byi: "byi-latn-cd",
			byj: "byj-latn-ng",
			byk: "byk-latn-cn",
			byl: "byl-latn-id",
			bym: "bym-latn-au",
			byn: "byn-ethi-er",
			byp: "byp-latn-ng",
			byr: "byr-latn-zz",
			bys: "bys-latn-zz",
			byv: "byv-latn-cm",
			byw: "byw-deva-np",
			byx: "byx-latn-zz",
			byz: "byz-latn-pg",
			bza: "bza-latn-zz",
			bzb: "bzb-latn-id",
			bzc: "bzc-latn-mg",
			bzd: "bzd-latn-cr",
			bze: "bze-latn-ml",
			bzf: "bzf-latn-zz",
			bzh: "bzh-latn-zz",
			bzi: "bzi-thai-th",
			bzj: "bzj-latn-bz",
			bzk: "bzk-latn-ni",
			bzl: "bzl-latn-id",
			bzm: "bzm-latn-cd",
			bzn: "bzn-latn-id",
			bzo: "bzo-latn-cd",
			bzp: "bzp-latn-id",
			bzq: "bzq-latn-id",
			bzr: "bzr-latn-au",
			bzt: "bzt-latn-001",
			bzu: "bzu-latn-id",
			bzv: "bzv-latn-cm",
			bzw: "bzw-latn-zz",
			bzx: "bzx-latn-ml",
			bzy: "bzy-latn-ng",
			bzz: "bzz-latn-ng",
			ca: "ca-latn-es",
			caa: "caa-latn-gt",
			cab: "cab-latn-hn",
			cac: "cac-latn-gt",
			cad: "cad-latn-us",
			cae: "cae-latn-sn",
			caf: "caf-latn-ca",
			"caf-cans": "caf-cans-ca",
			cag: "cag-latn-py",
			cah: "cah-latn-pe",
			caj: "caj-latn-ar",
			cak: "cak-latn-gt",
			cal: "cal-latn-mp",
			cam: "cam-latn-nc",
			can: "can-latn-zz",
			cao: "cao-latn-bo",
			cap: "cap-latn-bo",
			caq: "caq-latn-in",
			car: "car-latn-ve",
			cas: "cas-latn-bo",
			cav: "cav-latn-bo",
			caw: "caw-latn-bo",
			cax: "cax-latn-bo",
			cay: "cay-latn-ca",
			caz: "caz-latn-bo",
			cbb: "cbb-latn-co",
			cbc: "cbc-latn-co",
			cbd: "cbd-latn-co",
			cbg: "cbg-latn-co",
			cbi: "cbi-latn-ec",
			cbj: "cbj-latn-zz",
			cbk: "cbk-latn-ph",
			"cbk-brai": "cbk-brai-ph",
			cbl: "cbl-latn-mm",
			cbn: "cbn-thai-th",
			cbo: "cbo-latn-ng",
			cbq: "cbq-latn-ng",
			cbr: "cbr-latn-pe",
			cbs: "cbs-latn-pe",
			cbt: "cbt-latn-pe",
			cbu: "cbu-latn-pe",
			cbv: "cbv-latn-co",
			cbw: "cbw-latn-ph",
			cby: "cby-latn-co",
			ccc: "ccc-latn-pe",
			ccd: "ccd-latn-br",
			cce: "cce-latn-mz",
			ccg: "ccg-latn-ng",
			cch: "cch-latn-ng",
			ccj: "ccj-latn-gw",
			ccl: "ccl-latn-tz",
			ccm: "ccm-latn-my",
			cco: "cco-latn-mx",
			ccp: "ccp-cakm-bd",
			ccr: "ccr-latn-sv",
			cde: "cde-telu-in",
			cdf: "cdf-latn-in",
			"cdf-beng": "cdf-beng-in",
			cdh: "cdh-deva-in",
			"cdh-takr": "cdh-takr-in",
			cdi: "cdi-gujr-in",
			cdj: "cdj-deva-in",
			cdm: "cdm-deva-np",
			"cdm-latn": "cdm-latn-np",
			cdo: "cdo-hans-cn",
			"cdo-hant": "cdo-hant-cn",
			"cdo-latn": "cdo-latn-cn",
			cdr: "cdr-latn-ng",
			cdz: "cdz-beng-in",
			ce: "ce-cyrl-ru",
			cea: "cea-latn-us",
			ceb: "ceb-latn-ph",
			ceg: "ceg-latn-py",
			cek: "cek-latn-mm",
			cen: "cen-latn-ng",
			cet: "cet-latn-ng",
			cey: "cey-latn-mm",
			cfa: "cfa-latn-zz",
			cfd: "cfd-latn-ng",
			cfg: "cfg-latn-ng",
			cfm: "cfm-latn-mm",
			"cfm-beng": "cfm-beng-in",
			cga: "cga-latn-pg",
			cgc: "cgc-latn-ph",
			cgg: "cgg-latn-ug",
			cgk: "cgk-tibt-bt",
			ch: "ch-latn-gu",
			chb: "chb-latn-co",
			chd: "chd-latn-mx",
			chf: "chf-latn-mx",
			chg: "chg-arab-tm",
			chh: "chh-latn-us",
			chj: "chj-latn-mx",
			chk: "chk-latn-fm",
			chl: "chl-latn-us",
			chm: "chm-cyrl-ru",
			chn: "chn-latn-us",
			"chn-dupl": "chn-dupl-us",
			cho: "cho-latn-us",
			chp: "chp-latn-ca",
			chq: "chq-latn-mx",
			chr: "chr-cher-us",
			cht: "cht-latn-pe",
			chw: "chw-latn-mz",
			chx: "chx-deva-np",
			chy: "chy-latn-us",
			chz: "chz-latn-mx",
			cia: "cia-latn-id",
			"cia-arab": "cia-arab-id",
			"cia-hang": "cia-hang-id",
			cib: "cib-latn-bj",
			cic: "cic-latn-us",
			cie: "cie-latn-ng",
			cih: "cih-deva-in",
			cim: "cim-latn-it",
			cin: "cin-latn-br",
			cip: "cip-latn-mx",
			cir: "cir-latn-nc",
			ciw: "ciw-latn-us",
			"ciw-cans": "ciw-cans-us",
			ciy: "ciy-latn-ve",
			cja: "cja-arab-kh",
			cje: "cje-latn-vn",
			cjh: "cjh-latn-us",
			cji: "cji-cyrl-ru",
			cjk: "cjk-latn-ao",
			cjm: "cjm-cham-vn",
			cjn: "cjn-latn-pg",
			cjo: "cjo-latn-pe",
			cjp: "cjp-latn-cr",
			cjs: "cjs-latn-ru",
			"cjs-cyrl": "cjs-cyrl-ru",
			cjv: "cjv-latn-zz",
			cjy: "cjy-hans-cn",
			"cjy-hant": "cjy-hant-cn",
			ckb: "ckb-arab-iq",
			ckl: "ckl-latn-zz",
			ckm: "ckm-latn-hr",
			"ckm-glag": "ckm-glag-hr",
			ckn: "ckn-latn-mm",
			cko: "cko-latn-zz",
			ckq: "ckq-latn-td",
			ckr: "ckr-latn-pg",
			cks: "cks-latn-nc",
			ckt: "ckt-cyrl-ru",
			cku: "cku-latn-us",
			ckv: "ckv-latn-tw",
			ckx: "ckx-latn-cm",
			cky: "cky-latn-zz",
			ckz: "ckz-latn-gt",
			cla: "cla-latn-zz",
			clc: "clc-latn-ca",
			cle: "cle-latn-mx",
			clh: "clh-arab-pk",
			cli: "cli-latn-gh",
			clj: "clj-latn-mm",
			clk: "clk-latn-in",
			"clk-tibt": "clk-tibt-cn",
			cll: "cll-latn-gh",
			clm: "clm-latn-us",
			clo: "clo-latn-mx",
			clt: "clt-latn-mm",
			clu: "clu-latn-ph",
			clw: "clw-cyrl-ru",
			cly: "cly-latn-mx",
			cma: "cma-latn-vn",
			cme: "cme-latn-zz",
			cmg: "cmg-soyo-mn",
			cmi: "cmi-latn-co",
			cml: "cml-latn-id",
			cmo: "cmo-latn-vn",
			"cmo-kh": "cmo-latn-kh",
			"cmo-khmr": "cmo-khmr-kh",
			cmr: "cmr-latn-mm",
			cms: "cms-latn-it",
			cmt: "cmt-latn-za",
			cna: "cna-tibt-in",
			cnb: "cnb-latn-mm",
			cnc: "cnc-latn-vn",
			cng: "cng-latn-cn",
			cnh: "cnh-latn-mm",
			cni: "cni-latn-pe",
			cnk: "cnk-latn-mm",
			cnl: "cnl-latn-mx",
			cnp: "cnp-hans-cn",
			"cnp-hant": "cnp-hant-cn",
			cnq: "cnq-latn-cm",
			cns: "cns-latn-id",
			cnt: "cnt-latn-mx",
			cnw: "cnw-latn-mm",
			cnx: "cnx-latn-gb",
			co: "co-latn-fr",
			coa: "coa-latn-au",
			cob: "cob-latn-mx",
			coc: "coc-latn-mx",
			cod: "cod-latn-pe",
			coe: "coe-latn-co",
			cof: "cof-latn-ec",
			cog: "cog-thai-th",
			coh: "coh-latn-ke",
			coj: "coj-latn-mx",
			cok: "cok-latn-mx",
			col: "col-latn-us",
			com: "com-latn-us",
			coo: "coo-latn-ca",
			cop: "cop-copt-eg",
			coq: "coq-latn-us",
			cot: "cot-latn-pe",
			cou: "cou-latn-sn",
			cox: "cox-latn-pe",
			coz: "coz-latn-mx",
			cpa: "cpa-latn-mx",
			cpb: "cpb-latn-pe",
			cpc: "cpc-latn-pe",
			cpg: "cpg-grek-gr",
			cpi: "cpi-latn-nr",
			cpn: "cpn-latn-gh",
			cpo: "cpo-latn-bf",
			cps: "cps-latn-ph",
			cpu: "cpu-latn-pe",
			cpx: "cpx-latn-cn",
			cpy: "cpy-latn-pe",
			cqd: "cqd-latn-cn",
			cr: "cr-cans-ca",
			crb: "crb-latn-vc",
			crc: "crc-latn-vu",
			crd: "crd-latn-us",
			crf: "crf-latn-co",
			crg: "crg-latn-ca",
			crh: "crh-cyrl-ua",
			cri: "cri-latn-st",
			crj: "crj-cans-ca",
			"crj-latn": "crj-latn-ca",
			crk: "crk-cans-ca",
			crl: "crl-cans-ca",
			crm: "crm-cans-ca",
			crn: "crn-latn-mx",
			cro: "cro-latn-us",
			crq: "crq-latn-ar",
			crs: "crs-latn-sc",
			crt: "crt-latn-ar",
			crv: "crv-latn-in",
			crw: "crw-latn-vn",
			crx: "crx-latn-ca",
			"crx-cans": "crx-cans-ca",
			cry: "cry-latn-ng",
			crz: "crz-latn-us",
			cs: "cs-latn-cz",
			csa: "csa-latn-mx",
			csb: "csb-latn-pl",
			csh: "csh-mymr-mm",
			"csh-latn": "csh-latn-mm",
			csj: "csj-latn-mm",
			csk: "csk-latn-sn",
			csm: "csm-latn-us",
			cso: "cso-latn-mx",
			csp: "csp-hans-cn",
			"csp-hant": "csp-hant-cn",
			css: "css-latn-us",
			cst: "cst-latn-us",
			csv: "csv-latn-mm",
			csw: "csw-cans-ca",
			csy: "csy-latn-mm",
			csz: "csz-latn-us",
			cta: "cta-latn-mx",
			ctc: "ctc-latn-us",
			ctd: "ctd-pauc-mm",
			cte: "cte-latn-mx",
			ctg: "ctg-beng-bd",
			"ctg-arab": "ctg-arab-bd",
			"ctg-latn": "ctg-latn-bd",
			cth: "cth-latn-mm",
			ctl: "ctl-latn-mx",
			ctm: "ctm-latn-us",
			ctn: "ctn-deva-np",
			cto: "cto-latn-co",
			ctp: "ctp-latn-mx",
			cts: "cts-latn-ph",
			ctt: "ctt-taml-in",
			ctu: "ctu-latn-mx",
			ctz: "ctz-latn-mx",
			cu: "cu-cyrl-ru",
			"cu-glag": "cu-glag-bg",
			cua: "cua-latn-vn",
			cub: "cub-latn-co",
			cuc: "cuc-latn-mx",
			cuh: "cuh-latn-ke",
			cui: "cui-latn-co",
			cuj: "cuj-latn-pe",
			cuk: "cuk-latn-pa",
			cul: "cul-latn-br",
			cuo: "cuo-latn-ve",
			cup: "cup-latn-us",
			cut: "cut-latn-mx",
			cuu: "cuu-lana-cn",
			cuv: "cuv-latn-cm",
			cux: "cux-latn-mx",
			cv: "cv-cyrl-ru",
			cvg: "cvg-latn-in",
			"cvg-tibt": "cvg-tibt-in",
			cvn: "cvn-latn-mx",
			cwa: "cwa-latn-tz",
			cwb: "cwb-latn-mz",
			cwe: "cwe-latn-tz",
			cwg: "cwg-latn-my",
			cwt: "cwt-latn-sn",
			cy: "cy-latn-gb",
			cya: "cya-latn-mx",
			cyb: "cyb-latn-bo",
			cyo: "cyo-latn-ph",
			czh: "czh-hans-cn",
			"czh-hant": "czh-hant-cn",
			czk: "czk-hebr-cz",
			czn: "czn-latn-mx",
			czt: "czt-latn-mm",
			da: "da-latn-dk",
			daa: "daa-latn-td",
			dac: "dac-latn-pg",
			dad: "dad-latn-zz",
			dae: "dae-latn-cm",
			daf: "daf-latn-ci",
			dag: "dag-latn-zz",
			dah: "dah-latn-zz",
			dai: "dai-latn-td",
			daj: "daj-latn-sd",
			dak: "dak-latn-us",
			dal: "dal-latn-ke",
			dam: "dam-latn-ng",
			dao: "dao-latn-mm",
			daq: "daq-deva-in",
			dar: "dar-cyrl-ru",
			das: "das-latn-ci",
			dau: "dau-latn-td",
			dav: "dav-latn-ke",
			daw: "daw-latn-ph",
			dax: "dax-latn-au",
			daz: "daz-latn-id",
			dba: "dba-latn-ml",
			dbb: "dbb-latn-ng",
			dbd: "dbd-latn-zz",
			dbe: "dbe-latn-id",
			dbf: "dbf-latn-id",
			dbg: "dbg-latn-ml",
			dbi: "dbi-latn-ng",
			dbj: "dbj-latn-my",
			"dbj-arab": "dbj-arab-my",
			dbl: "dbl-latn-au",
			dbm: "dbm-latn-ng",
			dbn: "dbn-latn-id",
			dbo: "dbo-latn-ng",
			dbp: "dbp-latn-ng",
			dbq: "dbq-latn-zz",
			dbt: "dbt-latn-ml",
			dbu: "dbu-latn-ml",
			dbv: "dbv-latn-ng",
			dbw: "dbw-latn-ml",
			dby: "dby-latn-pg",
			dcc: "dcc-arab-in",
			dcr: "dcr-latn-vi",
			dda: "dda-latn-au",
			ddd: "ddd-latn-ss",
			dde: "dde-latn-cg",
			ddg: "ddg-latn-tl",
			ddi: "ddi-latn-pg",
			ddj: "ddj-latn-au",
			ddn: "ddn-latn-zz",
			ddo: "ddo-cyrl-ru",
			ddr: "ddr-latn-au",
			dds: "dds-latn-ml",
			ddw: "ddw-latn-id",
			de: "de-latn-de",
			dec: "dec-latn-sd",
			ded: "ded-latn-zz",
			dee: "dee-latn-lr",
			def: "def-arab-ir",
			deg: "deg-latn-ng",
			deh: "deh-arab-pk",
			dei: "dei-latn-id",
			dek: "dek-latn-cm",
			del: "del-latn-us",
			dem: "dem-latn-id",
			den: "den-latn-ca",
			deq: "deq-latn-cf",
			der: "der-beng-in",
			"der-latn": "der-latn-in",
			des: "des-latn-br",
			dev: "dev-latn-pg",
			dez: "dez-latn-cd",
			dga: "dga-latn-zz",
			dgb: "dgb-latn-ml",
			dgc: "dgc-latn-ph",
			dgd: "dgd-latn-bf",
			dge: "dge-latn-pg",
			dgg: "dgg-latn-pg",
			dgh: "dgh-latn-zz",
			dgi: "dgi-latn-zz",
			dgk: "dgk-latn-cf",
			dgl: "dgl-arab-zz",
			dgn: "dgn-latn-au",
			dgr: "dgr-latn-ca",
			dgs: "dgs-latn-bf",
			dgt: "dgt-latn-au",
			dgw: "dgw-latn-au",
			dgx: "dgx-latn-pg",
			dgz: "dgz-latn-zz",
			dhg: "dhg-latn-au",
			dhi: "dhi-deva-np",
			dhl: "dhl-latn-au",
			dhm: "dhm-latn-ao",
			dhn: "dhn-gujr-in",
			dho: "dho-deva-in",
			dhr: "dhr-latn-au",
			dhs: "dhs-latn-tz",
			dhu: "dhu-latn-au",
			dhv: "dhv-latn-nc",
			dhw: "dhw-deva-np",
			dhx: "dhx-latn-au",
			dia: "dia-latn-zz",
			dib: "dib-latn-ss",
			dic: "dic-latn-ci",
			did: "did-latn-ss",
			dif: "dif-latn-au",
			dig: "dig-latn-ke",
			dih: "dih-latn-mx",
			dii: "dii-latn-cm",
			dij: "dij-latn-id",
			dil: "dil-latn-sd",
			din: "din-latn-ss",
			"din-arab": "din-arab-ss",
			dio: "dio-latn-ng",
			dip: "dip-latn-ss",
			dir: "dir-latn-ng",
			dis: "dis-latn-in",
			"dis-beng": "dis-beng-in",
			diu: "diu-latn-na",
			diw: "diw-latn-ss",
			dix: "dix-latn-vu",
			diy: "diy-latn-id",
			diz: "diz-latn-cd",
			dja: "dja-latn-au",
			djb: "djb-latn-au",
			djc: "djc-latn-td",
			djd: "djd-latn-au",
			dje: "dje-latn-ne",
			djf: "djf-latn-au",
			dji: "dji-latn-au",
			djj: "djj-latn-au",
			djk: "djk-latn-sr",
			djm: "djm-latn-ml",
			djn: "djn-latn-au",
			djo: "djo-latn-id",
			djr: "djr-latn-au",
			dju: "dju-latn-pg",
			djw: "djw-latn-au",
			dka: "dka-tibt-bt",
			dkg: "dkg-latn-ng",
			dkk: "dkk-latn-id",
			dkr: "dkr-latn-my",
			dks: "dks-latn-ss",
			dkx: "dkx-latn-cm",
			dlg: "dlg-cyrl-ru",
			dlm: "dlm-latn-hr",
			dln: "dln-latn-in",
			dma: "dma-latn-ga",
			dmb: "dmb-latn-ml",
			dmc: "dmc-latn-pg",
			dmd: "dmd-latn-au",
			dme: "dme-latn-cm",
			dmf: "dmf-medf-ng",
			dmg: "dmg-latn-my",
			dmk: "dmk-arab-pk",
			dml: "dml-arab-pk",
			dmm: "dmm-latn-cm",
			dmo: "dmo-latn-cm",
			dmr: "dmr-latn-id",
			dms: "dms-latn-id",
			dmu: "dmu-latn-id",
			dmv: "dmv-latn-my",
			dmw: "dmw-latn-au",
			dmx: "dmx-latn-mz",
			dmy: "dmy-latn-id",
			dna: "dna-latn-id",
			dnd: "dnd-latn-pg",
			dne: "dne-latn-tz",
			dng: "dng-cyrl-kg",
			"dng-arab": "dng-arab-kg",
			dni: "dni-latn-id",
			dnj: "dnj-latn-ci",
			dnk: "dnk-latn-id",
			dnn: "dnn-latn-bf",
			dno: "dno-latn-cd",
			dnr: "dnr-latn-pg",
			dnt: "dnt-latn-id",
			dnu: "dnu-mymr-mm",
			dnv: "dnv-mymr-mm",
			dnw: "dnw-latn-id",
			dny: "dny-latn-br",
			doa: "doa-latn-pg",
			dob: "dob-latn-zz",
			doc: "doc-latn-cn",
			doe: "doe-latn-tz",
			dof: "dof-latn-pg",
			doh: "doh-latn-ng",
			doi: "doi-deva-in",
			dok: "dok-latn-id",
			dol: "dol-latn-pg",
			don: "don-latn-pg",
			doo: "doo-latn-cd",
			dop: "dop-latn-zz",
			dor: "dor-latn-sb",
			dos: "dos-latn-bf",
			dot: "dot-latn-ng",
			dov: "dov-latn-zw",
			dow: "dow-latn-zz",
			dox: "dox-ethi-et",
			doy: "doy-latn-gh",
			dpp: "dpp-latn-my",
			drc: "drc-latn-pt",
			dre: "dre-tibt-np",
			drg: "drg-latn-my",
			drh: "drh-mong-cn",
			dri: "dri-latn-zz",
			drl: "drl-latn-au",
			drn: "drn-latn-id",
			dro: "dro-latn-my",
			drq: "drq-deva-np",
			drs: "drs-ethi-zz",
			drt: "drt-latn-nl",
			dru: "dru-latn-tw",
			dry: "dry-deva-np",
			dsb: "dsb-latn-de",
			dsh: "dsh-latn-ke",
			dsi: "dsi-latn-td",
			dsn: "dsn-latn-id",
			dso: "dso-orya-in",
			dsq: "dsq-latn-ml",
			"dsq-arab": "dsq-arab-ml",
			dta: "dta-latn-cn",
			"dta-cyrl": "dta-cyrl-cn",
			"dta-hans": "dta-hans-cn",
			dtb: "dtb-latn-my",
			dtd: "dtd-latn-ca",
			dth: "dth-latn-au",
			dti: "dti-latn-ml",
			dtk: "dtk-latn-ml",
			dtm: "dtm-latn-ml",
			dto: "dto-latn-ml",
			dtp: "dtp-latn-my",
			dtr: "dtr-latn-my",
			dts: "dts-latn-zz",
			dtt: "dtt-latn-ml",
			dtu: "dtu-latn-ml",
			dty: "dty-deva-np",
			dua: "dua-latn-cm",
			dub: "dub-gujr-in",
			duc: "duc-latn-zz",
			dud: "dud-latn-zz",
			due: "due-latn-ph",
			duf: "duf-latn-nc",
			dug: "dug-latn-zz",
			duh: "duh-deva-in",
			"duh-gujr": "duh-gujr-in",
			dui: "dui-latn-pg",
			duk: "duk-latn-pg",
			dul: "dul-latn-ph",
			dum: "dum-latn-nl",
			dun: "dun-latn-id",
			duo: "duo-latn-ph",
			dup: "dup-latn-id",
			duq: "duq-latn-id",
			dur: "dur-latn-cm",
			dus: "dus-deva-np",
			duu: "duu-latn-cn",
			duv: "duv-latn-id",
			duw: "duw-latn-id",
			dux: "dux-latn-ml",
			duy: "duy-latn-ph",
			duz: "duz-latn-cm",
			dv: "dv-thaa-mv",
			dva: "dva-latn-zz",
			dwa: "dwa-latn-ng",
			dwk: "dwk-orya-in",
			dwr: "dwr-latn-et",
			"dwr-ethi": "dwr-ethi-et",
			dws: "dws-latn-001",
			dwu: "dwu-latn-au",
			dww: "dww-latn-zz",
			dwy: "dwy-latn-au",
			dwz: "dwz-deva-np",
			dya: "dya-latn-bf",
			dyb: "dyb-latn-au",
			dyd: "dyd-latn-au",
			dyg: "dyg-latn-ph",
			dyi: "dyi-latn-ci",
			dym: "dym-latn-ml",
			dyn: "dyn-latn-au",
			dyo: "dyo-latn-sn",
			dyu: "dyu-latn-bf",
			dyy: "dyy-latn-au",
			dz: "dz-tibt-bt",
			dza: "dza-latn-ng",
			dze: "dze-latn-au",
			dzg: "dzg-latn-zz",
			dzl: "dzl-tibt-bt",
			dzn: "dzn-latn-cd",
			eaa: "eaa-latn-au",
			ebc: "ebc-latn-id",
			ebg: "ebg-latn-ng",
			ebk: "ebk-latn-ph",
			ebo: "ebo-latn-cg",
			ebr: "ebr-latn-ci",
			ebu: "ebu-latn-ke",
			ecr: "ecr-grek-gr",
			ecy: "ecy-cprt-cy",
			ee: "ee-latn-gh",
			efa: "efa-latn-ng",
			efe: "efe-latn-cd",
			efi: "efi-latn-ng",
			ega: "ega-latn-ci",
			egl: "egl-latn-it",
			egm: "egm-latn-tz",
			ego: "ego-latn-ng",
			egy: "egy-egyp-eg",
			ehu: "ehu-latn-ng",
			eip: "eip-latn-id",
			eit: "eit-latn-pg",
			eiv: "eiv-latn-pg",
			eja: "eja-latn-gw",
			eka: "eka-latn-zz",
			eke: "eke-latn-ng",
			ekg: "ekg-latn-id",
			eki: "eki-latn-ng",
			ekl: "ekl-latn-bd",
			ekm: "ekm-latn-cm",
			eko: "eko-latn-mz",
			"eko-arab": "eko-arab-mz",
			ekp: "ekp-latn-ng",
			ekr: "ekr-latn-ng",
			eky: "eky-kali-mm",
			el: "el-grek-gr",
			ele: "ele-latn-pg",
			elk: "elk-latn-pg",
			elm: "elm-latn-ng",
			elo: "elo-latn-ke",
			elu: "elu-latn-pg",
			ema: "ema-latn-zz",
			emb: "emb-latn-id",
			eme: "eme-latn-gf",
			emg: "emg-deva-np",
			emi: "emi-latn-zz",
			emm: "emm-latn-mx",
			emn: "emn-latn-cm",
			emp: "emp-latn-pa",
			ems: "ems-latn-us",
			"ems-cyrl": "ems-cyrl-us",
			emu: "emu-deva-in",
			emw: "emw-latn-id",
			emx: "emx-latn-fr",
			emz: "emz-latn-cm",
			en: "en-latn-us",
			"en-shaw": "en-shaw-gb",
			ena: "ena-latn-pg",
			enb: "enb-latn-ke",
			enc: "enc-latn-vn",
			end: "end-latn-id",
			enf: "enf-cyrl-ru",
			enh: "enh-cyrl-ru",
			enl: "enl-latn-py",
			enm: "enm-latn-gb",
			enn: "enn-latn-zz",
			eno: "eno-latn-id",
			enq: "enq-latn-zz",
			enr: "enr-latn-id",
			env: "env-latn-ng",
			enw: "enw-latn-ng",
			enx: "enx-latn-py",
			eo: "eo-latn-001",
			eot: "eot-latn-ci",
			epi: "epi-latn-ng",
			era: "era-taml-in",
			erg: "erg-latn-vu",
			erh: "erh-latn-ng",
			eri: "eri-latn-zz",
			erk: "erk-latn-vu",
			err: "err-latn-au",
			ert: "ert-latn-id",
			erw: "erw-latn-id",
			es: "es-latn-es",
			ese: "ese-latn-bo",
			esg: "esg-gonm-in",
			esh: "esh-arab-ir",
			esi: "esi-latn-us",
			esm: "esm-latn-ci",
			ess: "ess-latn-us",
			"ess-cyrl": "ess-cyrl-us",
			esu: "esu-latn-us",
			esy: "esy-latn-ph",
			et: "et-latn-ee",
			etb: "etb-latn-ng",
			etn: "etn-latn-vu",
			eto: "eto-latn-cm",
			etr: "etr-latn-zz",
			ets: "ets-latn-ng",
			ett: "ett-ital-it",
			etu: "etu-latn-zz",
			etx: "etx-latn-zz",
			etz: "etz-latn-id",
			eu: "eu-latn-es",
			eve: "eve-cyrl-ru",
			evh: "evh-latn-ng",
			evn: "evn-cyrl-ru",
			"evn-latn": "evn-latn-cn",
			"evn-mong": "evn-mong-cn",
			ewo: "ewo-latn-cm",
			ext: "ext-latn-es",
			eya: "eya-latn-us",
			eyo: "eyo-latn-ke",
			eza: "eza-latn-zz",
			eze: "eze-latn-ng",
			fa: "fa-arab-ir",
			faa: "faa-latn-zz",
			fab: "fab-latn-zz",
			fad: "fad-latn-pg",
			faf: "faf-latn-sb",
			fag: "fag-latn-zz",
			fah: "fah-latn-ng",
			fai: "fai-latn-zz",
			faj: "faj-latn-pg",
			fak: "fak-latn-cm",
			fal: "fal-latn-cm",
			fam: "fam-latn-ng",
			fan: "fan-latn-gq",
			fap: "fap-latn-sn",
			far: "far-latn-sb",
			fau: "fau-latn-id",
			fax: "fax-latn-es",
			fay: "fay-arab-ir",
			faz: "faz-arab-ir",
			fbl: "fbl-latn-ph",
			fer: "fer-latn-ss",
			ff: "ff-latn-sn",
			"ff-adlm": "ff-adlm-gn",
			ffi: "ffi-latn-zz",
			ffm: "ffm-latn-ml",
			fgr: "fgr-latn-td",
			fi: "fi-latn-fi",
			fia: "fia-arab-sd",
			fie: "fie-latn-ng",
			fif: "fif-latn-sa",
			fil: "fil-latn-ph",
			fip: "fip-latn-tz",
			fir: "fir-latn-ng",
			fit: "fit-latn-se",
			fiw: "fiw-latn-pg",
			fj: "fj-latn-fj",
			fkk: "fkk-latn-ng",
			fkv: "fkv-latn-no",
			fla: "fla-latn-us",
			flh: "flh-latn-id",
			fli: "fli-latn-ng",
			fll: "fll-latn-cm",
			fln: "fln-latn-au",
			flr: "flr-latn-zz",
			fly: "fly-latn-za",
			fmp: "fmp-latn-zz",
			fmu: "fmu-deva-in",
			fnb: "fnb-latn-vu",
			fng: "fng-latn-za",
			fni: "fni-latn-td",
			fo: "fo-latn-fo",
			fod: "fod-latn-zz",
			foi: "foi-latn-pg",
			fom: "fom-latn-cd",
			fon: "fon-latn-bj",
			for: "for-latn-zz",
			fos: "fos-latn-tw",
			fpe: "fpe-latn-zz",
			fqs: "fqs-latn-zz",
			fr: "fr-latn-fr",
			frc: "frc-latn-us",
			frd: "frd-latn-id",
			frk: "frk-latn-de",
			frm: "frm-latn-fr",
			fro: "fro-latn-fr",
			frp: "frp-latn-fr",
			frq: "frq-latn-pg",
			frr: "frr-latn-de",
			frs: "frs-latn-de",
			frt: "frt-latn-vu",
			fub: "fub-arab-cm",
			fud: "fud-latn-wf",
			fue: "fue-latn-zz",
			fuf: "fuf-latn-gn",
			fuh: "fuh-latn-zz",
			fui: "fui-latn-td",
			fum: "fum-latn-ng",
			fun: "fun-latn-br",
			fuq: "fuq-latn-ne",
			fur: "fur-latn-it",
			fut: "fut-latn-vu",
			fuu: "fuu-latn-cd",
			fuv: "fuv-latn-ng",
			fuy: "fuy-latn-zz",
			fvr: "fvr-latn-sd",
			fwa: "fwa-latn-nc",
			fwe: "fwe-latn-na",
			fy: "fy-latn-nl",
			ga: "ga-latn-ie",
			gaa: "gaa-latn-gh",
			gab: "gab-latn-td",
			gac: "gac-latn-in",
			"gac-deva": "gac-deva-in",
			gad: "gad-latn-ph",
			gae: "gae-latn-ve",
			gaf: "gaf-latn-zz",
			gag: "gag-latn-md",
			gah: "gah-latn-zz",
			gai: "gai-latn-pg",
			gaj: "gaj-latn-zz",
			gak: "gak-latn-id",
			gal: "gal-latn-tl",
			gam: "gam-latn-zz",
			gan: "gan-hans-cn",
			gao: "gao-latn-pg",
			gap: "gap-latn-pg",
			gaq: "gaq-orya-in",
			gar: "gar-latn-pg",
			gas: "gas-gujr-in",
			gat: "gat-latn-pg",
			gau: "gau-telu-in",
			gaw: "gaw-latn-zz",
			gax: "gax-latn-et",
			"gax-ethi": "gax-ethi-et",
			gay: "gay-latn-id",
			gba: "gba-latn-zz",
			gbb: "gbb-latn-au",
			gbd: "gbd-latn-au",
			gbe: "gbe-latn-pg",
			gbf: "gbf-latn-zz",
			gbg: "gbg-latn-cf",
			gbh: "gbh-latn-bj",
			gbi: "gbi-latn-id",
			gbj: "gbj-orya-in",
			gbk: "gbk-deva-in",
			"gbk-takr": "gbk-takr-in",
			gbl: "gbl-gujr-in",
			"gbl-deva": "gbl-deva-in",
			gbm: "gbm-deva-in",
			gbn: "gbn-latn-ss",
			gbp: "gbp-latn-cf",
			gbq: "gbq-latn-cf",
			gbr: "gbr-latn-ng",
			gbs: "gbs-latn-bj",
			gbu: "gbu-latn-au",
			gbv: "gbv-latn-cf",
			gbw: "gbw-latn-au",
			gbx: "gbx-latn-bj",
			gby: "gby-latn-zz",
			gbz: "gbz-arab-ir",
			gcc: "gcc-latn-pg",
			gcd: "gcd-latn-au",
			gcf: "gcf-latn-gp",
			gcl: "gcl-latn-gd",
			gcn: "gcn-latn-pg",
			gcr: "gcr-latn-gf",
			gct: "gct-latn-ve",
			gd: "gd-latn-gb",
			gdb: "gdb-orya-in",
			"gdb-telu": "gdb-telu-in",
			gdc: "gdc-latn-au",
			gdd: "gdd-latn-pg",
			gde: "gde-latn-zz",
			gdf: "gdf-latn-ng",
			gdg: "gdg-latn-ph",
			gdh: "gdh-latn-au",
			gdi: "gdi-latn-cf",
			gdj: "gdj-latn-au",
			gdk: "gdk-latn-td",
			gdl: "gdl-latn-et",
			"gdl-ethi": "gdl-ethi-et",
			gdm: "gdm-latn-td",
			gdn: "gdn-latn-zz",
			gdo: "gdo-cyrl-ru",
			gdq: "gdq-latn-ye",
			gdr: "gdr-latn-zz",
			gdt: "gdt-latn-au",
			gdu: "gdu-latn-ng",
			gdx: "gdx-deva-in",
			gea: "gea-latn-ng",
			geb: "geb-latn-zz",
			gec: "gec-latn-lr",
			ged: "ged-latn-ng",
			gef: "gef-latn-id",
			geg: "geg-latn-ng",
			geh: "geh-latn-ca",
			gei: "gei-latn-id",
			gej: "gej-latn-zz",
			gek: "gek-latn-ng",
			gel: "gel-latn-zz",
			geq: "geq-latn-cf",
			ges: "ges-latn-id",
			gev: "gev-latn-ga",
			gew: "gew-latn-ng",
			gex: "gex-latn-so",
			gey: "gey-latn-cd",
			gez: "gez-ethi-et",
			gfk: "gfk-latn-zz",
			gga: "gga-latn-sb",
			ggb: "ggb-latn-lr",
			ggd: "ggd-latn-au",
			gge: "gge-latn-au",
			ggg: "ggg-arab-pk",
			ggk: "ggk-latn-au",
			ggl: "ggl-latn-pg",
			ggn: "ggn-deva-np",
			ggt: "ggt-latn-pg",
			ggu: "ggu-latn-ci",
			ggw: "ggw-latn-pg",
			gha: "gha-arab-ly",
			"gha-latn": "gha-latn-ly",
			"gha-tfng": "gha-tfng-ly",
			ghc: "ghc-latn-gb",
			ghe: "ghe-deva-np",
			ghk: "ghk-latn-mm",
			ghn: "ghn-latn-sb",
			ghr: "ghr-arab-pk",
			ghs: "ghs-latn-zz",
			ght: "ght-tibt-np",
			gia: "gia-latn-au",
			gib: "gib-latn-ng",
			gic: "gic-latn-za",
			gid: "gid-latn-cm",
			gie: "gie-latn-ci",
			gig: "gig-arab-pk",
			gih: "gih-latn-au",
			gil: "gil-latn-ki",
			gim: "gim-latn-zz",
			gin: "gin-cyrl-ru",
			gip: "gip-latn-pg",
			giq: "giq-latn-vn",
			gir: "gir-latn-vn",
			gis: "gis-latn-cm",
			git: "git-latn-ca",
			gix: "gix-latn-cd",
			giy: "giy-latn-au",
			giz: "giz-latn-cm",
			gjk: "gjk-arab-pk",
			gjm: "gjm-latn-au",
			gjn: "gjn-latn-zz",
			gjr: "gjr-latn-au",
			gju: "gju-arab-pk",
			gka: "gka-latn-pg",
			gkd: "gkd-latn-pg",
			gke: "gke-latn-cm",
			gkn: "gkn-latn-zz",
			gko: "gko-latn-au",
			gkp: "gkp-latn-zz",
			gku: "gku-latn-za",
			gl: "gl-latn-es",
			glb: "glb-latn-ng",
			glc: "glc-latn-td",
			gld: "gld-cyrl-ru",
			glh: "glh-arab-af",
			glj: "glj-latn-td",
			glk: "glk-arab-ir",
			gll: "gll-latn-au",
			glo: "glo-latn-ng",
			glr: "glr-latn-lr",
			glu: "glu-latn-td",
			glw: "glw-latn-ng",
			gma: "gma-latn-au",
			gmb: "gmb-latn-sb",
			gmd: "gmd-latn-ng",
			gmg: "gmg-latn-pg",
			gmh: "gmh-latn-de",
			gmm: "gmm-latn-zz",
			gmn: "gmn-latn-cm",
			gmr: "gmr-latn-au",
			gmu: "gmu-latn-pg",
			gmv: "gmv-ethi-zz",
			gmx: "gmx-latn-tz",
			gmy: "gmy-linb-gr",
			gmz: "gmz-latn-ng",
			gn: "gn-latn-py",
			gna: "gna-latn-bf",
			gnb: "gnb-latn-in",
			gnc: "gnc-latn-es",
			gnd: "gnd-latn-zz",
			gne: "gne-latn-ng",
			gng: "gng-latn-zz",
			gnh: "gnh-latn-ng",
			gni: "gni-latn-au",
			gnj: "gnj-latn-ci",
			gnk: "gnk-latn-bw",
			gnl: "gnl-latn-au",
			gnm: "gnm-latn-pg",
			gnn: "gnn-latn-au",
			gnq: "gnq-latn-my",
			gnr: "gnr-latn-au",
			gnt: "gnt-latn-pg",
			gnu: "gnu-latn-pg",
			gnw: "gnw-latn-bo",
			gnz: "gnz-latn-cf",
			goa: "goa-latn-ci",
			gob: "gob-latn-co",
			goc: "goc-latn-pg",
			god: "god-latn-zz",
			goe: "goe-tibt-bt",
			gof: "gof-ethi-zz",
			gog: "gog-latn-tz",
			goh: "goh-latn-de",
			goi: "goi-latn-zz",
			gok: "gok-deva-in",
			gol: "gol-latn-lr",
			gom: "gom-deva-in",
			gon: "gon-telu-in",
			goo: "goo-latn-fj",
			gop: "gop-latn-id",
			goq: "goq-latn-id",
			gor: "gor-latn-id",
			gos: "gos-latn-nl",
			got: "got-goth-ua",
			gou: "gou-latn-cm",
			gov: "gov-latn-ci",
			gow: "gow-latn-tz",
			gox: "gox-latn-cd",
			goy: "goy-latn-td",
			gpa: "gpa-latn-ng",
			gpe: "gpe-latn-gh",
			gpn: "gpn-latn-pg",
			gqa: "gqa-latn-ng",
			gqn: "gqn-latn-br",
			gqr: "gqr-latn-td",
			gra: "gra-deva-in",
			"gra-gujr": "gra-gujr-in",
			grb: "grb-latn-zz",
			grc: "grc-cprt-cy",
			"grc-linb": "grc-linb-gr",
			grd: "grd-latn-ng",
			grg: "grg-latn-pg",
			grh: "grh-latn-ng",
			gri: "gri-latn-sb",
			grj: "grj-latn-lr",
			grm: "grm-latn-my",
			grq: "grq-latn-pg",
			grs: "grs-latn-id",
			grt: "grt-beng-in",
			gru: "gru-ethi-et",
			"gru-latn": "gru-latn-et",
			grv: "grv-latn-lr",
			grw: "grw-latn-zz",
			grx: "grx-latn-pg",
			gry: "gry-latn-lr",
			grz: "grz-latn-pg",
			gsl: "gsl-latn-sn",
			gsn: "gsn-latn-pg",
			gso: "gso-latn-cf",
			gsp: "gsp-latn-pg",
			gsw: "gsw-latn-ch",
			gta: "gta-latn-br",
			gtu: "gtu-latn-au",
			gu: "gu-gujr-in",
			gua: "gua-latn-ng",
			gub: "gub-latn-br",
			guc: "guc-latn-co",
			gud: "gud-latn-zz",
			gue: "gue-latn-au",
			guf: "guf-latn-au",
			guh: "guh-latn-co",
			gui: "gui-latn-bo",
			guk: "guk-latn-et",
			"guk-ethi": "guk-ethi-et",
			gul: "gul-latn-us",
			gum: "gum-latn-co",
			gun: "gun-latn-br",
			guo: "guo-latn-co",
			gup: "gup-latn-au",
			guq: "guq-latn-py",
			gur: "gur-latn-gh",
			gut: "gut-latn-cr",
			guu: "guu-latn-ve",
			guw: "guw-latn-zz",
			gux: "gux-latn-zz",
			guz: "guz-latn-ke",
			gv: "gv-latn-im",
			gva: "gva-latn-py",
			gvc: "gvc-latn-br",
			gve: "gve-latn-pg",
			gvf: "gvf-latn-zz",
			gvj: "gvj-latn-br",
			gvl: "gvl-latn-td",
			gvm: "gvm-latn-ng",
			gvn: "gvn-latn-au",
			gvo: "gvo-latn-br",
			gvp: "gvp-latn-br",
			gvr: "gvr-deva-np",
			gvs: "gvs-latn-zz",
			gvy: "gvy-latn-au",
			gwa: "gwa-latn-ci",
			gwb: "gwb-latn-ng",
			gwc: "gwc-arab-zz",
			gwd: "gwd-latn-et",
			gwe: "gwe-latn-tz",
			gwf: "gwf-arab-pk",
			gwg: "gwg-latn-ng",
			gwi: "gwi-latn-ca",
			gwj: "gwj-latn-bw",
			gwm: "gwm-latn-au",
			gwn: "gwn-latn-ng",
			gwr: "gwr-latn-ug",
			gwt: "gwt-arab-zz",
			gwu: "gwu-latn-au",
			gww: "gww-latn-au",
			gwx: "gwx-latn-gh",
			gxx: "gxx-latn-ci",
			gyb: "gyb-latn-pg",
			gyd: "gyd-latn-au",
			gye: "gye-latn-ng",
			gyf: "gyf-latn-au",
			gyg: "gyg-latn-cf",
			gyi: "gyi-latn-zz",
			gyl: "gyl-latn-et",
			"gyl-ethi": "gyl-ethi-et",
			gym: "gym-latn-pa",
			gyn: "gyn-latn-gy",
			gyo: "gyo-deva-np",
			gyr: "gyr-latn-bo",
			gyy: "gyy-latn-au",
			gyz: "gyz-latn-ng",
			gza: "gza-latn-sd",
			gzi: "gzi-arab-ir",
			gzn: "gzn-latn-id",
			ha: "ha-latn-ng",
			"ha-cm": "ha-arab-cm",
			"ha-sd": "ha-arab-sd",
			haa: "haa-latn-us",
			hac: "hac-arab-ir",
			had: "had-latn-id",
			hae: "hae-latn-et",
			hag: "hag-latn-zz",
			hah: "hah-latn-pg",
			hai: "hai-latn-ca",
			haj: "haj-latn-in",
			"haj-beng": "haj-beng-in",
			hak: "hak-hans-cn",
			hal: "hal-latn-vn",
			ham: "ham-latn-zz",
			han: "han-latn-tz",
			hao: "hao-latn-pg",
			hap: "hap-latn-id",
			haq: "haq-latn-tz",
			har: "har-ethi-et",
			"har-arab": "har-arab-et",
			"har-latn": "har-latn-et",
			has: "has-latn-ca",
			hav: "hav-latn-cd",
			haw: "haw-latn-us",
			hax: "hax-latn-ca",
			hay: "hay-latn-tz",
			haz: "haz-arab-af",
			hba: "hba-latn-cd",
			hbb: "hbb-latn-zz",
			hbn: "hbn-latn-sd",
			hbo: "hbo-hebr-il",
			hbu: "hbu-latn-tl",
			hch: "hch-latn-mx",
			hdy: "hdy-ethi-zz",
			he: "he-hebr-il",
			hed: "hed-latn-td",
			heg: "heg-latn-id",
			heh: "heh-latn-tz",
			hei: "hei-latn-ca",
			hem: "hem-latn-cd",
			hgm: "hgm-latn-na",
			hgw: "hgw-latn-pg",
			hhi: "hhi-latn-pg",
			hhr: "hhr-latn-sn",
			hhy: "hhy-latn-zz",
			hi: "hi-deva-in",
			"hi-latn": "hi-latn-in",
			hia: "hia-latn-zz",
			hib: "hib-latn-pe",
			hid: "hid-latn-us",
			hif: "hif-latn-fj",
			hig: "hig-latn-zz",
			hih: "hih-latn-zz",
			hii: "hii-takr-in",
			"hii-deva": "hii-deva-in",
			hij: "hij-latn-cm",
			hik: "hik-latn-id",
			hil: "hil-latn-ph",
			hio: "hio-latn-bw",
			hir: "hir-latn-br",
			hit: "hit-xsux-tr",
			hiw: "hiw-latn-vu",
			hix: "hix-latn-br",
			hji: "hji-latn-id",
			hka: "hka-latn-tz",
			hke: "hke-latn-cd",
			hkh: "hkh-arab-in",
			"hkh-deva": "hkh-deva-in",
			"hkh-latn": "hkh-latn-in",
			hkk: "hkk-latn-pg",
			hla: "hla-latn-zz",
			hlb: "hlb-deva-in",
			hld: "hld-latn-vn",
			hlt: "hlt-latn-mm",
			hlu: "hlu-hluw-tr",
			hma: "hma-latn-cn",
			hmb: "hmb-latn-ml",
			hmd: "hmd-plrd-cn",
			hmf: "hmf-latn-vn",
			hmj: "hmj-bopo-cn",
			hmm: "hmm-latn-cn",
			hmn: "hmn-latn-cn",
			"hmn-bopo": "hmn-bopo-cn",
			"hmn-hmng": "hmn-hmng-cn",
			hmp: "hmp-latn-cn",
			hmq: "hmq-bopo-cn",
			hmr: "hmr-latn-in",
			hms: "hms-latn-cn",
			hmt: "hmt-latn-zz",
			hmu: "hmu-latn-id",
			hmv: "hmv-latn-vn",
			hmw: "hmw-latn-cn",
			hmy: "hmy-latn-cn",
			hmz: "hmz-latn-cn",
			"hmz-plrd": "hmz-plrd-cn",
			hna: "hna-latn-cm",
			hnd: "hnd-arab-pk",
			hne: "hne-deva-in",
			hng: "hng-latn-ao",
			hnh: "hnh-latn-bw",
			hni: "hni-latn-cn",
			hnj: "hnj-hmnp-us",
			"hnj-au": "hnj-laoo-au",
			"hnj-cn": "hnj-laoo-cn",
			"hnj-fr": "hnj-laoo-fr",
			"hnj-gf": "hnj-laoo-gf",
			"hnj-la": "hnj-laoo-la",
			"hnj-laoo": "hnj-laoo-la",
			"hnj-mm": "hnj-laoo-mm",
			"hnj-sr": "hnj-laoo-sr",
			"hnj-th": "hnj-laoo-th",
			"hnj-us": "hnj-hmnp-us",
			"hnj-vn": "hnj-laoo-vn",
			hnn: "hnn-latn-ph",
			hno: "hno-arab-pk",
			hns: "hns-latn-sr",
			ho: "ho-latn-pg",
			hoa: "hoa-latn-sb",
			hob: "hob-latn-pg",
			hoc: "hoc-deva-in",
			hod: "hod-latn-ng",
			hoe: "hoe-latn-ng",
			hoh: "hoh-arab-om",
			hoi: "hoi-latn-us",
			hoj: "hoj-deva-in",
			hol: "hol-latn-ao",
			hom: "hom-latn-ss",
			hoo: "hoo-latn-cd",
			hop: "hop-latn-us",
			hor: "hor-latn-td",
			hot: "hot-latn-zz",
			hov: "hov-latn-id",
			how: "how-hani-cn",
			hoy: "hoy-deva-in",
			hpo: "hpo-mymr-mm",
			hr: "hr-latn-hr",
			hra: "hra-latn-in",
			hrc: "hrc-latn-pg",
			hre: "hre-latn-vn",
			hrk: "hrk-latn-id",
			hrm: "hrm-latn-cn",
			"hrm-hmng": "hrm-hmng-cn",
			hro: "hro-latn-vn",
			hrp: "hrp-latn-au",
			hrt: "hrt-syrc-tr",
			hru: "hru-latn-in",
			hrw: "hrw-latn-pg",
			hrx: "hrx-latn-br",
			hrz: "hrz-arab-ir",
			hsb: "hsb-latn-de",
			hsn: "hsn-hans-cn",
			hss: "hss-arab-om",
			ht: "ht-latn-ht",
			hti: "hti-latn-id",
			hto: "hto-latn-co",
			hts: "hts-latn-tz",
			htu: "htu-latn-id",
			htx: "htx-xsux-tr",
			hu: "hu-latn-hu",
			hub: "hub-latn-pe",
			huc: "huc-latn-bw",
			hud: "hud-latn-id",
			hue: "hue-latn-mx",
			huf: "huf-latn-pg",
			hug: "hug-latn-pe",
			huh: "huh-latn-cl",
			hui: "hui-latn-zz",
			huk: "huk-latn-id",
			hul: "hul-latn-pg",
			hum: "hum-latn-cd",
			hup: "hup-latn-us",
			hur: "hur-latn-ca",
			hus: "hus-latn-mx",
			hut: "hut-deva-np",
			"hut-tibt": "hut-tibt-np",
			huu: "huu-latn-pe",
			huv: "huv-latn-mx",
			huw: "huw-latn-id",
			hux: "hux-latn-pe",
			huy: "huy-hebr-il",
			huz: "huz-cyrl-ru",
			hvc: "hvc-latn-ht",
			hve: "hve-latn-mx",
			hvk: "hvk-latn-nc",
			hvn: "hvn-latn-id",
			hvv: "hvv-latn-mx",
			hwa: "hwa-latn-ci",
			hwc: "hwc-latn-us",
			hwo: "hwo-latn-ng",
			hy: "hy-armn-am",
			hya: "hya-latn-cm",
			hyw: "hyw-armn-am",
			hz: "hz-latn-na",
			ia: "ia-latn-001",
			iai: "iai-latn-nc",
			ian: "ian-latn-zz",
			iar: "iar-latn-zz",
			iba: "iba-latn-my",
			ibb: "ibb-latn-ng",
			ibd: "ibd-latn-au",
			ibe: "ibe-latn-ng",
			ibg: "ibg-latn-ph",
			ibh: "ibh-latn-vn",
			ibl: "ibl-latn-ph",
			ibm: "ibm-latn-ng",
			ibn: "ibn-latn-ng",
			ibr: "ibr-latn-ng",
			ibu: "ibu-latn-id",
			iby: "iby-latn-zz",
			ica: "ica-latn-zz",
			ich: "ich-latn-zz",
			icr: "icr-latn-co",
			id: "id-latn-id",
			ida: "ida-latn-ke",
			idb: "idb-latn-in",
			idc: "idc-latn-ng",
			idd: "idd-latn-zz",
			ide: "ide-latn-ng",
			idi: "idi-latn-zz",
			idr: "idr-latn-ss",
			ids: "ids-latn-ng",
			idt: "idt-latn-tl",
			idu: "idu-latn-zz",
			ie: "ie-latn-001",
			ifa: "ifa-latn-ph",
			ifb: "ifb-latn-ph",
			ife: "ife-latn-tg",
			iff: "iff-latn-vu",
			ifk: "ifk-latn-ph",
			ifm: "ifm-latn-cg",
			ifu: "ifu-latn-ph",
			ify: "ify-latn-ph",
			ig: "ig-latn-ng",
			igb: "igb-latn-zz",
			ige: "ige-latn-zz",
			igg: "igg-latn-pg",
			igl: "igl-latn-ng",
			igm: "igm-latn-pg",
			ign: "ign-latn-bo",
			igo: "igo-latn-pg",
			igs: "igs-latn-001",
			"igs-grek": "igs-grek-001",
			igw: "igw-latn-ng",
			ihb: "ihb-latn-id",
			ihi: "ihi-latn-ng",
			ihp: "ihp-latn-id",
			ihw: "ihw-latn-au",
			ii: "ii-yiii-cn",
			iin: "iin-latn-au",
			ijc: "ijc-latn-ng",
			ije: "ije-latn-ng",
			ijj: "ijj-latn-zz",
			ijn: "ijn-latn-ng",
			ijs: "ijs-latn-ng",
			ik: "ik-latn-us",
			iki: "iki-latn-ng",
			ikk: "ikk-latn-zz",
			ikl: "ikl-latn-ng",
			iko: "iko-latn-ng",
			ikp: "ikp-latn-ng",
			ikr: "ikr-latn-au",
			ikt: "ikt-latn-ca",
			"ikt-cans": "ikt-cans-ca",
			ikv: "ikv-latn-ng",
			ikw: "ikw-latn-zz",
			ikx: "ikx-latn-zz",
			ikz: "ikz-latn-tz",
			ila: "ila-latn-id",
			ilb: "ilb-latn-zm",
			ilg: "ilg-latn-au",
			ili: "ili-latn-cn",
			"ili-arab": "ili-arab-cn",
			"ili-cyrl": "ili-cyrl-kz",
			ilk: "ilk-latn-ph",
			ilm: "ilm-latn-my",
			ilo: "ilo-latn-ph",
			ilp: "ilp-latn-ph",
			ilu: "ilu-latn-id",
			ilv: "ilv-latn-ng",
			imi: "imi-latn-pg",
			iml: "iml-latn-us",
			imn: "imn-latn-pg",
			imo: "imo-latn-zz",
			imr: "imr-latn-id",
			ims: "ims-latn-it",
			imt: "imt-latn-ss",
			imy: "imy-lyci-tr",
			in: "in-latn-id",
			inb: "inb-latn-co",
			ing: "ing-latn-us",
			inh: "inh-cyrl-ru",
			inj: "inj-latn-co",
			inn: "inn-latn-ph",
			ino: "ino-latn-pg",
			inp: "inp-latn-pe",
			int: "int-mymr-mm",
			io: "io-latn-001",
			ior: "ior-ethi-et",
			iou: "iou-latn-zz",
			iow: "iow-latn-us",
			ipi: "ipi-latn-pg",
			ipo: "ipo-latn-pg",
			iqu: "iqu-latn-pe",
			iqw: "iqw-latn-ng",
			ire: "ire-latn-id",
			irh: "irh-latn-id",
			iri: "iri-latn-zz",
			irk: "irk-latn-tz",
			irn: "irn-latn-br",
			iru: "iru-taml-in",
			"iru-mlym": "iru-mlym-in",
			irx: "irx-latn-id",
			iry: "iry-latn-ph",
			is: "is-latn-is",
			isa: "isa-latn-pg",
			isc: "isc-latn-pe",
			isd: "isd-latn-ph",
			ish: "ish-latn-ng",
			isi: "isi-latn-ng",
			isk: "isk-arab-af",
			"isk-cyrl": "isk-cyrl-tj",
			ism: "ism-latn-id",
			isn: "isn-latn-tz",
			iso: "iso-latn-ng",
			ist: "ist-latn-hr",
			isu: "isu-latn-cm",
			it: "it-latn-it",
			itb: "itb-latn-ph",
			itd: "itd-latn-id",
			ite: "ite-latn-bo",
			iti: "iti-latn-ph",
			itk: "itk-hebr-it",
			itl: "itl-cyrl-ru",
			itm: "itm-latn-ng",
			ito: "ito-latn-bo",
			itr: "itr-latn-pg",
			its: "its-latn-ng",
			itt: "itt-latn-ph",
			itv: "itv-latn-ph",
			itw: "itw-latn-ng",
			itx: "itx-latn-id",
			ity: "ity-latn-ph",
			itz: "itz-latn-gt",
			iu: "iu-cans-ca",
			ium: "ium-latn-cn",
			"ium-hani": "ium-hani-cn",
			"ium-laoo": "ium-laoo-la",
			"ium-thai": "ium-thai-th",
			ivb: "ivb-latn-ph",
			ivv: "ivv-latn-ph",
			iw: "iw-hebr-il",
			iwk: "iwk-latn-ph",
			iwm: "iwm-latn-zz",
			iwo: "iwo-latn-id",
			iws: "iws-latn-zz",
			ixc: "ixc-latn-mx",
			ixl: "ixl-latn-gt",
			iya: "iya-latn-ng",
			iyo: "iyo-latn-cm",
			iyx: "iyx-latn-cg",
			izh: "izh-latn-ru",
			izi: "izi-latn-zz",
			izr: "izr-latn-ng",
			izz: "izz-latn-ng",
			ja: "ja-jpan-jp",
			jaa: "jaa-latn-br",
			jab: "jab-latn-zz",
			jac: "jac-latn-gt",
			jad: "jad-arab-gn",
			jae: "jae-latn-pg",
			jaf: "jaf-latn-ng",
			jah: "jah-latn-my",
			jaj: "jaj-latn-sb",
			jak: "jak-latn-my",
			jal: "jal-latn-id",
			jam: "jam-latn-jm",
			jan: "jan-latn-au",
			jao: "jao-latn-au",
			jaq: "jaq-latn-id",
			jar: "jar-latn-zz",
			jas: "jas-latn-nc",
			jat: "jat-arab-af",
			jau: "jau-latn-id",
			jax: "jax-latn-id",
			jay: "jay-latn-au",
			jaz: "jaz-latn-nc",
			jbe: "jbe-hebr-il",
			jbi: "jbi-latn-au",
			jbj: "jbj-latn-id",
			jbk: "jbk-latn-pg",
			jbm: "jbm-latn-ng",
			jbn: "jbn-arab-ly",
			jbo: "jbo-latn-001",
			jbr: "jbr-latn-id",
			jbt: "jbt-latn-br",
			jbu: "jbu-latn-zz",
			jbw: "jbw-latn-au",
			jct: "jct-cyrl-ua",
			"jct-latn": "jct-latn-ua",
			jda: "jda-tibt-in",
			jdg: "jdg-arab-pk",
			jdt: "jdt-cyrl-ru",
			"jdt-hebr": "jdt-hebr-ru",
			"jdt-latn": "jdt-latn-az",
			jeb: "jeb-latn-pe",
			jee: "jee-deva-np",
			jeh: "jeh-latn-vn",
			"jeh-laoo": "jeh-laoo-la",
			jei: "jei-latn-id",
			jek: "jek-latn-ci",
			jel: "jel-latn-id",
			jen: "jen-latn-zz",
			jer: "jer-latn-ng",
			jet: "jet-latn-pg",
			jeu: "jeu-latn-td",
			jgb: "jgb-latn-cd",
			jge: "jge-geor-ge",
			"jge-hebr": "jge-hebr-il",
			jgk: "jgk-latn-zz",
			jgo: "jgo-latn-cm",
			jhi: "jhi-latn-my",
			ji: "ji-hebr-ua",
			jia: "jia-latn-cm",
			jib: "jib-latn-zz",
			jic: "jic-latn-hn",
			jid: "jid-latn-ng",
			jie: "jie-latn-ng",
			jig: "jig-latn-au",
			jil: "jil-latn-pg",
			jim: "jim-latn-cm",
			jit: "jit-latn-tz",
			jiu: "jiu-latn-cn",
			jiv: "jiv-latn-ec",
			jiy: "jiy-latn-cn",
			jje: "jje-hang-kr",
			jjr: "jjr-latn-ng",
			jka: "jka-latn-id",
			jkm: "jkm-mymr-mm",
			"jkm-brai": "jkm-brai-mm",
			"jkm-latn": "jkm-latn-mm",
			jko: "jko-latn-pg",
			jku: "jku-latn-ng",
			jle: "jle-latn-sd",
			jma: "jma-latn-pg",
			jmb: "jmb-latn-ng",
			jmc: "jmc-latn-tz",
			jmd: "jmd-latn-id",
			jmi: "jmi-latn-ng",
			jml: "jml-deva-np",
			jmn: "jmn-latn-mm",
			jmr: "jmr-latn-gh",
			jms: "jms-latn-ng",
			jmw: "jmw-latn-pg",
			jmx: "jmx-latn-mx",
			jna: "jna-takr-in",
			jnd: "jnd-arab-pk",
			jng: "jng-latn-au",
			jni: "jni-latn-ng",
			jnj: "jnj-latn-et",
			"jnj-ethi": "jnj-ethi-et",
			jnl: "jnl-deva-in",
			jns: "jns-deva-in",
			"jns-latn": "jns-latn-in",
			"jns-takr": "jns-takr-in",
			job: "job-latn-cd",
			jod: "jod-latn-ci",
			jog: "jog-arab-pk",
			jor: "jor-latn-bo",
			jow: "jow-latn-ml",
			jpa: "jpa-hebr-ps",
			jpr: "jpr-hebr-il",
			jqr: "jqr-latn-pe",
			jra: "jra-latn-zz",
			jrr: "jrr-latn-ng",
			jrt: "jrt-latn-ng",
			jru: "jru-latn-ve",
			jua: "jua-latn-br",
			jub: "jub-latn-ng",
			jud: "jud-latn-ci",
			juh: "juh-latn-ng",
			jui: "jui-latn-au",
			juk: "juk-latn-ng",
			jul: "jul-deva-np",
			jum: "jum-latn-sd",
			jun: "jun-orya-in",
			juo: "juo-latn-ng",
			jup: "jup-latn-br",
			jur: "jur-latn-br",
			jut: "jut-latn-dk",
			juu: "juu-latn-ng",
			juw: "juw-latn-ng",
			juy: "juy-orya-in",
			jv: "jv-latn-id",
			jvd: "jvd-latn-id",
			jvn: "jvn-latn-sr",
			jw: "jw-latn-id",
			jwi: "jwi-latn-gh",
			jya: "jya-tibt-cn",
			jye: "jye-hebr-il",
			jyy: "jyy-latn-td",
			ka: "ka-geor-ge",
			kaa: "kaa-cyrl-uz",
			kab: "kab-latn-dz",
			kac: "kac-latn-mm",
			kad: "kad-latn-zz",
			kag: "kag-latn-my",
			kah: "kah-latn-cf",
			kai: "kai-latn-zz",
			kaj: "kaj-latn-ng",
			kak: "kak-latn-ph",
			kam: "kam-latn-ke",
			kao: "kao-latn-ml",
			kap: "kap-cyrl-ru",
			kaq: "kaq-latn-pe",
			kav: "kav-latn-br",
			kaw: "kaw-kawi-id",
			kax: "kax-latn-id",
			kay: "kay-latn-br",
			kba: "kba-latn-au",
			kbb: "kbb-latn-br",
			kbc: "kbc-latn-br",
			kbd: "kbd-cyrl-ru",
			kbe: "kbe-latn-au",
			kbh: "kbh-latn-co",
			kbi: "kbi-latn-id",
			kbj: "kbj-latn-cd",
			kbk: "kbk-latn-pg",
			kbl: "kbl-latn-td",
			kbm: "kbm-latn-zz",
			kbn: "kbn-latn-cf",
			kbo: "kbo-latn-ss",
			kbp: "kbp-latn-zz",
			kbq: "kbq-latn-zz",
			kbr: "kbr-latn-et",
			"kbr-ethi": "kbr-ethi-et",
			kbs: "kbs-latn-ga",
			kbt: "kbt-latn-pg",
			kbu: "kbu-arab-pk",
			kbv: "kbv-latn-id",
			kbw: "kbw-latn-pg",
			kbx: "kbx-latn-zz",
			kby: "kby-arab-ne",
			kbz: "kbz-latn-ng",
			kca: "kca-cyrl-ru",
			kcb: "kcb-latn-pg",
			kcc: "kcc-latn-ng",
			kcd: "kcd-latn-id",
			kce: "kce-latn-ng",
			kcf: "kcf-latn-ng",
			kcg: "kcg-latn-ng",
			kch: "kch-latn-ng",
			kci: "kci-latn-ng",
			kcj: "kcj-latn-gw",
			kck: "kck-latn-zw",
			kcl: "kcl-latn-zz",
			kcm: "kcm-latn-cf",
			kcn: "kcn-latn-ug",
			kco: "kco-latn-pg",
			kcp: "kcp-latn-sd",
			kcq: "kcq-latn-ng",
			kcs: "kcs-latn-ng",
			kct: "kct-latn-zz",
			kcu: "kcu-latn-tz",
			kcv: "kcv-latn-cd",
			kcw: "kcw-latn-cd",
			kcz: "kcz-latn-tz",
			kda: "kda-latn-au",
			kdc: "kdc-latn-tz",
			kdd: "kdd-latn-au",
			kde: "kde-latn-tz",
			kdf: "kdf-latn-pg",
			kdg: "kdg-latn-cd",
			kdh: "kdh-latn-tg",
			kdi: "kdi-latn-ug",
			kdj: "kdj-latn-ug",
			kdk: "kdk-latn-nc",
			kdl: "kdl-latn-zz",
			kdm: "kdm-latn-ng",
			kdn: "kdn-latn-zw",
			kdp: "kdp-latn-ng",
			kdq: "kdq-beng-in",
			kdr: "kdr-latn-lt",
			"kdr-cyrl": "kdr-cyrl-ua",
			kdt: "kdt-thai-th",
			kdw: "kdw-latn-id",
			kdx: "kdx-latn-ng",
			kdy: "kdy-latn-id",
			kdz: "kdz-latn-cm",
			kea: "kea-latn-cv",
			keb: "keb-latn-ga",
			kec: "kec-latn-sd",
			ked: "ked-latn-tz",
			kee: "kee-latn-us",
			kef: "kef-latn-tg",
			keg: "keg-latn-sd",
			keh: "keh-latn-pg",
			kei: "kei-latn-id",
			kek: "kek-latn-gt",
			kel: "kel-latn-cd",
			kem: "kem-latn-tl",
			ken: "ken-latn-cm",
			keo: "keo-latn-ug",
			ker: "ker-latn-td",
			kes: "kes-latn-ng",
			ket: "ket-cyrl-ru",
			keu: "keu-latn-tg",
			kew: "kew-latn-pg",
			kex: "kex-deva-in",
			"kex-gujr": "kex-gujr-in",
			key: "key-telu-in",
			kez: "kez-latn-zz",
			kfa: "kfa-knda-in",
			kfb: "kfb-deva-in",
			kfc: "kfc-telu-in",
			kfd: "kfd-knda-in",
			kfe: "kfe-taml-in",
			kff: "kff-latn-in",
			"kff-deva": "kff-deva-in",
			"kff-orya": "kff-orya-in",
			"kff-telu": "kff-telu-in",
			kfh: "kfh-mlym-in",
			kfi: "kfi-taml-in",
			"kfi-knda": "kfi-knda-in",
			kfk: "kfk-deva-in",
			"kfk-takr": "kfk-takr-in",
			kfl: "kfl-latn-cm",
			kfm: "kfm-arab-ir",
			kfn: "kfn-latn-cm",
			kfo: "kfo-latn-ci",
			kfp: "kfp-deva-in",
			kfq: "kfq-deva-in",
			kfr: "kfr-deva-in",
			kfs: "kfs-deva-in",
			kfv: "kfv-latn-in",
			kfw: "kfw-latn-in",
			kfx: "kfx-deva-in",
			"kfx-takr": "kfx-takr-in",
			kfy: "kfy-deva-in",
			kfz: "kfz-latn-bf",
			kg: "kg-latn-cd",
			kga: "kga-latn-ci",
			kgb: "kgb-latn-id",
			kge: "kge-latn-id",
			kgf: "kgf-latn-zz",
			kgj: "kgj-deva-np",
			kgk: "kgk-latn-br",
			kgl: "kgl-latn-au",
			kgm: "kgm-latn-br",
			kgo: "kgo-latn-sd",
			kgp: "kgp-latn-br",
			kgq: "kgq-latn-id",
			kgr: "kgr-latn-id",
			kgs: "kgs-latn-au",
			kgt: "kgt-latn-ng",
			kgu: "kgu-latn-pg",
			kgv: "kgv-latn-id",
			kgw: "kgw-latn-id",
			kgx: "kgx-latn-id",
			kgy: "kgy-deva-np",
			kha: "kha-latn-in",
			khb: "khb-talu-cn",
			khc: "khc-latn-id",
			khd: "khd-latn-id",
			khe: "khe-latn-id",
			khf: "khf-thai-la",
			khg: "khg-tibt-cn",
			khh: "khh-latn-id",
			khj: "khj-latn-ng",
			khl: "khl-latn-pg",
			khn: "khn-deva-in",
			khp: "khp-latn-id",
			khq: "khq-latn-ml",
			khr: "khr-latn-in",
			"khr-deva": "khr-deva-in",
			khs: "khs-latn-zz",
			kht: "kht-mymr-in",
			khu: "khu-latn-ao",
			khv: "khv-cyrl-ru",
			khw: "khw-arab-pk",
			khx: "khx-latn-cd",
			khy: "khy-latn-cd",
			khz: "khz-latn-zz",
			ki: "ki-latn-ke",
			kia: "kia-latn-td",
			kib: "kib-latn-sd",
			kic: "kic-latn-us",
			kid: "kid-latn-cm",
			kie: "kie-latn-td",
			kif: "kif-deva-np",
			kig: "kig-latn-id",
			kih: "kih-latn-pg",
			kij: "kij-latn-zz",
			kil: "kil-latn-ng",
			kim: "kim-cyrl-ru",
			kio: "kio-latn-us",
			kip: "kip-deva-np",
			kiq: "kiq-latn-id",
			kis: "kis-latn-pg",
			kit: "kit-latn-pg",
			kiu: "kiu-latn-tr",
			kiv: "kiv-latn-tz",
			kiw: "kiw-latn-zz",
			kix: "kix-latn-in",
			kiy: "kiy-latn-id",
			kiz: "kiz-latn-tz",
			kj: "kj-latn-na",
			kja: "kja-latn-id",
			kjb: "kjb-latn-gt",
			kjc: "kjc-latn-id",
			kjd: "kjd-latn-zz",
			kje: "kje-latn-id",
			kjg: "kjg-laoo-la",
			kjh: "kjh-cyrl-ru",
			kji: "kji-latn-sb",
			kjj: "kjj-latn-az",
			kjk: "kjk-latn-id",
			kjl: "kjl-deva-np",
			kjm: "kjm-latn-vn",
			kjn: "kjn-latn-au",
			kjo: "kjo-deva-in",
			kjp: "kjp-mymr-mm",
			"kjp-thai": "kjp-thai-th",
			kjq: "kjq-latn-us",
			kjr: "kjr-latn-id",
			kjs: "kjs-latn-zz",
			kjt: "kjt-thai-th",
			kju: "kju-latn-us",
			kjx: "kjx-latn-pg",
			kjy: "kjy-latn-zz",
			kk: "kk-cyrl-kz",
			"kk-af": "kk-arab-af",
			"kk-arab": "kk-arab-cn",
			"kk-cn": "kk-arab-cn",
			"kk-ir": "kk-arab-ir",
			"kk-mn": "kk-arab-mn",
			kka: "kka-latn-ng",
			kkb: "kkb-latn-id",
			kkc: "kkc-latn-zz",
			kkd: "kkd-latn-ng",
			kke: "kke-latn-gn",
			"kke-arab": "kke-arab-gn",
			kkf: "kkf-tibt-in",
			kkg: "kkg-latn-ph",
			kkh: "kkh-lana-mm",
			kki: "kki-latn-tz",
			kkj: "kkj-latn-cm",
			kkk: "kkk-latn-sb",
			kkl: "kkl-latn-id",
			kkm: "kkm-latn-ng",
			kko: "kko-latn-sd",
			kkp: "kkp-latn-au",
			kkq: "kkq-latn-cd",
			kkr: "kkr-latn-ng",
			kks: "kks-latn-ng",
			kkt: "kkt-deva-np",
			kku: "kku-latn-ng",
			kkv: "kkv-latn-id",
			kkw: "kkw-latn-cg",
			kkx: "kkx-latn-id",
			kky: "kky-latn-au",
			kkz: "kkz-latn-ca",
			kl: "kl-latn-gl",
			kla: "kla-latn-us",
			klb: "klb-latn-mx",
			klc: "klc-latn-cm",
			kld: "kld-latn-au",
			kle: "kle-deva-np",
			klf: "klf-latn-td",
			klg: "klg-latn-ph",
			klh: "klh-latn-pg",
			kli: "kli-latn-id",
			klj: "klj-arab-ir",
			klk: "klk-latn-ng",
			kll: "kll-latn-ph",
			klm: "klm-latn-pg",
			kln: "kln-latn-ke",
			klo: "klo-latn-ng",
			klp: "klp-latn-pg",
			klq: "klq-latn-zz",
			klr: "klr-deva-np",
			kls: "kls-latn-pk",
			"kls-arab": "kls-arab-pk",
			klt: "klt-latn-zz",
			klu: "klu-latn-lr",
			klv: "klv-latn-vu",
			klw: "klw-latn-id",
			klx: "klx-latn-zz",
			kly: "kly-latn-id",
			klz: "klz-latn-id",
			km: "km-khmr-kh",
			kma: "kma-latn-gh",
			kmb: "kmb-latn-ao",
			kmc: "kmc-latn-cn",
			"kmc-hani": "kmc-hani-cn",
			kmd: "kmd-latn-ph",
			kme: "kme-latn-cm",
			kmf: "kmf-latn-pg",
			kmg: "kmg-latn-pg",
			kmh: "kmh-latn-zz",
			kmi: "kmi-latn-ng",
			kmj: "kmj-deva-in",
			kmk: "kmk-latn-ph",
			kml: "kml-latn-ph",
			kmm: "kmm-latn-in",
			kmn: "kmn-latn-pg",
			kmo: "kmo-latn-zz",
			kmp: "kmp-latn-cm",
			kmq: "kmq-latn-et",
			kms: "kms-latn-zz",
			kmt: "kmt-latn-id",
			kmu: "kmu-latn-zz",
			kmv: "kmv-latn-br",
			kmw: "kmw-latn-zz",
			kmx: "kmx-latn-pg",
			kmy: "kmy-latn-ng",
			kmz: "kmz-arab-ir",
			kn: "kn-knda-in",
			kna: "kna-latn-ng",
			knb: "knb-latn-ph",
			knd: "knd-latn-id",
			kne: "kne-latn-ph",
			knf: "knf-latn-gw",
			kni: "kni-latn-ng",
			knj: "knj-latn-gt",
			knk: "knk-latn-sl",
			"knk-arab": "knk-arab-sl",
			knl: "knl-latn-id",
			knm: "knm-latn-br",
			kno: "kno-latn-sl",
			knp: "knp-latn-zz",
			knq: "knq-latn-my",
			knr: "knr-latn-pg",
			kns: "kns-latn-my",
			"kns-thai": "kns-thai-th",
			knt: "knt-latn-br",
			knu: "knu-latn-gn",
			knv: "knv-latn-pg",
			knw: "knw-latn-na",
			knx: "knx-latn-id",
			kny: "kny-latn-cd",
			knz: "knz-latn-bf",
			ko: "ko-kore-kr",
			koa: "koa-latn-pg",
			koc: "koc-latn-ng",
			kod: "kod-latn-id",
			koe: "koe-latn-ss",
			kof: "kof-latn-ng",
			kog: "kog-latn-co",
			koh: "koh-latn-cg",
			koi: "koi-cyrl-ru",
			kok: "kok-deva-in",
			kol: "kol-latn-zz",
			koo: "koo-latn-ug",
			kop: "kop-latn-pg",
			koq: "koq-latn-ga",
			kos: "kos-latn-fm",
			kot: "kot-latn-cm",
			kou: "kou-latn-td",
			kov: "kov-latn-ng",
			kow: "kow-latn-ng",
			koy: "koy-latn-us",
			koz: "koz-latn-zz",
			kpa: "kpa-latn-ng",
			kpc: "kpc-latn-co",
			kpd: "kpd-latn-id",
			kpe: "kpe-latn-lr",
			kpf: "kpf-latn-zz",
			kpg: "kpg-latn-fm",
			kph: "kph-latn-gh",
			kpi: "kpi-latn-id",
			kpj: "kpj-latn-br",
			kpk: "kpk-latn-ng",
			kpl: "kpl-latn-cd",
			kpm: "kpm-latn-vn",
			kpn: "kpn-latn-br",
			kpo: "kpo-latn-zz",
			kpq: "kpq-latn-id",
			kpr: "kpr-latn-zz",
			kps: "kps-latn-id",
			kpt: "kpt-cyrl-ru",
			kpu: "kpu-latn-id",
			kpw: "kpw-latn-pg",
			kpx: "kpx-latn-zz",
			kpy: "kpy-cyrl-ru",
			kpz: "kpz-latn-ug",
			kqa: "kqa-latn-pg",
			kqb: "kqb-latn-zz",
			kqc: "kqc-latn-pg",
			kqd: "kqd-syrc-iq",
			kqe: "kqe-latn-ph",
			kqf: "kqf-latn-zz",
			kqg: "kqg-latn-bf",
			kqh: "kqh-latn-tz",
			kqi: "kqi-latn-pg",
			kqj: "kqj-latn-pg",
			kqk: "kqk-latn-bj",
			kql: "kql-latn-pg",
			kqm: "kqm-latn-ci",
			kqn: "kqn-latn-zm",
			kqo: "kqo-latn-lr",
			kqp: "kqp-latn-td",
			kqq: "kqq-latn-br",
			kqr: "kqr-latn-my",
			kqs: "kqs-latn-zz",
			kqt: "kqt-latn-my",
			kqu: "kqu-latn-za",
			kqv: "kqv-latn-id",
			kqw: "kqw-latn-pg",
			kqx: "kqx-latn-cm",
			kqy: "kqy-ethi-zz",
			kqz: "kqz-latn-za",
			kr: "kr-latn-zz",
			kra: "kra-deva-np",
			krb: "krb-latn-us",
			krc: "krc-cyrl-ru",
			krd: "krd-latn-tl",
			kre: "kre-latn-br",
			krf: "krf-latn-vu",
			krh: "krh-latn-ng",
			kri: "kri-latn-sl",
			krj: "krj-latn-ph",
			krk: "krk-cyrl-ru",
			krl: "krl-latn-ru",
			krn: "krn-latn-lr",
			krp: "krp-latn-ng",
			krr: "krr-khmr-kh",
			krs: "krs-latn-zz",
			krt: "krt-latn-ne",
			kru: "kru-deva-in",
			krv: "krv-khmr-kh",
			krw: "krw-latn-lr",
			krx: "krx-latn-sn",
			kry: "kry-latn-az",
			krz: "krz-latn-id",
			ks: "ks-arab-in",
			ksa: "ksa-latn-ng",
			ksb: "ksb-latn-tz",
			ksc: "ksc-latn-ph",
			ksd: "ksd-latn-zz",
			kse: "kse-latn-pg",
			ksf: "ksf-latn-cm",
			ksg: "ksg-latn-sb",
			ksh: "ksh-latn-de",
			ksi: "ksi-latn-pg",
			ksj: "ksj-latn-zz",
			ksk: "ksk-latn-us",
			ksl: "ksl-latn-pg",
			ksm: "ksm-latn-ng",
			ksn: "ksn-latn-ph",
			kso: "kso-latn-ng",
			ksp: "ksp-latn-cf",
			ksq: "ksq-latn-ng",
			ksr: "ksr-latn-zz",
			kss: "kss-latn-lr",
			kst: "kst-latn-bf",
			ksu: "ksu-mymr-in",
			ksv: "ksv-latn-cd",
			ksw: "ksw-mymr-mm",
			"ksw-latn": "ksw-latn-mm",
			ksx: "ksx-latn-id",
			ksz: "ksz-deva-in",
			kta: "kta-latn-vn",
			ktb: "ktb-ethi-zz",
			ktc: "ktc-latn-ng",
			ktd: "ktd-latn-au",
			ktf: "ktf-latn-cd",
			ktg: "ktg-latn-au",
			kth: "kth-latn-td",
			kti: "kti-latn-id",
			ktj: "ktj-latn-ci",
			ktk: "ktk-latn-pg",
			ktl: "ktl-arab-ir",
			ktm: "ktm-latn-zz",
			ktn: "ktn-latn-br",
			kto: "kto-latn-zz",
			ktp: "ktp-plrd-cn",
			ktq: "ktq-latn-ph",
			ktr: "ktr-latn-my",
			kts: "kts-latn-id",
			ktt: "ktt-latn-id",
			ktu: "ktu-latn-cd",
			ktv: "ktv-latn-vn",
			ktw: "ktw-latn-us",
			ktx: "ktx-latn-br",
			kty: "kty-latn-cd",
			ktz: "ktz-latn-na",
			ku: "ku-latn-tr",
			"ku-arab": "ku-arab-iq",
			"ku-lb": "ku-arab-lb",
			"ku-yezi": "ku-yezi-ge",
			kub: "kub-latn-zz",
			kuc: "kuc-latn-id",
			kud: "kud-latn-zz",
			kue: "kue-latn-zz",
			kuf: "kuf-laoo-la",
			kug: "kug-latn-ng",
			kuh: "kuh-latn-ng",
			kui: "kui-latn-br",
			kuj: "kuj-latn-zz",
			kuk: "kuk-latn-id",
			kul: "kul-latn-ng",
			kum: "kum-cyrl-ru",
			kun: "kun-latn-zz",
			kuo: "kuo-latn-pg",
			kup: "kup-latn-zz",
			kuq: "kuq-latn-br",
			kus: "kus-latn-zz",
			kut: "kut-latn-ca",
			kuu: "kuu-latn-us",
			kuv: "kuv-latn-id",
			kuw: "kuw-latn-cf",
			kux: "kux-latn-au",
			kuy: "kuy-latn-au",
			kuz: "kuz-latn-cl",
			kv: "kv-cyrl-ru",
			kva: "kva-cyrl-ru",
			kvb: "kvb-latn-id",
			kvc: "kvc-latn-pg",
			kvd: "kvd-latn-id",
			kve: "kve-latn-my",
			kvf: "kvf-latn-td",
			kvg: "kvg-latn-zz",
			kvh: "kvh-latn-id",
			kvi: "kvi-latn-td",
			kvj: "kvj-latn-cm",
			kvl: "kvl-latn-mm",
			kvm: "kvm-latn-cm",
			kvn: "kvn-latn-co",
			kvo: "kvo-latn-id",
			kvp: "kvp-latn-id",
			kvq: "kvq-mymr-mm",
			"kvq-latn": "kvq-latn-mm",
			kvr: "kvr-latn-id",
			kvt: "kvt-mymr-mm",
			kvv: "kvv-latn-id",
			kvw: "kvw-latn-id",
			kvx: "kvx-arab-pk",
			kvy: "kvy-kali-mm",
			kvz: "kvz-latn-id",
			kw: "kw-latn-gb",
			kwa: "kwa-latn-br",
			kwb: "kwb-latn-ng",
			kwc: "kwc-latn-cg",
			kwd: "kwd-latn-sb",
			kwe: "kwe-latn-id",
			kwf: "kwf-latn-sb",
			kwg: "kwg-latn-td",
			kwh: "kwh-latn-id",
			kwi: "kwi-latn-co",
			kwj: "kwj-latn-zz",
			kwk: "kwk-latn-ca",
			kwl: "kwl-latn-ng",
			kwm: "kwm-latn-na",
			kwn: "kwn-latn-na",
			kwo: "kwo-latn-zz",
			kwp: "kwp-latn-ci",
			kwq: "kwq-latn-zz",
			kwr: "kwr-latn-id",
			kws: "kws-latn-cd",
			kwt: "kwt-latn-id",
			kwu: "kwu-latn-cm",
			kwv: "kwv-latn-td",
			kww: "kww-latn-sr",
			kwy: "kwy-latn-cd",
			kwz: "kwz-latn-ao",
			kxa: "kxa-latn-zz",
			kxb: "kxb-latn-ci",
			kxc: "kxc-ethi-zz",
			kxd: "kxd-latn-bn",
			"kxd-arab": "kxd-arab-bn",
			kxe: "kxe-latn-zz",
			kxf: "kxf-mymr-mm",
			"kxf-latn": "kxf-latn-mm",
			kxi: "kxi-latn-my",
			kxj: "kxj-latn-td",
			kxk: "kxk-mymr-mm",
			kxl: "kxl-deva-in",
			kxm: "kxm-thai-th",
			kxn: "kxn-latn-my",
			kxo: "kxo-latn-br",
			kxp: "kxp-arab-pk",
			kxq: "kxq-latn-id",
			kxr: "kxr-latn-pg",
			kxt: "kxt-latn-pg",
			kxv: "kxv-orya-in",
			"kxv-latn": "kxv-latn-in",
			"kxv-telu": "kxv-telu-in",
			kxw: "kxw-latn-zz",
			kxx: "kxx-latn-cg",
			kxy: "kxy-latn-vn",
			kxz: "kxz-latn-zz",
			ky: "ky-cyrl-kg",
			"ky-arab": "ky-arab-cn",
			"ky-cn": "ky-arab-cn",
			"ky-latn": "ky-latn-tr",
			"ky-tr": "ky-latn-tr",
			kya: "kya-latn-tz",
			kyb: "kyb-latn-ph",
			kyc: "kyc-latn-pg",
			kyd: "kyd-latn-id",
			kye: "kye-latn-zz",
			kyf: "kyf-latn-ci",
			kyg: "kyg-latn-pg",
			kyh: "kyh-latn-us",
			kyi: "kyi-latn-my",
			kyj: "kyj-latn-ph",
			kyk: "kyk-latn-ph",
			kyl: "kyl-latn-us",
			kym: "kym-latn-cf",
			kyn: "kyn-latn-ph",
			kyo: "kyo-latn-id",
			kyq: "kyq-latn-td",
			kyr: "kyr-latn-br",
			kys: "kys-latn-my",
			kyt: "kyt-latn-id",
			kyu: "kyu-kali-mm",
			"kyu-latn": "kyu-latn-mm",
			"kyu-mymr": "kyu-mymr-mm",
			kyv: "kyv-deva-np",
			kyw: "kyw-deva-in",
			"kyw-beng": "kyw-beng-in",
			"kyw-orya": "kyw-orya-in",
			kyx: "kyx-latn-zz",
			kyy: "kyy-latn-pg",
			kyz: "kyz-latn-br",
			kza: "kza-latn-bf",
			kzb: "kzb-latn-id",
			kzc: "kzc-latn-ci",
			kzd: "kzd-latn-id",
			kze: "kze-latn-pg",
			kzf: "kzf-latn-id",
			kzh: "kzh-arab-zz",
			kzi: "kzi-latn-my",
			kzj: "kzj-latn-my",
			kzk: "kzk-latn-sb",
			kzl: "kzl-latn-id",
			kzm: "kzm-latn-id",
			kzn: "kzn-latn-mw",
			kzo: "kzo-latn-ga",
			kzp: "kzp-latn-id",
			kzr: "kzr-latn-zz",
			kzs: "kzs-latn-my",
			kzt: "kzt-latn-my",
			kzu: "kzu-latn-id",
			kzv: "kzv-latn-id",
			kzw: "kzw-latn-br",
			kzx: "kzx-latn-id",
			kzy: "kzy-latn-cd",
			kzz: "kzz-latn-id",
			la: "la-latn-va",
			laa: "laa-latn-ph",
			lab: "lab-lina-gr",
			lac: "lac-latn-mx",
			lad: "lad-hebr-il",
			lae: "lae-deva-in",
			"lae-tibt": "lae-tibt-in",
			lag: "lag-latn-tz",
			lah: "lah-arab-pk",
			lai: "lai-latn-mw",
			laj: "laj-latn-ug",
			lal: "lal-latn-cd",
			lam: "lam-latn-zm",
			lan: "lan-latn-ng",
			lap: "lap-latn-td",
			laq: "laq-latn-vn",
			lar: "lar-latn-gh",
			las: "las-latn-zz",
			lau: "lau-latn-id",
			law: "law-latn-id",
			lax: "lax-latn-in",
			"lax-beng": "lax-beng-in",
			laz: "laz-latn-pg",
			lb: "lb-latn-lu",
			lbb: "lbb-latn-pg",
			lbc: "lbc-lisu-cn",
			lbe: "lbe-cyrl-ru",
			lbf: "lbf-deva-in",
			"lbf-tibt": "lbf-tibt-cn",
			lbi: "lbi-latn-cm",
			lbj: "lbj-tibt-in",
			"lbj-arab": "lbj-arab-in",
			lbl: "lbl-latn-ph",
			lbm: "lbm-deva-in",
			lbn: "lbn-latn-la",
			"lbn-laoo": "lbn-laoo-la",
			lbo: "lbo-laoo-la",
			"lbo-latn": "lbo-latn-us",
			lbq: "lbq-latn-pg",
			lbr: "lbr-deva-np",
			lbt: "lbt-latn-vn",
			lbu: "lbu-latn-zz",
			lbv: "lbv-latn-pg",
			lbw: "lbw-latn-id",
			lbx: "lbx-latn-id",
			lby: "lby-latn-au",
			lbz: "lbz-latn-au",
			lcc: "lcc-latn-id",
			lcd: "lcd-latn-id",
			lce: "lce-latn-id",
			lcf: "lcf-latn-id",
			lch: "lch-latn-ao",
			lcl: "lcl-latn-id",
			lcm: "lcm-latn-zz",
			lcp: "lcp-thai-cn",
			lcq: "lcq-latn-id",
			lcs: "lcs-latn-id",
			lda: "lda-latn-ci",
			ldb: "ldb-latn-zz",
			ldd: "ldd-latn-ng",
			ldg: "ldg-latn-ng",
			ldh: "ldh-latn-ng",
			ldi: "ldi-latn-cg",
			ldj: "ldj-latn-ng",
			ldk: "ldk-latn-ng",
			ldl: "ldl-latn-ng",
			ldm: "ldm-latn-gn",
			ldn: "ldn-latn-001",
			ldo: "ldo-latn-ng",
			ldp: "ldp-latn-ng",
			ldq: "ldq-latn-ng",
			lea: "lea-latn-cd",
			leb: "leb-latn-zm",
			lec: "lec-latn-bo",
			led: "led-latn-zz",
			lee: "lee-latn-zz",
			lef: "lef-latn-gh",
			leh: "leh-latn-zm",
			lei: "lei-latn-pg",
			lej: "lej-latn-cd",
			lek: "lek-latn-pg",
			lel: "lel-latn-cd",
			lem: "lem-latn-zz",
			len: "len-latn-hn",
			leo: "leo-latn-cm",
			lep: "lep-lepc-in",
			leq: "leq-latn-zz",
			ler: "ler-latn-pg",
			les: "les-latn-cd",
			let: "let-latn-pg",
			leu: "leu-latn-zz",
			lev: "lev-latn-id",
			lew: "lew-latn-id",
			lex: "lex-latn-id",
			ley: "ley-latn-id",
			lez: "lez-cyrl-ru",
			lfa: "lfa-latn-cm",
			lfn: "lfn-latn-001",
			"lfn-cyrl": "lfn-cyrl-001",
			lg: "lg-latn-ug",
			lga: "lga-latn-sb",
			lgb: "lgb-latn-sb",
			lgg: "lgg-latn-zz",
			lgh: "lgh-latn-vn",
			lgi: "lgi-latn-id",
			lgk: "lgk-latn-vu",
			lgl: "lgl-latn-sb",
			lgm: "lgm-latn-cd",
			lgn: "lgn-latn-et",
			lgo: "lgo-latn-ss",
			lgq: "lgq-latn-gh",
			lgr: "lgr-latn-sb",
			lgt: "lgt-latn-pg",
			lgu: "lgu-latn-sb",
			lgz: "lgz-latn-cd",
			lha: "lha-latn-vn",
			lhh: "lhh-latn-id",
			lhi: "lhi-latn-cn",
			lhm: "lhm-deva-np",
			lhn: "lhn-latn-my",
			lhs: "lhs-syrc-sy",
			lht: "lht-latn-vu",
			lhu: "lhu-latn-cn",
			li: "li-latn-nl",
			lia: "lia-latn-zz",
			lib: "lib-latn-pg",
			lic: "lic-latn-cn",
			lid: "lid-latn-zz",
			lie: "lie-latn-cd",
			lif: "lif-deva-np",
			"lif-limb": "lif-limb-in",
			lig: "lig-latn-zz",
			lih: "lih-latn-zz",
			lij: "lij-latn-it",
			lik: "lik-latn-cd",
			lil: "lil-latn-ca",
			lio: "lio-latn-id",
			lip: "lip-latn-gh",
			liq: "liq-latn-et",
			lir: "lir-latn-lr",
			lis: "lis-lisu-cn",
			liu: "liu-latn-sd",
			liv: "liv-latn-lv",
			liw: "liw-latn-id",
			lix: "lix-latn-id",
			liy: "liy-latn-cf",
			liz: "liz-latn-cd",
			lja: "lja-latn-au",
			lje: "lje-latn-id",
			lji: "lji-latn-id",
			ljl: "ljl-latn-id",
			ljp: "ljp-latn-id",
			ljw: "ljw-latn-au",
			ljx: "ljx-latn-au",
			lka: "lka-latn-tl",
			lkb: "lkb-latn-ke",
			lkc: "lkc-latn-vn",
			lkd: "lkd-latn-br",
			lke: "lke-latn-ug",
			lkh: "lkh-tibt-bt",
			lki: "lki-arab-ir",
			lkj: "lkj-latn-my",
			lkl: "lkl-latn-pg",
			lkm: "lkm-latn-au",
			lkn: "lkn-latn-vu",
			lko: "lko-latn-ke",
			lkr: "lkr-latn-ss",
			lks: "lks-latn-ke",
			lkt: "lkt-latn-us",
			lku: "lku-latn-au",
			lky: "lky-latn-ss",
			lla: "lla-latn-ng",
			llb: "llb-latn-mz",
			llc: "llc-latn-gn",
			lld: "lld-latn-it",
			lle: "lle-latn-zz",
			llf: "llf-latn-pg",
			llg: "llg-latn-id",
			lli: "lli-latn-cg",
			llj: "llj-latn-au",
			llk: "llk-latn-my",
			lll: "lll-latn-pg",
			llm: "llm-latn-id",
			lln: "lln-latn-zz",
			llp: "llp-latn-vu",
			llq: "llq-latn-id",
			llu: "llu-latn-sb",
			llx: "llx-latn-fj",
			lma: "lma-latn-gn",
			lmb: "lmb-latn-vu",
			lmc: "lmc-latn-au",
			lmd: "lmd-latn-sd",
			lme: "lme-latn-td",
			lmf: "lmf-latn-id",
			lmg: "lmg-latn-pg",
			lmh: "lmh-deva-np",
			lmi: "lmi-latn-cd",
			lmj: "lmj-latn-id",
			lmk: "lmk-latn-in",
			"lmk-mymr": "lmk-mymr-in",
			lml: "lml-latn-vu",
			lmn: "lmn-telu-in",
			lmo: "lmo-latn-it",
			lmp: "lmp-latn-zz",
			lmq: "lmq-latn-id",
			lmr: "lmr-latn-id",
			lmu: "lmu-latn-vu",
			lmv: "lmv-latn-fj",
			lmw: "lmw-latn-us",
			lmx: "lmx-latn-cm",
			lmy: "lmy-latn-id",
			ln: "ln-latn-cd",
			lna: "lna-latn-cf",
			lnb: "lnb-latn-na",
			lnd: "lnd-latn-id",
			lnh: "lnh-latn-my",
			lni: "lni-latn-pg",
			lnj: "lnj-latn-au",
			lnl: "lnl-latn-cf",
			lnm: "lnm-latn-pg",
			lnn: "lnn-latn-vu",
			lns: "lns-latn-zz",
			lnu: "lnu-latn-zz",
			lnw: "lnw-latn-au",
			lnz: "lnz-latn-cd",
			lo: "lo-laoo-la",
			loa: "loa-latn-id",
			lob: "lob-latn-bf",
			loc: "loc-latn-ph",
			loe: "loe-latn-id",
			log: "log-latn-cd",
			loh: "loh-latn-ss",
			loi: "loi-latn-ci",
			loj: "loj-latn-zz",
			lok: "lok-latn-zz",
			lol: "lol-latn-cd",
			lom: "lom-latn-lr",
			lon: "lon-latn-mw",
			loo: "loo-latn-cd",
			lop: "lop-latn-ng",
			loq: "loq-latn-cd",
			lor: "lor-latn-zz",
			los: "los-latn-zz",
			lot: "lot-latn-ss",
			"lot-arab": "lot-arab-ss",
			lou: "lou-latn-us",
			low: "low-latn-my",
			lox: "lox-latn-id",
			loy: "loy-deva-np",
			"loy-tibt": "loy-tibt-np",
			loz: "loz-latn-zm",
			lpa: "lpa-latn-vu",
			lpe: "lpe-latn-id",
			lpn: "lpn-latn-mm",
			lpo: "lpo-plrd-cn",
			"lpo-lisu": "lpo-lisu-cn",
			lpx: "lpx-latn-ss",
			lqr: "lqr-latn-ss",
			lra: "lra-latn-my",
			lrc: "lrc-arab-ir",
			lrg: "lrg-latn-au",
			lri: "lri-latn-ke",
			lrk: "lrk-arab-pk",
			lrl: "lrl-arab-ir",
			lrm: "lrm-latn-ke",
			lrn: "lrn-latn-id",
			lro: "lro-latn-sd",
			lrt: "lrt-latn-id",
			lrv: "lrv-latn-vu",
			lrz: "lrz-latn-vu",
			lsa: "lsa-arab-ir",
			lsd: "lsd-hebr-il",
			lse: "lse-latn-cd",
			lsi: "lsi-latn-mm",
			lsm: "lsm-latn-ug",
			lsr: "lsr-latn-pg",
			lss: "lss-arab-pk",
			lt: "lt-latn-lt",
			ltg: "ltg-latn-lv",
			lth: "lth-latn-ug",
			lti: "lti-latn-id",
			ltn: "ltn-latn-br",
			lto: "lto-latn-ke",
			lts: "lts-latn-ke",
			ltu: "ltu-latn-id",
			lu: "lu-latn-cd",
			lua: "lua-latn-cd",
			luc: "luc-latn-ug",
			lud: "lud-latn-ru",
			lue: "lue-latn-zm",
			luf: "luf-latn-pg",
			lui: "lui-latn-us",
			luj: "luj-latn-cd",
			luk: "luk-tibt-bt",
			lul: "lul-latn-ss",
			lum: "lum-latn-ao",
			lun: "lun-latn-zm",
			luo: "luo-latn-ke",
			lup: "lup-latn-ga",
			luq: "luq-latn-cu",
			lur: "lur-latn-id",
			lus: "lus-latn-in",
			"lus-beng": "lus-beng-bd",
			"lus-brai": "lus-brai-in",
			lut: "lut-latn-us",
			luu: "luu-deva-np",
			luv: "luv-arab-om",
			luw: "luw-latn-cm",
			luy: "luy-latn-ke",
			luz: "luz-arab-ir",
			lv: "lv-latn-lv",
			lva: "lva-latn-tl",
			lvi: "lvi-latn-la",
			lvk: "lvk-latn-sb",
			lvu: "lvu-latn-id",
			lwa: "lwa-latn-cd",
			lwe: "lwe-latn-id",
			lwg: "lwg-latn-ke",
			lwh: "lwh-latn-vn",
			lwl: "lwl-thai-th",
			lwm: "lwm-thai-cn",
			lwo: "lwo-latn-ss",
			"lwo-za": "lwo-latn-za",
			lwt: "lwt-latn-id",
			lww: "lww-latn-vu",
			lxm: "lxm-latn-pg",
			lya: "lya-tibt-bt",
			lyn: "lyn-latn-zm",
			lzh: "lzh-hans-cn",
			lzl: "lzl-latn-vu",
			lzn: "lzn-latn-mm",
			lzz: "lzz-latn-tr",
			maa: "maa-latn-mx",
			mab: "mab-latn-mx",
			mad: "mad-latn-id",
			mae: "mae-latn-ng",
			maf: "maf-latn-cm",
			mag: "mag-deva-in",
			mai: "mai-deva-in",
			maj: "maj-latn-mx",
			mak: "mak-latn-id",
			mam: "mam-latn-gt",
			man: "man-latn-gm",
			"man-gn": "man-nkoo-gn",
			"man-nkoo": "man-nkoo-gn",
			maq: "maq-latn-mx",
			mas: "mas-latn-ke",
			mat: "mat-latn-mx",
			mau: "mau-latn-mx",
			mav: "mav-latn-br",
			maw: "maw-latn-zz",
			max: "max-latn-id",
			maz: "maz-latn-mx",
			mba: "mba-latn-ph",
			mbb: "mbb-latn-ph",
			mbc: "mbc-latn-br",
			mbd: "mbd-latn-ph",
			mbf: "mbf-latn-sg",
			mbh: "mbh-latn-zz",
			mbi: "mbi-latn-ph",
			mbj: "mbj-latn-br",
			mbk: "mbk-latn-pg",
			mbl: "mbl-latn-br",
			mbm: "mbm-latn-cg",
			mbn: "mbn-latn-co",
			mbo: "mbo-latn-zz",
			mbp: "mbp-latn-co",
			mbq: "mbq-latn-zz",
			mbr: "mbr-latn-co",
			mbs: "mbs-latn-ph",
			mbt: "mbt-latn-ph",
			mbu: "mbu-latn-zz",
			mbv: "mbv-latn-gn",
			mbw: "mbw-latn-zz",
			mbx: "mbx-latn-pg",
			mby: "mby-arab-pk",
			mbz: "mbz-latn-mx",
			mca: "mca-latn-py",
			mcb: "mcb-latn-pe",
			mcc: "mcc-latn-pg",
			mcd: "mcd-latn-pe",
			mce: "mce-latn-mx",
			mcf: "mcf-latn-pe",
			mcg: "mcg-latn-ve",
			mch: "mch-latn-ve",
			mci: "mci-latn-zz",
			mcj: "mcj-latn-ng",
			mck: "mck-latn-ao",
			mcl: "mcl-latn-co",
			mcm: "mcm-latn-my",
			mcn: "mcn-latn-td",
			mco: "mco-latn-mx",
			mcp: "mcp-latn-zz",
			mcq: "mcq-latn-zz",
			mcr: "mcr-latn-zz",
			mcs: "mcs-latn-cm",
			mct: "mct-latn-cm",
			mcu: "mcu-latn-zz",
			mcv: "mcv-latn-pg",
			mcw: "mcw-latn-td",
			mcx: "mcx-latn-cf",
			mcy: "mcy-latn-pg",
			mcz: "mcz-latn-pg",
			mda: "mda-latn-zz",
			mdb: "mdb-latn-pg",
			mdc: "mdc-latn-pg",
			mdd: "mdd-latn-cm",
			mde: "mde-arab-zz",
			mdf: "mdf-cyrl-ru",
			mdg: "mdg-latn-td",
			mdh: "mdh-latn-ph",
			mdi: "mdi-latn-cd",
			mdj: "mdj-latn-zz",
			mdk: "mdk-latn-cd",
			mdm: "mdm-latn-cd",
			mdn: "mdn-latn-cf",
			mdp: "mdp-latn-cd",
			mdq: "mdq-latn-cd",
			mdr: "mdr-latn-id",
			mds: "mds-latn-pg",
			mdt: "mdt-latn-cg",
			mdu: "mdu-latn-cg",
			mdv: "mdv-latn-mx",
			mdw: "mdw-latn-cg",
			mdx: "mdx-ethi-zz",
			mdy: "mdy-ethi-et",
			"mdy-latn": "mdy-latn-et",
			mdz: "mdz-latn-br",
			mea: "mea-latn-cm",
			meb: "meb-latn-pg",
			mec: "mec-latn-au",
			med: "med-latn-zz",
			mee: "mee-latn-zz",
			meh: "meh-latn-mx",
			mej: "mej-latn-id",
			mek: "mek-latn-zz",
			mel: "mel-latn-my",
			mem: "mem-latn-au",
			men: "men-latn-sl",
			meo: "meo-latn-my",
			"meo-arab": "meo-arab-my",
			mep: "mep-latn-au",
			meq: "meq-latn-cm",
			mer: "mer-latn-ke",
			mes: "mes-latn-td",
			met: "met-latn-zz",
			meu: "meu-latn-zz",
			mev: "mev-latn-lr",
			mew: "mew-latn-ng",
			mey: "mey-latn-mr",
			"mey-arab": "mey-arab-mr",
			mez: "mez-latn-us",
			mfa: "mfa-arab-th",
			mfb: "mfb-latn-id",
			mfc: "mfc-latn-cd",
			mfd: "mfd-latn-cm",
			mfe: "mfe-latn-mu",
			mff: "mff-latn-cm",
			mfg: "mfg-latn-gn",
			"mfg-arab": "mfg-arab-gn",
			mfh: "mfh-latn-cm",
			mfi: "mfi-arab-cm",
			"mfi-latn": "mfi-latn-cm",
			mfj: "mfj-latn-cm",
			mfk: "mfk-latn-cm",
			mfl: "mfl-latn-ng",
			mfm: "mfm-latn-ng",
			mfn: "mfn-latn-zz",
			mfo: "mfo-latn-zz",
			mfp: "mfp-latn-id",
			mfq: "mfq-latn-zz",
			mfr: "mfr-latn-au",
			mft: "mft-latn-pg",
			mfu: "mfu-latn-ao",
			mfv: "mfv-latn-gw",
			mfw: "mfw-latn-pg",
			mfx: "mfx-latn-et",
			"mfx-ethi": "mfx-ethi-et",
			mfy: "mfy-latn-mx",
			mfz: "mfz-latn-ss",
			mg: "mg-latn-mg",
			mgb: "mgb-latn-td",
			mgc: "mgc-latn-ss",
			mgd: "mgd-latn-ss",
			"mgd-arab": "mgd-arab-ss",
			mge: "mge-latn-td",
			mgf: "mgf-latn-id",
			mgg: "mgg-latn-cm",
			mgh: "mgh-latn-mz",
			mgi: "mgi-latn-ng",
			mgj: "mgj-latn-ng",
			mgk: "mgk-latn-id",
			mgl: "mgl-latn-zz",
			mgm: "mgm-latn-tl",
			mgn: "mgn-latn-cf",
			mgo: "mgo-latn-cm",
			mgp: "mgp-deva-np",
			mgq: "mgq-latn-tz",
			mgr: "mgr-latn-zm",
			mgs: "mgs-latn-tz",
			mgt: "mgt-latn-pg",
			mgu: "mgu-latn-pg",
			mgv: "mgv-latn-tz",
			mgw: "mgw-latn-tz",
			mgy: "mgy-latn-tz",
			mgz: "mgz-latn-tz",
			mh: "mh-latn-mh",
			mhb: "mhb-latn-ga",
			mhc: "mhc-latn-mx",
			mhd: "mhd-latn-tz",
			mhe: "mhe-latn-my",
			mhf: "mhf-latn-pg",
			mhg: "mhg-latn-au",
			mhi: "mhi-latn-zz",
			mhj: "mhj-arab-af",
			mhk: "mhk-latn-cm",
			mhl: "mhl-latn-zz",
			mhm: "mhm-latn-mz",
			mhn: "mhn-latn-it",
			mho: "mho-latn-zm",
			mhp: "mhp-latn-id",
			mhq: "mhq-latn-us",
			mhs: "mhs-latn-id",
			mht: "mht-latn-ve",
			mhu: "mhu-latn-in",
			mhw: "mhw-latn-bw",
			mhx: "mhx-latn-mm",
			mhy: "mhy-latn-id",
			mhz: "mhz-latn-id",
			mi: "mi-latn-nz",
			mia: "mia-latn-us",
			mib: "mib-latn-mx",
			mic: "mic-latn-ca",
			mid: "mid-mand-iq",
			mie: "mie-latn-mx",
			mif: "mif-latn-zz",
			mig: "mig-latn-mx",
			mih: "mih-latn-mx",
			mii: "mii-latn-mx",
			mij: "mij-latn-cm",
			mik: "mik-latn-us",
			mil: "mil-latn-mx",
			mim: "mim-latn-mx",
			min: "min-latn-id",
			mio: "mio-latn-mx",
			mip: "mip-latn-mx",
			miq: "miq-latn-ni",
			mir: "mir-latn-mx",
			mit: "mit-latn-mx",
			miu: "miu-latn-mx",
			miw: "miw-latn-zz",
			mix: "mix-latn-mx",
			miy: "miy-latn-mx",
			miz: "miz-latn-mx",
			mjb: "mjb-latn-tl",
			mjc: "mjc-latn-mx",
			mjd: "mjd-latn-us",
			mje: "mje-latn-td",
			mjg: "mjg-latn-cn",
			mjh: "mjh-latn-tz",
			mji: "mji-latn-cn",
			mjj: "mjj-latn-pg",
			mjk: "mjk-latn-pg",
			mjl: "mjl-deva-in",
			"mjl-takr": "mjl-takr-in",
			mjm: "mjm-latn-pg",
			mjn: "mjn-latn-pg",
			mjq: "mjq-mlym-in",
			mjr: "mjr-mlym-in",
			mjs: "mjs-latn-ng",
			mjt: "mjt-deva-in",
			"mjt-beng": "mjt-beng-bd",
			mju: "mju-telu-in",
			mjv: "mjv-mlym-in",
			mjw: "mjw-latn-in",
			mjx: "mjx-latn-bd",
			"mjx-beng": "mjx-beng-bd",
			mjy: "mjy-latn-us",
			mjz: "mjz-deva-np",
			mk: "mk-cyrl-mk",
			mka: "mka-latn-ci",
			mkb: "mkb-deva-in",
			mkc: "mkc-latn-pg",
			mke: "mke-deva-in",
			mkf: "mkf-latn-ng",
			mki: "mki-arab-zz",
			mkj: "mkj-latn-fm",
			mkk: "mkk-latn-cm",
			mkl: "mkl-latn-zz",
			mkm: "mkm-thai-th",
			mkn: "mkn-latn-id",
			mko: "mko-latn-ng",
			mkp: "mkp-latn-zz",
			mkr: "mkr-latn-pg",
			mks: "mks-latn-mx",
			mkt: "mkt-latn-nc",
			mku: "mku-latn-gn",
			mkv: "mkv-latn-vu",
			mkw: "mkw-latn-zz",
			mkx: "mkx-latn-ph",
			mky: "mky-latn-id",
			mkz: "mkz-latn-tl",
			ml: "ml-mlym-in",
			mla: "mla-latn-vu",
			mlb: "mlb-latn-cm",
			mlc: "mlc-latn-vn",
			mle: "mle-latn-zz",
			mlf: "mlf-thai-la",
			"mlf-latn": "mlf-latn-la",
			mlh: "mlh-latn-pg",
			mli: "mli-latn-id",
			mlj: "mlj-latn-td",
			mlk: "mlk-latn-ke",
			mll: "mll-latn-vu",
			mln: "mln-latn-sb",
			mlo: "mlo-latn-sn",
			mlp: "mlp-latn-zz",
			mlq: "mlq-latn-sn",
			"mlq-arab": "mlq-arab-sn",
			mlr: "mlr-latn-cm",
			mls: "mls-latn-sd",
			mlu: "mlu-latn-sb",
			mlv: "mlv-latn-vu",
			mlw: "mlw-latn-cm",
			mlx: "mlx-latn-vu",
			mlz: "mlz-latn-ph",
			mma: "mma-latn-ng",
			mmb: "mmb-latn-id",
			mmc: "mmc-latn-mx",
			mmd: "mmd-latn-cn",
			"mmd-hans": "mmd-hans-cn",
			"mmd-hant": "mmd-hant-cn",
			mme: "mme-latn-vu",
			mmf: "mmf-latn-ng",
			mmg: "mmg-latn-vu",
			mmh: "mmh-latn-br",
			mmi: "mmi-latn-pg",
			mmm: "mmm-latn-vu",
			mmn: "mmn-latn-ph",
			mmo: "mmo-latn-zz",
			mmp: "mmp-latn-pg",
			mmq: "mmq-latn-pg",
			mmr: "mmr-latn-cn",
			mmt: "mmt-latn-pg",
			mmu: "mmu-latn-zz",
			mmv: "mmv-latn-br",
			mmw: "mmw-latn-vu",
			mmx: "mmx-latn-zz",
			mmy: "mmy-latn-td",
			mmz: "mmz-latn-cd",
			mn: "mn-cyrl-mn",
			"mn-cn": "mn-mong-cn",
			"mn-mong": "mn-mong-cn",
			mna: "mna-latn-zz",
			mnb: "mnb-latn-id",
			mnd: "mnd-latn-br",
			mne: "mne-latn-td",
			mnf: "mnf-latn-zz",
			mng: "mng-latn-vn",
			mnh: "mnh-latn-cd",
			mni: "mni-beng-in",
			mnj: "mnj-arab-af",
			mnl: "mnl-latn-vu",
			mnm: "mnm-latn-pg",
			mnn: "mnn-latn-vn",
			mnp: "mnp-latn-cn",
			mnq: "mnq-latn-my",
			mnr: "mnr-latn-us",
			mns: "mns-cyrl-ru",
			mnu: "mnu-latn-id",
			mnv: "mnv-latn-sb",
			mnw: "mnw-mymr-mm",
			mnx: "mnx-latn-id",
			mny: "mny-latn-mz",
			mnz: "mnz-latn-id",
			mo: "mo-latn-ro",
			moa: "moa-latn-zz",
			moc: "moc-latn-ar",
			mod: "mod-latn-us",
			moe: "moe-latn-ca",
			mog: "mog-latn-id",
			moh: "moh-latn-ca",
			moi: "moi-latn-ng",
			moj: "moj-latn-cg",
			mok: "mok-latn-id",
			mom: "mom-latn-ni",
			moo: "moo-latn-vn",
			mop: "mop-latn-bz",
			moq: "moq-latn-id",
			mor: "mor-latn-sd",
			mos: "mos-latn-bf",
			mot: "mot-latn-co",
			mou: "mou-latn-td",
			mov: "mov-latn-us",
			mow: "mow-latn-cg",
			mox: "mox-latn-zz",
			moy: "moy-latn-et",
			"moy-ethi": "moy-ethi-et",
			moz: "moz-latn-td",
			mpa: "mpa-latn-tz",
			mpb: "mpb-latn-au",
			mpc: "mpc-latn-au",
			mpd: "mpd-latn-br",
			mpe: "mpe-latn-et",
			"mpe-ethi": "mpe-ethi-et",
			mpg: "mpg-latn-td",
			mph: "mph-latn-au",
			mpi: "mpi-latn-cm",
			mpj: "mpj-latn-au",
			mpk: "mpk-latn-td",
			mpl: "mpl-latn-pg",
			mpm: "mpm-latn-mx",
			mpn: "mpn-latn-pg",
			mpo: "mpo-latn-pg",
			mpp: "mpp-latn-zz",
			mpq: "mpq-latn-br",
			mpr: "mpr-latn-sb",
			mps: "mps-latn-zz",
			mpt: "mpt-latn-zz",
			mpu: "mpu-latn-br",
			mpv: "mpv-latn-pg",
			mpw: "mpw-latn-br",
			mpx: "mpx-latn-zz",
			mpy: "mpy-latn-id",
			mpz: "mpz-thai-th",
			mqa: "mqa-latn-id",
			mqb: "mqb-latn-cm",
			mqc: "mqc-latn-id",
			mqe: "mqe-latn-pg",
			mqf: "mqf-latn-id",
			mqg: "mqg-latn-id",
			mqh: "mqh-latn-mx",
			mqi: "mqi-latn-id",
			mqj: "mqj-latn-id",
			mqk: "mqk-latn-ph",
			mql: "mql-latn-zz",
			mqm: "mqm-latn-pf",
			mqn: "mqn-latn-id",
			mqo: "mqo-latn-id",
			mqp: "mqp-latn-id",
			mqq: "mqq-latn-my",
			mqr: "mqr-latn-id",
			mqs: "mqs-latn-id",
			mqu: "mqu-latn-ss",
			mqv: "mqv-latn-pg",
			mqw: "mqw-latn-pg",
			mqx: "mqx-latn-id",
			"mqx-bugi": "mqx-bugi-id",
			mqy: "mqy-latn-id",
			mqz: "mqz-latn-pg",
			mr: "mr-deva-in",
			mra: "mra-thai-th",
			mrb: "mrb-latn-vu",
			mrc: "mrc-latn-us",
			mrd: "mrd-deva-np",
			mrf: "mrf-latn-id",
			mrg: "mrg-latn-in",
			"mrg-beng": "mrg-beng-in",
			"mrg-deva": "mrg-deva-in",
			mrh: "mrh-latn-in",
			mrj: "mrj-cyrl-ru",
			mrk: "mrk-latn-nc",
			mrl: "mrl-latn-fm",
			mrm: "mrm-latn-vu",
			mrn: "mrn-latn-sb",
			mro: "mro-mroo-bd",
			mrp: "mrp-latn-vu",
			mrq: "mrq-latn-pf",
			mrr: "mrr-deva-in",
			mrs: "mrs-latn-vu",
			mrt: "mrt-latn-ng",
			mru: "mru-latn-cm",
			mrv: "mrv-latn-pf",
			mrw: "mrw-latn-ph",
			"mrw-arab": "mrw-arab-ph",
			mrx: "mrx-latn-id",
			mry: "mry-latn-ph",
			mrz: "mrz-latn-id",
			ms: "ms-latn-my",
			"ms-cc": "ms-arab-cc",
			msb: "msb-latn-ph",
			msc: "msc-latn-gn",
			mse: "mse-latn-td",
			msf: "msf-latn-id",
			msg: "msg-latn-id",
			msh: "msh-latn-mg",
			msi: "msi-latn-my",
			msj: "msj-latn-cd",
			msk: "msk-latn-ph",
			msl: "msl-latn-id",
			msm: "msm-latn-ph",
			msn: "msn-latn-vu",
			mso: "mso-latn-id",
			msp: "msp-latn-br",
			msq: "msq-latn-nc",
			mss: "mss-latn-id",
			msu: "msu-latn-pg",
			msv: "msv-latn-cm",
			msw: "msw-latn-gw",
			msx: "msx-latn-pg",
			msy: "msy-latn-pg",
			msz: "msz-latn-pg",
			mt: "mt-latn-mt",
			mta: "mta-latn-ph",
			mtb: "mtb-latn-ci",
			mtc: "mtc-latn-zz",
			mtd: "mtd-latn-id",
			mte: "mte-latn-sb",
			mtf: "mtf-latn-zz",
			mtg: "mtg-latn-id",
			mth: "mth-latn-id",
			mti: "mti-latn-zz",
			mtj: "mtj-latn-id",
			mtk: "mtk-latn-cm",
			mtl: "mtl-latn-ng",
			mtm: "mtm-cyrl-ru",
			mtn: "mtn-latn-ni",
			mto: "mto-latn-mx",
			mtp: "mtp-latn-bo",
			mtq: "mtq-latn-vn",
			mtr: "mtr-deva-in",
			mts: "mts-latn-pe",
			mtt: "mtt-latn-vu",
			mtu: "mtu-latn-mx",
			mtv: "mtv-latn-pg",
			mtw: "mtw-latn-ph",
			mtx: "mtx-latn-mx",
			mty: "mty-latn-pg",
			mua: "mua-latn-cm",
			mub: "mub-latn-td",
			muc: "muc-latn-cm",
			mud: "mud-cyrl-ru",
			mue: "mue-latn-ec",
			mug: "mug-latn-cm",
			muh: "muh-latn-ss",
			mui: "mui-latn-id",
			muj: "muj-latn-td",
			muk: "muk-tibt-np",
			mum: "mum-latn-pg",
			muo: "muo-latn-cm",
			muq: "muq-latn-cn",
			mur: "mur-latn-zz",
			mus: "mus-latn-us",
			mut: "mut-deva-in",
			muu: "muu-latn-ke",
			muv: "muv-taml-in",
			mux: "mux-latn-pg",
			muy: "muy-latn-cm",
			muz: "muz-ethi-et",
			"muz-latn": "muz-latn-et",
			mva: "mva-latn-zz",
			mvd: "mvd-latn-id",
			mvf: "mvf-mong-cn",
			"mvf-phag": "mvf-phag-cn",
			mvg: "mvg-latn-mx",
			mvh: "mvh-latn-td",
			mvk: "mvk-latn-pg",
			mvl: "mvl-latn-au",
			mvn: "mvn-latn-zz",
			mvo: "mvo-latn-sb",
			mvp: "mvp-latn-id",
			mvq: "mvq-latn-pg",
			mvr: "mvr-latn-id",
			mvs: "mvs-latn-id",
			mvt: "mvt-latn-vu",
			mvu: "mvu-latn-td",
			mvv: "mvv-latn-my",
			mvw: "mvw-latn-tz",
			mvx: "mvx-latn-id",
			mvy: "mvy-arab-pk",
			mvz: "mvz-ethi-et",
			"mvz-arab": "mvz-arab-et",
			mwa: "mwa-latn-pg",
			mwb: "mwb-latn-pg",
			mwc: "mwc-latn-pg",
			mwe: "mwe-latn-tz",
			mwf: "mwf-latn-au",
			mwg: "mwg-latn-pg",
			mwh: "mwh-latn-pg",
			mwi: "mwi-latn-vu",
			mwk: "mwk-latn-ml",
			mwl: "mwl-latn-pt",
			mwm: "mwm-latn-td",
			mwn: "mwn-latn-zm",
			mwo: "mwo-latn-vu",
			mwp: "mwp-latn-au",
			mwq: "mwq-latn-mm",
			mwr: "mwr-deva-in",
			mws: "mws-latn-ke",
			mwt: "mwt-mymr-mm",
			"mwt-thai": "mwt-thai-th",
			mwu: "mwu-latn-ss",
			mwv: "mwv-latn-id",
			mww: "mww-hmnp-us",
			mwz: "mwz-latn-cd",
			mxa: "mxa-latn-mx",
			mxb: "mxb-latn-mx",
			mxc: "mxc-latn-zw",
			mxd: "mxd-latn-id",
			mxe: "mxe-latn-vu",
			mxf: "mxf-latn-cm",
			mxg: "mxg-latn-ao",
			mxh: "mxh-latn-cd",
			mxi: "mxi-latn-es",
			mxj: "mxj-latn-in",
			mxk: "mxk-latn-pg",
			mxl: "mxl-latn-bj",
			mxm: "mxm-latn-zz",
			mxn: "mxn-latn-id",
			mxo: "mxo-latn-zm",
			mxp: "mxp-latn-mx",
			mxq: "mxq-latn-mx",
			mxr: "mxr-latn-my",
			mxs: "mxs-latn-mx",
			mxt: "mxt-latn-mx",
			mxu: "mxu-latn-cm",
			mxv: "mxv-latn-mx",
			mxw: "mxw-latn-pg",
			mxx: "mxx-latn-ci",
			mxy: "mxy-latn-mx",
			mxz: "mxz-latn-id",
			my: "my-mymr-mm",
			myb: "myb-latn-td",
			myc: "myc-latn-cd",
			mye: "mye-latn-ga",
			myf: "myf-latn-et",
			myg: "myg-latn-cm",
			myh: "myh-latn-us",
			myj: "myj-latn-ss",
			myk: "myk-latn-zz",
			myl: "myl-latn-id",
			mym: "mym-ethi-zz",
			myp: "myp-latn-br",
			myr: "myr-latn-pe",
			myu: "myu-latn-br",
			myv: "myv-cyrl-ru",
			myw: "myw-latn-zz",
			myx: "myx-latn-ug",
			myy: "myy-latn-co",
			myz: "myz-mand-ir",
			mza: "mza-latn-mx",
			mzd: "mzd-latn-cm",
			mze: "mze-latn-pg",
			mzh: "mzh-latn-ar",
			mzi: "mzi-latn-mx",
			mzj: "mzj-latn-lr",
			mzk: "mzk-latn-zz",
			mzl: "mzl-latn-mx",
			mzm: "mzm-latn-zz",
			mzn: "mzn-arab-ir",
			mzo: "mzo-latn-br",
			mzp: "mzp-latn-zz",
			mzq: "mzq-latn-id",
			mzr: "mzr-latn-br",
			mzt: "mzt-latn-my",
			mzu: "mzu-latn-pg",
			mzv: "mzv-latn-cf",
			mzw: "mzw-latn-zz",
			mzx: "mzx-latn-gy",
			mzz: "mzz-latn-zz",
			na: "na-latn-nr",
			naa: "naa-latn-id",
			nab: "nab-latn-br",
			nac: "nac-latn-zz",
			nae: "nae-latn-id",
			naf: "naf-latn-zz",
			nag: "nag-latn-in",
			naj: "naj-latn-gn",
			nak: "nak-latn-zz",
			nal: "nal-latn-pg",
			nam: "nam-latn-au",
			nan: "nan-hans-cn",
			nao: "nao-deva-np",
			nap: "nap-latn-it",
			naq: "naq-latn-na",
			nar: "nar-latn-ng",
			nas: "nas-latn-zz",
			nat: "nat-latn-ng",
			naw: "naw-latn-gh",
			nax: "nax-latn-pg",
			nay: "nay-latn-au",
			naz: "naz-latn-mx",
			nb: "nb-latn-no",
			nba: "nba-latn-ao",
			nbb: "nbb-latn-ng",
			nbc: "nbc-latn-in",
			nbd: "nbd-latn-cd",
			nbe: "nbe-latn-in",
			nbh: "nbh-latn-ng",
			nbi: "nbi-latn-in",
			nbj: "nbj-latn-au",
			nbk: "nbk-latn-pg",
			nbm: "nbm-latn-cf",
			nbn: "nbn-latn-id",
			nbo: "nbo-latn-ng",
			nbp: "nbp-latn-ng",
			nbq: "nbq-latn-id",
			nbr: "nbr-latn-ng",
			nbt: "nbt-latn-in",
			"nbt-deva": "nbt-deva-in",
			nbu: "nbu-latn-in",
			nbv: "nbv-latn-cm",
			nbw: "nbw-latn-cd",
			nby: "nby-latn-pg",
			nca: "nca-latn-zz",
			ncb: "ncb-latn-in",
			"ncb-deva": "ncb-deva-in",
			ncc: "ncc-latn-pg",
			ncd: "ncd-deva-np",
			nce: "nce-latn-zz",
			ncf: "ncf-latn-zz",
			ncg: "ncg-latn-ca",
			nch: "nch-latn-mx",
			nci: "nci-latn-mx",
			ncj: "ncj-latn-mx",
			nck: "nck-latn-au",
			ncl: "ncl-latn-mx",
			ncm: "ncm-latn-pg",
			ncn: "ncn-latn-pg",
			nco: "nco-latn-zz",
			ncq: "ncq-laoo-la",
			"ncq-thai": "ncq-thai-la",
			ncr: "ncr-latn-cm",
			nct: "nct-latn-in",
			"nct-beng": "nct-beng-in",
			ncu: "ncu-latn-zz",
			ncx: "ncx-latn-mx",
			ncz: "ncz-latn-us",
			nd: "nd-latn-zw",
			nda: "nda-latn-cg",
			ndb: "ndb-latn-cm",
			ndc: "ndc-latn-mz",
			ndd: "ndd-latn-ng",
			ndf: "ndf-cyrl-ru",
			ndg: "ndg-latn-tz",
			ndh: "ndh-latn-tz",
			ndi: "ndi-latn-ng",
			ndj: "ndj-latn-tz",
			ndk: "ndk-latn-cd",
			ndl: "ndl-latn-cd",
			ndm: "ndm-latn-td",
			ndn: "ndn-latn-cg",
			ndp: "ndp-latn-ug",
			ndq: "ndq-latn-ao",
			ndr: "ndr-latn-ng",
			nds: "nds-latn-de",
			ndt: "ndt-latn-cd",
			ndu: "ndu-latn-cm",
			ndv: "ndv-latn-sn",
			ndw: "ndw-latn-cd",
			ndx: "ndx-latn-id",
			ndy: "ndy-latn-cf",
			"ndy-td": "ndy-latn-td",
			ndz: "ndz-latn-ss",
			ne: "ne-deva-np",
			nea: "nea-latn-id",
			neb: "neb-latn-zz",
			nec: "nec-latn-id",
			ned: "ned-latn-ng",
			nee: "nee-latn-nc",
			neg: "neg-cyrl-ru",
			neh: "neh-tibt-bt",
			nei: "nei-xsux-tr",
			nej: "nej-latn-pg",
			nek: "nek-latn-nc",
			nem: "nem-latn-nc",
			nen: "nen-latn-nc",
			neo: "neo-latn-vn",
			neq: "neq-latn-mx",
			ner: "ner-latn-id",
			net: "net-latn-pg",
			neu: "neu-latn-001",
			new: "new-deva-np",
			nex: "nex-latn-zz",
			ney: "ney-latn-ci",
			nez: "nez-latn-us",
			nfa: "nfa-latn-id",
			nfd: "nfd-latn-ng",
			nfl: "nfl-latn-sb",
			nfr: "nfr-latn-zz",
			nfu: "nfu-latn-cm",
			ng: "ng-latn-na",
			nga: "nga-latn-zz",
			ngb: "ngb-latn-zz",
			ngc: "ngc-latn-cd",
			ngd: "ngd-latn-cf",
			nge: "nge-latn-cm",
			ngg: "ngg-latn-cf",
			ngh: "ngh-latn-za",
			ngi: "ngi-latn-ng",
			ngj: "ngj-latn-cm",
			ngk: "ngk-latn-au",
			ngl: "ngl-latn-mz",
			ngm: "ngm-latn-fm",
			ngn: "ngn-latn-cm",
			ngp: "ngp-latn-tz",
			ngq: "ngq-latn-tz",
			ngr: "ngr-latn-sb",
			ngs: "ngs-latn-ng",
			ngt: "ngt-laoo-la",
			ngu: "ngu-latn-mx",
			ngv: "ngv-latn-cm",
			ngw: "ngw-latn-ng",
			ngx: "ngx-latn-ng",
			ngy: "ngy-latn-cm",
			ngz: "ngz-latn-cg",
			nha: "nha-latn-au",
			nhb: "nhb-latn-zz",
			nhc: "nhc-latn-mx",
			nhd: "nhd-latn-py",
			nhe: "nhe-latn-mx",
			nhf: "nhf-latn-au",
			nhg: "nhg-latn-mx",
			nhi: "nhi-latn-mx",
			nhk: "nhk-latn-mx",
			nhm: "nhm-latn-mx",
			nhn: "nhn-latn-mx",
			nho: "nho-latn-pg",
			nhp: "nhp-latn-mx",
			nhq: "nhq-latn-mx",
			nhr: "nhr-latn-bw",
			nht: "nht-latn-mx",
			nhu: "nhu-latn-cm",
			nhv: "nhv-latn-mx",
			nhw: "nhw-latn-mx",
			nhx: "nhx-latn-mx",
			nhy: "nhy-latn-mx",
			nhz: "nhz-latn-mx",
			nia: "nia-latn-id",
			nib: "nib-latn-pg",
			nid: "nid-latn-au",
			nie: "nie-latn-td",
			nif: "nif-latn-zz",
			nig: "nig-latn-au",
			nih: "nih-latn-tz",
			nii: "nii-latn-zz",
			nij: "nij-latn-id",
			nil: "nil-latn-id",
			nim: "nim-latn-tz",
			nin: "nin-latn-zz",
			nio: "nio-cyrl-ru",
			niq: "niq-latn-ke",
			nir: "nir-latn-id",
			nis: "nis-latn-pg",
			nit: "nit-telu-in",
			niu: "niu-latn-nu",
			niv: "niv-cyrl-ru",
			"niv-latn": "niv-latn-ru",
			niw: "niw-latn-pg",
			nix: "nix-latn-cd",
			niy: "niy-latn-zz",
			niz: "niz-latn-zz",
			nja: "nja-latn-ng",
			njb: "njb-latn-in",
			njd: "njd-latn-tz",
			njh: "njh-latn-in",
			nji: "nji-latn-au",
			njj: "njj-latn-cm",
			njl: "njl-latn-ss",
			njm: "njm-latn-in",
			njn: "njn-latn-in",
			njo: "njo-latn-in",
			njr: "njr-latn-ng",
			njs: "njs-latn-id",
			njt: "njt-latn-sr",
			nju: "nju-latn-au",
			njx: "njx-latn-cg",
			njy: "njy-latn-cm",
			njz: "njz-latn-in",
			"njz-beng": "njz-beng-in",
			nka: "nka-latn-zm",
			nkb: "nkb-latn-in",
			nkc: "nkc-latn-cm",
			nkd: "nkd-latn-in",
			nke: "nke-latn-sb",
			nkf: "nkf-latn-in",
			nkg: "nkg-latn-zz",
			nkh: "nkh-latn-in",
			nki: "nki-latn-in",
			"nki-beng": "nki-beng-in",
			nkj: "nkj-latn-id",
			nkk: "nkk-latn-vu",
			nkm: "nkm-latn-pg",
			nkn: "nkn-latn-ao",
			nko: "nko-latn-zz",
			nkq: "nkq-latn-gh",
			nkr: "nkr-latn-fm",
			nks: "nks-latn-id",
			nkt: "nkt-latn-tz",
			nku: "nku-latn-ci",
			nkv: "nkv-latn-mw",
			nkw: "nkw-latn-cd",
			nkx: "nkx-latn-ng",
			nkz: "nkz-latn-ng",
			nl: "nl-latn-nl",
			nla: "nla-latn-cm",
			nlc: "nlc-latn-id",
			nle: "nle-latn-ke",
			nlg: "nlg-latn-sb",
			nli: "nli-arab-af",
			nlj: "nlj-latn-cd",
			nlk: "nlk-latn-id",
			nlm: "nlm-arab-pk",
			nlo: "nlo-latn-cd",
			nlq: "nlq-latn-mm",
			nlu: "nlu-latn-gh",
			nlv: "nlv-latn-mx",
			nlw: "nlw-latn-au",
			nlx: "nlx-deva-in",
			nly: "nly-latn-au",
			nlz: "nlz-latn-sb",
			nma: "nma-latn-in",
			nmb: "nmb-latn-vu",
			nmc: "nmc-latn-td",
			nmd: "nmd-latn-ga",
			nme: "nme-latn-in",
			nmf: "nmf-latn-in",
			nmg: "nmg-latn-cm",
			nmh: "nmh-latn-in",
			nmi: "nmi-latn-ng",
			nmj: "nmj-latn-cf",
			nmk: "nmk-latn-vu",
			nml: "nml-latn-cm",
			nmm: "nmm-deva-np",
			"nmm-tibt": "nmm-tibt-np",
			nmn: "nmn-latn-bw",
			nmo: "nmo-latn-in",
			"nmo-beng": "nmo-beng-in",
			nmp: "nmp-latn-au",
			nmq: "nmq-latn-zw",
			nmr: "nmr-latn-cm",
			nms: "nms-latn-vu",
			nmt: "nmt-latn-fm",
			nmu: "nmu-latn-us",
			nmv: "nmv-latn-au",
			nmw: "nmw-latn-pg",
			nmx: "nmx-latn-pg",
			nmz: "nmz-latn-zz",
			nn: "nn-latn-no",
			nna: "nna-latn-au",
			nnb: "nnb-latn-cd",
			nnc: "nnc-latn-td",
			nnd: "nnd-latn-vu",
			nne: "nne-latn-ao",
			nnf: "nnf-latn-zz",
			nng: "nng-latn-in",
			"nng-beng": "nng-beng-in",
			nnh: "nnh-latn-cm",
			nni: "nni-latn-id",
			nnj: "nnj-latn-et",
			nnk: "nnk-latn-zz",
			nnl: "nnl-latn-in",
			nnm: "nnm-latn-zz",
			nnn: "nnn-latn-td",
			nnp: "nnp-wcho-in",
			nnq: "nnq-latn-tz",
			nnr: "nnr-latn-au",
			nnt: "nnt-latn-us",
			nnu: "nnu-latn-gh",
			nnv: "nnv-latn-au",
			nnw: "nnw-latn-bf",
			nny: "nny-latn-au",
			nnz: "nnz-latn-cm",
			no: "no-latn-no",
			noa: "noa-latn-co",
			noc: "noc-latn-pg",
			nod: "nod-lana-th",
			noe: "noe-deva-in",
			nof: "nof-latn-pg",
			nog: "nog-cyrl-ru",
			noh: "noh-latn-pg",
			noi: "noi-deva-in",
			noj: "noj-latn-co",
			nok: "nok-latn-us",
			nom: "nom-latn-pe",
			non: "non-runr-se",
			nop: "nop-latn-zz",
			noq: "noq-latn-cd",
			nos: "nos-yiii-cn",
			not: "not-latn-pe",
			nou: "nou-latn-zz",
			nov: "nov-latn-001",
			now: "now-latn-tz",
			noy: "noy-latn-td",
			npb: "npb-tibt-bt",
			npg: "npg-latn-mm",
			nph: "nph-latn-in",
			npl: "npl-latn-mx",
			npn: "npn-latn-pg",
			npo: "npo-latn-in",
			nps: "nps-latn-id",
			npu: "npu-latn-in",
			npx: "npx-latn-sb",
			npy: "npy-latn-id",
			nqg: "nqg-latn-bj",
			nqk: "nqk-latn-bj",
			nql: "nql-latn-ao",
			nqm: "nqm-latn-id",
			nqn: "nqn-latn-pg",
			nqo: "nqo-nkoo-gn",
			nqq: "nqq-latn-mm",
			nqt: "nqt-latn-ng",
			nqy: "nqy-latn-mm",
			nr: "nr-latn-za",
			nra: "nra-latn-ga",
			nrb: "nrb-latn-zz",
			nre: "nre-latn-in",
			nrf: "nrf-latn-je",
			nrg: "nrg-latn-vu",
			nri: "nri-latn-in",
			nrk: "nrk-latn-au",
			nrl: "nrl-latn-au",
			nrm: "nrm-latn-my",
			nrp: "nrp-latn-it",
			nru: "nru-latn-cn",
			"nru-hans": "nru-hans-cn",
			"nru-hant": "nru-hant-cn",
			nrx: "nrx-latn-au",
			nrz: "nrz-latn-pg",
			nsa: "nsa-latn-in",
			nsb: "nsb-latn-za",
			nsc: "nsc-latn-ng",
			nsd: "nsd-yiii-cn",
			nse: "nse-latn-zm",
			nsf: "nsf-yiii-cn",
			nsg: "nsg-latn-tz",
			nsh: "nsh-latn-cm",
			nsk: "nsk-cans-ca",
			nsm: "nsm-latn-in",
			nsn: "nsn-latn-zz",
			nso: "nso-latn-za",
			nsq: "nsq-latn-us",
			nss: "nss-latn-zz",
			nst: "nst-tnsa-in",
			nsu: "nsu-latn-mx",
			nsv: "nsv-yiii-cn",
			nsw: "nsw-latn-vu",
			nsx: "nsx-latn-ao",
			nsy: "nsy-latn-id",
			nsz: "nsz-latn-us",
			ntd: "ntd-latn-my",
			nte: "nte-latn-mz",
			ntg: "ntg-latn-au",
			nti: "nti-latn-bf",
			ntj: "ntj-latn-au",
			ntk: "ntk-latn-tz",
			ntm: "ntm-latn-zz",
			nto: "nto-latn-cd",
			ntp: "ntp-latn-mx",
			ntr: "ntr-latn-zz",
			ntu: "ntu-latn-sb",
			ntx: "ntx-latn-mm",
			nty: "nty-yiii-vn",
			ntz: "ntz-arab-ir",
			nua: "nua-latn-nc",
			nuc: "nuc-latn-br",
			nud: "nud-latn-pg",
			nue: "nue-latn-cd",
			nuf: "nuf-latn-cn",
			nug: "nug-latn-au",
			nuh: "nuh-latn-ng",
			nui: "nui-latn-zz",
			nuj: "nuj-latn-ug",
			nuk: "nuk-latn-ca",
			num: "num-latn-to",
			nun: "nun-latn-mm",
			nuo: "nuo-latn-vn",
			nup: "nup-latn-zz",
			nuq: "nuq-latn-pg",
			nur: "nur-latn-pg",
			nus: "nus-latn-ss",
			nut: "nut-latn-vn",
			nuu: "nuu-latn-cd",
			nuv: "nuv-latn-zz",
			nuw: "nuw-latn-fm",
			nux: "nux-latn-zz",
			nuy: "nuy-latn-au",
			nuz: "nuz-latn-mx",
			nv: "nv-latn-us",
			nvh: "nvh-latn-vu",
			nvm: "nvm-latn-pg",
			nvo: "nvo-latn-cm",
			nwb: "nwb-latn-zz",
			nwc: "nwc-newa-np",
			"nwc-brah": "nwc-brah-np",
			"nwc-deva": "nwc-deva-np",
			"nwc-sidd": "nwc-sidd-np",
			nwe: "nwe-latn-cm",
			nwg: "nwg-latn-au",
			nwi: "nwi-latn-vu",
			nwm: "nwm-latn-ss",
			nwo: "nwo-latn-au",
			nwr: "nwr-latn-pg",
			nww: "nww-latn-tz",
			nwx: "nwx-deva-np",
			nxa: "nxa-latn-tl",
			nxd: "nxd-latn-cd",
			nxe: "nxe-latn-id",
			nxg: "nxg-latn-id",
			nxi: "nxi-latn-tz",
			nxl: "nxl-latn-id",
			nxn: "nxn-latn-au",
			nxo: "nxo-latn-ga",
			nxq: "nxq-latn-cn",
			nxr: "nxr-latn-zz",
			nxx: "nxx-latn-id",
			ny: "ny-latn-mw",
			nyb: "nyb-latn-gh",
			nyc: "nyc-latn-cd",
			nyd: "nyd-latn-ke",
			nye: "nye-latn-ao",
			nyf: "nyf-latn-ke",
			nyg: "nyg-latn-cd",
			nyh: "nyh-latn-au",
			nyi: "nyi-latn-sd",
			nyj: "nyj-latn-cd",
			nyk: "nyk-latn-ao",
			nyl: "nyl-thai-th",
			nym: "nym-latn-tz",
			nyn: "nyn-latn-ug",
			nyo: "nyo-latn-ug",
			nyp: "nyp-latn-ug",
			nyq: "nyq-arab-ir",
			nyr: "nyr-latn-mw",
			nys: "nys-latn-au",
			nyt: "nyt-latn-au",
			nyu: "nyu-latn-mz",
			nyv: "nyv-latn-au",
			nyx: "nyx-latn-au",
			nyy: "nyy-latn-tz",
			nza: "nza-latn-cm",
			nzb: "nzb-latn-ga",
			nzd: "nzd-latn-cd",
			nzi: "nzi-latn-gh",
			nzk: "nzk-latn-cf",
			nzm: "nzm-latn-in",
			nzu: "nzu-latn-cg",
			nzy: "nzy-latn-td",
			nzz: "nzz-latn-ml",
			oaa: "oaa-cyrl-ru",
			oac: "oac-cyrl-ru",
			oar: "oar-syrc-sy",
			oav: "oav-geor-ge",
			obi: "obi-latn-us",
			obk: "obk-latn-ph",
			obl: "obl-latn-cm",
			obm: "obm-phnx-jo",
			obo: "obo-latn-ph",
			obr: "obr-mymr-mm",
			obt: "obt-latn-fr",
			obu: "obu-latn-ng",
			oc: "oc-latn-fr",
			oca: "oca-latn-pe",
			oco: "oco-latn-gb",
			ocu: "ocu-latn-mx",
			oda: "oda-latn-ng",
			odk: "odk-arab-pk",
			odt: "odt-latn-nl",
			odu: "odu-latn-ng",
			ofu: "ofu-latn-ng",
			ogb: "ogb-latn-ng",
			ogc: "ogc-latn-zz",
			ogg: "ogg-latn-ng",
			ogo: "ogo-latn-ng",
			ogu: "ogu-latn-ng",
			oht: "oht-xsux-tr",
			oia: "oia-latn-id",
			oie: "oie-latn-ss",
			oin: "oin-latn-pg",
			oj: "oj-cans-ca",
			ojb: "ojb-latn-ca",
			"ojb-cans": "ojb-cans-ca",
			ojc: "ojc-latn-ca",
			ojs: "ojs-cans-ca",
			ojv: "ojv-latn-sb",
			ojw: "ojw-latn-ca",
			"ojw-cans": "ojw-cans-ca",
			oka: "oka-latn-ca",
			okb: "okb-latn-ng",
			okc: "okc-latn-cd",
			okd: "okd-latn-ng",
			oke: "oke-latn-ng",
			okg: "okg-latn-au",
			oki: "oki-latn-ke",
			okk: "okk-latn-pg",
			okm: "okm-hang-kr",
			oko: "oko-hani-kr",
			okr: "okr-latn-zz",
			oks: "oks-latn-ng",
			oku: "oku-latn-cm",
			okv: "okv-latn-zz",
			okx: "okx-latn-ng",
			okz: "okz-khmr-kh",
			ola: "ola-deva-np",
			"ola-tibt": "ola-tibt-cn",
			old: "old-latn-tz",
			ole: "ole-tibt-bt",
			olk: "olk-latn-au",
			olm: "olm-latn-ng",
			olo: "olo-latn-ru",
			olr: "olr-latn-vu",
			olt: "olt-latn-lt",
			olu: "olu-latn-ao",
			om: "om-latn-et",
			oma: "oma-latn-us",
			omb: "omb-latn-vu",
			omc: "omc-latn-pe",
			omg: "omg-latn-pe",
			omi: "omi-latn-cd",
			omk: "omk-cyrl-ru",
			oml: "oml-latn-cd",
			omo: "omo-latn-pg",
			omp: "omp-mtei-in",
			omr: "omr-modi-in",
			omt: "omt-latn-ke",
			omu: "omu-latn-pe",
			omw: "omw-latn-pg",
			ona: "ona-latn-ar",
			one: "one-latn-ca",
			ong: "ong-latn-zz",
			oni: "oni-latn-id",
			onj: "onj-latn-pg",
			onk: "onk-latn-pg",
			onn: "onn-latn-zz",
			ono: "ono-latn-ca",
			onp: "onp-latn-in",
			"onp-deva": "onp-deva-in",
			onr: "onr-latn-pg",
			ons: "ons-latn-zz",
			ont: "ont-latn-pg",
			onu: "onu-latn-vu",
			onx: "onx-latn-id",
			ood: "ood-latn-us",
			oon: "oon-deva-in",
			oor: "oor-latn-za",
			opa: "opa-latn-ng",
			opk: "opk-latn-id",
			opm: "opm-latn-zz",
			opo: "opo-latn-pg",
			opt: "opt-latn-mx",
			opy: "opy-latn-br",
			or: "or-orya-in",
			ora: "ora-latn-sb",
			orc: "orc-latn-ke",
			ore: "ore-latn-pe",
			org: "org-latn-ng",
			orn: "orn-latn-my",
			oro: "oro-latn-zz",
			orr: "orr-latn-ng",
			ors: "ors-latn-my",
			ort: "ort-telu-in",
			oru: "oru-arab-zz",
			orv: "orv-cyrl-ru",
			orw: "orw-latn-br",
			orx: "orx-latn-ng",
			orz: "orz-latn-id",
			os: "os-cyrl-ge",
			osa: "osa-osge-us",
			osc: "osc-ital-it",
			"osc-latn": "osc-latn-it",
			osi: "osi-java-id",
			oso: "oso-latn-ng",
			osp: "osp-latn-es",
			ost: "ost-latn-cm",
			osu: "osu-latn-pg",
			osx: "osx-latn-de",
			ota: "ota-arab-zz",
			otb: "otb-tibt-cn",
			otd: "otd-latn-id",
			ote: "ote-latn-mx",
			oti: "oti-latn-br",
			otk: "otk-orkh-mn",
			otl: "otl-latn-mx",
			otm: "otm-latn-mx",
			otn: "otn-latn-mx",
			otq: "otq-latn-mx",
			otr: "otr-latn-sd",
			ots: "ots-latn-mx",
			ott: "ott-latn-mx",
			otu: "otu-latn-br",
			otw: "otw-latn-ca",
			otx: "otx-latn-mx",
			oty: "oty-gran-in",
			otz: "otz-latn-mx",
			oub: "oub-latn-lr",
			oue: "oue-latn-pg",
			oui: "oui-ougr-143",
			oum: "oum-latn-pg",
			ovd: "ovd-latn-se",
			owi: "owi-latn-pg",
			owl: "owl-latn-gb",
			oyd: "oyd-latn-et",
			oym: "oym-latn-br",
			oyy: "oyy-latn-pg",
			ozm: "ozm-latn-zz",
			pa: "pa-guru-in",
			"pa-arab": "pa-arab-pk",
			"pa-pk": "pa-arab-pk",
			pab: "pab-latn-br",
			pac: "pac-latn-vn",
			pad: "pad-latn-br",
			pae: "pae-latn-cd",
			paf: "paf-latn-br",
			pag: "pag-latn-ph",
			pah: "pah-latn-br",
			pai: "pai-latn-ng",
			pak: "pak-latn-br",
			pal: "pal-phli-ir",
			"pal-phlp": "pal-phlp-cn",
			pam: "pam-latn-ph",
			pao: "pao-latn-us",
			pap: "pap-latn-cw",
			paq: "paq-cyrl-tj",
			par: "par-latn-us",
			pas: "pas-latn-id",
			pau: "pau-latn-pw",
			pav: "pav-latn-br",
			paw: "paw-latn-us",
			pax: "pax-latn-br",
			pay: "pay-latn-hn",
			paz: "paz-latn-br",
			pbb: "pbb-latn-co",
			pbc: "pbc-latn-gy",
			pbe: "pbe-latn-mx",
			pbf: "pbf-latn-mx",
			pbg: "pbg-latn-ve",
			pbh: "pbh-latn-ve",
			pbi: "pbi-latn-zz",
			pbl: "pbl-latn-ng",
			pbm: "pbm-latn-mx",
			pbn: "pbn-latn-ng",
			pbo: "pbo-latn-gw",
			pbp: "pbp-latn-gn",
			pbr: "pbr-latn-tz",
			pbs: "pbs-latn-mx",
			pbt: "pbt-arab-af",
			pbv: "pbv-latn-in",
			pby: "pby-latn-pg",
			pca: "pca-latn-mx",
			pcb: "pcb-khmr-kh",
			pcc: "pcc-latn-cn",
			"pcc-hani": "pcc-hani-cn",
			pcd: "pcd-latn-fr",
			pce: "pce-mymr-mm",
			"pce-thai": "pce-thai-th",
			pcf: "pcf-mlym-in",
			pcg: "pcg-mlym-in",
			"pcg-knda": "pcg-knda-in",
			"pcg-taml": "pcg-taml-in",
			pch: "pch-deva-in",
			pci: "pci-deva-in",
			"pci-orya": "pci-orya-in",
			pcj: "pcj-telu-in",
			pck: "pck-latn-in",
			pcm: "pcm-latn-ng",
			pcn: "pcn-latn-ng",
			pcp: "pcp-latn-bo",
			pcw: "pcw-latn-ng",
			pda: "pda-latn-pg",
			pdc: "pdc-latn-us",
			pdn: "pdn-latn-id",
			pdo: "pdo-latn-id",
			pdt: "pdt-latn-ca",
			pdu: "pdu-latn-mm",
			"pdu-mymr": "pdu-mymr-mm",
			pea: "pea-latn-id",
			peb: "peb-latn-us",
			ped: "ped-latn-zz",
			pee: "pee-latn-id",
			peg: "peg-orya-in",
			pei: "pei-latn-mx",
			pek: "pek-latn-pg",
			pel: "pel-latn-id",
			pem: "pem-latn-cd",
			peo: "peo-xpeo-ir",
			pep: "pep-latn-pg",
			peq: "peq-latn-us",
			pev: "pev-latn-ve",
			pex: "pex-latn-zz",
			pey: "pey-latn-id",
			pez: "pez-latn-my",
			pfa: "pfa-latn-fm",
			pfe: "pfe-latn-cm",
			pfl: "pfl-latn-de",
			pga: "pga-latn-ss",
			pgd: "pgd-khar-pk",
			pgg: "pgg-deva-in",
			pgi: "pgi-latn-pg",
			pgk: "pgk-latn-vu",
			pgl: "pgl-ogam-ie",
			pgn: "pgn-ital-it",
			pgs: "pgs-latn-ng",
			pgu: "pgu-latn-id",
			phd: "phd-deva-in",
			phg: "phg-latn-vn",
			phh: "phh-latn-vn",
			phk: "phk-mymr-in",
			phl: "phl-arab-zz",
			phm: "phm-latn-mz",
			phn: "phn-phnx-lb",
			pho: "pho-laoo-la",
			phr: "phr-arab-pk",
			pht: "pht-thai-th",
			phv: "phv-arab-af",
			phw: "phw-deva-np",
			pi: "pi-sinh-in",
			"pi-brah": "pi-brah-in",
			"pi-deva": "pi-deva-in",
			"pi-khar": "pi-khar-in",
			"pi-khmr": "pi-khmr-in",
			"pi-mymr": "pi-mymr-in",
			"pi-thai": "pi-thai-in",
			pia: "pia-latn-mx",
			pib: "pib-latn-pe",
			pic: "pic-latn-ga",
			pid: "pid-latn-ve",
			pif: "pif-latn-fm",
			pig: "pig-latn-pe",
			pih: "pih-latn-nf",
			pij: "pij-latn-co",
			pil: "pil-latn-zz",
			pim: "pim-latn-us",
			pin: "pin-latn-pg",
			pio: "pio-latn-co",
			pip: "pip-latn-zz",
			pir: "pir-latn-br",
			pis: "pis-latn-sb",
			pit: "pit-latn-au",
			piu: "piu-latn-au",
			piv: "piv-latn-sb",
			piw: "piw-latn-tz",
			pix: "pix-latn-pg",
			piy: "piy-latn-ng",
			piz: "piz-latn-nc",
			pjt: "pjt-latn-au",
			pka: "pka-brah-in",
			pkb: "pkb-latn-ke",
			pkg: "pkg-latn-pg",
			pkh: "pkh-latn-bd",
			"pkh-deva": "pkh-deva-bd",
			pkn: "pkn-latn-au",
			pko: "pko-latn-ke",
			pkp: "pkp-latn-ck",
			pkr: "pkr-mlym-in",
			pku: "pku-latn-id",
			pl: "pl-latn-pl",
			pla: "pla-latn-zz",
			plb: "plb-latn-vu",
			plc: "plc-latn-ph",
			pld: "pld-latn-gb",
			ple: "ple-latn-id",
			plg: "plg-latn-ar",
			plh: "plh-latn-id",
			plj: "plj-latn-ng",
			plk: "plk-arab-pk",
			pll: "pll-mymr-mm",
			pln: "pln-latn-co",
			plo: "plo-latn-mx",
			plr: "plr-latn-ci",
			pls: "pls-latn-mx",
			plu: "plu-latn-br",
			plv: "plv-latn-ph",
			plw: "plw-latn-ph",
			plz: "plz-latn-my",
			pma: "pma-latn-vu",
			pmb: "pmb-latn-cd",
			pmd: "pmd-latn-au",
			pme: "pme-latn-nc",
			pmf: "pmf-latn-id",
			pmh: "pmh-brah-in",
			pmi: "pmi-latn-cn",
			pmj: "pmj-latn-cn",
			pml: "pml-latn-tn",
			pmm: "pmm-latn-cm",
			pmn: "pmn-latn-cm",
			pmo: "pmo-latn-id",
			pmq: "pmq-latn-mx",
			pmr: "pmr-latn-pg",
			pms: "pms-latn-it",
			pmt: "pmt-latn-pf",
			pmw: "pmw-latn-us",
			pmx: "pmx-latn-in",
			pmy: "pmy-latn-id",
			pmz: "pmz-latn-mx",
			pna: "pna-latn-my",
			pnc: "pnc-latn-id",
			pnd: "pnd-latn-ao",
			pne: "pne-latn-my",
			png: "png-latn-zz",
			pnh: "pnh-latn-ck",
			pni: "pni-latn-id",
			pnj: "pnj-latn-au",
			pnk: "pnk-latn-bo",
			pnl: "pnl-latn-bf",
			pnm: "pnm-latn-my",
			pnn: "pnn-latn-zz",
			pno: "pno-latn-pe",
			pnp: "pnp-latn-id",
			pnq: "pnq-latn-bf",
			pnr: "pnr-latn-pg",
			pns: "pns-latn-id",
			pnt: "pnt-grek-gr",
			pnv: "pnv-latn-au",
			pnw: "pnw-latn-au",
			pny: "pny-latn-cm",
			pnz: "pnz-latn-cf",
			poc: "poc-latn-gt",
			poe: "poe-latn-mx",
			pof: "pof-latn-cd",
			pog: "pog-latn-br",
			poh: "poh-latn-gt",
			poi: "poi-latn-mx",
			pok: "pok-latn-br",
			pom: "pom-latn-us",
			pon: "pon-latn-fm",
			poo: "poo-latn-us",
			pop: "pop-latn-nc",
			poq: "poq-latn-mx",
			pos: "pos-latn-mx",
			pot: "pot-latn-us",
			pov: "pov-latn-gw",
			pow: "pow-latn-mx",
			poy: "poy-latn-tz",
			ppa: "ppa-deva-in",
			ppe: "ppe-latn-pg",
			ppi: "ppi-latn-mx",
			ppk: "ppk-latn-id",
			ppl: "ppl-latn-sv",
			ppm: "ppm-latn-id",
			ppn: "ppn-latn-pg",
			ppo: "ppo-latn-zz",
			ppp: "ppp-latn-cd",
			ppq: "ppq-latn-pg",
			pps: "pps-latn-mx",
			ppt: "ppt-latn-pg",
			pqa: "pqa-latn-ng",
			pqm: "pqm-latn-ca",
			pra: "pra-khar-pk",
			prc: "prc-arab-af",
			prd: "prd-arab-ir",
			pre: "pre-latn-st",
			prf: "prf-latn-ph",
			prg: "prg-latn-001",
			prh: "prh-latn-ph",
			pri: "pri-latn-nc",
			prk: "prk-latn-mm",
			prm: "prm-latn-pg",
			pro: "pro-latn-fr",
			prp: "prp-gujr-in",
			prq: "prq-latn-pe",
			prr: "prr-latn-br",
			prt: "prt-thai-th",
			pru: "pru-latn-id",
			prw: "prw-latn-pg",
			prx: "prx-arab-in",
			"prx-tibt": "prx-tibt-in",
			ps: "ps-arab-af",
			psa: "psa-latn-id",
			pse: "pse-latn-id",
			psh: "psh-arab-af",
			psi: "psi-arab-af",
			psm: "psm-latn-bo",
			psn: "psn-latn-id",
			psq: "psq-latn-pg",
			pss: "pss-latn-zz",
			pst: "pst-arab-pk",
			psw: "psw-latn-vu",
			pt: "pt-latn-br",
			pta: "pta-latn-py",
			pth: "pth-latn-br",
			pti: "pti-latn-au",
			ptn: "ptn-latn-id",
			pto: "pto-latn-br",
			ptp: "ptp-latn-zz",
			ptr: "ptr-latn-vu",
			ptt: "ptt-latn-id",
			ptu: "ptu-latn-id",
			ptv: "ptv-latn-vu",
			pua: "pua-latn-mx",
			pub: "pub-latn-in",
			puc: "puc-latn-id",
			pud: "pud-latn-id",
			pue: "pue-latn-ar",
			puf: "puf-latn-id",
			pug: "pug-latn-bf",
			pui: "pui-latn-co",
			puj: "puj-latn-id",
			pum: "pum-deva-np",
			puo: "puo-latn-vn",
			pup: "pup-latn-pg",
			puq: "puq-latn-pe",
			pur: "pur-latn-br",
			put: "put-latn-id",
			puu: "puu-latn-ga",
			puw: "puw-latn-fm",
			pux: "pux-latn-pg",
			puy: "puy-latn-us",
			pwa: "pwa-latn-zz",
			pwb: "pwb-latn-ng",
			pwg: "pwg-latn-pg",
			pwm: "pwm-latn-ph",
			pwn: "pwn-latn-tw",
			pwo: "pwo-mymr-mm",
			pwr: "pwr-deva-in",
			pww: "pww-thai-th",
			pxm: "pxm-latn-mx",
			pye: "pye-latn-ci",
			pym: "pym-latn-ng",
			pyn: "pyn-latn-br",
			pyu: "pyu-latn-tw",
			"pyu-hani": "pyu-hani-tw",
			pyx: "pyx-mymr-mm",
			pyy: "pyy-latn-mm",
			pzh: "pzh-latn-tw",
			pzn: "pzn-latn-mm",
			qu: "qu-latn-pe",
			qua: "qua-latn-us",
			qub: "qub-latn-pe",
			quc: "quc-latn-gt",
			qud: "qud-latn-ec",
			quf: "quf-latn-pe",
			qug: "qug-latn-ec",
			qui: "qui-latn-us",
			quk: "quk-latn-pe",
			qul: "qul-latn-bo",
			qum: "qum-latn-gt",
			qun: "qun-latn-us",
			qup: "qup-latn-pe",
			quq: "quq-latn-es",
			qur: "qur-latn-pe",
			qus: "qus-latn-ar",
			quv: "quv-latn-gt",
			quw: "quw-latn-ec",
			qux: "qux-latn-pe",
			quy: "quy-latn-pe",
			qva: "qva-latn-pe",
			qvc: "qvc-latn-pe",
			qve: "qve-latn-pe",
			qvh: "qvh-latn-pe",
			qvi: "qvi-latn-ec",
			qvj: "qvj-latn-ec",
			qvl: "qvl-latn-pe",
			qvm: "qvm-latn-pe",
			qvn: "qvn-latn-pe",
			qvo: "qvo-latn-pe",
			qvp: "qvp-latn-pe",
			qvs: "qvs-latn-pe",
			qvw: "qvw-latn-pe",
			qvz: "qvz-latn-ec",
			qwa: "qwa-latn-pe",
			qwc: "qwc-latn-pe",
			qwh: "qwh-latn-pe",
			qwm: "qwm-latn-ru",
			"qwm-cyrl": "qwm-cyrl-ru",
			"qwm-runr": "qwm-runr-ru",
			qws: "qws-latn-pe",
			qwt: "qwt-latn-us",
			qxa: "qxa-latn-pe",
			qxc: "qxc-latn-pe",
			qxh: "qxh-latn-pe",
			qxl: "qxl-latn-ec",
			qxn: "qxn-latn-pe",
			qxo: "qxo-latn-pe",
			qxp: "qxp-latn-pe",
			qxq: "qxq-arab-ir",
			qxr: "qxr-latn-ec",
			qxt: "qxt-latn-pe",
			qxu: "qxu-latn-pe",
			qxw: "qxw-latn-pe",
			qya: "qya-latn-001",
			qyp: "qyp-latn-us",
			raa: "raa-deva-np",
			rab: "rab-deva-np",
			rac: "rac-latn-id",
			rad: "rad-latn-vn",
			raf: "raf-deva-np",
			rag: "rag-latn-ke",
			rah: "rah-beng-in",
			"rah-latn": "rah-latn-in",
			rai: "rai-latn-zz",
			raj: "raj-deva-in",
			rak: "rak-latn-pg",
			ram: "ram-latn-br",
			ran: "ran-latn-id",
			rao: "rao-latn-zz",
			rap: "rap-latn-cl",
			rar: "rar-latn-ck",
			rav: "rav-deva-np",
			raw: "raw-latn-mm",
			rax: "rax-latn-ng",
			ray: "ray-latn-pf",
			raz: "raz-latn-id",
			rbb: "rbb-mymr-mm",
			rbk: "rbk-latn-ph",
			rbl: "rbl-latn-ph",
			rbp: "rbp-latn-au",
			rcf: "rcf-latn-re",
			rdb: "rdb-arab-ir",
			rea: "rea-latn-pg",
			reb: "reb-latn-id",
			ree: "ree-latn-my",
			reg: "reg-latn-tz",
			rei: "rei-orya-in",
			"rei-telu": "rei-telu-in",
			rej: "rej-latn-id",
			rel: "rel-latn-zz",
			rem: "rem-latn-pe",
			ren: "ren-latn-vn",
			res: "res-latn-zz",
			ret: "ret-latn-id",
			rey: "rey-latn-bo",
			rga: "rga-latn-vu",
			rgn: "rgn-latn-it",
			rgr: "rgr-latn-pe",
			rgs: "rgs-latn-vn",
			rgu: "rgu-latn-id",
			rhg: "rhg-rohg-mm",
			rhp: "rhp-latn-pg",
			ria: "ria-latn-in",
			rif: "rif-latn-ma",
			ril: "ril-latn-mm",
			rim: "rim-latn-tz",
			rin: "rin-latn-ng",
			rir: "rir-latn-id",
			rit: "rit-latn-au",
			riu: "riu-latn-id",
			rjg: "rjg-latn-id",
			rji: "rji-deva-np",
			rjs: "rjs-deva-np",
			rka: "rka-khmr-kh",
			rkb: "rkb-latn-br",
			rkh: "rkh-latn-ck",
			rki: "rki-mymr-mm",
			rkm: "rkm-latn-bf",
			rkt: "rkt-beng-bd",
			rkw: "rkw-latn-au",
			rm: "rm-latn-ch",
			rma: "rma-latn-ni",
			rmb: "rmb-latn-au",
			rmc: "rmc-latn-sk",
			rmd: "rmd-latn-dk",
			rme: "rme-latn-gb",
			rmf: "rmf-latn-fi",
			rmg: "rmg-latn-no",
			rmh: "rmh-latn-id",
			rmi: "rmi-armn-am",
			rmk: "rmk-latn-pg",
			rml: "rml-latn-pl",
			"rml-cyrl": "rml-cyrl-by",
			rmm: "rmm-latn-id",
			rmn: "rmn-latn-rs",
			"rmn-cyrl": "rmn-cyrl-bg",
			"rmn-grek": "rmn-grek-gr",
			rmo: "rmo-latn-ch",
			rmp: "rmp-latn-pg",
			rmq: "rmq-latn-es",
			rmt: "rmt-arab-ir",
			rmu: "rmu-latn-se",
			rmw: "rmw-latn-gb",
			rmx: "rmx-latn-vn",
			rmz: "rmz-mymr-in",
			rn: "rn-latn-bi",
			rna: "rna-latn-zz",
			rnd: "rnd-latn-cd",
			rng: "rng-latn-mz",
			rnl: "rnl-latn-in",
			rnn: "rnn-latn-id",
			rnr: "rnr-latn-au",
			rnw: "rnw-latn-tz",
			ro: "ro-latn-ro",
			rob: "rob-latn-id",
			roc: "roc-latn-vn",
			rod: "rod-latn-ng",
			roe: "roe-latn-pg",
			rof: "rof-latn-tz",
			rog: "rog-latn-vn",
			rol: "rol-latn-ph",
			rom: "rom-latn-ro",
			"rom-cyrl": "rom-cyrl-ro",
			roo: "roo-latn-zz",
			rop: "rop-latn-au",
			ror: "ror-latn-id",
			rou: "rou-latn-td",
			row: "row-latn-id",
			rpn: "rpn-latn-vu",
			rpt: "rpt-latn-pg",
			rri: "rri-latn-sb",
			rro: "rro-latn-zz",
			rrt: "rrt-latn-au",
			rsk: "rsk-cyrl-rs",
			rtc: "rtc-latn-mm",
			rth: "rth-latn-id",
			rtm: "rtm-latn-fj",
			rtw: "rtw-deva-in",
			ru: "ru-cyrl-ru",
			rub: "rub-latn-ug",
			ruc: "ruc-latn-ug",
			rue: "rue-cyrl-ua",
			ruf: "ruf-latn-tz",
			rug: "rug-latn-sb",
			rui: "rui-latn-tz",
			ruk: "ruk-latn-ng",
			ruo: "ruo-latn-hr",
			rup: "rup-latn-ro",
			"rup-grek": "rup-grek-gr",
			ruq: "ruq-latn-gr",
			rut: "rut-cyrl-ru",
			"rut-latn": "rut-latn-az",
			ruu: "ruu-latn-my",
			ruy: "ruy-latn-ng",
			ruz: "ruz-latn-ng",
			rw: "rw-latn-rw",
			rwa: "rwa-latn-pg",
			rwk: "rwk-latn-tz",
			rwl: "rwl-latn-tz",
			rwm: "rwm-latn-ug",
			rwo: "rwo-latn-zz",
			rwr: "rwr-deva-in",
			rxd: "rxd-latn-au",
			rxw: "rxw-latn-au",
			ryu: "ryu-kana-jp",
			sa: "sa-deva-in",
			saa: "saa-latn-td",
			sab: "sab-latn-pa",
			sac: "sac-latn-us",
			sad: "sad-latn-tz",
			sae: "sae-latn-br",
			saf: "saf-latn-gh",
			sah: "sah-cyrl-ru",
			saj: "saj-latn-id",
			sak: "sak-latn-ga",
			sam: "sam-samr-ps",
			"sam-hebr": "sam-hebr-ps",
			"sam-syrc": "sam-syrc-ps",
			sao: "sao-latn-id",
			saq: "saq-latn-ke",
			sar: "sar-latn-bo",
			sas: "sas-latn-id",
			sat: "sat-olck-in",
			sau: "sau-latn-id",
			sav: "sav-latn-sn",
			saw: "saw-latn-id",
			sax: "sax-latn-vu",
			say: "say-latn-ng",
			saz: "saz-saur-in",
			sba: "sba-latn-zz",
			sbb: "sbb-latn-sb",
			sbc: "sbc-latn-pg",
			sbd: "sbd-latn-bf",
			sbe: "sbe-latn-zz",
			sbg: "sbg-latn-id",
			sbh: "sbh-latn-pg",
			sbi: "sbi-latn-pg",
			sbj: "sbj-latn-td",
			sbk: "sbk-latn-tz",
			sbl: "sbl-latn-ph",
			sbm: "sbm-latn-tz",
			sbn: "sbn-arab-pk",
			sbo: "sbo-latn-my",
			sbp: "sbp-latn-tz",
			sbq: "sbq-latn-pg",
			sbr: "sbr-latn-id",
			sbs: "sbs-latn-na",
			sbt: "sbt-latn-id",
			sbu: "sbu-tibt-in",
			"sbu-deva": "sbu-deva-in",
			sbv: "sbv-latn-it",
			sbw: "sbw-latn-ga",
			sbx: "sbx-latn-id",
			sby: "sby-latn-zm",
			sbz: "sbz-latn-cf",
			sc: "sc-latn-it",
			scb: "scb-latn-vn",
			sce: "sce-latn-cn",
			"sce-arab": "sce-arab-cn",
			scf: "scf-latn-pa",
			scg: "scg-latn-id",
			sch: "sch-latn-in",
			sci: "sci-latn-lk",
			sck: "sck-deva-in",
			scl: "scl-arab-zz",
			scn: "scn-latn-it",
			sco: "sco-latn-gb",
			scp: "scp-deva-np",
			scs: "scs-latn-ca",
			"scs-cans": "scs-cans-ca",
			sct: "sct-laoo-la",
			scu: "scu-takr-in",
			scv: "scv-latn-ng",
			scw: "scw-latn-ng",
			scx: "scx-grek-it",
			sd: "sd-arab-pk",
			"sd-deva": "sd-deva-in",
			"sd-in": "sd-deva-in",
			"sd-khoj": "sd-khoj-in",
			"sd-sind": "sd-sind-in",
			sda: "sda-latn-id",
			sdb: "sdb-arab-iq",
			sdc: "sdc-latn-it",
			sde: "sde-latn-ng",
			sdf: "sdf-arab-iq",
			sdg: "sdg-arab-af",
			sdh: "sdh-arab-ir",
			sdj: "sdj-latn-cg",
			sdk: "sdk-latn-pg",
			sdn: "sdn-latn-it",
			sdo: "sdo-latn-my",
			sdq: "sdq-latn-id",
			sds: "sds-arab-tn",
			sdu: "sdu-latn-id",
			sdx: "sdx-latn-my",
			se: "se-latn-no",
			sea: "sea-latn-my",
			seb: "seb-latn-ci",
			sec: "sec-latn-ca",
			sed: "sed-latn-vn",
			see: "see-latn-us",
			sef: "sef-latn-ci",
			seg: "seg-latn-tz",
			seh: "seh-latn-mz",
			sei: "sei-latn-mx",
			sej: "sej-latn-pg",
			sek: "sek-latn-ca",
			"sek-cans": "sek-cans-ca",
			sel: "sel-cyrl-ru",
			sen: "sen-latn-bf",
			seo: "seo-latn-pg",
			sep: "sep-latn-bf",
			seq: "seq-latn-bf",
			ser: "ser-latn-us",
			ses: "ses-latn-ml",
			set: "set-latn-id",
			seu: "seu-latn-id",
			sev: "sev-latn-ci",
			sew: "sew-latn-pg",
			sey: "sey-latn-ec",
			sez: "sez-latn-mm",
			sfe: "sfe-latn-ph",
			sfm: "sfm-plrd-cn",
			sfw: "sfw-latn-gh",
			sg: "sg-latn-cf",
			sga: "sga-ogam-ie",
			sgb: "sgb-latn-ph",
			sgc: "sgc-latn-ke",
			sgd: "sgd-latn-ph",
			sge: "sge-latn-id",
			sgh: "sgh-cyrl-tj",
			"sgh-arab": "sgh-arab-af",
			"sgh-latn": "sgh-latn-tj",
			sgi: "sgi-latn-cm",
			sgj: "sgj-deva-in",
			sgm: "sgm-latn-ke",
			sgp: "sgp-latn-in",
			sgr: "sgr-arab-ir",
			sgs: "sgs-latn-lt",
			sgt: "sgt-tibt-bt",
			sgu: "sgu-latn-id",
			sgw: "sgw-ethi-zz",
			sgy: "sgy-arab-af",
			sgz: "sgz-latn-zz",
			sha: "sha-latn-ng",
			shb: "shb-latn-br",
			shc: "shc-latn-cd",
			shd: "shd-arab-pk",
			she: "she-latn-et",
			shg: "shg-latn-bw",
			shh: "shh-latn-us",
			shi: "shi-tfng-ma",
			shj: "shj-latn-sd",
			shk: "shk-latn-zz",
			shm: "shm-arab-ir",
			shn: "shn-mymr-mm",
			sho: "sho-latn-ng",
			shp: "shp-latn-pe",
			shq: "shq-latn-zm",
			shr: "shr-latn-cd",
			shs: "shs-latn-ca",
			sht: "sht-latn-us",
			shu: "shu-arab-zz",
			shv: "shv-arab-om",
			shw: "shw-latn-sd",
			shy: "shy-latn-dz",
			"shy-arab": "shy-arab-dz",
			"shy-tfng": "shy-tfng-dz",
			shz: "shz-latn-ml",
			si: "si-sinh-lk",
			sia: "sia-cyrl-ru",
			sib: "sib-latn-my",
			sid: "sid-latn-et",
			sie: "sie-latn-zm",
			sif: "sif-latn-bf",
			sig: "sig-latn-zz",
			sih: "sih-latn-nc",
			sii: "sii-latn-in",
			sij: "sij-latn-pg",
			sik: "sik-latn-br",
			sil: "sil-latn-zz",
			sim: "sim-latn-zz",
			sip: "sip-tibt-in",
			siq: "siq-latn-pg",
			sir: "sir-latn-ng",
			sis: "sis-latn-us",
			siu: "siu-latn-pg",
			siv: "siv-latn-pg",
			siw: "siw-latn-pg",
			six: "six-latn-pg",
			siy: "siy-arab-ir",
			siz: "siz-arab-eg",
			sja: "sja-latn-co",
			sjb: "sjb-latn-id",
			sjd: "sjd-cyrl-ru",
			sje: "sje-latn-se",
			sjg: "sjg-latn-td",
			sjl: "sjl-latn-in",
			sjm: "sjm-latn-ph",
			sjp: "sjp-deva-in",
			"sjp-beng": "sjp-beng-in",
			sjr: "sjr-latn-zz",
			sjt: "sjt-cyrl-ru",
			sju: "sju-latn-se",
			sjw: "sjw-latn-us",
			sk: "sk-latn-sk",
			ska: "ska-latn-us",
			skb: "skb-thai-th",
			skc: "skc-latn-zz",
			skd: "skd-latn-us",
			ske: "ske-latn-vu",
			skf: "skf-latn-br",
			skg: "skg-latn-mg",
			skh: "skh-latn-id",
			ski: "ski-latn-id",
			skj: "skj-deva-np",
			skm: "skm-latn-pg",
			skn: "skn-latn-ph",
			sko: "sko-latn-id",
			skp: "skp-latn-my",
			skq: "skq-latn-bf",
			skr: "skr-arab-pk",
			sks: "sks-latn-zz",
			skt: "skt-latn-cd",
			sku: "sku-latn-vu",
			skv: "skv-latn-id",
			skw: "skw-latn-gy",
			skx: "skx-latn-id",
			sky: "sky-latn-sb",
			skz: "skz-latn-id",
			sl: "sl-latn-si",
			slc: "slc-latn-co",
			sld: "sld-latn-zz",
			slg: "slg-latn-id",
			slh: "slh-latn-us",
			sli: "sli-latn-pl",
			slj: "slj-latn-br",
			sll: "sll-latn-zz",
			slm: "slm-latn-ph",
			sln: "sln-latn-us",
			slp: "slp-latn-id",
			slq: "slq-arab-ir",
			slr: "slr-latn-cn",
			slu: "slu-latn-id",
			slw: "slw-latn-pg",
			slx: "slx-latn-cd",
			sly: "sly-latn-id",
			slz: "slz-latn-id",
			sm: "sm-latn-ws",
			sma: "sma-latn-se",
			smb: "smb-latn-pg",
			smc: "smc-latn-pg",
			smd: "smd-latn-ao",
			smf: "smf-latn-pg",
			smg: "smg-latn-pg",
			smh: "smh-yiii-cn",
			smj: "smj-latn-se",
			smk: "smk-latn-ph",
			sml: "sml-latn-ph",
			smn: "smn-latn-fi",
			smp: "smp-samr-il",
			smq: "smq-latn-zz",
			smr: "smr-latn-id",
			sms: "sms-latn-fi",
			smt: "smt-latn-in",
			smu: "smu-khmr-kh",
			smw: "smw-latn-id",
			smx: "smx-latn-cd",
			smy: "smy-arab-ir",
			smz: "smz-latn-pg",
			sn: "sn-latn-zw",
			snb: "snb-latn-my",
			snc: "snc-latn-zz",
			sne: "sne-latn-my",
			snf: "snf-latn-sn",
			sng: "sng-latn-cd",
			"sng-brai": "sng-brai-cd",
			sni: "sni-latn-pe",
			snj: "snj-latn-cf",
			snk: "snk-latn-ml",
			snl: "snl-latn-ph",
			snm: "snm-latn-ug",
			snn: "snn-latn-co",
			sno: "sno-latn-us",
			snp: "snp-latn-zz",
			snq: "snq-latn-ga",
			snr: "snr-latn-pg",
			sns: "sns-latn-vu",
			snu: "snu-latn-id",
			snv: "snv-latn-my",
			snw: "snw-latn-gh",
			snx: "snx-latn-zz",
			sny: "sny-latn-zz",
			snz: "snz-latn-pg",
			so: "so-latn-so",
			soa: "soa-tavt-th",
			"soa-thai": "soa-thai-th",
			sob: "sob-latn-id",
			soc: "soc-latn-cd",
			sod: "sod-latn-cd",
			soe: "soe-latn-cd",
			sog: "sog-sogd-uz",
			soi: "soi-deva-np",
			sok: "sok-latn-zz",
			sol: "sol-latn-pg",
			soo: "soo-latn-cd",
			sop: "sop-latn-cd",
			soq: "soq-latn-zz",
			sor: "sor-latn-td",
			sos: "sos-latn-bf",
			sou: "sou-thai-th",
			sov: "sov-latn-pw",
			sow: "sow-latn-pg",
			sox: "sox-latn-cm",
			soy: "soy-latn-zz",
			soz: "soz-latn-tz",
			spb: "spb-latn-id",
			spc: "spc-latn-ve",
			spd: "spd-latn-zz",
			spe: "spe-latn-pg",
			spg: "spg-latn-my",
			spi: "spi-latn-id",
			spk: "spk-latn-pg",
			spl: "spl-latn-zz",
			spm: "spm-latn-pg",
			spn: "spn-latn-py",
			spo: "spo-latn-us",
			spp: "spp-latn-ml",
			spq: "spq-latn-pe",
			spr: "spr-latn-id",
			sps: "sps-latn-zz",
			spt: "spt-tibt-in",
			spv: "spv-orya-in",
			sq: "sq-latn-al",
			sqa: "sqa-latn-ng",
			sqh: "sqh-latn-ng",
			sqm: "sqm-latn-cf",
			sqo: "sqo-arab-ir",
			sqq: "sqq-laoo-la",
			sqt: "sqt-arab-ye",
			"sqt-latn": "sqt-latn-ye",
			squ: "squ-latn-ca",
			sr: "sr-cyrl-rs",
			"sr-me": "sr-latn-me",
			"sr-ro": "sr-latn-ro",
			"sr-ru": "sr-latn-ru",
			"sr-tr": "sr-latn-tr",
			sra: "sra-latn-pg",
			srb: "srb-sora-in",
			sre: "sre-latn-id",
			srf: "srf-latn-pg",
			srg: "srg-latn-ph",
			srh: "srh-arab-cn",
			sri: "sri-latn-co",
			srk: "srk-latn-my",
			srl: "srl-latn-id",
			srm: "srm-latn-sr",
			srn: "srn-latn-sr",
			sro: "sro-latn-it",
			srq: "srq-latn-bo",
			srr: "srr-latn-sn",
			srs: "srs-latn-ca",
			srt: "srt-latn-id",
			sru: "sru-latn-br",
			srv: "srv-latn-ph",
			srw: "srw-latn-id",
			srx: "srx-deva-in",
			sry: "sry-latn-pg",
			srz: "srz-arab-ir",
			ss: "ss-latn-za",
			ssb: "ssb-latn-ph",
			ssc: "ssc-latn-tz",
			ssd: "ssd-latn-zz",
			sse: "sse-latn-ph",
			"sse-arab": "sse-arab-ph",
			ssf: "ssf-latn-tw",
			ssg: "ssg-latn-zz",
			ssh: "ssh-arab-ae",
			ssj: "ssj-latn-pg",
			ssl: "ssl-latn-gh",
			ssm: "ssm-latn-my",
			ssn: "ssn-latn-ke",
			sso: "sso-latn-pg",
			ssq: "ssq-latn-id",
			sss: "sss-laoo-la",
			"sss-thai": "sss-thai-th",
			sst: "sst-latn-pg",
			ssu: "ssu-latn-pg",
			ssv: "ssv-latn-vu",
			ssx: "ssx-latn-pg",
			ssy: "ssy-latn-er",
			ssz: "ssz-latn-pg",
			st: "st-latn-za",
			sta: "sta-latn-zm",
			stb: "stb-latn-ph",
			ste: "ste-latn-id",
			stf: "stf-latn-pg",
			stg: "stg-latn-vn",
			sth: "sth-latn-ie",
			sti: "sti-latn-vn",
			"sti-kh": "sti-latn-kh",
			stj: "stj-latn-bf",
			stk: "stk-latn-zz",
			stl: "stl-latn-nl",
			stm: "stm-latn-pg",
			stn: "stn-latn-sb",
			sto: "sto-latn-ca",
			stp: "stp-latn-mx",
			stq: "stq-latn-de",
			str: "str-latn-ca",
			sts: "sts-arab-af",
			stt: "stt-latn-vn",
			stv: "stv-ethi-et",
			"stv-arab": "stv-arab-et",
			stw: "stw-latn-fm",
			sty: "sty-cyrl-ru",
			su: "su-latn-id",
			sua: "sua-latn-zz",
			sub: "sub-latn-cd",
			suc: "suc-latn-ph",
			sue: "sue-latn-zz",
			sug: "sug-latn-pg",
			sui: "sui-latn-pg",
			suj: "suj-latn-tz",
			suk: "suk-latn-tz",
			suo: "suo-latn-pg",
			suq: "suq-latn-et",
			"suq-ethi": "suq-ethi-et",
			sur: "sur-latn-zz",
			sus: "sus-latn-gn",
			sut: "sut-latn-ni",
			suv: "suv-latn-in",
			"suv-beng": "suv-beng-in",
			"suv-deva": "suv-deva-in",
			suw: "suw-latn-tz",
			suy: "suy-latn-br",
			suz: "suz-deva-np",
			sv: "sv-latn-se",
			sva: "sva-geor-ge",
			"sva-cyrl": "sva-cyrl-ge",
			"sva-latn": "sva-latn-ge",
			svb: "svb-latn-pg",
			svc: "svc-latn-vc",
			sve: "sve-latn-id",
			svm: "svm-latn-it",
			svs: "svs-latn-sb",
			sw: "sw-latn-tz",
			swb: "swb-arab-yt",
			swc: "swc-latn-cd",
			swf: "swf-latn-cd",
			swg: "swg-latn-de",
			swi: "swi-hani-cn",
			swj: "swj-latn-ga",
			swk: "swk-latn-mw",
			swm: "swm-latn-pg",
			swo: "swo-latn-br",
			swp: "swp-latn-zz",
			swq: "swq-latn-cm",
			swr: "swr-latn-id",
			sws: "sws-latn-id",
			swt: "swt-latn-id",
			swu: "swu-latn-id",
			swv: "swv-deva-in",
			sww: "sww-latn-vu",
			swx: "swx-latn-br",
			swy: "swy-latn-td",
			sxb: "sxb-latn-ke",
			sxe: "sxe-latn-ga",
			sxn: "sxn-latn-id",
			sxr: "sxr-latn-tw",
			sxs: "sxs-latn-ng",
			sxu: "sxu-latn-de",
			"sxu-runr": "sxu-runr-de",
			sxw: "sxw-latn-zz",
			sya: "sya-latn-id",
			syb: "syb-latn-ph",
			syc: "syc-syrc-tr",
			syi: "syi-latn-ga",
			syk: "syk-latn-ng",
			syl: "syl-beng-bd",
			sym: "sym-latn-bf",
			syn: "syn-syrc-ir",
			syo: "syo-latn-kh",
			syr: "syr-syrc-iq",
			sys: "sys-latn-td",
			syw: "syw-deva-np",
			syx: "syx-latn-ga",
			sza: "sza-latn-my",
			szb: "szb-latn-id",
			szc: "szc-latn-my",
			szd: "szd-latn-my",
			szg: "szg-latn-cd",
			szl: "szl-latn-pl",
			szn: "szn-latn-id",
			szp: "szp-latn-id",
			szv: "szv-latn-cm",
			szw: "szw-latn-id",
			szy: "szy-latn-tw",
			ta: "ta-taml-in",
			taa: "taa-latn-us",
			tab: "tab-cyrl-ru",
			tac: "tac-latn-mx",
			tad: "tad-latn-id",
			tae: "tae-latn-br",
			taf: "taf-latn-br",
			tag: "tag-latn-sd",
			taj: "taj-deva-np",
			tak: "tak-latn-ng",
			tal: "tal-latn-zz",
			tan: "tan-latn-zz",
			tao: "tao-latn-tw",
			tap: "tap-latn-cd",
			taq: "taq-latn-zz",
			tar: "tar-latn-mx",
			tas: "tas-latn-vn",
			tau: "tau-latn-us",
			tav: "tav-latn-co",
			taw: "taw-latn-pg",
			tax: "tax-latn-td",
			tay: "tay-latn-tw",
			"tay-hans": "tay-hans-tw",
			"tay-hant": "tay-hant-tw",
			taz: "taz-latn-sd",
			tba: "tba-latn-br",
			tbc: "tbc-latn-zz",
			tbd: "tbd-latn-zz",
			tbe: "tbe-latn-sb",
			tbf: "tbf-latn-zz",
			tbg: "tbg-latn-zz",
			tbh: "tbh-latn-au",
			tbi: "tbi-latn-sd",
			tbj: "tbj-latn-pg",
			tbk: "tbk-tagb-ph",
			"tbk-hano": "tbk-hano-ph",
			"tbk-latn": "tbk-latn-ph",
			tbl: "tbl-latn-ph",
			tbm: "tbm-latn-cd",
			tbn: "tbn-latn-co",
			tbo: "tbo-latn-zz",
			tbp: "tbp-latn-id",
			tbs: "tbs-latn-pg",
			tbt: "tbt-latn-cd",
			tbu: "tbu-latn-mx",
			tbv: "tbv-latn-pg",
			tbw: "tbw-latn-ph",
			tbx: "tbx-latn-pg",
			tby: "tby-latn-id",
			tbz: "tbz-latn-zz",
			tca: "tca-latn-br",
			tcb: "tcb-latn-us",
			tcc: "tcc-latn-tz",
			tcd: "tcd-latn-gh",
			tce: "tce-latn-ca",
			tcf: "tcf-latn-mx",
			tcg: "tcg-latn-id",
			tch: "tch-latn-tc",
			tci: "tci-latn-zz",
			tck: "tck-latn-ga",
			tcm: "tcm-latn-id",
			tcn: "tcn-tibt-np",
			tco: "tco-mymr-mm",
			tcp: "tcp-latn-mm",
			tcq: "tcq-latn-id",
			tcs: "tcs-latn-au",
			tcu: "tcu-latn-mx",
			tcw: "tcw-latn-mx",
			tcx: "tcx-taml-in",
			tcy: "tcy-knda-in",
			tcz: "tcz-latn-in",
			tda: "tda-tfng-ne",
			"tda-arab": "tda-arab-ne",
			"tda-latn": "tda-latn-ne",
			tdb: "tdb-deva-in",
			"tdb-beng": "tdb-beng-in",
			"tdb-kthi": "tdb-kthi-in",
			tdc: "tdc-latn-co",
			tdd: "tdd-tale-cn",
			tde: "tde-latn-ml",
			tdg: "tdg-deva-np",
			tdh: "tdh-deva-np",
			tdi: "tdi-latn-id",
			tdj: "tdj-latn-id",
			tdk: "tdk-latn-ng",
			tdl: "tdl-latn-ng",
			tdm: "tdm-latn-gy",
			tdn: "tdn-latn-id",
			tdo: "tdo-latn-ng",
			tdq: "tdq-latn-ng",
			tdr: "tdr-latn-vn",
			tds: "tds-latn-id",
			tdt: "tdt-latn-tl",
			tdu: "tdu-latn-my",
			tdv: "tdv-latn-ng",
			tdx: "tdx-latn-mg",
			tdy: "tdy-latn-ph",
			te: "te-telu-in",
			tea: "tea-latn-my",
			teb: "teb-latn-ec",
			tec: "tec-latn-ke",
			ted: "ted-latn-zz",
			tee: "tee-latn-mx",
			teg: "teg-latn-ga",
			teh: "teh-latn-ar",
			tei: "tei-latn-pg",
			tek: "tek-latn-cd",
			tem: "tem-latn-sl",
			ten: "ten-latn-co",
			teo: "teo-latn-ug",
			tep: "tep-latn-mx",
			teq: "teq-latn-sd",
			ter: "ter-latn-br",
			tes: "tes-java-id",
			tet: "tet-latn-tl",
			teu: "teu-latn-ug",
			tev: "tev-latn-id",
			tew: "tew-latn-us",
			tex: "tex-latn-ss",
			tey: "tey-latn-sd",
			tfi: "tfi-latn-zz",
			tfn: "tfn-latn-us",
			tfo: "tfo-latn-id",
			tfr: "tfr-latn-pa",
			tft: "tft-latn-id",
			tg: "tg-cyrl-tj",
			"tg-arab": "tg-arab-pk",
			"tg-pk": "tg-arab-pk",
			tga: "tga-latn-ke",
			tgb: "tgb-latn-my",
			tgc: "tgc-latn-zz",
			tgd: "tgd-latn-ng",
			tge: "tge-deva-np",
			tgf: "tgf-tibt-bt",
			tgh: "tgh-latn-tt",
			tgi: "tgi-latn-pg",
			tgj: "tgj-latn-in",
			tgn: "tgn-latn-ph",
			tgo: "tgo-latn-zz",
			tgp: "tgp-latn-vu",
			tgq: "tgq-latn-my",
			tgs: "tgs-latn-vu",
			tgt: "tgt-latn-ph",
			"tgt-hano": "tgt-hano-ph",
			"tgt-tagb": "tgt-tagb-ph",
			tgu: "tgu-latn-zz",
			tgv: "tgv-latn-br",
			tgw: "tgw-latn-ci",
			tgx: "tgx-latn-ca",
			tgy: "tgy-latn-ss",
			tgz: "tgz-latn-au",
			th: "th-thai-th",
			thd: "thd-latn-au",
			the: "the-deva-np",
			thf: "thf-deva-np",
			thh: "thh-latn-mx",
			thi: "thi-tale-la",
			thk: "thk-latn-ke",
			thl: "thl-deva-np",
			thm: "thm-thai-th",
			thp: "thp-latn-ca",
			"thp-dupl": "thp-dupl-ca",
			thq: "thq-deva-np",
			thr: "thr-deva-np",
			ths: "ths-deva-np",
			tht: "tht-latn-ca",
			thu: "thu-latn-ss",
			thv: "thv-latn-dz",
			"thv-arab": "thv-arab-dz",
			"thv-tfng": "thv-tfng-dz",
			thy: "thy-latn-ng",
			thz: "thz-latn-ne",
			"thz-tfng": "thz-tfng-ne",
			ti: "ti-ethi-et",
			tic: "tic-latn-sd",
			tif: "tif-latn-zz",
			tig: "tig-ethi-er",
			tih: "tih-latn-my",
			tii: "tii-latn-cd",
			tij: "tij-deva-np",
			tik: "tik-latn-zz",
			til: "til-latn-us",
			tim: "tim-latn-zz",
			tin: "tin-cyrl-ru",
			tio: "tio-latn-zz",
			tip: "tip-latn-id",
			tiq: "tiq-latn-bf",
			tis: "tis-latn-ph",
			tit: "tit-latn-co",
			tiu: "tiu-latn-ph",
			tiv: "tiv-latn-ng",
			tiw: "tiw-latn-au",
			tix: "tix-latn-us",
			tiy: "tiy-latn-ph",
			tja: "tja-latn-lr",
			tjg: "tjg-latn-id",
			tji: "tji-latn-cn",
			tjj: "tjj-latn-au",
			tjl: "tjl-mymr-mm",
			tjn: "tjn-latn-ci",
			tjo: "tjo-arab-dz",
			tjp: "tjp-latn-au",
			tjs: "tjs-latn-cn",
			tju: "tju-latn-au",
			tjw: "tjw-latn-au",
			tk: "tk-latn-tm",
			tka: "tka-latn-br",
			tkb: "tkb-deva-in",
			tkd: "tkd-latn-tl",
			tke: "tke-latn-mz",
			tkf: "tkf-latn-br",
			tkg: "tkg-latn-mg",
			tkl: "tkl-latn-tk",
			tkp: "tkp-latn-sb",
			tkq: "tkq-latn-ng",
			tkr: "tkr-latn-az",
			tks: "tks-arab-ir",
			tkt: "tkt-deva-np",
			tku: "tku-latn-mx",
			tkv: "tkv-latn-pg",
			tkw: "tkw-latn-sb",
			tkx: "tkx-latn-id",
			tkz: "tkz-latn-vn",
			tl: "tl-latn-ph",
			tla: "tla-latn-mx",
			tlb: "tlb-latn-id",
			tlc: "tlc-latn-mx",
			tld: "tld-latn-id",
			tlf: "tlf-latn-zz",
			tlg: "tlg-latn-id",
			tli: "tli-latn-us",
			"tli-cyrl": "tli-cyrl-us",
			tlj: "tlj-latn-ug",
			tlk: "tlk-latn-id",
			tll: "tll-latn-cd",
			tlm: "tlm-latn-vu",
			tln: "tln-latn-id",
			tlp: "tlp-latn-mx",
			tlq: "tlq-latn-mm",
			tlr: "tlr-latn-sb",
			tls: "tls-latn-vu",
			tlt: "tlt-latn-id",
			tlu: "tlu-latn-id",
			tlv: "tlv-latn-id",
			tlx: "tlx-latn-zz",
			tly: "tly-latn-az",
			tma: "tma-latn-td",
			tmb: "tmb-latn-vu",
			tmc: "tmc-latn-td",
			tmd: "tmd-latn-pg",
			tme: "tme-latn-br",
			tmf: "tmf-latn-py",
			tmg: "tmg-latn-id",
			tmh: "tmh-latn-ne",
			tmi: "tmi-latn-vu",
			tmj: "tmj-latn-id",
			tmk: "tmk-deva-np",
			tml: "tml-latn-id",
			tmm: "tmm-latn-vn",
			tmn: "tmn-latn-id",
			tmo: "tmo-latn-my",
			tmq: "tmq-latn-pg",
			tmr: "tmr-syrc-il",
			tmt: "tmt-latn-vu",
			tmu: "tmu-latn-id",
			tmv: "tmv-latn-cd",
			tmw: "tmw-latn-my",
			tmy: "tmy-latn-zz",
			tmz: "tmz-latn-ve",
			tn: "tn-latn-za",
			tna: "tna-latn-bo",
			tnb: "tnb-latn-co",
			tnc: "tnc-latn-co",
			tnd: "tnd-latn-co",
			tng: "tng-latn-td",
			tnh: "tnh-latn-zz",
			tni: "tni-latn-id",
			tnk: "tnk-latn-vu",
			tnl: "tnl-latn-vu",
			tnm: "tnm-latn-id",
			tnn: "tnn-latn-vu",
			tno: "tno-latn-bo",
			tnp: "tnp-latn-vu",
			tnq: "tnq-latn-pr",
			tnr: "tnr-latn-sn",
			tns: "tns-latn-pg",
			tnt: "tnt-latn-id",
			tnv: "tnv-cakm-bd",
			tnw: "tnw-latn-id",
			tnx: "tnx-latn-sb",
			tny: "tny-latn-tz",
			to: "to-latn-to",
			tob: "tob-latn-ar",
			toc: "toc-latn-mx",
			tod: "tod-latn-gn",
			tof: "tof-latn-zz",
			tog: "tog-latn-mw",
			toh: "toh-latn-mz",
			toi: "toi-latn-zm",
			toj: "toj-latn-mx",
			tok: "tok-latn-001",
			tol: "tol-latn-us",
			tom: "tom-latn-id",
			too: "too-latn-mx",
			top: "top-latn-mx",
			toq: "toq-latn-zz",
			tor: "tor-latn-cd",
			tos: "tos-latn-mx",
			tou: "tou-latn-vn",
			tov: "tov-arab-ir",
			tow: "tow-latn-us",
			tox: "tox-latn-pw",
			toy: "toy-latn-id",
			toz: "toz-latn-cm",
			tpa: "tpa-latn-pg",
			tpc: "tpc-latn-mx",
			tpe: "tpe-latn-bd",
			"tpe-beng": "tpe-beng-bd",
			tpf: "tpf-latn-id",
			tpg: "tpg-latn-id",
			tpi: "tpi-latn-pg",
			tpj: "tpj-latn-py",
			tpk: "tpk-latn-br",
			tpl: "tpl-latn-mx",
			tpm: "tpm-latn-zz",
			tpn: "tpn-latn-br",
			tpp: "tpp-latn-mx",
			tpr: "tpr-latn-br",
			tpt: "tpt-latn-mx",
			tpu: "tpu-khmr-kh",
			tpv: "tpv-latn-mp",
			tpx: "tpx-latn-mx",
			tpy: "tpy-latn-br",
			tpz: "tpz-latn-zz",
			tqb: "tqb-latn-br",
			tql: "tql-latn-vu",
			tqm: "tqm-latn-pg",
			tqn: "tqn-latn-us",
			tqo: "tqo-latn-zz",
			tqp: "tqp-latn-pg",
			tqt: "tqt-latn-mx",
			tqu: "tqu-latn-sb",
			tqw: "tqw-latn-us",
			tr: "tr-latn-tr",
			tra: "tra-arab-af",
			trb: "trb-latn-pg",
			trc: "trc-latn-mx",
			tre: "tre-latn-id",
			trf: "trf-latn-tt",
			trg: "trg-hebr-il",
			trh: "trh-latn-pg",
			tri: "tri-latn-sr",
			trj: "trj-latn-td",
			trl: "trl-latn-gb",
			trm: "trm-arab-af",
			trn: "trn-latn-bo",
			tro: "tro-latn-in",
			trp: "trp-latn-in",
			"trp-beng": "trp-beng-in",
			trq: "trq-latn-mx",
			trr: "trr-latn-pe",
			trs: "trs-latn-mx",
			trt: "trt-latn-id",
			tru: "tru-latn-tr",
			trv: "trv-latn-tw",
			trw: "trw-arab-pk",
			trx: "trx-latn-my",
			try: "try-latn-in",
			trz: "trz-latn-br",
			ts: "ts-latn-za",
			tsa: "tsa-latn-cg",
			tsb: "tsb-latn-et",
			tsc: "tsc-latn-mz",
			tsd: "tsd-grek-gr",
			tsf: "tsf-deva-np",
			tsg: "tsg-latn-ph",
			tsh: "tsh-latn-cm",
			tsi: "tsi-latn-ca",
			tsj: "tsj-tibt-bt",
			tsl: "tsl-latn-vn",
			tsp: "tsp-latn-bf",
			tsr: "tsr-latn-vu",
			tst: "tst-latn-ml",
			tsu: "tsu-latn-tw",
			tsv: "tsv-latn-ga",
			tsw: "tsw-latn-zz",
			tsx: "tsx-latn-pg",
			tsz: "tsz-latn-mx",
			tt: "tt-cyrl-ru",
			ttb: "ttb-latn-ng",
			ttc: "ttc-latn-gt",
			ttd: "ttd-latn-zz",
			tte: "tte-latn-zz",
			ttf: "ttf-latn-cm",
			tth: "tth-laoo-la",
			tti: "tti-latn-id",
			ttj: "ttj-latn-ug",
			ttk: "ttk-latn-co",
			ttl: "ttl-latn-zm",
			ttm: "ttm-latn-ca",
			ttn: "ttn-latn-id",
			tto: "tto-laoo-la",
			ttp: "ttp-latn-id",
			ttr: "ttr-latn-zz",
			tts: "tts-thai-th",
			ttt: "ttt-latn-az",
			ttu: "ttu-latn-pg",
			ttv: "ttv-latn-pg",
			ttw: "ttw-latn-my",
			tty: "tty-latn-id",
			tua: "tua-latn-pg",
			tub: "tub-latn-us",
			tuc: "tuc-latn-pg",
			tud: "tud-latn-br",
			tue: "tue-latn-co",
			tuf: "tuf-latn-co",
			tug: "tug-latn-td",
			tuh: "tuh-latn-zz",
			tui: "tui-latn-cm",
			tuj: "tuj-latn-id",
			tul: "tul-latn-zz",
			tum: "tum-latn-mw",
			tun: "tun-latn-us",
			tuo: "tuo-latn-br",
			tuq: "tuq-latn-zz",
			tus: "tus-latn-ca",
			tuu: "tuu-latn-us",
			tuv: "tuv-latn-ke",
			tux: "tux-latn-br",
			tuy: "tuy-latn-ke",
			tuz: "tuz-latn-bf",
			tva: "tva-latn-sb",
			tvd: "tvd-latn-zz",
			tve: "tve-latn-id",
			tvk: "tvk-latn-vu",
			tvl: "tvl-latn-tv",
			tvm: "tvm-latn-id",
			tvn: "tvn-mymr-mm",
			tvo: "tvo-latn-id",
			tvs: "tvs-latn-ke",
			tvt: "tvt-latn-in",
			tvu: "tvu-latn-zz",
			tvw: "tvw-latn-id",
			tvx: "tvx-latn-tw",
			twa: "twa-latn-us",
			twb: "twb-latn-ph",
			twd: "twd-latn-nl",
			twe: "twe-latn-id",
			twf: "twf-latn-us",
			twg: "twg-latn-id",
			twh: "twh-latn-zz",
			twl: "twl-latn-mz",
			twm: "twm-deva-in",
			twn: "twn-latn-cm",
			two: "two-latn-bw",
			twp: "twp-latn-pg",
			twq: "twq-latn-ne",
			twr: "twr-latn-mx",
			twt: "twt-latn-br",
			twu: "twu-latn-id",
			tww: "tww-latn-pg",
			twx: "twx-latn-mz",
			twy: "twy-latn-id",
			txa: "txa-latn-my",
			txe: "txe-latn-id",
			txg: "txg-tang-cn",
			txi: "txi-latn-br",
			txj: "txj-latn-ng",
			txm: "txm-latn-id",
			txn: "txn-latn-id",
			txo: "txo-toto-in",
			txq: "txq-latn-id",
			txs: "txs-latn-id",
			txt: "txt-latn-id",
			txu: "txu-latn-br",
			txx: "txx-latn-my",
			txy: "txy-latn-mg",
			ty: "ty-latn-pf",
			tya: "tya-latn-zz",
			tye: "tye-latn-ng",
			tyh: "tyh-latn-vn",
			tyi: "tyi-latn-cg",
			tyj: "tyj-latn-vn",
			tyl: "tyl-latn-vn",
			tyn: "tyn-latn-id",
			typ: "typ-latn-au",
			tyr: "tyr-tavt-vn",
			tys: "tys-latn-vn",
			tyt: "tyt-latn-vn",
			"tyt-tavt": "tyt-tavt-vn",
			tyu: "tyu-latn-bw",
			tyv: "tyv-cyrl-ru",
			tyx: "tyx-latn-cg",
			tyy: "tyy-latn-ng",
			tyz: "tyz-latn-vn",
			tzh: "tzh-latn-mx",
			tzj: "tzj-latn-gt",
			tzl: "tzl-latn-001",
			tzm: "tzm-latn-ma",
			tzn: "tzn-latn-id",
			tzo: "tzo-latn-mx",
			tzx: "tzx-latn-pg",
			uam: "uam-latn-br",
			uar: "uar-latn-pg",
			uba: "uba-latn-ng",
			ubi: "ubi-latn-td",
			ubl: "ubl-latn-ph",
			ubr: "ubr-latn-pg",
			ubu: "ubu-latn-zz",
			uda: "uda-latn-ng",
			ude: "ude-cyrl-ru",
			udg: "udg-mlym-in",
			udi: "udi-aghb-ru",
			udj: "udj-latn-id",
			udl: "udl-latn-cm",
			udm: "udm-cyrl-ru",
			udu: "udu-latn-sd",
			ues: "ues-latn-id",
			ufi: "ufi-latn-pg",
			ug: "ug-arab-cn",
			"ug-cyrl": "ug-cyrl-kz",
			"ug-kz": "ug-cyrl-kz",
			"ug-mn": "ug-cyrl-mn",
			uga: "uga-ugar-sy",
			ugb: "ugb-latn-au",
			uge: "uge-latn-sb",
			ugh: "ugh-cyrl-ru",
			ugo: "ugo-thai-th",
			uha: "uha-latn-ng",
			uhn: "uhn-latn-id",
			uis: "uis-latn-pg",
			uiv: "uiv-latn-cm",
			uji: "uji-latn-ng",
			uk: "uk-cyrl-ua",
			uka: "uka-latn-id",
			ukg: "ukg-latn-pg",
			ukh: "ukh-latn-cf",
			uki: "uki-orya-in",
			ukk: "ukk-latn-mm",
			ukp: "ukp-latn-ng",
			ukq: "ukq-latn-ng",
			uku: "uku-latn-ng",
			ukv: "ukv-latn-ss",
			ukw: "ukw-latn-ng",
			uky: "uky-latn-au",
			ula: "ula-latn-ng",
			ulb: "ulb-latn-ng",
			ulc: "ulc-cyrl-ru",
			ule: "ule-latn-ar",
			ulf: "ulf-latn-id",
			uli: "uli-latn-fm",
			ulk: "ulk-latn-au",
			ulm: "ulm-latn-id",
			uln: "uln-latn-pg",
			ulu: "ulu-latn-id",
			ulw: "ulw-latn-ni",
			uma: "uma-latn-us",
			umb: "umb-latn-ao",
			umd: "umd-latn-au",
			umg: "umg-latn-au",
			umi: "umi-latn-my",
			umm: "umm-latn-ng",
			umn: "umn-latn-mm",
			umo: "umo-latn-br",
			ump: "ump-latn-au",
			umr: "umr-latn-au",
			ums: "ums-latn-id",
			una: "una-latn-pg",
			und: "en-latn-us",
			"und-002": "en-latn-ng",
			"und-003": "en-latn-us",
			"und-005": "pt-latn-br",
			"und-009": "en-latn-au",
			"und-011": "en-latn-ng",
			"und-013": "es-latn-mx",
			"und-014": "sw-latn-tz",
			"und-015": "ar-arab-eg",
			"und-017": "sw-latn-cd",
			"und-018": "en-latn-za",
			"und-019": "en-latn-us",
			"und-021": "en-latn-us",
			"und-029": "es-latn-cu",
			"und-030": "zh-hans-cn",
			"und-034": "hi-deva-in",
			"und-035": "id-latn-id",
			"und-039": "it-latn-it",
			"und-053": "en-latn-au",
			"und-054": "en-latn-pg",
			"und-057": "en-latn-gu",
			"und-061": "sm-latn-ws",
			"und-142": "zh-hans-cn",
			"und-143": "uz-latn-uz",
			"und-145": "ar-arab-sa",
			"und-150": "ru-cyrl-ru",
			"und-151": "ru-cyrl-ru",
			"und-154": "en-latn-gb",
			"und-155": "de-latn-de",
			"und-202": "en-latn-ng",
			"und-419": "es-latn-419",
			"und-ad": "ca-latn-ad",
			"und-adlm": "ff-adlm-gn",
			"und-ae": "ar-arab-ae",
			"und-af": "fa-arab-af",
			"und-aghb": "udi-aghb-ru",
			"und-ahom": "aho-ahom-in",
			"und-al": "sq-latn-al",
			"und-am": "hy-armn-am",
			"und-ao": "pt-latn-ao",
			"und-aq": "und-latn-aq",
			"und-ar": "es-latn-ar",
			"und-arab": "ar-arab-eg",
			"und-arab-cc": "ms-arab-cc",
			"und-arab-cn": "ug-arab-cn",
			"und-arab-gb": "ur-arab-gb",
			"und-arab-id": "ms-arab-id",
			"und-arab-in": "ur-arab-in",
			"und-arab-kh": "cja-arab-kh",
			"und-arab-mm": "rhg-arab-mm",
			"und-arab-mn": "kk-arab-mn",
			"und-arab-mu": "ur-arab-mu",
			"und-arab-ng": "ha-arab-ng",
			"und-arab-pk": "ur-arab-pk",
			"und-arab-tg": "apd-arab-tg",
			"und-arab-th": "mfa-arab-th",
			"und-arab-tj": "fa-arab-tj",
			"und-arab-tr": "apc-arab-tr",
			"und-arab-yt": "swb-arab-yt",
			"und-armi": "arc-armi-ir",
			"und-armn": "hy-armn-am",
			"und-as": "sm-latn-as",
			"und-at": "de-latn-at",
			"und-avst": "ae-avst-ir",
			"und-aw": "nl-latn-aw",
			"und-ax": "sv-latn-ax",
			"und-az": "az-latn-az",
			"und-ba": "bs-latn-ba",
			"und-bali": "ban-bali-id",
			"und-bamu": "bax-bamu-cm",
			"und-bass": "bsq-bass-lr",
			"und-batk": "bbc-batk-id",
			"und-bd": "bn-beng-bd",
			"und-be": "nl-latn-be",
			"und-beng": "bn-beng-bd",
			"und-bf": "fr-latn-bf",
			"und-bg": "bg-cyrl-bg",
			"und-bh": "ar-arab-bh",
			"und-bhks": "sa-bhks-in",
			"und-bi": "rn-latn-bi",
			"und-bj": "fr-latn-bj",
			"und-bl": "fr-latn-bl",
			"und-bn": "ms-latn-bn",
			"und-bo": "es-latn-bo",
			"und-bopo": "zh-bopo-tw",
			"und-bq": "pap-latn-bq",
			"und-br": "pt-latn-br",
			"und-brah": "pka-brah-in",
			"und-brai": "fr-brai-fr",
			"und-bt": "dz-tibt-bt",
			"und-bugi": "bug-bugi-id",
			"und-buhd": "bku-buhd-ph",
			"und-bv": "und-latn-bv",
			"und-by": "be-cyrl-by",
			"und-cakm": "ccp-cakm-bd",
			"und-cans": "iu-cans-ca",
			"und-cari": "xcr-cari-tr",
			"und-cd": "sw-latn-cd",
			"und-cf": "fr-latn-cf",
			"und-cg": "fr-latn-cg",
			"und-ch": "de-latn-ch",
			"und-cham": "cjm-cham-vn",
			"und-cher": "chr-cher-us",
			"und-chrs": "xco-chrs-uz",
			"und-ci": "fr-latn-ci",
			"und-cl": "es-latn-cl",
			"und-cm": "fr-latn-cm",
			"und-cn": "zh-hans-cn",
			"und-co": "es-latn-co",
			"und-copt": "cop-copt-eg",
			"und-cp": "und-latn-cp",
			"und-cpmn": "und-cpmn-cy",
			"und-cpmn-cy": "und-cpmn-cy",
			"und-cprt": "grc-cprt-cy",
			"und-cr": "es-latn-cr",
			"und-cu": "es-latn-cu",
			"und-cv": "pt-latn-cv",
			"und-cw": "pap-latn-cw",
			"und-cy": "el-grek-cy",
			"und-cyrl": "ru-cyrl-ru",
			"und-cyrl-al": "mk-cyrl-al",
			"und-cyrl-ba": "sr-cyrl-ba",
			"und-cyrl-ge": "ab-cyrl-ge",
			"und-cyrl-gr": "mk-cyrl-gr",
			"und-cyrl-md": "uk-cyrl-md",
			"und-cyrl-ro": "bg-cyrl-ro",
			"und-cyrl-sk": "uk-cyrl-sk",
			"und-cyrl-tr": "kbd-cyrl-tr",
			"und-cyrl-xk": "sr-cyrl-xk",
			"und-cz": "cs-latn-cz",
			"und-de": "de-latn-de",
			"und-deva": "hi-deva-in",
			"und-deva-bt": "ne-deva-bt",
			"und-deva-fj": "hif-deva-fj",
			"und-deva-mu": "bho-deva-mu",
			"und-deva-pk": "btv-deva-pk",
			"und-diak": "dv-diak-mv",
			"und-dj": "aa-latn-dj",
			"und-dk": "da-latn-dk",
			"und-do": "es-latn-do",
			"und-dogr": "doi-dogr-in",
			"und-dupl": "fr-dupl-fr",
			"und-dz": "ar-arab-dz",
			"und-ea": "es-latn-ea",
			"und-ec": "es-latn-ec",
			"und-ee": "et-latn-ee",
			"und-eg": "ar-arab-eg",
			"und-egyp": "egy-egyp-eg",
			"und-eh": "ar-arab-eh",
			"und-elba": "sq-elba-al",
			"und-elym": "arc-elym-ir",
			"und-er": "ti-ethi-er",
			"und-es": "es-latn-es",
			"und-et": "am-ethi-et",
			"und-ethi": "am-ethi-et",
			"und-eu": "en-latn-ie",
			"und-ez": "de-latn-ez",
			"und-fi": "fi-latn-fi",
			"und-fo": "fo-latn-fo",
			"und-fr": "fr-latn-fr",
			"und-ga": "fr-latn-ga",
			"und-ge": "ka-geor-ge",
			"und-geor": "ka-geor-ge",
			"und-gf": "fr-latn-gf",
			"und-gh": "ak-latn-gh",
			"und-gl": "kl-latn-gl",
			"und-glag": "cu-glag-bg",
			"und-gn": "fr-latn-gn",
			"und-gong": "wsg-gong-in",
			"und-gonm": "esg-gonm-in",
			"und-goth": "got-goth-ua",
			"und-gp": "fr-latn-gp",
			"und-gq": "es-latn-gq",
			"und-gr": "el-grek-gr",
			"und-gran": "sa-gran-in",
			"und-grek": "el-grek-gr",
			"und-grek-tr": "bgx-grek-tr",
			"und-gs": "und-latn-gs",
			"und-gt": "es-latn-gt",
			"und-gujr": "gu-gujr-in",
			"und-guru": "pa-guru-in",
			"und-gw": "pt-latn-gw",
			"und-hanb": "zh-hanb-tw",
			"und-hang": "ko-hang-kr",
			"und-hani": "zh-hani-cn",
			"und-hano": "hnn-hano-ph",
			"und-hans": "zh-hans-cn",
			"und-hant": "zh-hant-tw",
			"und-hant-ca": "yue-hant-ca",
			"und-hebr": "he-hebr-il",
			"und-hebr-se": "yi-hebr-se",
			"und-hebr-ua": "yi-hebr-ua",
			"und-hebr-us": "yi-hebr-us",
			"und-hira": "ja-hira-jp",
			"und-hk": "zh-hant-hk",
			"und-hluw": "hlu-hluw-tr",
			"und-hm": "und-latn-hm",
			"und-hmng": "hnj-hmng-la",
			"und-hmnp": "hnj-hmnp-us",
			"und-hn": "es-latn-hn",
			"und-hr": "hr-latn-hr",
			"und-ht": "ht-latn-ht",
			"und-hu": "hu-latn-hu",
			"und-hung": "hu-hung-hu",
			"und-ic": "es-latn-ic",
			"und-id": "id-latn-id",
			"und-il": "he-hebr-il",
			"und-in": "hi-deva-in",
			"und-iq": "ar-arab-iq",
			"und-ir": "fa-arab-ir",
			"und-is": "is-latn-is",
			"und-it": "it-latn-it",
			"und-ital": "ett-ital-it",
			"und-jamo": "ko-jamo-kr",
			"und-java": "jv-java-id",
			"und-jo": "ar-arab-jo",
			"und-jp": "ja-jpan-jp",
			"und-jpan": "ja-jpan-jp",
			"und-kali": "eky-kali-mm",
			"und-kana": "ja-kana-jp",
			"und-kawi": "kaw-kawi-id",
			"und-ke": "sw-latn-ke",
			"und-kg": "ky-cyrl-kg",
			"und-kh": "km-khmr-kh",
			"und-khar": "pra-khar-pk",
			"und-khmr": "km-khmr-kh",
			"und-khoj": "sd-khoj-in",
			"und-kits": "zkt-kits-cn",
			"und-km": "ar-arab-km",
			"und-knda": "kn-knda-in",
			"und-kore": "ko-kore-kr",
			"und-kp": "ko-kore-kp",
			"und-kr": "ko-kore-kr",
			"und-kthi": "bho-kthi-in",
			"und-kw": "ar-arab-kw",
			"und-kz": "ru-cyrl-kz",
			"und-la": "lo-laoo-la",
			"und-lana": "nod-lana-th",
			"und-laoo": "lo-laoo-la",
			"und-laoo-au": "hnj-laoo-au",
			"und-laoo-cn": "hnj-laoo-cn",
			"und-laoo-fr": "hnj-laoo-fr",
			"und-laoo-gf": "hnj-laoo-gf",
			"und-laoo-mm": "hnj-laoo-mm",
			"und-laoo-sr": "hnj-laoo-sr",
			"und-laoo-th": "hnj-laoo-th",
			"und-laoo-us": "hnj-laoo-us",
			"und-laoo-vn": "hnj-laoo-vn",
			"und-latn-af": "tk-latn-af",
			"und-latn-am": "ku-latn-am",
			"und-latn-cn": "za-latn-cn",
			"und-latn-cy": "tr-latn-cy",
			"und-latn-dz": "fr-latn-dz",
			"und-latn-et": "en-latn-et",
			"und-latn-ge": "ku-latn-ge",
			"und-latn-ir": "tk-latn-ir",
			"und-latn-km": "fr-latn-km",
			"und-latn-ma": "fr-latn-ma",
			"und-latn-mk": "sq-latn-mk",
			"und-latn-mm": "kac-latn-mm",
			"und-latn-mo": "pt-latn-mo",
			"und-latn-mr": "fr-latn-mr",
			"und-latn-ru": "krl-latn-ru",
			"und-latn-sy": "fr-latn-sy",
			"und-latn-tn": "fr-latn-tn",
			"und-latn-tw": "trv-latn-tw",
			"und-latn-ua": "pl-latn-ua",
			"und-lb": "ar-arab-lb",
			"und-lepc": "lep-lepc-in",
			"und-li": "de-latn-li",
			"und-limb": "lif-limb-in",
			"und-lina": "lab-lina-gr",
			"und-linb": "grc-linb-gr",
			"und-lisu": "lis-lisu-cn",
			"und-lk": "si-sinh-lk",
			"und-ls": "st-latn-ls",
			"und-lt": "lt-latn-lt",
			"und-lu": "fr-latn-lu",
			"und-lv": "lv-latn-lv",
			"und-ly": "ar-arab-ly",
			"und-lyci": "xlc-lyci-tr",
			"und-lydi": "xld-lydi-tr",
			"und-ma": "ar-arab-ma",
			"und-mahj": "hi-mahj-in",
			"und-maka": "mak-maka-id",
			"und-mand": "myz-mand-ir",
			"und-mani": "xmn-mani-cn",
			"und-marc": "bo-marc-cn",
			"und-mc": "fr-latn-mc",
			"und-md": "ro-latn-md",
			"und-me": "sr-latn-me",
			"und-medf": "dmf-medf-ng",
			"und-mend": "men-mend-sl",
			"und-merc": "xmr-merc-sd",
			"und-mero": "xmr-mero-sd",
			"und-mf": "fr-latn-mf",
			"und-mg": "mg-latn-mg",
			"und-mk": "mk-cyrl-mk",
			"und-ml": "bm-latn-ml",
			"und-mlym": "ml-mlym-in",
			"und-mm": "my-mymr-mm",
			"und-mn": "mn-cyrl-mn",
			"und-mo": "zh-hant-mo",
			"und-modi": "mr-modi-in",
			"und-mong": "mn-mong-cn",
			"und-mq": "fr-latn-mq",
			"und-mr": "ar-arab-mr",
			"und-mroo": "mro-mroo-bd",
			"und-mt": "mt-latn-mt",
			"und-mtei": "mni-mtei-in",
			"und-mu": "mfe-latn-mu",
			"und-mult": "skr-mult-pk",
			"und-mv": "dv-thaa-mv",
			"und-mx": "es-latn-mx",
			"und-my": "ms-latn-my",
			"und-mymr": "my-mymr-mm",
			"und-mymr-in": "kht-mymr-in",
			"und-mymr-th": "mnw-mymr-th",
			"und-mz": "pt-latn-mz",
			"und-na": "af-latn-na",
			"und-nagm": "unr-nagm-in",
			"und-nand": "sa-nand-in",
			"und-narb": "xna-narb-sa",
			"und-nbat": "arc-nbat-jo",
			"und-nc": "fr-latn-nc",
			"und-ne": "ha-latn-ne",
			"und-newa": "new-newa-np",
			"und-ni": "es-latn-ni",
			"und-nkoo": "man-nkoo-gn",
			"und-nl": "nl-latn-nl",
			"und-no": "nb-latn-no",
			"und-np": "ne-deva-np",
			"und-nshu": "zhx-nshu-cn",
			"und-ogam": "sga-ogam-ie",
			"und-olck": "sat-olck-in",
			"und-om": "ar-arab-om",
			"und-orkh": "otk-orkh-mn",
			"und-orya": "or-orya-in",
			"und-osge": "osa-osge-us",
			"und-osma": "so-osma-so",
			"und-ougr": "oui-ougr-143",
			"und-pa": "es-latn-pa",
			"und-palm": "arc-palm-sy",
			"und-pauc": "ctd-pauc-mm",
			"und-pe": "es-latn-pe",
			"und-perm": "kv-perm-ru",
			"und-pf": "fr-latn-pf",
			"und-pg": "tpi-latn-pg",
			"und-ph": "fil-latn-ph",
			"und-phag": "lzh-phag-cn",
			"und-phli": "pal-phli-ir",
			"und-phlp": "pal-phlp-cn",
			"und-phnx": "phn-phnx-lb",
			"und-pk": "ur-arab-pk",
			"und-pl": "pl-latn-pl",
			"und-plrd": "hmd-plrd-cn",
			"und-pm": "fr-latn-pm",
			"und-pr": "es-latn-pr",
			"und-prti": "xpr-prti-ir",
			"und-ps": "ar-arab-ps",
			"und-pt": "pt-latn-pt",
			"und-pw": "pau-latn-pw",
			"und-py": "gn-latn-py",
			"und-qa": "ar-arab-qa",
			"und-qo": "en-latn-dg",
			"und-re": "fr-latn-re",
			"und-rjng": "rej-rjng-id",
			"und-ro": "ro-latn-ro",
			"und-rohg": "rhg-rohg-mm",
			"und-rs": "sr-cyrl-rs",
			"und-ru": "ru-cyrl-ru",
			"und-runr": "non-runr-se",
			"und-rw": "rw-latn-rw",
			"und-sa": "ar-arab-sa",
			"und-samr": "smp-samr-il",
			"und-sarb": "xsa-sarb-ye",
			"und-saur": "saz-saur-in",
			"und-sc": "fr-latn-sc",
			"und-sd": "ar-arab-sd",
			"und-se": "sv-latn-se",
			"und-sgnw": "ase-sgnw-us",
			"und-shaw": "en-shaw-gb",
			"und-shrd": "sa-shrd-in",
			"und-si": "sl-latn-si",
			"und-sidd": "sa-sidd-in",
			"und-sind": "sd-sind-in",
			"und-sinh": "si-sinh-lk",
			"und-sj": "nb-latn-sj",
			"und-sk": "sk-latn-sk",
			"und-sm": "it-latn-sm",
			"und-sn": "fr-latn-sn",
			"und-so": "so-latn-so",
			"und-sogd": "sog-sogd-uz",
			"und-sogo": "sog-sogo-uz",
			"und-sora": "srb-sora-in",
			"und-soyo": "cmg-soyo-mn",
			"und-sr": "nl-latn-sr",
			"und-st": "pt-latn-st",
			"und-sund": "su-sund-id",
			"und-sv": "es-latn-sv",
			"und-sy": "ar-arab-sy",
			"und-sylo": "syl-sylo-bd",
			"und-syrc": "syr-syrc-iq",
			"und-tagb": "tbw-tagb-ph",
			"und-takr": "doi-takr-in",
			"und-tale": "tdd-tale-cn",
			"und-talu": "khb-talu-cn",
			"und-taml": "ta-taml-in",
			"und-tang": "txg-tang-cn",
			"und-tavt": "blt-tavt-vn",
			"und-td": "fr-latn-td",
			"und-telu": "te-telu-in",
			"und-tf": "fr-latn-tf",
			"und-tfng": "zgh-tfng-ma",
			"und-tg": "fr-latn-tg",
			"und-tglg": "fil-tglg-ph",
			"und-th": "th-thai-th",
			"und-thaa": "dv-thaa-mv",
			"und-thai": "th-thai-th",
			"und-thai-cn": "lcp-thai-cn",
			"und-thai-kh": "kdt-thai-kh",
			"und-thai-la": "kdt-thai-la",
			"und-tibt": "bo-tibt-cn",
			"und-tirh": "mai-tirh-in",
			"und-tj": "tg-cyrl-tj",
			"und-tk": "tkl-latn-tk",
			"und-tl": "pt-latn-tl",
			"und-tm": "tk-latn-tm",
			"und-tn": "ar-arab-tn",
			"und-tnsa": "nst-tnsa-in",
			"und-to": "to-latn-to",
			"und-toto": "txo-toto-in",
			"und-tr": "tr-latn-tr",
			"und-tv": "tvl-latn-tv",
			"und-tw": "zh-hant-tw",
			"und-tz": "sw-latn-tz",
			"und-ua": "uk-cyrl-ua",
			"und-ug": "sw-latn-ug",
			"und-ugar": "uga-ugar-sy",
			"und-uy": "es-latn-uy",
			"und-uz": "uz-latn-uz",
			"und-va": "it-latn-va",
			"und-vaii": "vai-vaii-lr",
			"und-ve": "es-latn-ve",
			"und-vith": "sq-vith-al",
			"und-vn": "vi-latn-vn",
			"und-vu": "bi-latn-vu",
			"und-wara": "hoc-wara-in",
			"und-wcho": "nnp-wcho-in",
			"und-wf": "fr-latn-wf",
			"und-ws": "sm-latn-ws",
			"und-xk": "sq-latn-xk",
			"und-xpeo": "peo-xpeo-ir",
			"und-xsux": "akk-xsux-iq",
			"und-ye": "ar-arab-ye",
			"und-yezi": "ku-yezi-ge",
			"und-yiii": "ii-yiii-cn",
			"und-yt": "fr-latn-yt",
			"und-zanb": "cmg-zanb-mn",
			"und-zw": "sn-latn-zw",
			une: "une-latn-ng",
			ung: "ung-latn-au",
			uni: "uni-latn-pg",
			unk: "unk-latn-br",
			unm: "unm-latn-us",
			unn: "unn-latn-au",
			unr: "unr-beng-in",
			"unr-deva": "unr-deva-np",
			"unr-np": "unr-deva-np",
			unu: "unu-latn-pg",
			unx: "unx-beng-in",
			unz: "unz-latn-id",
			uok: "uok-latn-zz",
			uon: "uon-latn-tw",
			upi: "upi-latn-pg",
			upv: "upv-latn-vu",
			ur: "ur-arab-pk",
			ura: "ura-latn-pe",
			urb: "urb-latn-br",
			urc: "urc-latn-au",
			ure: "ure-latn-bo",
			urf: "urf-latn-au",
			urg: "urg-latn-pg",
			urh: "urh-latn-ng",
			uri: "uri-latn-zz",
			urk: "urk-thai-th",
			urm: "urm-latn-pg",
			urn: "urn-latn-id",
			uro: "uro-latn-pg",
			urp: "urp-latn-br",
			urr: "urr-latn-vu",
			urt: "urt-latn-zz",
			uru: "uru-latn-br",
			urv: "urv-latn-pg",
			urw: "urw-latn-zz",
			urx: "urx-latn-pg",
			ury: "ury-latn-id",
			urz: "urz-latn-br",
			usa: "usa-latn-zz",
			ush: "ush-arab-pk",
			usi: "usi-latn-bd",
			"usi-beng": "usi-beng-bd",
			usk: "usk-latn-cm",
			usp: "usp-latn-gt",
			uss: "uss-latn-ng",
			usu: "usu-latn-pg",
			uta: "uta-latn-ng",
			ute: "ute-latn-us",
			uth: "uth-latn-zz",
			utp: "utp-latn-sb",
			utr: "utr-latn-zz",
			utu: "utu-latn-pg",
			uum: "uum-grek-ge",
			"uum-cyrl": "uum-cyrl-ge",
			uur: "uur-latn-vu",
			uve: "uve-latn-nc",
			uvh: "uvh-latn-zz",
			uvl: "uvl-latn-zz",
			uwa: "uwa-latn-au",
			uya: "uya-latn-ng",
			uz: "uz-latn-uz",
			"uz-af": "uz-arab-af",
			"uz-arab": "uz-arab-af",
			"uz-cn": "uz-cyrl-cn",
			uzs: "uzs-arab-af",
			vaa: "vaa-taml-in",
			vae: "vae-latn-cf",
			vaf: "vaf-arab-ir",
			vag: "vag-latn-zz",
			vah: "vah-deva-in",
			vai: "vai-vaii-lr",
			vaj: "vaj-latn-na",
			val: "val-latn-pg",
			vam: "vam-latn-pg",
			van: "van-latn-zz",
			vao: "vao-latn-vu",
			vap: "vap-latn-in",
			var: "var-latn-mx",
			vas: "vas-deva-in",
			"vas-gujr": "vas-gujr-in",
			vau: "vau-latn-cd",
			vav: "vav-deva-in",
			"vav-gujr": "vav-gujr-in",
			vay: "vay-deva-np",
			vbb: "vbb-latn-id",
			vbk: "vbk-latn-ph",
			ve: "ve-latn-za",
			vec: "vec-latn-it",
			vem: "vem-latn-ng",
			veo: "veo-latn-us",
			vep: "vep-latn-ru",
			ver: "ver-latn-ng",
			vgr: "vgr-arab-pk",
			vi: "vi-latn-vn",
			vic: "vic-latn-sx",
			vid: "vid-latn-tz",
			vif: "vif-latn-cg",
			vig: "vig-latn-bf",
			vil: "vil-latn-ar",
			vin: "vin-latn-tz",
			vit: "vit-latn-ng",
			viv: "viv-latn-zz",
			vka: "vka-latn-au",
			vkj: "vkj-latn-td",
			vkk: "vkk-latn-id",
			vkl: "vkl-latn-id",
			vkm: "vkm-latn-br",
			vkn: "vkn-latn-ng",
			vko: "vko-latn-id",
			vkp: "vkp-latn-in",
			"vkp-deva": "vkp-deva-in",
			vkt: "vkt-latn-id",
			vku: "vku-latn-au",
			vkz: "vkz-latn-ng",
			vlp: "vlp-latn-vu",
			vls: "vls-latn-be",
			vma: "vma-latn-au",
			vmb: "vmb-latn-au",
			vmc: "vmc-latn-mx",
			vmd: "vmd-knda-in",
			vme: "vme-latn-id",
			vmf: "vmf-latn-de",
			vmg: "vmg-latn-pg",
			vmh: "vmh-arab-ir",
			vmi: "vmi-latn-au",
			vmj: "vmj-latn-mx",
			vmk: "vmk-latn-mz",
			vml: "vml-latn-au",
			vmm: "vmm-latn-mx",
			vmp: "vmp-latn-mx",
			vmq: "vmq-latn-mx",
			vmr: "vmr-latn-mz",
			vms: "vms-latn-id",
			vmu: "vmu-latn-au",
			vmw: "vmw-latn-mz",
			vmx: "vmx-latn-mx",
			vmy: "vmy-latn-mx",
			vmz: "vmz-latn-mx",
			vnk: "vnk-latn-sb",
			vnm: "vnm-latn-vu",
			vnp: "vnp-latn-vu",
			vo: "vo-latn-001",
			vor: "vor-latn-ng",
			vot: "vot-latn-ru",
			vra: "vra-latn-vu",
			vro: "vro-latn-ee",
			vrs: "vrs-latn-sb",
			vrt: "vrt-latn-vu",
			vto: "vto-latn-id",
			vum: "vum-latn-ga",
			vun: "vun-latn-tz",
			vut: "vut-latn-zz",
			vwa: "vwa-latn-cn",
			"vwa-mymr": "vwa-mymr-cn",
			wa: "wa-latn-be",
			waa: "waa-latn-us",
			wab: "wab-latn-pg",
			wac: "wac-latn-us",
			wad: "wad-latn-id",
			wae: "wae-latn-ch",
			waf: "waf-latn-br",
			wag: "wag-latn-pg",
			wah: "wah-latn-id",
			wai: "wai-latn-id",
			waj: "waj-latn-zz",
			wal: "wal-ethi-et",
			wam: "wam-latn-us",
			wan: "wan-latn-zz",
			wap: "wap-latn-gy",
			waq: "waq-latn-au",
			war: "war-latn-ph",
			was: "was-latn-us",
			wat: "wat-latn-pg",
			wau: "wau-latn-br",
			wav: "wav-latn-ng",
			waw: "waw-latn-br",
			wax: "wax-latn-pg",
			way: "way-latn-sr",
			waz: "waz-latn-pg",
			wba: "wba-latn-ve",
			wbb: "wbb-latn-id",
			wbe: "wbe-latn-id",
			wbf: "wbf-latn-bf",
			wbh: "wbh-latn-tz",
			wbi: "wbi-latn-tz",
			wbj: "wbj-latn-tz",
			wbk: "wbk-arab-af",
			wbl: "wbl-latn-pk",
			"wbl-arab": "wbl-arab-af",
			"wbl-cyrl": "wbl-cyrl-tj",
			wbm: "wbm-latn-cn",
			wbp: "wbp-latn-au",
			wbq: "wbq-telu-in",
			wbr: "wbr-deva-in",
			wbt: "wbt-latn-au",
			wbv: "wbv-latn-au",
			wbw: "wbw-latn-id",
			wca: "wca-latn-br",
			wci: "wci-latn-zz",
			wdd: "wdd-latn-ga",
			wdg: "wdg-latn-pg",
			wdj: "wdj-latn-au",
			wdk: "wdk-latn-au",
			wdt: "wdt-latn-ca",
			wdu: "wdu-latn-au",
			wdy: "wdy-latn-au",
			wec: "wec-latn-ci",
			wed: "wed-latn-pg",
			weg: "weg-latn-au",
			weh: "weh-latn-cm",
			wei: "wei-latn-pg",
			wem: "wem-latn-bj",
			weo: "weo-latn-id",
			wep: "wep-latn-de",
			wer: "wer-latn-zz",
			wes: "wes-latn-cm",
			wet: "wet-latn-id",
			weu: "weu-latn-mm",
			wew: "wew-latn-id",
			wfg: "wfg-latn-id",
			wga: "wga-latn-au",
			wgb: "wgb-latn-pg",
			wgg: "wgg-latn-au",
			wgi: "wgi-latn-zz",
			wgo: "wgo-latn-id",
			wgu: "wgu-latn-au",
			wgy: "wgy-latn-au",
			wha: "wha-latn-id",
			whg: "whg-latn-zz",
			whk: "whk-latn-id",
			whu: "whu-latn-id",
			wib: "wib-latn-zz",
			wic: "wic-latn-us",
			wie: "wie-latn-au",
			wif: "wif-latn-au",
			wig: "wig-latn-au",
			wih: "wih-latn-au",
			wii: "wii-latn-pg",
			wij: "wij-latn-au",
			wik: "wik-latn-au",
			wil: "wil-latn-au",
			wim: "wim-latn-au",
			win: "win-latn-us",
			wir: "wir-latn-br",
			wiu: "wiu-latn-zz",
			wiv: "wiv-latn-zz",
			wiy: "wiy-latn-us",
			wja: "wja-latn-zz",
			wji: "wji-latn-zz",
			wka: "wka-latn-tz",
			wkd: "wkd-latn-id",
			wkr: "wkr-latn-au",
			wkw: "wkw-latn-au",
			wky: "wky-latn-au",
			wla: "wla-latn-pg",
			wlg: "wlg-latn-au",
			wlh: "wlh-latn-tl",
			wli: "wli-latn-id",
			wlm: "wlm-latn-gb",
			wlo: "wlo-arab-id",
			wlr: "wlr-latn-vu",
			wls: "wls-latn-wf",
			wlu: "wlu-latn-au",
			wlv: "wlv-latn-ar",
			wlw: "wlw-latn-id",
			wlx: "wlx-latn-gh",
			wma: "wma-latn-ng",
			wmb: "wmb-latn-au",
			wmc: "wmc-latn-pg",
			wmd: "wmd-latn-br",
			wme: "wme-deva-np",
			wmh: "wmh-latn-tl",
			wmi: "wmi-latn-au",
			wmm: "wmm-latn-id",
			wmn: "wmn-latn-nc",
			wmo: "wmo-latn-zz",
			wms: "wms-latn-id",
			wmt: "wmt-latn-au",
			wmw: "wmw-latn-mz",
			"wmw-arab": "wmw-arab-mz",
			wmx: "wmx-latn-pg",
			wnb: "wnb-latn-pg",
			wnc: "wnc-latn-zz",
			wnd: "wnd-latn-au",
			wne: "wne-arab-pk",
			wng: "wng-latn-id",
			wni: "wni-arab-km",
			wnk: "wnk-latn-id",
			wnm: "wnm-latn-au",
			wnn: "wnn-latn-au",
			wno: "wno-latn-id",
			wnp: "wnp-latn-pg",
			wnu: "wnu-latn-zz",
			wnw: "wnw-latn-us",
			wny: "wny-latn-au",
			wo: "wo-latn-sn",
			woa: "woa-latn-au",
			wob: "wob-latn-zz",
			woc: "woc-latn-pg",
			wod: "wod-latn-id",
			woe: "woe-latn-fm",
			wof: "wof-latn-gm",
			"wof-arab": "wof-arab-gm",
			wog: "wog-latn-pg",
			woi: "woi-latn-id",
			wok: "wok-latn-cm",
			wom: "wom-latn-ng",
			won: "won-latn-cd",
			woo: "woo-latn-id",
			wor: "wor-latn-id",
			wos: "wos-latn-zz",
			wow: "wow-latn-id",
			wpc: "wpc-latn-ve",
			wrb: "wrb-latn-au",
			wrg: "wrg-latn-au",
			wrh: "wrh-latn-au",
			wri: "wri-latn-au",
			wrk: "wrk-latn-au",
			wrl: "wrl-latn-au",
			wrm: "wrm-latn-au",
			wro: "wro-latn-au",
			wrp: "wrp-latn-id",
			wrr: "wrr-latn-au",
			wrs: "wrs-latn-zz",
			wru: "wru-latn-id",
			wrv: "wrv-latn-pg",
			wrw: "wrw-latn-au",
			wrx: "wrx-latn-id",
			wrz: "wrz-latn-au",
			wsa: "wsa-latn-id",
			wsg: "wsg-gong-in",
			wsi: "wsi-latn-vu",
			wsk: "wsk-latn-zz",
			wsr: "wsr-latn-pg",
			wss: "wss-latn-gh",
			wsu: "wsu-latn-br",
			wsv: "wsv-arab-af",
			wtf: "wtf-latn-pg",
			wth: "wth-latn-au",
			wti: "wti-latn-et",
			wtk: "wtk-latn-pg",
			wtm: "wtm-deva-in",
			wtw: "wtw-latn-id",
			"wtw-bugi": "wtw-bugi-id",
			wua: "wua-latn-au",
			wub: "wub-latn-au",
			wud: "wud-latn-tg",
			wul: "wul-latn-id",
			wum: "wum-latn-ga",
			wun: "wun-latn-tz",
			wur: "wur-latn-au",
			wut: "wut-latn-pg",
			wuu: "wuu-hans-cn",
			wuv: "wuv-latn-zz",
			wux: "wux-latn-au",
			wuy: "wuy-latn-id",
			wwa: "wwa-latn-zz",
			wwb: "wwb-latn-au",
			wwo: "wwo-latn-vu",
			wwr: "wwr-latn-au",
			www: "www-latn-cm",
			wxw: "wxw-latn-au",
			wyb: "wyb-latn-au",
			wyi: "wyi-latn-au",
			wym: "wym-latn-pl",
			wyn: "wyn-latn-us",
			wyr: "wyr-latn-br",
			wyy: "wyy-latn-fj",
			xaa: "xaa-latn-es",
			xab: "xab-latn-ng",
			xai: "xai-latn-br",
			xaj: "xaj-latn-br",
			xak: "xak-latn-ve",
			xal: "xal-cyrl-ru",
			xam: "xam-latn-za",
			xan: "xan-ethi-et",
			xao: "xao-latn-vn",
			xar: "xar-latn-pg",
			xas: "xas-cyrl-ru",
			xat: "xat-latn-br",
			xau: "xau-latn-id",
			xav: "xav-latn-br",
			xaw: "xaw-latn-us",
			xay: "xay-latn-id",
			xbb: "xbb-latn-au",
			xbd: "xbd-latn-au",
			xbe: "xbe-latn-au",
			xbg: "xbg-latn-au",
			xbi: "xbi-latn-zz",
			xbj: "xbj-latn-au",
			xbm: "xbm-latn-fr",
			xbn: "xbn-latn-my",
			xbp: "xbp-latn-au",
			xbr: "xbr-latn-id",
			xbw: "xbw-latn-br",
			xby: "xby-latn-au",
			xch: "xch-latn-us",
			xco: "xco-chrs-uz",
			xcr: "xcr-cari-tr",
			xda: "xda-latn-au",
			xdk: "xdk-latn-au",
			xdo: "xdo-latn-ao",
			xdq: "xdq-cyrl-ru",
			xdy: "xdy-latn-id",
			xed: "xed-latn-cm",
			xeg: "xeg-latn-za",
			xem: "xem-latn-id",
			xer: "xer-latn-br",
			xes: "xes-latn-zz",
			xet: "xet-latn-br",
			xeu: "xeu-latn-pg",
			xgb: "xgb-latn-ci",
			xgd: "xgd-latn-au",
			xgg: "xgg-latn-au",
			xgi: "xgi-latn-au",
			xgm: "xgm-latn-au",
			xgu: "xgu-latn-au",
			xgw: "xgw-latn-au",
			xh: "xh-latn-za",
			xhe: "xhe-arab-pk",
			xhm: "xhm-khmr-kh",
			xhv: "xhv-latn-vn",
			xii: "xii-latn-za",
			xin: "xin-latn-gt",
			xir: "xir-latn-br",
			xis: "xis-orya-in",
			xiy: "xiy-latn-br",
			xjb: "xjb-latn-au",
			xjt: "xjt-latn-au",
			xka: "xka-arab-pk",
			xkb: "xkb-latn-bj",
			xkc: "xkc-arab-ir",
			xkd: "xkd-latn-id",
			xke: "xke-latn-id",
			xkg: "xkg-latn-ml",
			xkj: "xkj-arab-ir",
			xkl: "xkl-latn-id",
			xkn: "xkn-latn-id",
			xkp: "xkp-arab-ir",
			xkq: "xkq-latn-id",
			xkr: "xkr-latn-br",
			xks: "xks-latn-id",
			xkt: "xkt-latn-gh",
			xku: "xku-latn-cg",
			xkv: "xkv-latn-bw",
			xkw: "xkw-latn-id",
			xkx: "xkx-latn-pg",
			xky: "xky-latn-my",
			xkz: "xkz-latn-bt",
			xla: "xla-latn-zz",
			xlc: "xlc-lyci-tr",
			xld: "xld-lydi-tr",
			xly: "xly-elym-ir",
			xma: "xma-latn-so",
			xmb: "xmb-latn-cm",
			xmc: "xmc-latn-mz",
			xmd: "xmd-latn-cm",
			xmf: "xmf-geor-ge",
			xmg: "xmg-latn-cm",
			xmh: "xmh-latn-au",
			xmj: "xmj-latn-cm",
			xmm: "xmm-latn-id",
			xmn: "xmn-mani-cn",
			xmo: "xmo-latn-br",
			xmp: "xmp-latn-au",
			xmq: "xmq-latn-au",
			xmr: "xmr-merc-sd",
			xmt: "xmt-latn-id",
			xmu: "xmu-latn-au",
			xmv: "xmv-latn-mg",
			xmw: "xmw-latn-mg",
			xmx: "xmx-latn-id",
			xmy: "xmy-latn-au",
			xmz: "xmz-latn-id",
			xna: "xna-narb-sa",
			xnb: "xnb-latn-tw",
			xni: "xni-latn-au",
			xnj: "xnj-latn-tz",
			xnk: "xnk-latn-au",
			xnm: "xnm-latn-au",
			xnn: "xnn-latn-ph",
			xnq: "xnq-latn-mz",
			xnr: "xnr-deva-in",
			xnt: "xnt-latn-us",
			xnu: "xnu-latn-au",
			xny: "xny-latn-au",
			xnz: "xnz-latn-eg",
			"xnz-arab": "xnz-arab-eg",
			xoc: "xoc-latn-ng",
			xod: "xod-latn-id",
			xog: "xog-latn-ug",
			xoi: "xoi-latn-pg",
			xok: "xok-latn-br",
			xom: "xom-latn-sd",
			"xom-ethi": "xom-ethi-et",
			xon: "xon-latn-zz",
			xoo: "xoo-latn-br",
			xop: "xop-latn-pg",
			xor: "xor-latn-br",
			xow: "xow-latn-pg",
			xpa: "xpa-latn-au",
			xpb: "xpb-latn-au",
			xpd: "xpd-latn-au",
			xpf: "xpf-latn-au",
			xpg: "xpg-grek-tr",
			xph: "xph-latn-au",
			xpi: "xpi-ogam-gb",
			xpj: "xpj-latn-au",
			xpk: "xpk-latn-br",
			xpl: "xpl-latn-au",
			xpm: "xpm-cyrl-ru",
			xpn: "xpn-latn-br",
			xpo: "xpo-latn-mx",
			xpq: "xpq-latn-us",
			xpr: "xpr-prti-ir",
			xpt: "xpt-latn-au",
			xpv: "xpv-latn-au",
			xpw: "xpw-latn-au",
			xpx: "xpx-latn-au",
			xpz: "xpz-latn-au",
			xra: "xra-latn-br",
			xrb: "xrb-latn-zz",
			xrd: "xrd-latn-au",
			xre: "xre-latn-br",
			xrg: "xrg-latn-au",
			xri: "xri-latn-br",
			xrm: "xrm-cyrl-ru",
			xrn: "xrn-cyrl-ru",
			xrr: "xrr-latn-it",
			xru: "xru-latn-au",
			xrw: "xrw-latn-pg",
			xsa: "xsa-sarb-ye",
			xsb: "xsb-latn-ph",
			xse: "xse-latn-id",
			xsh: "xsh-latn-ng",
			xsi: "xsi-latn-zz",
			xsm: "xsm-latn-zz",
			xsn: "xsn-latn-ng",
			xsp: "xsp-latn-pg",
			xsq: "xsq-latn-mz",
			xsr: "xsr-deva-np",
			xss: "xss-cyrl-ru",
			xsu: "xsu-latn-ve",
			xsy: "xsy-latn-tw",
			xta: "xta-latn-mx",
			xtb: "xtb-latn-mx",
			xtc: "xtc-latn-sd",
			xtd: "xtd-latn-mx",
			xte: "xte-latn-id",
			xth: "xth-latn-au",
			xti: "xti-latn-mx",
			xtj: "xtj-latn-mx",
			xtl: "xtl-latn-mx",
			xtm: "xtm-latn-mx",
			xtn: "xtn-latn-mx",
			xtp: "xtp-latn-mx",
			xts: "xts-latn-mx",
			xtt: "xtt-latn-mx",
			xtu: "xtu-latn-mx",
			xtv: "xtv-latn-au",
			xtw: "xtw-latn-br",
			xty: "xty-latn-mx",
			xub: "xub-taml-in",
			"xub-knda": "xub-knda-in",
			"xub-mlym": "xub-mlym-in",
			xud: "xud-latn-au",
			xuj: "xuj-taml-in",
			xul: "xul-latn-au",
			xum: "xum-latn-it",
			"xum-ital": "xum-ital-it",
			xun: "xun-latn-au",
			xuo: "xuo-latn-td",
			xut: "xut-latn-au",
			xuu: "xuu-latn-na",
			xve: "xve-ital-it",
			xvi: "xvi-arab-af",
			xvn: "xvn-latn-es",
			xvo: "xvo-latn-it",
			xvs: "xvs-latn-it",
			xwa: "xwa-latn-br",
			xwd: "xwd-latn-au",
			xwe: "xwe-latn-zz",
			xwj: "xwj-latn-au",
			xwk: "xwk-latn-au",
			xwl: "xwl-latn-bj",
			xwo: "xwo-cyrl-ru",
			xwr: "xwr-latn-id",
			xwt: "xwt-latn-au",
			xww: "xww-latn-au",
			xxb: "xxb-latn-gh",
			xxk: "xxk-latn-id",
			xxm: "xxm-latn-au",
			xxr: "xxr-latn-br",
			xxt: "xxt-latn-id",
			xya: "xya-latn-au",
			xyb: "xyb-latn-au",
			xyj: "xyj-latn-au",
			xyk: "xyk-latn-au",
			xyl: "xyl-latn-br",
			xyt: "xyt-latn-au",
			xyy: "xyy-latn-au",
			xzh: "xzh-marc-cn",
			xzp: "xzp-latn-mx",
			yaa: "yaa-latn-pe",
			yab: "yab-latn-br",
			yac: "yac-latn-id",
			yad: "yad-latn-pe",
			yae: "yae-latn-ve",
			yaf: "yaf-latn-cd",
			yag: "yag-latn-cl",
			yai: "yai-cyrl-tj",
			yaj: "yaj-latn-cf",
			yak: "yak-latn-us",
			yal: "yal-latn-gn",
			"yal-arab": "yal-arab-gn",
			yam: "yam-latn-zz",
			yan: "yan-latn-ni",
			yao: "yao-latn-mz",
			yap: "yap-latn-fm",
			yaq: "yaq-latn-mx",
			yar: "yar-latn-ve",
			yas: "yas-latn-zz",
			yat: "yat-latn-zz",
			yau: "yau-latn-ve",
			yav: "yav-latn-cm",
			yaw: "yaw-latn-br",
			yax: "yax-latn-ao",
			yay: "yay-latn-zz",
			yaz: "yaz-latn-zz",
			yba: "yba-latn-zz",
			ybb: "ybb-latn-cm",
			ybe: "ybe-latn-cn",
			"ybe-ougr": "ybe-ougr-cn",
			ybh: "ybh-deva-np",
			ybi: "ybi-deva-np",
			ybj: "ybj-latn-ng",
			ybl: "ybl-latn-ng",
			ybm: "ybm-latn-pg",
			ybn: "ybn-latn-br",
			ybo: "ybo-latn-pg",
			ybx: "ybx-latn-pg",
			yby: "yby-latn-zz",
			ycl: "ycl-latn-cn",
			ycn: "ycn-latn-co",
			yda: "yda-latn-au",
			yde: "yde-latn-pg",
			ydg: "ydg-arab-pk",
			ydk: "ydk-latn-pg",
			yea: "yea-mlym-in",
			"yea-knda": "yea-knda-in",
			yec: "yec-latn-de",
			yee: "yee-latn-pg",
			yei: "yei-latn-cm",
			yej: "yej-grek-il",
			yel: "yel-latn-cd",
			yer: "yer-latn-zz",
			yes: "yes-latn-ng",
			yet: "yet-latn-id",
			yeu: "yeu-telu-in",
			yev: "yev-latn-pg",
			yey: "yey-latn-bw",
			yga: "yga-latn-au",
			ygi: "ygi-latn-au",
			ygl: "ygl-latn-pg",
			ygm: "ygm-latn-pg",
			ygp: "ygp-plrd-cn",
			ygr: "ygr-latn-zz",
			ygu: "ygu-latn-au",
			ygw: "ygw-latn-zz",
			yhd: "yhd-hebr-il",
			yi: "yi-hebr-001",
			yia: "yia-latn-au",
			yig: "yig-yiii-cn",
			yih: "yih-hebr-de",
			yii: "yii-latn-au",
			yij: "yij-latn-au",
			yil: "yil-latn-au",
			yim: "yim-latn-in",
			yir: "yir-latn-id",
			yis: "yis-latn-pg",
			yiv: "yiv-yiii-cn",
			yka: "yka-latn-ph",
			"yka-arab": "yka-arab-ph",
			ykg: "ykg-cyrl-ru",
			yki: "yki-latn-id",
			ykk: "ykk-latn-pg",
			ykm: "ykm-latn-pg",
			yko: "yko-latn-zz",
			ykr: "ykr-latn-pg",
			yky: "yky-latn-cf",
			yla: "yla-latn-pg",
			ylb: "ylb-latn-pg",
			yle: "yle-latn-zz",
			ylg: "ylg-latn-zz",
			yli: "yli-latn-id",
			yll: "yll-latn-zz",
			ylr: "ylr-latn-au",
			ylu: "ylu-latn-pg",
			yly: "yly-latn-nc",
			ymb: "ymb-latn-pg",
			yme: "yme-latn-pe",
			ymg: "ymg-latn-cd",
			ymk: "ymk-latn-mz",
			"ymk-arab": "ymk-arab-mz",
			yml: "yml-latn-zz",
			ymm: "ymm-latn-so",
			ymn: "ymn-latn-id",
			ymo: "ymo-latn-pg",
			ymp: "ymp-latn-pg",
			yna: "yna-plrd-cn",
			ynd: "ynd-latn-au",
			yng: "yng-latn-cd",
			ynk: "ynk-cyrl-ru",
			ynl: "ynl-latn-pg",
			ynq: "ynq-latn-ng",
			yns: "yns-latn-cd",
			ynu: "ynu-latn-co",
			yo: "yo-latn-ng",
			yob: "yob-latn-pg",
			yog: "yog-latn-ph",
			yoi: "yoi-jpan-jp",
			yok: "yok-latn-us",
			yol: "yol-latn-gb",
			yom: "yom-latn-cd",
			yon: "yon-latn-zz",
			yot: "yot-latn-ng",
			yoy: "yoy-thai-th",
			yra: "yra-latn-pg",
			yrb: "yrb-latn-zz",
			yre: "yre-latn-zz",
			yrk: "yrk-cyrl-ru",
			yrl: "yrl-latn-br",
			yrm: "yrm-latn-au",
			yro: "yro-latn-br",
			yrs: "yrs-latn-id",
			yrw: "yrw-latn-pg",
			yry: "yry-latn-au",
			ysd: "ysd-yiii-cn",
			ysn: "ysn-yiii-cn",
			ysp: "ysp-yiii-cn",
			ysr: "ysr-cyrl-ru",
			yss: "yss-latn-zz",
			ysy: "ysy-plrd-cn",
			ytw: "ytw-latn-pg",
			yty: "yty-latn-au",
			yua: "yua-latn-mx",
			yub: "yub-latn-au",
			yuc: "yuc-latn-us",
			yud: "yud-hebr-il",
			yue: "yue-hant-hk",
			"yue-cn": "yue-hans-cn",
			"yue-hans": "yue-hans-cn",
			yuf: "yuf-latn-us",
			yug: "yug-cyrl-ru",
			yui: "yui-latn-co",
			yuj: "yuj-latn-zz",
			yul: "yul-latn-cf",
			yum: "yum-latn-us",
			yun: "yun-latn-ng",
			yup: "yup-latn-co",
			yuq: "yuq-latn-bo",
			yur: "yur-latn-us",
			yut: "yut-latn-zz",
			yuw: "yuw-latn-zz",
			yux: "yux-cyrl-ru",
			yuz: "yuz-latn-bo",
			yva: "yva-latn-id",
			yvt: "yvt-latn-ve",
			ywa: "ywa-latn-pg",
			ywg: "ywg-latn-au",
			ywn: "ywn-latn-br",
			ywq: "ywq-plrd-cn",
			"ywq-yiii": "ywq-yiii-cn",
			ywr: "ywr-latn-au",
			ywu: "ywu-plrd-cn",
			"ywu-yiii": "ywu-yiii-cn",
			yww: "yww-latn-au",
			yxa: "yxa-latn-au",
			yxg: "yxg-latn-au",
			yxl: "yxl-latn-au",
			yxm: "yxm-latn-au",
			yxu: "yxu-latn-au",
			yxy: "yxy-latn-au",
			yyr: "yyr-latn-au",
			yyu: "yyu-latn-pg",
			za: "za-latn-cn",
			zaa: "zaa-latn-mx",
			zab: "zab-latn-mx",
			zac: "zac-latn-mx",
			zad: "zad-latn-mx",
			zae: "zae-latn-mx",
			zaf: "zaf-latn-mx",
			zag: "zag-latn-sd",
			zah: "zah-latn-ng",
			zaj: "zaj-latn-tz",
			zak: "zak-latn-tz",
			zam: "zam-latn-mx",
			zao: "zao-latn-mx",
			zap: "zap-latn-mx",
			zaq: "zaq-latn-mx",
			zar: "zar-latn-mx",
			zas: "zas-latn-mx",
			zat: "zat-latn-mx",
			zau: "zau-tibt-in",
			"zau-arab": "zau-arab-in",
			zav: "zav-latn-mx",
			zaw: "zaw-latn-mx",
			zax: "zax-latn-mx",
			zay: "zay-latn-et",
			"zay-ethi": "zay-ethi-et",
			zaz: "zaz-latn-ng",
			zba: "zba-arab-001",
			zbc: "zbc-latn-my",
			zbe: "zbe-latn-my",
			zbt: "zbt-latn-id",
			zbu: "zbu-latn-ng",
			zbw: "zbw-latn-my",
			zca: "zca-latn-mx",
			zch: "zch-hani-cn",
			zdj: "zdj-arab-km",
			zea: "zea-latn-nl",
			zeg: "zeg-latn-pg",
			zeh: "zeh-hani-cn",
			zen: "zen-tfng-mr",
			"zen-arab": "zen-arab-mr",
			zga: "zga-latn-tz",
			zgb: "zgb-hani-cn",
			zgh: "zgh-tfng-ma",
			zgm: "zgm-hani-cn",
			zgn: "zgn-hani-cn",
			zgr: "zgr-latn-pg",
			zh: "zh-hans-cn",
			"zh-au": "zh-hant-au",
			"zh-bn": "zh-hant-bn",
			"zh-bopo": "zh-bopo-tw",
			"zh-gb": "zh-hant-gb",
			"zh-gf": "zh-hant-gf",
			"zh-hanb": "zh-hanb-tw",
			"zh-hant": "zh-hant-tw",
			"zh-hk": "zh-hant-hk",
			"zh-id": "zh-hant-id",
			"zh-mo": "zh-hant-mo",
			"zh-pa": "zh-hant-pa",
			"zh-pf": "zh-hant-pf",
			"zh-ph": "zh-hant-ph",
			"zh-sr": "zh-hant-sr",
			"zh-th": "zh-hant-th",
			"zh-tw": "zh-hant-tw",
			"zh-us": "zh-hant-us",
			"zh-vn": "zh-hant-vn",
			zhd: "zhd-hani-cn",
			"zhd-latn": "zhd-latn-vn",
			zhi: "zhi-latn-ng",
			zhn: "zhn-latn-cn",
			"zhn-hani": "zhn-hani-cn",
			zhw: "zhw-latn-cm",
			zhx: "zhx-nshu-cn",
			zia: "zia-latn-zz",
			zik: "zik-latn-pg",
			zil: "zil-latn-gn",
			zim: "zim-latn-td",
			zin: "zin-latn-tz",
			ziw: "ziw-latn-tz",
			ziz: "ziz-latn-ng",
			zka: "zka-latn-id",
			zkb: "zkb-cyrl-ru",
			zkd: "zkd-latn-mm",
			zko: "zko-cyrl-ru",
			zkp: "zkp-latn-br",
			zkt: "zkt-kits-cn",
			zku: "zku-latn-au",
			zkz: "zkz-cyrl-ru",
			zla: "zla-latn-cd",
			zlj: "zlj-hani-cn",
			"zlj-latn": "zlj-latn-cn",
			zlm: "zlm-latn-tg",
			zln: "zln-hani-cn",
			zlq: "zlq-hani-cn",
			zma: "zma-latn-au",
			zmb: "zmb-latn-cd",
			zmc: "zmc-latn-au",
			zmd: "zmd-latn-au",
			zme: "zme-latn-au",
			zmf: "zmf-latn-cd",
			zmg: "zmg-latn-au",
			zmh: "zmh-latn-pg",
			zmi: "zmi-latn-my",
			zmj: "zmj-latn-au",
			zmk: "zmk-latn-au",
			zml: "zml-latn-au",
			zmm: "zmm-latn-au",
			zmn: "zmn-latn-ga",
			zmo: "zmo-latn-sd",
			zmp: "zmp-latn-cd",
			zmq: "zmq-latn-cd",
			zmr: "zmr-latn-au",
			zms: "zms-latn-cd",
			zmt: "zmt-latn-au",
			zmu: "zmu-latn-au",
			zmv: "zmv-latn-au",
			zmw: "zmw-latn-cd",
			zmx: "zmx-latn-cg",
			zmy: "zmy-latn-au",
			zmz: "zmz-latn-cd",
			zna: "zna-latn-td",
			zne: "zne-latn-zz",
			zng: "zng-latn-vn",
			znk: "znk-latn-au",
			zns: "zns-latn-ng",
			zoc: "zoc-latn-mx",
			zoh: "zoh-latn-mx",
			zom: "zom-latn-in",
			zoo: "zoo-latn-mx",
			zoq: "zoq-latn-mx",
			zor: "zor-latn-mx",
			zos: "zos-latn-mx",
			zpa: "zpa-latn-mx",
			zpb: "zpb-latn-mx",
			zpc: "zpc-latn-mx",
			zpd: "zpd-latn-mx",
			zpe: "zpe-latn-mx",
			zpf: "zpf-latn-mx",
			zpg: "zpg-latn-mx",
			zph: "zph-latn-mx",
			zpi: "zpi-latn-mx",
			zpj: "zpj-latn-mx",
			zpk: "zpk-latn-mx",
			zpl: "zpl-latn-mx",
			zpm: "zpm-latn-mx",
			zpn: "zpn-latn-mx",
			zpo: "zpo-latn-mx",
			zpp: "zpp-latn-mx",
			zpq: "zpq-latn-mx",
			zpr: "zpr-latn-mx",
			zps: "zps-latn-mx",
			zpt: "zpt-latn-mx",
			zpu: "zpu-latn-mx",
			zpv: "zpv-latn-mx",
			zpw: "zpw-latn-mx",
			zpx: "zpx-latn-mx",
			zpy: "zpy-latn-mx",
			zpz: "zpz-latn-mx",
			zqe: "zqe-hani-cn",
			"zqe-latn": "zqe-latn-cn",
			zrn: "zrn-latn-td",
			zro: "zro-latn-ec",
			zrp: "zrp-hebr-fr",
			zrs: "zrs-latn-id",
			zsa: "zsa-latn-pg",
			zsr: "zsr-latn-mx",
			zsu: "zsu-latn-pg",
			zte: "zte-latn-mx",
			ztg: "ztg-latn-mx",
			ztl: "ztl-latn-mx",
			ztm: "ztm-latn-mx",
			ztn: "ztn-latn-mx",
			ztp: "ztp-latn-mx",
			ztq: "ztq-latn-mx",
			zts: "zts-latn-mx",
			ztt: "ztt-latn-mx",
			ztu: "ztu-latn-mx",
			ztx: "ztx-latn-mx",
			zty: "zty-latn-mx",
			zu: "zu-latn-za",
			zua: "zua-latn-ng",
			zuh: "zuh-latn-pg",
			zum: "zum-arab-om",
			zun: "zun-latn-us",
			zuy: "zuy-latn-cm",
			zyg: "zyg-hani-cn",
			zyj: "zyj-latn-cn",
			"zyj-hani": "zyj-hani-cn",
			zyn: "zyn-hani-cn",
			zyp: "zyp-latn-mm",
			zza: "zza-latn-tr",
			zzj: "zzj-hani-cn"
		}, nr = {}.hasOwnProperty;
		function ar(t$2) {
			const { language: e$2, script: n$2, region: a$1 } = t$2;
			let r$2;
			var i$2, l$2;
			return n$2 && a$1 && (r$2 = er[qa({
				language: e$2,
				script: n$2,
				region: a$1
			})]) ? (t$2.script = void 0, t$2.region = void 0) : n$2 && (r$2 = er[qa({
				language: e$2,
				script: n$2
			})]) ? t$2.script = void 0 : a$1 && (r$2 = er[qa({
				language: e$2,
				region: a$1
			})]) ? t$2.region = void 0 : e$2 && (r$2 = er[e$2]), r$2 && (t$2.language = void 0, i$2 = t$2, l$2 = Wa(r$2), i$2.language || (i$2.language = l$2.language), i$2.script || (i$2.script = l$2.script), i$2.region || (i$2.region = l$2.region), l$2.variants && i$2.variants.push(...l$2.variants)), qa(t$2);
		}
		function rr(t$2, e$2) {
			const n$2 = e$2 || {}, a$1 = Wa(String(t$2 || "").toLowerCase(), n$2), r$2 = qa(a$1);
			if (!r$2) return r$2;
			let i$2 = -1;
			for (; ++i$2 < Za.length;) {
				let t$3 = Za[i$2].from;
				"und-" === t$3.slice(0, 4) && a$1.language && (t$3 = a$1.language + t$3.slice(3)), Xa(r$2, t$3).length > 0 && ir(a$1, t$3, Za[i$2].to);
			}
			for (i$2 = -1; ++i$2 < Ja.length;) lr(a$1, Ja[i$2].from.field, Ja[i$2].from.value) && or(a$1, Ja[i$2].to.field, Ja[i$2].to.value);
			if (function(t$3) {
				ar(t$3);
				const { language: e$3, script: n$3, region: a$2 } = t$3;
				if (!e$3) return t$3;
				const r$3 = qa({
					language: e$3,
					script: n$3,
					region: a$2
				});
				r$3 === ar(Wa(e$3)) ? (t$3.script = void 0, t$3.region = void 0) : a$2 && r$3 === ar(Wa(e$3 + "-" + a$2)) ? t$3.script = void 0 : n$3 && r$3 === ar(Wa(e$3 + "-" + n$3)) && (t$3.region = void 0);
			}(a$1), a$1.variants.sort(), a$1.extensions.sort(sr), n$2.warning) {
				let t$3;
				for (t$3 in tr) if (nr.call(tr, t$3)) {
					const e$3 = tr[t$3], r$3 = a$1[t$3];
					if (r$3 && nr.call(e$3, r$3)) {
						const a$2 = e$3[r$3];
						n$2.warning("Deprecated " + t$3 + " `" + r$3 + "`, expected one of `" + a$2.join("`, `") + "`", -1, 7);
					}
				}
			}
			return a$1.script && (a$1.script = a$1.script.charAt(0).toUpperCase() + a$1.script.slice(1)), a$1.region && (a$1.region = a$1.region.toUpperCase()), qa(a$1);
		}
		function ir(t$2, e$2, n$2) {
			const a$1 = Wa(e$2), r$2 = Wa(n$2), i$2 = [], l$2 = a$1.language;
			let o$2;
			for (o$2 in a$1) if (nr.call(a$1, o$2)) {
				const e$3 = a$1[o$2];
				e$3 && lr(t$2, o$2, e$3) && i$2.push(o$2);
			}
			for (o$2 in r$2) if (nr.call(r$2, o$2)) {
				const e$3 = r$2[o$2];
				l$2 && e$3 && (i$2.includes(o$2) || !t$2[o$2]) && or(t$2, o$2, "language" === o$2 && "und" === e$3 ? l$2 : e$3);
			}
		}
		function lr(t$2, e$2, n$2) {
			let a$1, r$2 = !1;
			if (n$2) {
				const i$2 = t$2[e$2];
				if (a$1 = i$2, Array.isArray(i$2)) {
					a$1 = [];
					let t$3 = -1;
					for (; ++t$3 < i$2.length;) {
						const e$3 = i$2[t$3];
						n$2.includes(e$3) ? r$2 = !0 : a$1.push(e$3);
					}
				} else i$2 === n$2 && (a$1 = null, r$2 = !0);
				t$2[e$2] = a$1;
			}
			return r$2;
		}
		function or(t$2, e$2, n$2) {
			const a$1 = t$2[e$2];
			if (Array.isArray(a$1)) {
				const t$3 = Array.isArray(n$2) ? n$2 : [n$2];
				let e$3 = -1;
				for (; ++e$3 < t$3.length;) {
					const n$3 = t$3[e$3];
					a$1.includes(n$3) || a$1.push(n$3);
				}
			} else t$2[e$2] = n$2;
		}
		function sr(t$2, e$2) {
			return t$2.singleton > e$2.singleton ? 1 : t$2.singleton < e$2.singleton ? -1 : 0;
		}
		const ur = {
			0: void 0,
			1: 1,
			2: 2,
			3: 3,
			4: 4,
			5: 5,
			6: 5,
			7: 7,
			8: 2,
			9: 3,
			10: 4,
			11: 6,
			12: 7,
			13: 22,
			14: 7,
			15: 10,
			16: 9,
			17: 11,
			18: 13,
			19: 11,
			20: 13
		};
		function dr(t$2) {
			return 0 == t$2 ? 0 : t$2.toString(2).match(/1/g).length;
		}
		function cr(t$2, e$2) {
			let n$2, a$1 = parseInt("0x" + t$2, 16), r$2 = a$1 & e$2[0], i$2 = a$1 & e$2[1];
			return n$2 = dr(r$2) + 2 * dr(i$2), n$2;
		}
		function fr() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2;
			function g$2(t$3) {
				if (!(t$3 && t$3.currentRepresentation && t$3.currentRepresentation.mediaInfo && t$3.currentRepresentation.mediaInfo.type)) return;
				const e$3 = t$3.currentRepresentation.mediaInfo.type;
				s$1[e$3] = t$3.currentRepresentation;
			}
			function m$2(t$3, e$3) {
				return t$3 && r$2[e$3] && r$2[e$3][t$3] ? r$2[e$3][t$3].list : [];
			}
			function h$2(t$3, e$3) {
				return t$3 && r$2[e$3] && r$2[e$3][t$3] ? r$2[e$3][t$3].current : null;
			}
			function p$2(t$3) {
				let n$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
				if (!t$3 || !t$3.streamInfo) return;
				const a$2 = t$3.type, l$3 = t$3.streamInfo.id, s$2 = h$2(a$2, l$3);
				if (r$2[l$3] && r$2[l$3][a$2] && (r$2[l$3][a$2].current = t$3, r$2[l$3][a$2].current && (a$2 !== S$1.default.TEXT && !E$2(t$3, s$2) || a$2 === S$1.default.TEXT && t$3.isFragmented) && e$2.trigger(R.default.CURRENT_TRACK_CHANGED, {
					oldMediaInfo: s$2,
					newMediaInfo: t$3,
					switchMode: i$2.get().streaming.trackSwitchMode[a$2],
					options: n$3
				}, { streamId: l$3 }), !n$3.hasOwnProperty("noSettingsSave") || !n$3.noSettingsSave)) {
					let e$3 = function(t$4) {
						const e$4 = {
							lang: t$4.lang,
							viewpoint: t$4.viewpoint,
							roles: t$4.roles,
							accessibility: t$4.accessibility,
							audioChannelConfiguration: t$4.audioChannelConfiguration,
							codec: t$4.codec
						};
						return e$4.lang || e$4.viewpoint || e$4.role && e$4.role.length > 0 || e$4.accessibility && e$4.accessibility.length > 0 || e$4.audioChannelConfiguration && e$4.audioChannelConfiguration.length > 0 ? e$4 : null;
					}(t$3);
					if (!e$3 || !r$2[l$3][a$2].storeLastSettings) return;
					e$3.roles && (e$3.role = e$3.roles[0], delete e$3.roles), e$3.accessibility && (e$3.accessibility = e$3.accessibility[0]), e$3.audioChannelConfiguration && (e$3.audioChannelConfiguration = e$3.audioChannelConfiguration[0]), o$2[a$2] = e$3, f$2.setSavedMediaSettings(a$2, e$3);
				}
			}
			function b$2(t$3, e$3) {
				t$3 && e$3 && (l$2[t$3] = e$3);
			}
			function y$2(t$3) {
				return t$3 ? l$2[t$3] : null;
			}
			function E$2(t$3, e$3) {
				if (!t$3 && !e$3) return !0;
				if (!t$3 || !e$3) return !1;
				const n$3 = t$3.id === e$3.id, a$2 = JSON.stringify(t$3.viewpoint) === JSON.stringify(e$3.viewpoint), r$3 = t$3.lang === e$3.lang, i$3 = t$3.codec === e$3.codec, l$3 = JSON.stringify(t$3.roles) === JSON.stringify(e$3.roles), o$3 = JSON.stringify(t$3.accessibility) === JSON.stringify(e$3.accessibility), s$2 = JSON.stringify(t$3.audioChannelConfiguration) === JSON.stringify(e$3.audioChannelConfiguration);
				return n$3 && i$3 && a$2 && r$3 && l$3 && o$3 && s$2;
			}
			function _$2() {
				r$2 = {}, o$2 = {}, s$1 = {}, l$2 = {
					audio: null,
					video: null,
					text: null
				}, e$2.off(D.default.REPRESENTATION_SWITCH, g$2, n$2);
			}
			function T$2(t$3, e$3, n$3) {
				let r$3 = [];
				return t$3.forEach((function(t$4) {
					e$3(n$3, t$4) && r$3.push(t$4);
				})), 0 !== r$3.length || e$3 === x$1 && i$2.get().streaming.assumeDefaultRoleAsMain && G$1(n$3.role, {
					schemeIdUri: S$1.default.DASH_ROLE_SCHEME_ID,
					value: I.default.MAIN
				}) && (a$1.info("no track with Role set to main - assuming main as default and searching again"), r$3 = T$2(t$3, M$1, null), 0 !== r$3.length) ? r$3 : (a$1.info("Filter-Function (" + e$3.name + ") resulted in no tracks; setting ignored"), t$3);
			}
			function v$2(t$3, e$3) {
				try {
					return !t$3.lang || t$3.lang instanceof RegExp ? e$3.lang.match(t$3.lang) : "" !== e$3.lang && Xa(e$3.lang, rr(t$3.lang)).length > 0;
				} catch (t$4) {
					return !1;
				}
			}
			function w$2(t$3, e$3) {
				return void 0 === t$3.index || null === t$3.index || e$3.index === t$3.index;
			}
			function k$1(t$3, e$3) {
				return void 0 === t$3.id || null === t$3.id || e$3.id === t$3.id;
			}
			function N$1(t$3, e$3) {
				return !t$3.viewpoint || !!e$3.viewpoint.filter((function(e$4) {
					return G$1(e$4, t$3.viewpoint);
				}))[0];
			}
			function x$1(t$3, e$3) {
				let n$3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
				return !!e$3.roles && (!t$3.role || !!e$3.roles.filter((function(e$4) {
					return G$1(e$4, t$3.role);
				}))[0] || e$3.type === S$1.default.AUDIO && n$3);
			}
			function M$1(t$3, e$3) {
				return !e$3.roles || 0 === e$3.roles.length;
			}
			function z$1(t$3, e$3) {
				let n$3;
				return n$3 = t$3.accessibility ? !!e$3.accessibility.filter((function(e$4) {
					return G$1(e$4, t$3.accessibility);
				}))[0] : !e$3.accessibility.length, n$3;
			}
			function O$1(t$3, e$3) {
				return !t$3.audioChannelConfiguration || !!e$3.audioChannelConfiguration.filter((function(e$4) {
					return G$1(e$4, t$3.audioChannelConfiguration);
				}))[0];
			}
			function P$1(t$3, e$3) {
				return !t$3.codec || t$3.codec === e$3.codec;
			}
			function L$1(t$3) {
				let e$3 = 0, n$3 = [];
				return t$3.forEach(((t$4) => {
					isNaN(t$4.selectionPriority) || (t$4.selectionPriority > e$3 ? (e$3 = t$4.selectionPriority, n$3 = [t$4]) : t$4.selectionPriority === e$3 && n$3.push(t$4));
				})), n$3;
			}
			function F$1(t$3) {
				let e$3, n$3 = 0, a$2 = [];
				return t$3.forEach((function(t$4) {
					e$3 = Math.max.apply(Math, t$4.bitrateList.map((function(t$5) {
						return t$5.bandwidth;
					}))), e$3 > n$3 ? (n$3 = e$3, a$2 = [t$4]) : e$3 === n$3 && a$2.push(t$4);
				})), a$2;
			}
			function U$1(t$3) {
				return t$3[0] && t$3[0].type === S$1.default.VIDEO ? function(t$4) {
					let e$3, n$3 = Infinity, a$2 = [];
					return t$4.forEach((function(t$5) {
						e$3 = t$5.bitrateList.reduce((function(t$6, e$4) {
							const n$4 = Math.max(1, e$4.width * e$4.height);
							return t$6 + e$4.bandwidth / n$4;
						}), 0) / t$5.bitrateList.length, e$3 < n$3 ? (n$3 = e$3, a$2 = [t$5]) : e$3 === n$3 && a$2.push(t$5);
					})), a$2;
				}(t$3) : t$3[0] && t$3[0].type === S$1.default.AUDIO ? function(t$4) {
					let e$3 = Infinity, n$3 = [];
					return t$4.forEach((function(t$5) {
						let a$2 = t$5.audioChannelConfiguration.reduce((function(t$6, e$4) {
							return t$6 + (function(t$7) {
								let e$5;
								if (!t$7 || !t$7.schemeIdUri || !t$7.value) return;
								const n$4 = t$7.schemeIdUri, a$3 = t$7.value;
								return "urn:mpeg:dash:23003:3:audio_channel_configuration:2011" === n$4 || "urn:mpeg:mpegB:cicp:ChannelConfiguration" === n$4 ? e$5 = ur[a$3] : "tag:dolby.com,2014:dash:audio_channel_configuration:2011" === n$4 ? e$5 = function(t$8) {
									if (4 === t$8.length) return cr(t$8, [63880, 1648]);
								}(a$3) : "tag:dolby.com,2015:dash:audio_channel_configuration:2015" === n$4 ? e$5 = function(t$8) {
									if (6 === t$8.length) return "800000" === t$8 ? 24 : cr(t$8, [56834, 205245]);
								}(a$3) : "tag:dts.com,2014:dash:audio_channel_configuration:2012" === n$4 ? e$5 = parseInt(a$3) : "tag:dts.com,2018:uhd:audio_channel_configuration" === n$4 && (e$5 = function(t$8) {
									if (!(t$8.length > 8)) return cr(t$8, [4294901727, 0]);
								}(a$3)), e$5;
							}(e$4) || 0);
						}), 0) / t$5.audioChannelConfiguration.length;
						t$5.hasOwnProperty("supplementalProperties") && t$5.supplementalProperties.some(((t$6) => "tag:dolby.com,2018:dash:EC3_ExtensionType:2018" === t$6.schemeIdUri && "JOC" === t$6.value)) && (a$2 = 16), a$2 || (a$2 = 1);
						let r$3 = t$5.bitrateList.reduce((function(t$6, e$4) {
							return t$6 + e$4.bandwidth / a$2;
						}), 0) / t$5.bitrateList.length;
						r$3 < e$3 ? (e$3 = r$3, n$3 = [t$5]) : r$3 === e$3 && n$3.push(t$5);
					})), n$3;
				}(t$3) : t$3;
			}
			function j$1(t$3) {
				let e$3, n$3 = 0, a$2 = [];
				return t$3.forEach((function(t$4) {
					e$3 = t$4.representationCount, e$3 > n$3 ? (n$3 = e$3, a$2 = [t$4]) : e$3 === n$3 && a$2.push(t$4);
				})), a$2;
			}
			function q$1(t$3, e$3) {
				if (t$3 === S$1.default.TEXT) return function(t$4) {
					if (!t$4 || 0 === t$4.length) return null;
					const e$4 = t$4.filter(((t$5) => !(t$5 && t$5.roles && t$5.roles.length > 0) || t$5.roles.every(((t$6) => t$6.schemeIdUri !== S$1.default.DASH_ROLE_SCHEME_ID || t$6.value !== I.default.FORCED_SUBTITLE))));
					return e$4.length > 0 ? e$4[0] : t$4[0];
				}(e$3);
				let n$3;
				const r$3 = u$2.getCustomInitialTrackSelectionFunction();
				if (n$3 = function(t$4) {
					try {
						let e$4;
						return e$4 = function(t$5) {
							try {
								const e$5 = t$5.filter(((t$6) => {
									const e$6 = t$6.type;
									return t$6.bitrateList.some(((t$7) => {
										const n$4 = d$2.getAbrBitrateParameter("maxBitrate", e$6), a$2 = d$2.getAbrBitrateParameter("minBitrate", e$6);
										return !(n$4 > -1 && t$7.bandwidth > 1e3 * n$4 || a$2 > -1 && t$7.bandwidth < 1e3 * a$2);
									}));
								}));
								return e$5.length > 0 ? e$5 : t$5;
							} catch (e$5) {
								return a$1.error(e$5), t$5;
							}
						}(t$4), e$4 = function(t$5) {
							try {
								if (!i$2.get().streaming.abr.limitBitrateByPortal) return t$5;
								const { elementWidth: e$5 } = c$2.getVideoElementSize(), n$4 = t$5.filter(((t$6) => t$6.type !== S$1.default.VIDEO || t$6.bitrateList.some(((t$7) => t$7.width <= e$5))));
								return n$4.length > 0 ? n$4 : t$5;
							} catch (e$5) {
								return a$1.error(e$5), t$5;
							}
						}(e$4), e$4;
					} catch (e$4) {
						return a$1.error(e$4), t$4;
					}
				}(e$3), r$3 && "function" == typeof r$3) n$3 = r$3(n$3);
				else if (s$1[t$3]) n$3 = function(t$4, e$4) {
					if (!t$4 || 0 === t$4.length || !e$4 || !s$1[e$4]) return t$4;
					const n$4 = s$1[e$4].bandwidth;
					if (!n$4 || isNaN(n$4)) return t$4;
					let a$2 = {
						min: NaN,
						track: null
					};
					return t$4.forEach(((t$5) => {
						t$5.bitrateList.forEach(((e$5) => {
							const r$4 = Math.abs(e$5.bandwidth - n$4);
							(isNaN(a$2.min) || r$4 < a$2.min) && (a$2.min = r$4, a$2.track = t$5);
						}));
					})), a$2.track ? [a$2.track] : t$4;
				}(n$3, t$3);
				else if (i$2.get().streaming.ignoreSelectionPriority || (a$1.info("Trying to find track with highest selectionPriority"), n$3 = function(t$4) {
					return L$1(t$4);
				}(n$3)), n$3.length > 1 && i$2.get().streaming.prioritizeRoleMain && (a$1.info("Trying to find a main track"), n$3 = T$2(n$3, x$1, { role: {
					schemeIdUri: S$1.default.DASH_ROLE_SCHEME_ID,
					value: I.default.MAIN
				} })), n$3.length > 1) {
					a$1.info("Selecting track based on selectionModeForInitialTrack");
					let t$4 = i$2.get().streaming.selectionModeForInitialTrack;
					switch (t$4) {
						case S$1.default.TRACK_SELECTION_MODE_HIGHEST_BITRATE:
							n$3 = function(t$5) {
								let e$4 = F$1(t$5);
								return e$4.length > 1 && (e$4 = j$1(e$4)), e$4;
							}(n$3);
							break;
						case S$1.default.TRACK_SELECTION_MODE_FIRST_TRACK:
							n$3 = B$1(n$3);
							break;
						case S$1.default.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY:
							n$3 = function(t$5) {
								let e$4 = U$1(t$5);
								return e$4.length > 1 && (e$4 = F$1(e$4)), e$4;
							}(n$3);
							break;
						case S$1.default.TRACK_SELECTION_MODE_WIDEST_RANGE:
							n$3 = function(t$5) {
								let e$4 = j$1(t$5);
								return e$4.length > 1 && (e$4 = F$1(t$5)), e$4;
							}(n$3);
							break;
						default: a$1.warn(`Track selection mode ${t$4} is not supported. Falling back to TRACK_SELECTION_MODE_FIRST_TRACK`), n$3 = B$1(n$3);
					}
				}
				return n$3.length > 0 ? n$3[0] : e$3[0];
			}
			function B$1(t$3) {
				return t$3[0];
			}
			function G$1(t$3, e$3) {
				return !(!t$3 || !e$3) && JSON.stringify({
					schemeIdUri: t$3.schemeIdUri,
					value: t$3.value
				}) === JSON.stringify({
					schemeIdUri: e$3.schemeIdUri,
					value: e$3.value
				});
			}
			return n$2 = {
				addTrack: function(t$3) {
					if (!t$3) return;
					const e$3 = t$3.type;
					if ((n$3 = e$3) !== S$1.default.AUDIO && n$3 !== S$1.default.VIDEO && n$3 !== S$1.default.TEXT && n$3 !== S$1.default.IMAGE) return;
					var n$3;
					let a$2 = t$3.streamInfo.id;
					r$2[a$2] || (r$2[a$2] = function() {
						const t$4 = i$2.get().streaming.saveLastMediaSettingsForCurrentStreamingSession;
						return {
							audio: {
								list: [],
								storeLastSettings: t$4,
								current: null
							},
							video: {
								list: [],
								storeLastSettings: t$4,
								current: null
							},
							text: {
								list: [],
								storeLastSettings: t$4,
								current: null
							},
							image: {
								list: [],
								storeLastSettings: t$4,
								current: null
							}
						};
					}());
					const l$3 = r$2[a$2][e$3].list;
					for (let e$4 = 0, n$4 = l$3.length; e$4 < n$4; ++e$4) if (E$2(l$3[e$4], t$3)) return;
					l$3.push(t$3);
				},
				areTracksEqual: E$2,
				clearDataForStream: function(t$3) {
					r$2[t$3] && delete r$2[t$3];
				},
				getCurrentTrackFor: h$2,
				getInitialSettings: y$2,
				getTracksFor: m$2,
				getTracksWithHighestSelectionPriority: L$1,
				getTracksWithHighestBitrate: F$1,
				getTracksWithHighestEfficiency: U$1,
				getTracksWithWidestRange: j$1,
				initialize: function() {
					e$2.on(D.default.REPRESENTATION_SWITCH, g$2, n$2);
				},
				isCurrentTrack: function(t$3) {
					if (!t$3) return !1;
					const e$3 = t$3.type, n$3 = t$3.streamInfo.id;
					return r$2[n$3] && r$2[n$3][e$3] && E$2(r$2[n$3][e$3].current, t$3);
				},
				matchSettings: function(t$3, e$3) {
					let n$3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
					try {
						let a$2 = !1;
						if (t$3.lang) {
							if (t$3.lang instanceof RegExp) a$2 = e$3.lang.match(t$3.lang);
							else if ("" !== e$3.lang) {
								const n$4 = rr(t$3.lang);
								n$4 && (a$2 = Xa(e$3.lang, n$4).length > 0);
							}
						} else a$2 = !0;
						const r$3 = void 0 === t$3.index || null === t$3.index || e$3.index === t$3.index, i$3 = !t$3.viewpoint || !!e$3.viewpoint.filter((function(e$4) {
							return G$1(e$4, t$3.viewpoint);
						}))[0], l$3 = !t$3.role || !!e$3.roles.filter((function(e$4) {
							return G$1(e$4, t$3.role);
						}))[0];
						let o$3 = !t$3.accessibility || !!e$3.accessibility.filter((function(e$4) {
							return G$1(e$4, t$3.accessibility);
						}))[0], s$2 = !t$3.audioChannelConfiguration || !!e$3.audioChannelConfiguration.filter((function(e$4) {
							return G$1(e$4, t$3.audioChannelConfiguration);
						}))[0];
						return a$2 && r$3 && i$3 && (l$3 || e$3.type === S$1.default.AUDIO && n$3) && o$3 && s$2;
					} catch (t$4) {
						return !1;
					}
				},
				matchSettingsAccessibility: z$1,
				matchSettingsAudioChannelConfig: O$1,
				matchSettingsIndex: w$2,
				matchSettingsLang: v$2,
				matchSettingsRole: x$1,
				matchSettingsViewPoint: N$1,
				reset: _$2,
				saveTextSettingsDisabled: function() {
					f$2.setSavedMediaSettings(S$1.default.TEXT, null);
				},
				selectInitialTrack: q$1,
				setConfig: function(t$3) {
					t$3 && (t$3.domStorage && (f$2 = t$3.domStorage), t$3.settings && (i$2 = t$3.settings), t$3.customParametersModel && (u$2 = t$3.customParametersModel), t$3.mediaPlayerModel && (d$2 = t$3.mediaPlayerModel), t$3.videoModel && (c$2 = t$3.videoModel));
				},
				setInitialMediaSettingsForType: function(t$3, e$3) {
					let n$3 = o$2[t$3] || y$2(t$3);
					const r$3 = m$2(t$3, e$3.id);
					let i$3 = [];
					n$3 && 0 !== Object.keys(n$3).length || (n$3 = f$2.getSavedMediaSettings(t$3), n$3 && delete n$3.codec, b$2(t$3, n$3)), r$3 && 0 !== r$3.length && (n$3 && (i$3 = Array.from(r$3), a$1.info("Filtering " + i$3.length + " " + t$3 + " tracks based on settings"), i$3 = T$2(i$3, k$1, n$3), i$3 = T$2(i$3, v$2, n$3), i$3 = T$2(i$3, w$2, n$3), i$3 = T$2(i$3, N$1, n$3), t$3 === S$1.default.AUDIO && o$2[t$3] || (i$3 = T$2(i$3, x$1, n$3)), i$3 = T$2(i$3, z$1, n$3), i$3 = T$2(i$3, O$1, n$3), i$3 = T$2(i$3, P$1, n$3), a$1.info("Filtering " + t$3 + " tracks ended, found " + i$3.length + " matching track(s).")), 0 === i$3.length ? p$2(q$1(t$3, r$3)) : i$3.length > 1 ? p$2(q$1(t$3, i$3)) : p$2(i$3[0]));
				},
				setInitialSettings: b$2,
				setTrack: p$2
			}, a$1 = (0, C.default)(t$2).getInstance().getLogger(n$2), _$2(), n$2;
		}
		fr.__dashjs_factory_name = "MediaController";
		const gr = N.default.getSingletonFactory(fr);
		N.default.updateSingletonFactory(fr.__dashjs_factory_name, gr);
		var mr = gr;
		const hr = NaN;
		class pr {
			constructor(t$2, e$2) {
				this.data = {
					baseUrls: t$2 || null,
					selectedIdx: e$2 || hr
				}, this.children = [];
			}
		}
		function br() {
			let t$2, e$2, n$2, a$1;
			const r$2 = this.context, i$2 = (0, oe.default)(r$2).getInstance();
			function l$2(t$3, e$3, n$3) {
				const a$2 = o$2(n$3);
				t$3[e$3] ? i$2.areEqual(a$2, t$3[e$3].data.baseUrls) || (t$3[e$3].data.baseUrls = a$2, t$3[e$3].data.selectedIdx = hr) : t$3[e$3] = new pr(a$2);
			}
			function o$2(t$3) {
				let e$3 = n$2.getBaseURLsFromElement(t$3);
				const r$3 = a$1.getSynthesizedBaseUrlElements(e$3);
				return r$3 && r$3.length > 0 && r$3.forEach(((t$4) => {
					const n$3 = e$3.findIndex(((e$4) => e$4.serviceLocation === t$4.serviceLocation));
					-1 !== n$3 ? e$3[n$3] = t$4 : e$3.push(t$4);
				})), e$3;
			}
			function s$1(t$3, n$3) {
				const a$2 = n$3 || e$2;
				t$3(a$2.data), a$2.children && a$2.children.forEach(((e$3) => s$1(t$3, e$3)));
			}
			function u$2() {
				e$2 = new pr();
			}
			return t$2 = {
				reset: u$2,
				update: function(t$3) {
					(function(t$4) {
						(function() {
							if (!n$2 || !n$2.hasOwnProperty("getBaseURLsFromElement") || !n$2.hasOwnProperty("getRepresentationSortFunction")) throw new Error("setConfig function has to be called previously");
						})();
						const a$2 = o$2(t$4);
						i$2.areEqual(a$2, e$2.data.baseUrls) || (e$2.data.baseUrls = a$2, e$2.data.selectedIdx = hr), t$4 && t$4.Period && t$4.Period.forEach(((t$5, a$3) => {
							l$2(e$2.children, a$3, t$5), t$5.AdaptationSet && t$5.AdaptationSet.forEach(((t$6, r$3) => {
								l$2(e$2.children[a$3].children, r$3, t$6), t$6.Representation && t$6.Representation.sort(n$2.getRepresentationSortFunction()).forEach(((t$7, n$3) => {
									l$2(e$2.children[a$3].children[r$3].children, n$3, t$7);
								}));
							}));
						}));
					})(t$3);
				},
				getForPath: function(t$3) {
					let n$3 = e$2;
					const a$2 = [n$3.data];
					return t$3 && t$3.forEach(((t$4) => {
						n$3 = n$3.children[t$4], n$3 && a$2.push(n$3.data);
					})), a$2.filter(((t$4) => t$4.baseUrls.length));
				},
				invalidateSelectedIndexes: function(t$3) {
					s$1(((e$3) => {
						isNaN(e$3.selectedIdx) || t$3 === e$3.baseUrls[e$3.selectedIdx].serviceLocation && (e$3.selectedIdx = hr);
					}));
				},
				setConfig: function(t$3) {
					t$3.adapter && (n$2 = t$3.adapter), t$3.contentSteeringController && (a$1 = t$3.contentSteeringController);
				},
				getBaseUrls: function(t$3) {
					return o$2(t$3);
				}
			}, u$2(), t$2;
		}
		br.__dashjs_factory_name = "BaseURLTreeModel";
		var yr = N.default.getClassFactory(br);
		function Er(t$2) {
			let e$2;
			const n$2 = (t$2 = t$2 || {}).blacklistController;
			return e$2 = { select: function(t$3) {
				return t$3 && function(t$4) {
					let e$3, n$3, a$1 = 0, r$2 = [], i$2 = 0;
					if (n$3 = t$4.sort((function(t$5, e$4) {
						let n$4 = t$5.dvbPriority - e$4.dvbPriority;
						return isNaN(n$4) ? 0 : n$4;
					})).filter((function(t$5, e$4, n$4) {
						return !e$4 || n$4[0].dvbPriority && t$5.dvbPriority && n$4[0].dvbPriority === t$5.dvbPriority;
					})), n$3.length) return n$3.length > 1 && (n$3.forEach(((t$5) => {
						a$1 += t$5.dvbWeight, r$2.push(a$1);
					})), e$3 = Math.floor(Math.random() * (a$1 - 1)), r$2.every(((t$5, n$4) => (i$2 = n$4, !(e$3 < t$5))))), n$3[i$2];
				}(function(t$4) {
					let e$3 = [];
					return t$4.filter((function(t$5) {
						return !n$2.contains(t$5.serviceLocation) || (t$5.dvbPriority && e$3.push(t$5.dvbPriority), !1);
					})).filter((function(t$5) {
						return !e$3.length || !t$5.dvbPriority || -1 === e$3.indexOf(t$5.dvbPriority);
					}));
				}(t$3));
			} }, e$2;
		}
		Er.__dashjs_factory_name = "DVBSelector";
		var _r = N.default.getClassFactory(Er);
		function Tr(t$2) {
			let e$2;
			const n$2 = (t$2 = t$2 || {}).blacklistController;
			return e$2 = { select: function(t$3) {
				let e$3, a$1 = 0;
				return t$3 && t$3.some(((t$4, e$4) => (a$1 = e$4, !n$2.contains(t$4.serviceLocation)))) && (e$3 = t$3[a$1]), e$3;
			} }, e$2;
		}
		Tr.__dashjs_factory_name = "BasicSelector";
		var vr = N.default.getClassFactory(Tr);
		function wr() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2 = [];
			function l$2() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], n$3 = 0, a$2 = NaN;
				for (; n$3 < t$3.length;) {
					const i$3 = t$3[n$3], l$3 = e$3.findIndex(((t$4) => t$4.serviceLocation && t$4.serviceLocation === i$3));
					if (-1 !== l$3 && !r$2.contains(e$3[l$3].serviceLocation)) {
						a$2 = l$3;
						break;
					}
					n$3 += 1;
				}
				return a$2;
			}
			function o$2(t$3) {
				const e$3 = a$1.getCurrentSteeringResponseData();
				if (!e$3) return;
				const n$3 = t$3.entry, l$3 = setTimeout((() => {
					r$2.remove(n$3), i$2.splice(i$2.indexOf(l$3, 1));
				}), 1e3 * e$3.ttl);
				i$2.push(l$3);
			}
			return n$2 = {
				selectBaseUrlIndex: function(t$3) {
					let e$3 = NaN;
					if (isNaN(t$3.selectedIdx)) {
						const n$4 = a$1.getSteeringDataFromManifest();
						n$4 && n$4.defaultServiceLocationArray.length > 0 && (e$3 = l$2(n$4.defaultServiceLocationArray, t$3.baseUrls));
					}
					const n$3 = a$1.getCurrentSteeringResponseData();
					return t$3.baseUrls && t$3.baseUrls.length && n$3 && n$3.pathwayPriority && n$3.pathwayPriority.length && (e$3 = l$2(n$3.pathwayPriority, t$3.baseUrls)), e$3;
				},
				setConfig: function(t$3) {
					t$3.blacklistController && (r$2 = t$3.blacklistController), t$3.contentSteeringController && (a$1 = t$3.contentSteeringController), e$2.on(t$3.addBlacklistEventName, o$2, n$2);
				},
				reset: function() {
					i$2.forEach(((t$3) => clearTimeout(t$3))), i$2 = [];
				}
			}, a$1 = ha(t$2).getInstance(), n$2;
		}
		wr.__dashjs_factory_name = "ContentSteeringSelector";
		var Sr = N.default.getClassFactory(wr);
		function Ir() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance(), n$2 = (0, K.default)(t$2).getInstance();
			let a$1, r$2, i$2, l$2, o$2, s$1;
			function u$2() {
				o$2.reset(), r$2.reset();
			}
			return a$1 = {
				chooseSelector: function(t$3) {
					(0, yt.checkParameterType)(t$3, "boolean"), s$1 = t$3 ? l$2 : i$2;
				},
				select: function(t$3) {
					if (!t$3) return;
					if (n$2.get().streaming.applyContentSteering) {
						const e$3 = o$2.selectBaseUrlIndex(t$3);
						isNaN(e$3) || -1 === e$3 || (t$3.selectedIdx = e$3);
					}
					if (!isNaN(t$3.selectedIdx)) return t$3.baseUrls[t$3.selectedIdx];
					let a$2 = s$1.select(t$3.baseUrls);
					return a$2 ? (t$3.selectedIdx = t$3.baseUrls.indexOf(a$2), a$2) : (e$2.trigger(R.default.URL_RESOLUTION_FAILED, { error: new G.default(V.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE, V.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE) }), void (s$1 === i$2 && u$2()));
				},
				reset: u$2,
				setConfig: function(t$3) {
					t$3.selector && (s$1 = t$3.selector), t$3.contentSteeringSelector && (o$2 = t$3.contentSteeringSelector);
				}
			}, r$2 = sa(t$2).create({
				updateEventName: R.default.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED,
				addBlacklistEventName: R.default.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD
			}), i$2 = vr(t$2).create({ blacklistController: r$2 }), l$2 = _r(t$2).create({ blacklistController: r$2 }), o$2 = Sr(t$2).create(), o$2.setConfig({
				blacklistController: r$2,
				addBlacklistEventName: R.default.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD
			}), s$1 = i$2, a$1;
		}
		Ir.__dashjs_factory_name = "BaseURLSelector";
		var kr = N.default.getClassFactory(Ir);
		function Ar() {
			let t$2, e$2;
			const n$2 = this.context, a$1 = (0, A.default)(n$2).getInstance(), r$2 = St(n$2).getInstance();
			let i$2, l$2, o$2;
			function s$1(t$3) {
				i$2.update(t$3), l$2.chooseSelector(e$2.getIsDVB(t$3)), a$1.trigger(D.default.BASE_URLS_UPDATED, { baseUrls: u$2(t$3) });
			}
			function u$2(t$3) {
				return i$2.getBaseUrls(t$3);
			}
			return t$2 = {
				reset: function() {
					i$2.reset(), l$2.reset();
				},
				initialize: function(t$3) {
					i$2.setConfig({
						adapter: e$2,
						contentSteeringController: o$2
					}), s$1(t$3);
				},
				resolve: function(t$3) {
					const e$3 = i$2.getForPath(t$3).reduce(((t$4, e$4) => {
						const n$3 = l$2.select(e$4);
						return n$3 ? (r$2.isRelative(n$3.url) ? t$4.url = r$2.resolve(n$3.url, t$4.url) : (t$4.url = n$3.url, t$4.serviceLocation = n$3.serviceLocation), t$4.availabilityTimeOffset = n$3.availabilityTimeOffset, t$4.availabilityTimeComplete = n$3.availabilityTimeComplete, t$4.queryParams = n$3.queryParams, t$4) : new Qt();
					}), new Qt());
					if (!r$2.isRelative(e$3.url)) return e$3;
				},
				setConfig: function(t$3) {
					t$3.baseURLTreeModel && (i$2 = t$3.baseURLTreeModel), t$3.baseURLSelector && (l$2 = t$3.baseURLSelector), t$3.adapter && (e$2 = t$3.adapter), t$3.contentSteeringController && (o$2 = t$3.contentSteeringController);
				},
				getBaseUrls: u$2,
				update: s$1
			}, i$2 = yr(n$2).create(), l$2 = kr(n$2).create(), a$1.on(R.default.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED, (function(t$3) {
				i$2.invalidateSelectedIndexes(t$3.entry);
			}), t$2), t$2;
		}
		Ar.__dashjs_factory_name = "BaseURLController";
		var Rr = N.default.getClassFactory(Ar), Nr = class extends P {
			constructor(t$2, e$2) {
				super(), this.url = t$2 || null, this.type = e$2 || null, this.mediaType = S$1.default.STREAM, this.responseType = "";
			}
		};
		function Cr(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance();
			let a$1, r$2 = qn(e$2).create({
				errHandler: t$2.errHandler,
				dashMetrics: t$2.dashMetrics,
				mediaPlayerModel: t$2.mediaPlayerModel,
				errors: V
			});
			return a$1 = {
				load: function(t$3, e$3, a$2) {
					const i$2 = function(r$3, i$3) {
						e$3.resolved = !0, e$3.resolvedContent = r$3 || null, n$2.trigger(R.default.XLINK_ELEMENT_LOADED, {
							element: e$3,
							resolveObject: a$2,
							error: r$3 || i$3 ? null : new G.default(V.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE, V.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE + t$3)
						});
					};
					if ("urn:mpeg:dash:resolve-to-zero:2013" === t$3) i$2(null, !0);
					else {
						const e$4 = new Nr(t$3, z.HTTPRequest.XLINK_EXPANSION_TYPE);
						r$2.load({
							request: e$4,
							success: function(t$4) {
								i$2(t$4);
							},
							error: function() {
								i$2(null);
							}
						});
					}
				},
				reset: function() {
					r$2 && (r$2.abort(), r$2 = null);
				}
			}, a$1;
		}
		Cr.__dashjs_factory_name = "XlinkLoader";
		var Dr = N.default.getClassFactory(Cr);
		const xr = "onLoad";
		function Mr(t$2) {
			t$2 = t$2 || {};
			let e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance();
			const a$1 = St(e$2).getInstance();
			let r$2, i$2, l$2, o$2;
			function s$1(t$3, e$3, n$3) {
				let r$3, i$3, l$3 = {};
				l$3.elements = t$3, l$3.type = e$3, l$3.resolveType = n$3, 0 === l$3.elements.length && d$2(l$3);
				for (let t$4 = 0; t$4 < l$3.elements.length; t$4++) r$3 = l$3.elements[t$4], i$3 = a$1.isHTTPURL(r$3.url) ? r$3.url : r$3.originalContent.BaseURL + r$3.url, o$2.load(i$3, r$3, l$3);
			}
			function u$2(t$3) {
				let e$3, n$3, a$2 = "";
				if (e$3 = t$3.element, n$3 = t$3.resolveObject, e$3.resolvedContent) {
					let t$4 = 0;
					0 === e$3.resolvedContent.indexOf("<?xml") && (t$4 = e$3.resolvedContent.indexOf("?>") + 2), a$2 = e$3.resolvedContent.substr(0, t$4) + "<response>" + e$3.resolvedContent.substr(t$4) + "</response>", e$3.resolvedContent = i$2.parseXml(a$2).response;
				}
				(function(t$4) {
					let e$4, n$4;
					for (e$4 = 0; e$4 < t$4.elements.length; e$4++) if (n$4 = t$4.elements[e$4], !1 === n$4.resolved) return !1;
					return !0;
				})(n$3) && d$2(n$3);
			}
			function d$2(t$3) {
				let e$3, a$2, r$3 = [];
				if (function(t$4) {
					let e$4, n$3, a$3, r$4, o$3, s$2, u$3 = [];
					for (r$4 = t$4.elements.length - 1; r$4 >= 0; r$4--) {
						if (e$4 = t$4.elements[r$4], n$3 = e$4.type, e$4.resolvedContent) {
							if (e$4.resolvedContent) for (o$3 = 0; o$3 < e$4.resolvedContent[n$3].length; o$3++) a$3 = e$4.resolvedContent[n$3][o$3], u$3.push(a$3);
						} else delete e$4.originalContent["xlink:actuate"], delete e$4.originalContent["xlink:href"], u$3.push(e$4.originalContent);
						for (e$4.parentElement[n$3].splice(e$4.index, 1), s$2 = 0; s$2 < u$3.length; s$2++) e$4.parentElement[n$3].splice(e$4.index + s$2, 0, u$3[s$2]);
						u$3 = [];
					}
					t$4.elements.length > 0 && i$2.getIron().run(l$2);
				}(t$3), "onActuate" === t$3.resolveType && n$2.trigger(R.default.XLINK_READY, { manifest: l$2 }), t$3.resolveType === xr) switch (t$3.type) {
					case I.default.PERIOD:
						for (e$3 = 0; e$3 < l$2[I.default.PERIOD].length; e$3++) a$2 = l$2[I.default.PERIOD][e$3], a$2.hasOwnProperty(I.default.ADAPTATION_SET) && (r$3 = r$3.concat(c$2(a$2[I.default.ADAPTATION_SET], a$2, I.default.ADAPTATION_SET, xr))), a$2.hasOwnProperty(I.default.EVENT_STREAM) && (r$3 = r$3.concat(c$2(a$2[I.default.EVENT_STREAM], a$2, I.default.EVENT_STREAM, xr)));
						s$1(r$3, I.default.ADAPTATION_SET, xr);
						break;
					case I.default.ADAPTATION_SET: n$2.trigger(R.default.XLINK_READY, { manifest: l$2 });
				}
			}
			function c$2(t$3, e$3, n$3, a$2) {
				let r$3, i$3, l$3, o$3 = [];
				for (i$3 = t$3.length - 1; i$3 >= 0; i$3--) r$3 = t$3[i$3], r$3.hasOwnProperty("xlink:href") && "urn:mpeg:dash:resolve-to-zero:2013" === r$3["xlink:href"] && t$3.splice(i$3, 1);
				for (i$3 = 0; i$3 < t$3.length; i$3++) r$3 = t$3[i$3], r$3.hasOwnProperty("xlink:href") && r$3.hasOwnProperty("xlink:actuate") && r$3["xlink:actuate"] === a$2 && (l$3 = f$2(r$3["xlink:href"], e$3, n$3, i$3, a$2, r$3), o$3.push(l$3));
				return o$3;
			}
			function f$2(t$3, e$3, n$3, a$2, r$3, i$3) {
				return {
					url: t$3,
					parentElement: e$3,
					type: n$3,
					index: a$2,
					resolveType: r$3,
					originalContent: i$3,
					resolvedContent: null,
					resolved: !1
				};
			}
			return r$2 = {
				resolveManifestOnLoad: function(t$3) {
					let e$3;
					l$2 = t$3, l$2.Period ? (e$3 = c$2(l$2.Period, l$2, I.default.PERIOD, xr), s$1(e$3, I.default.PERIOD, xr)) : n$2.trigger(R.default.XLINK_READY, { manifest: l$2 });
				},
				setParser: function(t$3) {
					t$3 && (i$2 = t$3);
				},
				reset: function() {
					n$2.off(R.default.XLINK_ELEMENT_LOADED, u$2, r$2), o$2 && (o$2.reset(), o$2 = null);
				}
			}, n$2.on(R.default.XLINK_ELEMENT_LOADED, u$2, r$2), o$2 = Dr(e$2).create({
				errHandler: t$2.errHandler,
				dashMetrics: t$2.dashMetrics,
				mediaPlayerModel: t$2.mediaPlayerModel,
				settings: t$2.settings
			}), r$2;
		}
		Mr.__dashjs_factory_name = "XlinkController";
		var zr = N.default.getClassFactory(Mr);
		function Or(t$2) {
			function e$2(t$3, e$3) {
				for (let n$3 in t$3) e$3.hasOwnProperty(n$3) || (e$3[n$3] = t$3[n$3]);
			}
			function n$2(t$3, n$3, a$2) {
				for (let r$2 = 0, i$2 = t$3.length; r$2 < i$2; ++r$2) {
					const i$3 = t$3[r$2];
					if (n$3[i$3.name]) if (a$2[i$3.name]) {
						if (i$3.merge) {
							const t$4 = n$3[i$3.name], r$3 = a$2[i$3.name];
							"object" == typeof t$4 && "object" == typeof r$3 ? e$2(t$4, r$3) : a$2[i$3.name] = t$4 + r$3;
						}
					} else a$2[i$3.name] = n$3[i$3.name];
				}
			}
			function a$1(t$3, e$3) {
				for (let r$2 = 0, i$2 = t$3.children.length; r$2 < i$2; ++r$2) {
					const i$3 = t$3.children[r$2], l$2 = e$3[i$3.name];
					if (l$2) for (let r$3 = 0, o$2 = l$2.length; r$3 < o$2; ++r$3) {
						const o$3 = l$2[r$3];
						n$2(t$3.properties, e$3, o$3), a$1(i$3, o$3);
					}
				}
			}
			return { run: function(e$3) {
				if (null === e$3 || "object" != typeof e$3) return e$3;
				if (e$3.Period && "period" in t$2) {
					const n$3 = t$2.period, r$2 = e$3.Period;
					for (let e$4 = 0, i$2 = r$2.length; e$4 < i$2; ++e$4) {
						const i$3 = r$2[e$4];
						if (a$1(n$3, i$3), "adaptationset" in t$2) {
							const e$5 = i$3.AdaptationSet;
							if (e$5) {
								const n$4 = t$2.adaptationset;
								for (let t$3 = 0, r$3 = e$5.length; t$3 < r$3; ++t$3) a$1(n$4, e$5[t$3]);
							}
						}
					}
				}
				return e$3;
			} };
		}
		Or.__dashjs_factory_name = "ObjectIron";
		var Pr = N.default.getClassFactory(Or), Lr = class {
			constructor(t$2, e$2) {
				this._test = t$2, this._converter = e$2;
			}
			get test() {
				return this._test;
			}
			get converter() {
				return this._converter;
			}
		};
		const Fr = /^([-])?P(([\d.]*)Y)?(([\d.]*)M)?(([\d.]*)D)?T?(([\d.]*)H)?(([\d.]*)M)?(([\d.]*)S)?/;
		var Ur = class extends Lr {
			constructor() {
				super(((t$2, e$2, n$2) => {
					const a$1 = [
						I.default.MIN_BUFFER_TIME,
						I.default.MEDIA_PRESENTATION_DURATION,
						I.default.MINIMUM_UPDATE_PERIOD,
						I.default.TIMESHIFT_BUFFER_DEPTH,
						I.default.MAX_SEGMENT_DURATION,
						I.default.MAX_SUBSEGMENT_DURATION,
						I.default.SUGGESTED_PRESENTATION_DELAY,
						I.default.START,
						S$1.default.START_TIME,
						I.default.DURATION
					], r$2 = a$1.length;
					for (let t$3 = 0; t$3 < r$2; t$3++) if (e$2 === a$1[t$3]) return Fr.test(n$2);
					return !1;
				}), ((t$2) => {
					const e$2 = Fr.exec(t$2);
					let n$2 = 31536e3 * parseFloat(e$2[3] || 0) + 2592e3 * parseFloat(e$2[5] || 0) + 86400 * parseFloat(e$2[7] || 0) + 3600 * parseFloat(e$2[9] || 0) + 60 * parseFloat(e$2[11] || 0) + parseFloat(e$2[13] || 0);
					return void 0 !== e$2[1] && (n$2 = -n$2), n$2;
				}));
			}
		};
		const jr = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/;
		var qr = class extends Lr {
			constructor() {
				super(((t$2, e$2, n$2) => jr.test(n$2)), ((t$2) => {
					const e$2 = jr.exec(t$2);
					let n$2;
					if (n$2 = Date.UTC(parseInt(e$2[1], 10), parseInt(e$2[2], 10) - 1, parseInt(e$2[3], 10), parseInt(e$2[4], 10), parseInt(e$2[5], 10), e$2[6] && parseInt(e$2[6], 10) || 0, e$2[7] && 1e3 * parseFloat(e$2[7]) || 0), e$2[9] && e$2[10]) {
						const t$3 = 60 * parseInt(e$2[9], 10) + parseInt(e$2[10], 10);
						n$2 += ("+" === e$2[8] ? -1 : 1) * t$3 * 60 * 1e3;
					}
					return new Date(n$2);
				}));
			}
		};
		const Br = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/, Gr = [I.default.ID];
		var Hr = class extends Lr {
			constructor() {
				super(((t$2, e$2, n$2) => Br.test(n$2) && -1 === Gr.indexOf(e$2)), ((t$2) => parseFloat(t$2)));
			}
		}, Yr = class extends Lr {
			constructor() {
				super(((t$2, e$2) => {
					const n$2 = {
						[I.default.ADAPTATION_SET]: [I.default.LANG],
						[I.default.REPRESENTATION]: [I.default.LANG],
						[I.default.CONTENT_COMPONENT]: [I.default.LANG],
						[I.default.LABEL]: [I.default.LANG],
						[I.default.GROUP_LABEL]: [I.default.LANG]
					};
					if (n$2.hasOwnProperty(t$2)) {
						let a$1 = n$2[t$2];
						return void 0 !== a$1 && a$1.indexOf(e$2) >= 0;
					}
					return !1;
				}), ((t$2) => rr(t$2) || String(t$2)));
			}
		}, Vr = class {
			constructor(t$2) {
				var e$2;
				this._name = t$2, this._merge = (e$2 = t$2) && e$2.length && e$2.charAt(0) === e$2.charAt(0).toUpperCase();
			}
			get name() {
				return this._name;
			}
			get merge() {
				return this._merge;
			}
		}, Kr = class {
			constructor(t$2, e$2, n$2) {
				this._name = t$2 || "", this._properties = [], this._children = n$2 || [], Array.isArray(e$2) && e$2.forEach(((t$3) => {
					this._properties.push(new Vr(t$3));
				}));
			}
			get name() {
				return this._name;
			}
			get children() {
				return this._children;
			}
			get properties() {
				return this._properties;
			}
		}, Wr = class extends Kr {
			constructor() {
				const t$2 = [
					I.default.PROFILES,
					I.default.WIDTH,
					I.default.HEIGHT,
					I.default.SAR,
					I.default.FRAMERATE,
					I.default.AUDIO_SAMPLING_RATE,
					I.default.MIME_TYPE,
					I.default.SEGMENT_PROFILES,
					I.default.CODECS,
					I.default.MAXIMUM_SAP_PERIOD,
					I.default.START_WITH_SAP,
					I.default.MAX_PLAYOUT_RATE,
					I.default.CODING_DEPENDENCY,
					I.default.SCAN_TYPE,
					I.default.FRAME_PACKING,
					I.default.AUDIO_CHANNEL_CONFIGURATION,
					I.default.CONTENT_PROTECTION,
					I.default.INBAND_EVENT_STREAM
				];
				super(I.default.ADAPTATION_SET, t$2, [new Kr(I.default.REPRESENTATION, t$2, [new Kr(I.default.SUB_REPRESENTATION, t$2)])]);
			}
		}, $r = class extends Kr {
			constructor() {
				const t$2 = [
					I.default.SEGMENT_BASE,
					I.default.SEGMENT_TEMPLATE,
					I.default.SEGMENT_LIST
				];
				super(I.default.PERIOD, t$2, [new Kr(I.default.ADAPTATION_SET, t$2, [new Kr(I.default.REPRESENTATION, t$2)])]);
			}
		};
		const Xr = {
			"&amp;": "&",
			"&gt;": ">",
			"&lt;": "<",
			"&quot;": "\"",
			"&apos;": "'"
		};
		function Qr(t$2, e$2) {
			const n$2 = e$2.split(/(&[#a-zA-Z0-9]+;)/);
			if (n$2.length <= 1) return e$2;
			for (let e$3 = 1; e$3 < n$2.length; e$3 += 2) {
				const a$1 = n$2[e$3];
				if ("#" === a$1.charAt(1)) {
					let t$3;
					t$3 = "x" === a$1.charAt(2) ? parseInt(a$1.substring(3, a$1.length - 1), 16) : parseInt(a$1.substring(2, a$1.length - 1), 10), !isNaN(t$3) && t$3 >= 0 && t$3 <= 1114111 && (n$2[e$3] = String.fromCodePoint(t$3));
				} else t$2.hasOwnProperty(a$1) && (n$2[e$3] = t$2[a$1]);
			}
			return n$2.join("");
		}
		function Zr(t$2, e$2) {
			var n$2 = (e$2 = e$2 || {}).pos || 0, a$1 = !!e$2.keepComments, r$2 = !!e$2.keepWhitespace, i$2 = e$2.attrMatchers || [], l$2 = e$2.nodesAsArray || [], o$2 = "<", s$1 = "<".charCodeAt(0), u$2 = ">", d$2 = ">".charCodeAt(0), c$2 = "-".charCodeAt(0), f$2 = "/".charCodeAt(0), g$2 = "!".charCodeAt(0), m$2 = "'".charCodeAt(0), h$2 = "\"".charCodeAt(0), p$2 = "[".charCodeAt(0), b$2 = "]".charCodeAt(0);
			function y$2(e$3, i$3) {
				for (var m$3 = []; t$2[n$2];) if (t$2.charCodeAt(n$2) == s$1) {
					if (t$2.charCodeAt(n$2 + 1) === f$2) {
						var h$3 = n$2 + 2;
						if (n$2 = t$2.indexOf(u$2, n$2), -1 == t$2.substring(h$3, n$2).indexOf(e$3)) {
							var y$3 = t$2.substring(0, n$2).split("\n");
							throw new Error("Unexpected close tag\nLine: " + (y$3.length - 1) + "\nColumn: " + (y$3[y$3.length - 1].length + 1) + "\nChar: " + t$2[n$2]);
						}
						return n$2 + 1 && (n$2 += 1), m$3;
					}
					if (t$2.charCodeAt(n$2 + 1) === g$2) {
						if (t$2.charCodeAt(n$2 + 2) == c$2) {
							const e$4 = n$2;
							for (; -1 !== n$2 && (t$2.charCodeAt(n$2) !== d$2 || t$2.charCodeAt(n$2 - 1) != c$2 || t$2.charCodeAt(n$2 - 2) != c$2 || -1 == n$2);) n$2 = t$2.indexOf(u$2, n$2 + 1);
							-1 === n$2 && (n$2 = t$2.length), a$1 && m$3.push(t$2.substring(e$4, n$2 + 1));
						} else {
							if (t$2.charCodeAt(n$2 + 2) === p$2 && t$2.charCodeAt(n$2 + 8) === p$2 && "cdata" === t$2.substr(n$2 + 3, 5).toLowerCase()) {
								var E$3 = t$2.indexOf("]]>", n$2);
								-1 == E$3 ? (m$3.push(t$2.substr(n$2 + 9)), n$2 = t$2.length) : (m$3.push(t$2.substring(n$2 + 9, E$3)), n$2 = E$3 + 3);
								continue;
							}
							{
								const e$4 = n$2 + 1;
								n$2 += 2;
								for (var _$3 = !1; (t$2.charCodeAt(n$2) !== d$2 || !0 === _$3) && t$2[n$2];) t$2.charCodeAt(n$2) === p$2 ? _$3 = !0 : !0 === _$3 && t$2.charCodeAt(n$2) === b$2 && (_$3 = !1), n$2++;
								m$3.push(t$2.substring(e$4, n$2));
							}
						}
						n$2++;
						continue;
					}
					var T$3 = w$2();
					if (m$3.push(T$3), "?" === T$3.tagName[0] && (m$3.push(...T$3.children), T$3.children = []), i$3) {
						let t$3 = T$3.tagName;
						-1 !== l$2.indexOf(t$3) ? (i$3[t$3] || (i$3[t$3] = []), i$3[t$3].push(T$3)) : i$3[t$3] = T$3;
					}
				} else {
					var v$3 = (S$3 = void 0, S$3 = n$2, -2 == (n$2 = t$2.indexOf(o$2, n$2) - 1) && (n$2 = t$2.length), Qr(Xr, t$2.slice(S$3, n$2 + 1)));
					r$2 || (v$3 = v$3.trim()), i$3 ? i$3.__text = v$3 : m$3.push(v$3), n$2++;
				}
				var S$3;
				return m$3;
			}
			function E$2(t$3, e$3, n$3) {
				if ("S" === t$3) return parseInt(n$3);
				let a$2 = Qr(Xr, n$3);
				return i$2.forEach(((r$3) => {
					r$3.test(t$3, e$3, n$3) && (a$2 = r$3.converter(n$3));
				})), a$2;
			}
			var _$2 = "\r\n	>/= ";
			function T$2() {
				for (var e$3 = n$2; -1 === _$2.indexOf(t$2[n$2]) && t$2[n$2];) n$2++;
				return t$2.slice(e$3, n$2);
			}
			var v$2 = e$2.noChildNodes || [
				"img",
				"br",
				"input",
				"meta",
				"link",
				"hr"
			];
			function w$2() {
				n$2++;
				const e$3 = T$2();
				let a$2 = [], r$3 = { tagName: e$3 }, i$3 = r$3.tagName.indexOf(":");
				for (-1 !== i$3 && (r$3.__prefix = r$3.tagName.substr(0, i$3), r$3.tagName = r$3.tagName.substr(i$3 + 1)); t$2.charCodeAt(n$2) !== d$2 && t$2[n$2];) {
					var l$3 = t$2.charCodeAt(n$2);
					if (l$3 > 64 && l$3 < 91 || l$3 > 96 && l$3 < 123) {
						for (var o$3 = T$2(), s$2 = t$2.charCodeAt(n$2); s$2 && s$2 !== m$2 && s$2 !== h$2 && !(s$2 > 64 && s$2 < 91 || s$2 > 96 && s$2 < 123) && s$2 !== d$2;) n$2++, s$2 = t$2.charCodeAt(n$2);
						if (s$2 === m$2 || s$2 === h$2) {
							var u$3 = (c$3 = void 0, g$3 = void 0, c$3 = t$2[n$2], g$3 = n$2 + 1, n$2 = t$2.indexOf(c$3, g$3), t$2.slice(g$3, n$2));
							if (-1 === n$2) return r$3;
						} else u$3 = null, n$2--;
						u$3 = E$2(r$3.tagName, o$3, u$3), r$3[o$3] = u$3;
					}
					n$2++;
				}
				var c$3, g$3;
				if (t$2.charCodeAt(n$2 - 1) !== f$2) if ("script" == e$3) {
					var p$3 = n$2 + 1;
					n$2 = t$2.indexOf("<\/script>", n$2), a$2 = [t$2.slice(p$3, n$2)], n$2 += 9;
				} else "style" == e$3 ? (p$3 = n$2 + 1, n$2 = t$2.indexOf("</style>", n$2), a$2 = [t$2.slice(p$3, n$2)], n$2 += 8) : -1 === v$2.indexOf(e$3) ? (n$2++, a$2 = y$2(e$3, r$3)) : n$2++;
				else n$2++;
				return r$3.__children = a$2, r$3;
			}
			var S$2, I$1 = null;
			if (void 0 !== e$2.attrValue) for (e$2.attrName = e$2.attrName || "id", I$1 = []; -1 !== (S$2 = (/* @__PURE__ */ new RegExp("\\s" + e$2.attrName + "\\s*=['\"]" + e$2.attrValue + "['\"]")).exec(t$2), n$2 = S$2 ? S$2.index : -1);) -1 !== (n$2 = t$2.lastIndexOf("<", n$2)) && I$1.push(w$2()), t$2 = t$2.substr(n$2), n$2 = 0;
			else I$1 = e$2.parseNode ? w$2() : y$2("");
			return e$2.filter && (I$1 = ti(I$1, e$2.filter)), e$2.simplify ? Jr(Array.isArray(I$1) ? I$1 : [I$1]) : (e$2.setPos && (I$1.pos = n$2), I$1);
		}
		function Jr(t$2) {
			var e$2 = {};
			if (!t$2.length) return "";
			if (1 === t$2.length && "string" == typeof t$2[0]) return t$2[0];
			for (var n$2 in t$2.forEach((function(t$3) {
				if ("object" == typeof t$3) {
					e$2[t$3.tagName] || (e$2[t$3.tagName] = []);
					var n$3 = Jr(t$3.children);
					e$2[t$3.tagName].push(n$3), Object.keys(t$3.attributes).length && "string" != typeof n$3 && (n$3._attributes = t$3.attributes);
				}
			})), e$2) 1 == e$2[n$2].length && (e$2[n$2] = e$2[n$2][0]);
			return e$2;
		}
		function ti(t$2, e$2) {
			let n$2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, a$1 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
			var r$2 = [];
			return t$2.forEach((function(t$3, i$2) {
				if ("object" == typeof t$3 && e$2(t$3, i$2, n$2, a$1) && r$2.push(t$3), t$3.children) {
					var l$2 = ti(t$3.children, e$2, n$2 + 1, (a$1 ? a$1 + "." : "") + i$2 + "." + t$3.tagName);
					r$2 = r$2.concat(l$2);
				}
			})), r$2;
		}
		const ei = [
			I.default.PERIOD,
			I.default.BASE_URL,
			I.default.ADAPTATION_SET,
			I.default.REPRESENTATION,
			I.default.CONTENT_PROTECTION,
			I.default.ROLE,
			I.default.ACCESSIBILITY,
			I.default.AUDIO_CHANNEL_CONFIGURATION,
			I.default.CONTENT_COMPONENT,
			I.default.ESSENTIAL_PROPERTY,
			I.default.LABEL,
			I.default.S,
			I.default.SEGMENT_URL,
			I.default.EVENT,
			I.default.EVENT_STREAM,
			I.default.LOCATION,
			I.default.SERVICE_DESCRIPTION,
			I.default.SUPPLEMENTAL_PROPERTY,
			I.default.METRICS,
			I.default.REPORTING,
			I.default.PATCH_LOCATION,
			I.default.REPLACE,
			I.default.ADD,
			I.default.REMOVE,
			I.default.UTC_TIMING,
			I.default.INBAND_EVENT_STREAM,
			I.default.PRODUCER_REFERENCE_TIME,
			I.default.CONTENT_STEERING
		];
		function ni(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.debug;
			let a$1, r$2, i$2, l$2;
			function o$2(t$3) {
				try {
					let e$3 = Zr(t$3, {
						parseNode: !0,
						attrMatchers: i$2,
						nodesAsArray: ei
					}), n$3 = {};
					if (-1 !== e$3.tagName.toLowerCase().indexOf("xml")) for (let t$4 in e$3) {
						if (Array.isArray(e$3[t$4])) {
							n$3[t$4] = e$3[t$4][0];
							break;
						}
						if ("object" == typeof e$3[t$4]) {
							n$3[t$4] = e$3[t$4];
							break;
						}
					}
					else n$3[e$3.tagName] = e$3, delete e$3.tagName;
					return n$3;
				} catch (t$4) {
					return null;
				}
			}
			return a$1 = {
				getIron: function() {
					return l$2;
				},
				parseXml: o$2,
				parse: function(t$3) {
					let e$3;
					const n$3 = window.performance.now();
					if (e$3 = o$2(t$3), !e$3) throw new Error("failed to parse the manifest");
					e$3.Patch ? (e$3 = e$3.Patch, e$3.add && e$3.add.forEach(((t$4) => l$2.run(t$4))), e$3.replace && e$3.replace.forEach(((t$4) => l$2.run(t$4)))) : (e$3 = e$3.MPD, l$2.run(e$3));
					const a$2 = window.performance.now();
					return r$2.info("Parsing complete: " + (a$2 - n$3).toPrecision(3) + "ms"), e$3.protocol = "DASH", e$3;
				}
			}, r$2 = n$2.getLogger(a$1), i$2 = [
				new Ur(),
				new qr(),
				new Hr(),
				new Yr()
			], l$2 = Pr(e$2).create({
				adaptationset: new Wr(),
				period: new $r()
			}), a$1;
		}
		ni.__dashjs_factory_name = "DashParser";
		var ai = N.default.getClassFactory(ni);
		function ri(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.debug, a$1 = t$2.settings, r$2 = (0, A.default)(e$2).getInstance(), i$2 = St(e$2).getInstance();
			let l$2, o$2, s$1, u$2, d$2, c$2 = t$2.mssHandler, f$2 = t$2.errHandler;
			function g$2(t$3) {
				r$2.trigger(R.default.INTERNAL_MANIFEST_LOADED, { manifest: t$3.manifest });
			}
			return l$2 = {
				load: function(t$3) {
					let l$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, f$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
					const g$3 = /* @__PURE__ */ new Date(), m$2 = new Nr(t$3, z.HTTPRequest.MPD_TYPE);
					l$3 && (m$2.serviceLocation = l$3), f$3 && (m$2.queryParams = f$3), m$2.startDate || (m$2.startDate = g$3), r$2.trigger(R.default.MANIFEST_LOADING_STARTED, { request: m$2 }), s$1.load({
						request: m$2,
						success: function(l$4, s$2, f$4) {
							if (!u$2) return;
							let g$4, m$3, h$2;
							if (f$4 && f$4 !== t$3 ? (m$3 = i$2.parseBaseUrl(f$4), g$4 = f$4) : (i$2.isRelative(t$3) && (t$3 = i$2.resolve(t$3, window.location.href)), m$3 = i$2.parseBaseUrl(t$3)), "No Content" != s$2) if (null === d$2 && (d$2 = function(t$4) {
								let a$2 = null;
								return t$4.indexOf("SmoothStreamingMedia") > -1 ? (c$2 && (a$2 = c$2.createMssParser(), c$2.createMssFragmentProcessor(), c$2.registerEvents()), a$2) : t$4.indexOf("MPD") > -1 || t$4.indexOf("Patch") > -1 ? ai(e$2).create({ debug: n$2 }) : a$2;
							}(l$4)), null !== d$2) {
								u$2.setParser(d$2);
								try {
									h$2 = d$2.parse(l$4);
								} catch (e$3) {
									r$2.trigger(R.default.INTERNAL_MANIFEST_LOADED, {
										manifest: null,
										error: new G.default(V.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE, V.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${t$3}`)
									});
									return;
								}
								if (h$2) {
									if (h$2.url = g$4 || t$3, h$2.originalUrl || (h$2.originalUrl = h$2.url), a$1 && a$1.get().streaming.enableManifestDurationMismatchFix && h$2.mediaPresentationDuration && h$2.Period.length > 1) {
										const t$4 = h$2.Period.reduce(((t$5, e$3) => t$5 + e$3.duration), 0);
										!isNaN(t$4) && h$2.mediaPresentationDuration > t$4 && (o$2.warn("Media presentation duration greater than duration of all periods. Setting duration to total period duration"), h$2.mediaPresentationDuration = t$4);
									}
									h$2.baseUri = m$3, h$2.loadedTime = /* @__PURE__ */ new Date(), u$2.resolveManifestOnLoad(h$2), r$2.trigger(R.default.ORIGINAL_MANIFEST_LOADED, { originalManifest: l$4 });
								} else r$2.trigger(R.default.INTERNAL_MANIFEST_LOADED, {
									manifest: null,
									error: new G.default(V.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE, V.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${t$3}`)
								});
							} else r$2.trigger(R.default.INTERNAL_MANIFEST_LOADED, {
								manifest: null,
								error: new G.default(V.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE, V.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${t$3}`)
							});
							else r$2.trigger(R.default.INTERNAL_MANIFEST_LOADED, { manifest: null });
						},
						error: function(e$3, n$3, a$2) {
							r$2.trigger(R.default.INTERNAL_MANIFEST_LOADED, {
								manifest: null,
								error: new G.default(V.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE, V.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE + `${t$3}, ${a$2}`)
							});
						}
					});
				},
				reset: function() {
					r$2.off(R.default.XLINK_READY, g$2, l$2), c$2 && c$2.reset(), u$2 && (u$2.reset(), u$2 = null), s$1 && (s$1.abort(), s$1 = null);
				}
			}, o$2 = n$2.getLogger(l$2), r$2.on(R.default.XLINK_READY, g$2, l$2), s$1 = qn(e$2).create({
				errHandler: t$2.errHandler,
				dashMetrics: t$2.dashMetrics,
				mediaPlayerModel: t$2.mediaPlayerModel,
				urlUtils: i$2,
				constants: S$1.default,
				dashConstants: I.default,
				errors: V,
				requestTimeout: t$2.settings.get().streaming.manifestRequestTimeout
			}), u$2 = zr(e$2).create({
				errHandler: f$2,
				dashMetrics: t$2.dashMetrics,
				mediaPlayerModel: t$2.mediaPlayerModel,
				settings: t$2.settings
			}), d$2 = null, l$2;
		}
		ri.__dashjs_factory_name = "ManifestLoader";
		var ii = N.default.getClassFactory(ri);
		function li() {
			let t$2;
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance();
			return t$2 = { error: function(t$3) {
				n$2.trigger(R.default.ERROR, { error: t$3 });
			} }, t$2;
		}
		li.__dashjs_factory_name = "ErrorHandler";
		var oi = N.default.getSingletonFactory(li), si = n$1(559);
		function ui() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2, i$2, l$2, o$2, s$1;
			function u$2(t$3, e$3, n$3) {
				const a$2 = c$2(t$3, e$3, n$3);
				return r$2.isCodecSupportedBasedOnTestedConfigurations(a$2, t$3);
			}
			function d$2(t$3, e$3, n$3, a$2, r$3) {
				const i$3 = c$2(t$3, e$3, n$3), l$3 = JSON.stringify(i$3);
				a$2.has(l$3) || (a$2.add(l$3), r$3.push(i$3));
			}
			function c$2(t$3, e$3, n$3) {
				let r$3 = null;
				switch (t$3) {
					case S$1.default.VIDEO:
						r$3 = function(t$4, e$4) {
							let n$4 = {
								codec: e$4,
								width: t$4.width || null,
								height: t$4.height || null,
								framerate: a$1.getFramerate(t$4) || null,
								bitrate: t$4.bandwidth || null,
								isSupported: !0
							};
							i$2.get().streaming.capabilities.filterVideoColorimetryEssentialProperties && Object.assign(n$4, function(t$5) {
								let e$5 = {
									colorGamut: null,
									transferFunction: null,
									isSupported: !0
								};
								for (const n$5 of t$5.EssentialProperty || []) n$5.schemeIdUri === S$1.default.COLOUR_PRIMARIES_SCHEME_ID_URI && [
									"1",
									"5",
									"6",
									"7"
								].includes(n$5.value.toString()) ? e$5.colorGamut = S$1.default.MEDIA_CAPABILITIES_API.COLORGAMUT.SRGB : n$5.schemeIdUri === S$1.default.COLOUR_PRIMARIES_SCHEME_ID_URI && ["11", "12"].includes(n$5.value.toString()) ? e$5.colorGamut = S$1.default.MEDIA_CAPABILITIES_API.COLORGAMUT.P3 : n$5.schemeIdUri === S$1.default.COLOUR_PRIMARIES_SCHEME_ID_URI && ["9"].includes(n$5.value.toString()) ? e$5.colorGamut = S$1.default.MEDIA_CAPABILITIES_API.COLORGAMUT.REC2020 : n$5.schemeIdUri === S$1.default.COLOUR_PRIMARIES_SCHEME_ID_URI && ["2"].includes(n$5.value.toString()) ? e$5.colorGamut = null : n$5.schemeIdUri === S$1.default.COLOUR_PRIMARIES_SCHEME_ID_URI && (e$5.isSupported = !1), n$5.schemeIdUri === S$1.default.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && [
									"1",
									"6",
									"13",
									"14",
									"15"
								].includes(n$5.value.toString()) ? e$5.transferFunction = S$1.default.MEDIA_CAPABILITIES_API.TRANSFERFUNCTION.SRGB : n$5.schemeIdUri === S$1.default.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && ["16"].includes(n$5.value.toString()) ? e$5.transferFunction = S$1.default.MEDIA_CAPABILITIES_API.TRANSFERFUNCTION.PQ : n$5.schemeIdUri === S$1.default.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && ["18"].includes(n$5.value.toString()) ? e$5.transferFunction = S$1.default.MEDIA_CAPABILITIES_API.TRANSFERFUNCTION.HLG : n$5.schemeIdUri === S$1.default.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && ["2"].includes(n$5.value.toString()) ? e$5.transferFunction = null : n$5.schemeIdUri === S$1.default.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && (e$5.isSupported = !1);
								return e$5;
							}(t$4));
							let r$4 = n$4.isSupported;
							i$2.get().streaming.capabilities.filterHDRMetadataFormatEssentialProperties && Object.assign(n$4, function(t$5) {
								let e$5 = {
									isSupported: !0,
									hdrMetadataType: null
								};
								for (const n$5 of t$5.EssentialProperty || []) n$5.schemeIdUri === S$1.default.HDR_METADATA_FORMAT_SCHEME_ID_URI && n$5.value === S$1.default.HDR_METADATA_FORMAT_VALUES.ST2094_10 ? e$5.hdrMetadataType = S$1.default.MEDIA_CAPABILITIES_API.HDR_METADATATYPE.SMPTE_ST_2094_10 : n$5.schemeIdUri === S$1.default.HDR_METADATA_FORMAT_SCHEME_ID_URI && n$5.value === S$1.default.HDR_METADATA_FORMAT_VALUES.SL_HDR2 ? e$5.hdrMetadataType = S$1.default.MEDIA_CAPABILITIES_API.HDR_METADATATYPE.SLHDR2 : n$5.schemeIdUri === S$1.default.HDR_METADATA_FORMAT_SCHEME_ID_URI && n$5.value === S$1.default.HDR_METADATA_FORMAT_VALUES.ST2094_40 ? e$5.hdrMetadataType = S$1.default.MEDIA_CAPABILITIES_API.HDR_METADATATYPE.SMPTE_ST_2094_40 : n$5.schemeIdUri === S$1.default.HDR_METADATA_FORMAT_SCHEME_ID_URI && (e$5.isSupported = !1);
								return e$5;
							}(t$4));
							let l$3 = n$4.isSupported;
							return r$4 && l$3 || (n$4.isSupported = !1), n$4;
						}(e$3, n$3);
						break;
					case S$1.default.AUDIO:
						r$3 = function(t$4, e$4) {
							const n$4 = t$4.audioSamplingRate || null;
							return {
								codec: e$4,
								bitrate: t$4.bandwidth || null,
								samplerate: n$4,
								isSupported: !0
							};
						}(e$3, n$3);
						break;
					default: return r$3;
				}
				return function(t$4, e$4) {
					return t$4 && t$4[I.default.CONTENT_PROTECTION] && t$4[I.default.CONTENT_PROTECTION].length > 0 && (e$4.keySystemsMetadata = o$2.getSupportedKeySystemMetadataFromContentProtection(t$4[I.default.CONTENT_PROTECTION])), e$4;
				}(e$3, r$3);
			}
			function f$2(t$3) {
				if (!t$3 || 0 === t$3.length) return !0;
				let e$3 = 0;
				for (; e$3 < t$3.length;) {
					if (!r$2.supportsEssentialProperty(t$3[e$3])) return s$1.debug("[Stream] EssentialProperty not supported: " + t$3[e$3].schemeIdUri), !1;
					e$3 += 1;
				}
				return !0;
			}
			return n$2 = {
				setConfig: function(t$3) {
					t$3 && (t$3.adapter && (a$1 = t$3.adapter), t$3.capabilities && (r$2 = t$3.capabilities), t$3.settings && (i$2 = t$3.settings), t$3.protectionController && (o$2 = t$3.protectionController), t$3.customParametersModel && (l$2 = t$3.customParametersModel));
				},
				filterUnsupportedFeatures: function(t$3) {
					return new Promise(((n$3) => {
						const o$3 = [S$1.default.VIDEO, S$1.default.AUDIO], c$3 = [];
						o$3.forEach(((e$3) => {
							(function(t$4, e$4) {
								if (!t$4 || !t$4.Period || 0 === t$4.Period.length) return [];
								const n$4 = /* @__PURE__ */ new Set(), r$3 = [];
								return t$4.Period.forEach(((t$5) => {
									t$5.AdaptationSet.forEach(((t$6) => {
										a$1.getIsTypeOf(t$6, e$4) && t$6.Representation.forEach(((i$3, l$3) => {
											const o$4 = a$1.getCodec(t$6, l$3, !1);
											d$2(e$4, i$3, o$4, n$4, r$3);
											const s$2 = a$1.getSupplementalCodecs(i$3);
											s$2.length > 0 && d$2(e$4, i$3, s$2[0], n$4, r$3);
										}));
									}));
								})), r$3;
							})(t$3, e$3).forEach(((t$4) => {
								c$3.push(r$2.runCodecSupportCheck(t$4, e$3));
							}));
						})), Promise.allSettled(c$3).then((() => (o$3.forEach(((n$4) => {
							(function(t$4, n$5) {
								n$5 && n$5.Period && 0 !== n$5.Period.length && n$5.Period.forEach(((n$6) => {
									(function(t$5, n$7) {
										t$5 && t$5.AdaptationSet && 0 !== t$5.AdaptationSet.length && (t$5.AdaptationSet = t$5.AdaptationSet.filter(((t$6) => {
											a$1.getIsTypeOf(t$6, n$7) && function(t$7, e$3) {
												t$7.Representation && 0 !== t$7.Representation.length && (t$7.Representation = t$7.Representation.filter(((n$8, r$4) => {
													const i$3 = a$1.getCodec(t$7, r$4, !1), l$3 = u$2(e$3, n$8, i$3);
													let o$4 = function(t$8, e$4) {
														let n$9 = !1;
														const r$5 = a$1.getSupplementalCodecs(t$8);
														return r$5.length > 0 && (r$5.length > 1 && s$1.warn("[CapabilitiesFilter] Multiple supplemental codecs not supported; using the first in list"), n$9 = u$2(e$4, t$8, r$5[0])), n$9;
													}(n$8, e$3);
													return o$4 && (s$1.debug(`[CapabilitiesFilter] Codec supported. Upgrading codecs string of Representation with ID ${n$8.id}`), n$8.codecs = n$8[I.default.SUPPLEMENTAL_CODECS]), l$3 || o$4 || s$1.warn(`[CapabilitiesFilter] Codec ${i$3} not supported. Removing Representation with ID ${n$8.id}`), l$3 || o$4;
												})));
											}(t$6, n$7);
											const r$3 = t$6.Representation && t$6.Representation.length > 0;
											return r$3 || (e$2.trigger(R.default.ADAPTATION_SET_REMOVED_NO_CAPABILITIES, { adaptationSet: t$6 }), s$1.warn(`[CapabilitiesFilter] AdaptationSet with ID ${t$6.id ? t$6.id : "undefined"} and codec ${t$6.codecs ? t$6.codecs : "undefined"} has been removed because of no supported Representation`)), r$3;
										})));
									})(n$6, t$4);
								}));
							})(n$4, t$3);
						})), i$2.get().streaming.capabilities.filterUnsupportedEssentialProperties && function(t$4) {
							t$4 && t$4.Period && 0 !== t$4.Period.length && t$4.Period.forEach(((t$5) => {
								t$5.AdaptationSet = t$5.AdaptationSet.filter(((t$6) => !t$6.Representation || 0 === t$6.Representation.length || !!f$2(a$1.getEssentialPropertiesForAdaptationSet(t$6)) && (t$6.Representation = t$6.Representation.filter(((t$7) => f$2(a$1.getEssentialPropertiesForRepresentation(t$7)))), t$6.Representation && t$6.Representation.length > 0)));
							}));
						}(t$3), function(t$4) {
							if (!t$4 || !t$4.Period || 0 === t$4.Period.length) return Promise.resolve();
							const e$3 = [];
							return t$4.Period.forEach(((t$5) => {
								e$3.push(function(t$6) {
									return new Promise(((e$4) => {
										if (!t$6 || !t$6.AdaptationSet || 0 === t$6.AdaptationSet.length) return void e$4();
										const n$4 = [];
										t$6.AdaptationSet.forEach(((t$7) => {
											n$4.push(function(t$8) {
												return new Promise(((e$5) => {
													if (!t$8.Representation || 0 === t$8.Representation.length) return void e$5();
													const n$5 = [];
													t$8.Representation.forEach(((t$9) => {
														n$5.push(function(t$10) {
															const e$6 = [], n$6 = l$2.getCustomCapabilitiesFilters();
															return n$6 && 0 !== n$6.length ? n$6.forEach(((n$7) => {
																e$6.push(new Promise(((e$7) => e$7(n$7(t$10)))));
															})) : e$6.push(Promise.resolve(!0)), Promise.all(e$6);
														}(t$9));
													})), Promise.all(n$5).then(((n$6) => {
														t$8.Representation = t$8.Representation.filter(((t$9, e$6) => {
															let a$2 = n$6[e$6].every(((t$10) => t$10));
															return a$2 || s$1.debug("[Stream] Representation " + t$9.id + " has been removed because of unsupported CustomFilter"), a$2;
														})), e$5();
													})).catch(((t$9) => {
														s$1.warn("[Stream] at least one promise rejected in CustomFilter with error: ", t$9), e$5();
													}));
												}));
											}(t$7));
										})), Promise.all(n$4).then((() => {
											t$6.AdaptationSet = t$6.AdaptationSet.filter(((t$7) => t$7.Representation && t$7.Representation.length > 0)), e$4();
										})).catch((() => {
											e$4();
										}));
									}));
								}(t$5));
							})), Promise.all(e$3);
						}(t$3)))).then((() => {
							n$3();
						})).catch(((t$4) => {
							s$1.error(t$4), n$3();
						}));
					}));
				}
			}, s$1 = (0, C.default)(t$2).getInstance().getLogger(n$2), n$2;
		}
		ui.__dashjs_factory_name = "CapabilitiesFilter";
		var di = N.default.getSingletonFactory(ui), ci = class {
			constructor() {
				this.t = null, this.xywh = null, this.track = null, this.id = null, this.s = null, this.r = null;
			}
		};
		function fi() {
			let t$2, e$2;
			return t$2 = {
				initialize: function(t$3) {
					if (e$2 = new ci(), !t$3) return null;
					const n$2 = t$3.indexOf("#");
					if (-1 !== n$2) {
						const a$1 = t$3.substr(n$2 + 1).split("&");
						for (let t$4 = 0, n$3 = a$1.length; t$4 < n$3; ++t$4) {
							const n$4 = a$1[t$4], r$2 = n$4.indexOf("=");
							if (-1 !== r$2) {
								const t$5 = n$4.substring(0, r$2);
								e$2.hasOwnProperty(t$5) && (e$2[t$5] = n$4.substr(r$2 + 1));
							}
						}
					}
				},
				getURIFragmentData: function() {
					return e$2;
				}
			}, t$2;
		}
		fi.__dashjs_factory_name = "URIFragmentModel";
		var gi = N.default.getSingletonFactory(fi);
		function mi() {
			let t$2, e$2, n$2 = this.context, a$1 = (0, A.default)(n$2).getInstance();
			return t$2 = {
				getValue: function() {
					return e$2;
				},
				setValue: function(t$3) {
					e$2 = t$3, t$3 && a$1.trigger(R.default.MANIFEST_LOADED, { data: t$3 });
				}
			}, t$2;
		}
		mi.__dashjs_factory_name = "ManifestModel";
		var hi = N.default.getSingletonFactory(mi);
		function pi() {
			let t$2, e$2, n$2, a$1;
			const r$2 = this.context, i$2 = (0, K.default)(r$2).getInstance();
			function l$2(t$3, n$3) {
				return isNaN(t$3) ? 0 : t$3 > 0 ? (n$3 && e$2.warn("Supplied minimum playback rate is a positive value when it should be negative or 0. The supplied rate will not be applied and set to 0: 100% playback speed."), 0) : t$3 < -.5 ? (n$3 && e$2.warn("Supplied minimum playback rate is out of range and will be limited to -0.5: -50% playback speed."), -.5) : t$3;
			}
			function o$2(t$3, n$3) {
				return isNaN(t$3) ? 0 : t$3 < 0 ? (n$3 && e$2.warn("Supplied maximum playback rate is a negative value when it should be negative or 0. The supplied rate will not be applied and set to 0: 100% playback speed."), 0) : t$3 > 1 ? (n$3 && e$2.warn("Supplied maximum playback rate is out of range and will be limited to 1: 200% playback speed."), 1) : t$3;
			}
			function s$1() {
				const t$3 = u$2(), e$3 = n$2.getLiveDelay();
				return !isNaN(e$3) && e$3 > 0 ? Math.min(t$3, e$3) : t$3;
			}
			function u$2() {
				return i$2.get().streaming.buffer.bufferTimeDefault > 0 ? i$2.get().streaming.buffer.bufferTimeDefault : d$2() ? 20 : 12;
			}
			function d$2() {
				return null !== i$2.get().streaming.buffer.fastSwitchEnabled ? i$2.get().streaming.buffer.fastSwitchEnabled : !n$2.getLowLatencyModeEnabled();
			}
			return t$2 = {
				getCatchupMaxDrift: function() {
					if (!isNaN(i$2.get().streaming.liveCatchup.maxDrift) && i$2.get().streaming.liveCatchup.maxDrift >= 0) return i$2.get().streaming.liveCatchup.maxDrift;
					const t$3 = a$1.getServiceDescriptionSettings();
					return t$3 && t$3.liveCatchup && !isNaN(t$3.liveCatchup.maxDrift) && t$3.liveCatchup.maxDrift >= 0 ? t$3.liveCatchup.maxDrift : 12;
				},
				getCatchupModeEnabled: function() {
					return null !== i$2.get().streaming.liveCatchup.enabled ? i$2.get().streaming.liveCatchup.enabled : n$2.getInitialCatchupModeActivated();
				},
				getBufferTimeDefault: s$1,
				getBufferTimeDefaultUnadjusted: u$2,
				getFastSwitchEnabled: d$2,
				getInitialBufferLevel: function() {
					const t$3 = i$2.get().streaming.buffer.initialBufferLevel;
					return isNaN(t$3) || t$3 < 0 ? 0 : Math.min(s$1(), t$3);
				},
				getRetryAttemptsForType: function(t$3) {
					const e$3 = isNaN(i$2.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? 5 : i$2.get().streaming.retryAttempts.lowLatencyMultiplyFactor;
					return n$2.getLowLatencyModeEnabled() ? i$2.get().streaming.retryAttempts[t$3] * e$3 : i$2.get().streaming.retryAttempts[t$3];
				},
				getRetryIntervalsForType: function(t$3) {
					const e$3 = isNaN(i$2.get().streaming.retryIntervals.lowLatencyReductionFactor) ? 10 : i$2.get().streaming.retryIntervals.lowLatencyReductionFactor;
					return n$2.getLowLatencyModeEnabled() ? i$2.get().streaming.retryIntervals[t$3] / e$3 : i$2.get().streaming.retryIntervals[t$3];
				},
				getCatchupPlaybackRates: function(t$3) {
					const e$3 = i$2.get().streaming.liveCatchup.playbackRate;
					if (!isNaN(e$3.min) || !isNaN(e$3.max)) return {
						min: l$2(e$3.min, t$3),
						max: o$2(e$3.max, t$3)
					};
					const n$3 = a$1.getServiceDescriptionSettings();
					if (n$3 && n$3.liveCatchup && (!isNaN(n$3.liveCatchup.playbackRate.min) || !isNaN(n$3.liveCatchup.playbackRate.max))) {
						const e$4 = n$3.liveCatchup.playbackRate;
						return {
							min: l$2(e$4.min, t$3),
							max: o$2(e$4.max, t$3)
						};
					}
					return {
						min: -.5,
						max: .5
					};
				},
				getAbrBitrateParameter: function(t$3, e$3) {
					try {
						const n$3 = i$2.get().streaming.abr[t$3][e$3];
						if (!isNaN(n$3) && -1 !== n$3) return n$3;
						const r$3 = a$1.getServiceDescriptionSettings();
						return r$3 && r$3[t$3] && !isNaN(r$3[t$3][e$3]) ? r$3[t$3][e$3] : -1;
					} catch (t$4) {
						return -1;
					}
				},
				setConfig: function(t$3) {
					t$3.playbackController && (n$2 = t$3.playbackController), t$3.serviceDescriptionController && (a$1 = t$3.serviceDescriptionController);
				},
				reset: function() {}
			}, e$2 = (0, C.default)(r$2).getInstance().getLogger(t$2), t$2;
		}
		pi.__dashjs_factory_name = "MediaPlayerModel";
		var bi = N.default.getSingletonFactory(pi);
		const yi = {
			DEFAULT: .5,
			STRONG: 1,
			WEAK: 0
		};
		function Ei(t$2, e$2, n$2, a$1) {
			let r$2, i$2, l$2, o$2, s$1;
			return i$2 = void 0 === t$2 ? null : t$2, l$2 = function(t$3) {
				let e$3 = yi.DEFAULT;
				return t$3 !== yi.DEFAULT && t$3 !== yi.STRONG && t$3 !== yi.WEAK || (e$3 = t$3), e$3;
			}(n$2), o$2 = void 0 === e$2 ? null : e$2, s$1 = void 0 === a$1 ? null : a$1, r$2 = {
				representation: i$2,
				reason: o$2,
				rule: s$1,
				priority: l$2
			}, r$2;
		}
		Ei.__dashjs_factory_name = "SwitchRequest";
		const _i = N.default.getClassFactory(Ei);
		_i.NO_CHANGE = null, _i.PRIORITY = yi, N.default.updateClassFactory(Ei.__dashjs_factory_name, _i);
		var Ti = _i;
		function vi(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.dashMetrics;
			let a$1, r$2;
			return a$1 = {
				getSwitchRequest: function(t$3) {
					try {
						const a$2 = Ti(e$2).create();
						a$2.rule = this.getClassName();
						const r$3 = t$3.getMediaInfo(), i$2 = t$3.getMediaType(), l$2 = n$2.getCurrentBufferState(i$2), o$2 = t$3.getScheduleController(), s$1 = t$3.getAbrController(), u$2 = t$3.getStreamInfo(), d$2 = u$2 ? u$2.id : null, c$2 = u$2 && u$2.manifestInfo ? u$2.manifestInfo.isDynamic : null, f$2 = t$3.getThroughputController(), g$2 = f$2.getSafeAverageThroughput(i$2), m$2 = f$2.getAverageLatency(i$2);
						return isNaN(g$2) || !l$2 || s$1.getAbandonmentStateFor(d$2, i$2) === k.ALLOW_LOAD && (l$2.state === k.BUFFER_LOADED || c$2) && (a$2.representation = s$1.getOptimalRepresentationForBitrate(r$3, g$2, !0), a$2.reason = {
							throughput: g$2,
							latency: m$2,
							message: `[ThroughputRule]: Switching to Representation with bitrate ${a$2.representation ? a$2.representation.bitrateInKbit : "n/a"} kbit/s. Throughput: ${g$2}`
						}, o$2.setTimeToLoadDelay(0)), a$2;
					} catch (t$4) {
						return r$2.error(t$4), Ti(e$2).create();
					}
				},
				reset: function() {}
			}, r$2 = (0, C.default)(e$2).getInstance().getLogger(a$1), a$1;
		}
		vi.__dashjs_factory_name = "ThroughputRule";
		var wi = N.default.getClassFactory(vi);
		function Si(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance(), a$1 = t$2.dashMetrics, r$2 = (0, K.default)(e$2).getInstance();
			let i$2, l$2, o$2;
			function s$1() {
				const t$3 = r$2.get().streaming.abr.rules.insufficientBufferRule.parameters.segmentIgnoreCount;
				o$2 = {}, o$2[S$1.default.VIDEO] = { ignoreCount: t$3 }, o$2[S$1.default.AUDIO] = { ignoreCount: t$3 };
			}
			function u$2() {
				s$1();
			}
			function d$2(t$3) {
				isNaN(t$3.startTime) || t$3.mediaType !== S$1.default.AUDIO && t$3.mediaType !== S$1.default.VIDEO || o$2[t$3.mediaType].ignoreCount > 0 && o$2[t$3.mediaType].ignoreCount--;
			}
			return i$2 = {
				getSwitchRequest: function(t$3) {
					const n$3 = Ti(e$2).create();
					if (n$3.rule = this.getClassName(), !t$3 || !t$3.hasOwnProperty("getMediaType")) return n$3;
					const i$3 = t$3.getMediaType(), s$2 = a$1.getCurrentBufferState(i$3), u$3 = t$3.getRepresentation().fragmentDuration;
					if (!function(t$4, e$3, n$4) {
						return !t$4.getLowLatencyModeEnabled() && o$2[e$3].ignoreCount <= 0 && n$4;
					}(t$3.getScheduleController().getPlaybackController(), i$3, u$3)) return n$3;
					const d$3 = t$3.getMediaInfo(), c$2 = t$3.getAbrController();
					if (s$2 && s$2.state === k.BUFFER_EMPTY) l$2.debug("[" + i$3 + "] Switch to index 0; buffer is empty."), n$3.representation = c$2.getOptimalRepresentationForBitrate(d$3, 0, !0), n$3.reason = { message: "[InsufficientBufferRule]: Switching to lowest Representation because buffer is empty" };
					else {
						const e$3 = t$3.getThroughputController(), l$3 = a$1.getCurrentBufferLevel(i$3), o$3 = e$3.getAverageThroughput(i$3, null, NaN) * r$2.get().streaming.abr.rules.insufficientBufferRule.parameters.throughputSafetyFactor * l$3 / u$3;
						if (isNaN(o$3) || o$3 <= 0) return n$3;
						n$3.representation = c$2.getOptimalRepresentationForBitrate(d$3, o$3, !0), n$3.reason = {
							message: "[InsufficientBufferRule]: Limiting maximum bitrate to avoid a buffer underrun.",
							bitrate: o$3
						};
					}
					return n$3;
				},
				reset: function() {
					s$1(), n$2.off(D.default.PLAYBACK_SEEKING, u$2, i$2), n$2.off(R.default.BYTES_APPENDED_END_FRAGMENT, d$2, i$2);
				}
			}, l$2 = (0, C.default)(e$2).getInstance().getLogger(i$2), s$1(), n$2.on(D.default.PLAYBACK_SEEKING, u$2, i$2), n$2.on(R.default.BYTES_APPENDED_END_FRAGMENT, d$2, i$2), i$2;
		}
		Si.__dashjs_factory_name = "InsufficientBufferRule";
		var Ii = N.default.getClassFactory(Si);
		function ki(t$2) {
			const e$2 = (t$2 = t$2 || {}).mediaPlayerModel, n$2 = t$2.dashMetrics, a$1 = this.context, r$2 = (0, K.default)(a$1).getInstance();
			let i$2, l$2, o$2;
			function s$1() {
				o$2 = {};
			}
			return i$2 = {
				shouldAbandon: function(t$3) {
					const i$3 = Ti(a$1).create();
					i$3.rule = this.getClassName();
					try {
						if (!t$3) return i$3;
						const a$2 = t$3.getCurrentRequest();
						if (!isNaN(a$2.index)) {
							if (null === a$2.firstByteDate || o$2.hasOwnProperty(a$2.index)) return i$3;
							const l$3 = e$2.getBufferTimeDefault(), s$2 = t$3.getMediaType();
							if (n$2.getCurrentBufferLevel(s$2) > l$3) return i$3;
							const u$2 = Date.now() - a$2.firstByteDate.getTime();
							if (a$2.traces.length >= r$2.get().streaming.abr.rules.abandonRequestsRule.parameters.minThroughputSamplesThreshold && u$2 > r$2.get().streaming.abr.rules.abandonRequestsRule.parameters.minSegmentDownloadTimeThresholdInMs && a$2.bytesLoaded < a$2.bytesTotal) return function(t$4, e$3, n$3) {
								const a$3 = t$4.getMediaInfo(), i$4 = t$4.getMediaType(), l$4 = e$3.traces.reduce(((t$5, e$4) => t$5 + e$4.b[0]), 0) - e$3.traces[0].b[0], s$3 = Math.max(e$3.traces.reduce(((t$5, e$4) => t$5 + e$4.d), 0) - e$3.traces[0].d, 1), u$3 = Math.round(8 * l$4 / s$3), d$2 = Number(8 * e$3.bytesTotal / u$3 / 1e3).toFixed(2), c$2 = t$4.getRepresentation(), f$2 = t$4.getAbrController();
								if (d$2 < e$3.duration * r$2.get().streaming.abr.rules.abandonRequestsRule.parameters.abandonDurationMultiplier || f$2.isPlayingAtLowestQuality(c$2)) return n$3;
								if (!o$2.hasOwnProperty(e$3.index)) {
									const r$3 = t$4.getAbrController(), l$5 = e$3.bytesTotal - e$3.bytesLoaded, s$4 = r$3.getOptimalRepresentationForBitrate(a$3, u$3, !0), d$3 = e$3.representation;
									l$5 > e$3.bytesTotal * s$4.bitrateInKbit / d$3.bitrateInKbit && (n$3.representation = s$4, n$3.reason = {
										throughputInKbit: u$3,
										message: `[AbandonRequestRule][${i$4} is asking to abandon and switch to quality to ${s$4.absoluteIndex}. The measured bandwidth was ${u$3} kbit/s`
									}, o$2[e$3.index] = !0);
								}
								return n$3;
							}(t$3, a$2, i$3);
						}
						return i$3;
					} catch (t$4) {
						return l$2.error(t$4), i$3;
					}
				},
				reset: s$1
			}, l$2 = (0, C.default)(a$1).getInstance().getLogger(i$2), s$1(), i$2;
		}
		ki.__dashjs_factory_name = "AbandonRequestsRule";
		var Ai = N.default.getClassFactory(ki);
		function Ri() {
			const t$2 = this.context, e$2 = (0, K.default)(t$2).getInstance();
			let n$2;
			return n$2 = { getSwitchRequest: function(n$3) {
				const a$1 = Ti(t$2).create();
				if (a$1.rule = this.getClassName(), !n$3 || !n$3.hasOwnProperty("getDroppedFramesHistory")) return a$1;
				const r$2 = n$3.getDroppedFramesHistory();
				if (!r$2) return a$1;
				const i$2 = n$3.getStreamInfo().id, l$2 = n$3.getMediaInfo(), o$2 = n$3.getAbrController(), s$1 = r$2.getFrameHistory(i$2);
				if (!s$1 || 0 === Object.keys(s$1).length) return a$1;
				let u$2 = 0, d$2 = 0;
				const c$2 = o$2.getPossibleVoRepresentationsFilteredBySettings(l$2, !0);
				let f$2 = null;
				for (let t$3 = 1; t$3 < c$2.length; t$3++) {
					const n$4 = c$2[t$3];
					if (n$4 && s$1[n$4.id] && (u$2 = s$1[n$4.id].droppedVideoFrames, d$2 = s$1[n$4.id].totalVideoFrames, d$2 > e$2.get().streaming.abr.rules.droppedFramesRule.parameters.minimumSampleSize && u$2 / d$2 > e$2.get().streaming.abr.rules.droppedFramesRule.parameters.droppedFramesPercentageThreshold)) {
						f$2 = c$2[t$3 - 1];
						break;
					}
				}
				return f$2 && (a$1.representation = f$2, a$1.reason = {
					droppedFrames: u$2,
					message: `[DroppedFramesRule]: Switching to index ${f$2.absoluteIndex}. Dropped Frames: ${u$2}, Total Frames: ${d$2}`
				}), a$1;
			} }, n$2;
		}
		Ri.__dashjs_factory_name = "DroppedFramesRule";
		var Ni = N.default.getClassFactory(Ri);
		function Ci() {
			const t$2 = this.context, e$2 = (0, K.default)(t$2).getInstance();
			let n$2;
			return n$2 = { getSwitchRequest: function(n$3) {
				const a$1 = Ti(t$2).create();
				if (a$1.rule = this.getClassName(), !n$3) return a$1;
				const r$2 = n$3.getStreamInfo().id, i$2 = n$3.getMediaType(), l$2 = n$3 ? n$3.getSwitchRequestHistory() : null, o$2 = l$2 ? l$2.getSwitchRequests(r$2, i$2) : {}, s$1 = n$3.getAbrController(), u$2 = n$3.getMediaInfo(), d$2 = s$1.getPossibleVoRepresentationsFilteredBySettings(u$2, !0);
				let c$2 = 0, f$2 = 0;
				for (let t$3 = 0; t$3 < d$2.length; t$3++) {
					const n$4 = d$2[t$3];
					if (n$4 && o$2[n$4.id] && (c$2 += o$2[n$4.id].drops, f$2 += o$2[n$4.id].noDrops, c$2 + f$2 >= e$2.get().streaming.abr.rules.switchHistoryRule.parameters.sampleSize && c$2 / f$2 > e$2.get().streaming.abr.rules.switchHistoryRule.parameters.switchPercentageThreshold)) {
						a$1.representation = t$3 > 0 && o$2[n$4.id].drops > 0 ? d$2[t$3 - 1] : n$4, a$1.reason = {
							drops: c$2,
							noDrops: f$2,
							message: `[SwitchHistoryRule]: Switch to index: ${a$1.representation.absoluteIndex} samples: ${c$2 + f$2} drops:  ${c$2}`
						};
						break;
					}
				}
				return a$1;
			} }, n$2;
		}
		Ci.__dashjs_factory_name = "SwitchHistoryRule";
		var Di = N.default.getClassFactory(Ci);
		const xi = "BOLA_STATE_ONE_BITRATE", Mi = "BOLA_STATE_STARTUP", zi = "BOLA_STATE_STEADY", Oi = 10;
		function Pi(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.dashMetrics, a$1 = t$2.mediaPlayerModel, r$2 = (0, A.default)(e$2).getInstance(), i$2 = dl(e$2).getInstance();
			let l$2, o$2, s$1;
			function u$2(t$3) {
				const e$3 = t$3.mediaType, n$3 = t$3.streamId, a$2 = e$3 === S$1.default.AUDIO ? [S$1.default.AUDIO] : s$1[n$3];
				for (const t$4 in a$2) s$1[n$3] && s$1[n$3].hasOwnProperty(t$4) && s$1[n$3][t$4].state === zi && (s$1[n$3][t$4].placeholderBuffer = 0);
			}
			function d$2(t$3) {
				const e$3 = t$3.streamId;
				for (const t$4 in s$1[e$3]) if (s$1[e$3].hasOwnProperty(t$4)) {
					const n$3 = s$1[e$3][t$4];
					n$3.state !== xi && (n$3.state = Mi, c$2(n$3));
				}
			}
			function c$2(t$3) {
				t$3.placeholderBuffer = 0, t$3.mostAdvancedSegmentStart = NaN, t$3.lastSegmentWasReplacement = !1, t$3.lastSegmentStart = NaN, t$3.lastSegmentDurationS = NaN, t$3.lastSegmentRequestTimeMs = NaN, t$3.lastSegmentFinishTimeMs = NaN;
			}
			function f$2(t$3) {
				try {
					if (t$3 && t$3.metric === k.HTTP_REQUEST && t$3.value && t$3.value.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE && t$3.value.trace && t$3.value.trace.length) {
						const e$3 = s$1[t$3.value._streamId] && s$1[t$3.value._streamId][t$3.mediaType] ? s$1[t$3.value._streamId][t$3.mediaType] : null;
						e$3 && e$3.state !== xi && (e$3.lastSegmentRequestTimeMs = t$3.value.trequest.getTime(), e$3.lastSegmentFinishTimeMs = t$3.value._tfinish.getTime(), g$2(e$3, t$3.mediaType));
					}
				} catch (t$4) {
					o$2.error(t$4);
				}
			}
			function g$2(t$3, e$3) {
				if (!isNaN(t$3.lastSegmentStart) && !isNaN(t$3.lastSegmentRequestTimeMs) && !isNaN(t$3.placeholderBuffer)) {
					if (t$3.placeholderBuffer *= .99, !isNaN(t$3.lastSegmentFinishTimeMs)) {
						const a$2 = n$2.getCurrentBufferLevel(e$3) + .001 * (t$3.lastSegmentFinishTimeMs - t$3.lastSegmentRequestTimeMs), r$3 = b$2(t$3, t$3.currentRepresentation), i$3 = Math.max(0, r$3 - a$2);
						t$3.placeholderBuffer = Math.min(i$3, t$3.placeholderBuffer);
					}
					t$3.lastSegmentWasReplacement && !isNaN(t$3.lastSegmentDurationS) && (t$3.placeholderBuffer += t$3.lastSegmentDurationS), t$3.lastSegmentStart = NaN, t$3.lastSegmentRequestTimeMs = NaN;
				}
			}
			function m$2(t$3) {
				if (t$3 && s$1[t$3.streamId] && s$1[t$3.streamId][t$3.mediaType]) {
					const e$3 = s$1[t$3.streamId][t$3.mediaType];
					e$3 && e$3.state !== xi && (e$3.currentRepresentation = t$3.newRepresentation);
				}
			}
			function h$2(t$3, e$3, n$3) {
				const a$2 = n$3.reduce(((t$4, e$4, a$3) => e$4 > n$3[t$4] ? a$3 : t$4), 0);
				if (0 === a$2) return null;
				const r$3 = Math.max(t$3, Oi + 2 * e$3.length), i$3 = (n$3[a$2] - 1) / (r$3 / Oi - 1);
				return {
					gp: i$3,
					Vp: Oi / i$3
				};
			}
			function p$2(t$3, e$3) {
				const r$3 = a$1.getBufferTimeDefault();
				if (t$3.bufferTimeDefault !== r$3) {
					const a$2 = h$2(r$3, t$3.representations, t$3.utilities);
					if (a$2.Vp !== t$3.Vp || a$2.gp !== t$3.gp) {
						const i$3 = n$2.getCurrentBufferLevel(e$3);
						let l$3 = i$3 + t$3.placeholderBuffer;
						l$3 -= Oi, l$3 *= a$2.Vp / t$3.Vp, l$3 += Oi, t$3.bufferTimeDefault = r$3, t$3.Vp = a$2.Vp, t$3.gp = a$2.gp, t$3.placeholderBuffer = Math.max(0, l$3 - i$3);
					}
				}
			}
			function b$2(t$3, e$3) {
				return t$3.Vp * (t$3.utilities[e$3.absoluteIndex] + t$3.gp);
			}
			function y$2(t$3) {
				if (t$3 && t$3.chunk && t$3.chunk.representation.mediaInfo && s$1[t$3.streamId]) {
					const e$3 = s$1[t$3.streamId][t$3.chunk.representation.mediaInfo.type];
					if (e$3 && e$3.state !== xi) {
						const n$3 = t$3.chunk.start;
						isNaN(e$3.mostAdvancedSegmentStart) || n$3 > e$3.mostAdvancedSegmentStart ? (e$3.mostAdvancedSegmentStart = n$3, e$3.lastSegmentWasReplacement = !1) : e$3.lastSegmentWasReplacement = !0, e$3.lastSegmentStart = n$3, e$3.lastSegmentDurationS = t$3.chunk.duration, e$3.currentRepresentation = t$3.chunk.representation, g$2(e$3, t$3.chunk.representation.mediaInfo.type);
					}
				}
			}
			function E$2() {
				v$2();
			}
			function _$2(t$3, e$3) {
				const n$3 = e$3.absoluteIndex, a$2 = e$3.bandwidth, r$3 = t$3.utilities[n$3];
				let i$3 = 0;
				for (let e$4 = n$3 - 1; e$4 >= 0; --e$4) if (t$3.utilities[e$4] < t$3.utilities[n$3]) {
					const n$4 = t$3.representations[e$4].bandwidth, l$3 = t$3.utilities[e$4], o$3 = t$3.Vp * (t$3.gp + (a$2 * l$3 - n$4 * r$3) / (a$2 - n$4));
					i$3 = Math.max(i$3, o$3);
				}
				return i$3;
			}
			function T$2(t$3) {
				if (t$3 && s$1[t$3.streamId]) {
					const e$3 = s$1[t$3.streamId][t$3.mediaType];
					if (e$3 && e$3.state !== xi) {
						const a$2 = n$2.getCurrentBufferLevel(t$3.mediaType);
						let r$3;
						r$3 = e$3.currentRepresentation.absoluteIndex > 0 ? _$2(e$3, e$3.currentRepresentation) : Oi;
						const i$3 = Math.max(0, r$3 - a$2);
						e$3.placeholderBuffer = Math.min(e$3.placeholderBuffer, i$3);
					}
				}
			}
			function v$2() {
				s$1 = {};
			}
			return l$2 = {
				getSwitchRequest: function(t$3) {
					try {
						const r$3 = Ti(e$2).create();
						t$3.getScheduleController().setTimeToLoadDelay(0), r$3.rule = this.getClassName(), r$3.reason = r$3.reason || {};
						const l$3 = function(t$4) {
							const e$3 = t$4.getMediaType(), n$3 = t$4.getStreamInfo().id;
							s$1[n$3] || (s$1 = {}, s$1[n$3] = {});
							let r$4 = s$1[n$3][e$3];
							return r$4 ? r$4.state !== xi && p$2(r$4, e$3) : (r$4 = function(t$5) {
								const e$4 = {}, n$4 = t$5.getMediaInfo(), r$5 = i$2.getPossibleVoRepresentationsFilteredBySettings(n$4, !0);
								let l$4 = r$5.map(((t$6) => t$6.bandwidth)).map(((t$6) => Math.log(t$6)));
								l$4 = l$4.map(((t$6) => t$6 - l$4[0] + 1));
								const o$3 = a$1.getBufferTimeDefault(), s$2 = h$2(o$3, r$5, l$4);
								return s$2 ? (e$4.state = Mi, e$4.representations = r$5, e$4.utilities = l$4, e$4.bufferTimeDefault = o$3, e$4.Vp = s$2.Vp, e$4.gp = s$2.gp, e$4.currentRepresentation = null, c$2(e$4)) : e$4.state = xi, e$4;
							}(t$4), s$1[n$3][e$3] = r$4), r$4;
						}(t$3);
						switch (r$3.reason.state = l$3.state, l$3.state) {
							case xi: break;
							case Mi:
								(function(t$4, e$3, a$2) {
									const r$4 = e$3.getMediaType(), l$4 = e$3.getThroughputController().getSafeAverageThroughput(r$4);
									if (isNaN(l$4)) return;
									const o$3 = e$3.getMediaInfo(), s$2 = i$2.getOptimalRepresentationForBitrate(o$3, l$4, !0), u$3 = n$2.getCurrentBufferLevel(r$4);
									t$4.representation = s$2, t$4.reason.throughput = l$4, a$2.placeholderBuffer = Math.max(0, _$2(a$2, s$2) - u$3), a$2.currentRepresentation = s$2, !isNaN(a$2.lastSegmentDurationS) && u$3 >= a$2.lastSegmentDurationS && (a$2.state = zi);
								})(r$3, t$3, l$3);
								break;
							case zi:
								(function(t$4, e$3, a$2) {
									const r$4 = e$3.getMediaType(), l$4 = e$3.getThroughputController(), o$3 = e$3.getMediaInfo(), s$2 = l$4.getSafeAverageThroughput(r$4), u$3 = e$3.getScheduleController();
									(function(t$5, e$4) {
										const n$3 = Date.now();
										if (isNaN(t$5.lastSegmentFinishTimeMs)) {
											if (!isNaN(t$5.lastCallTimeMs)) {
												const e$5 = .001 * (n$3 - t$5.lastCallTimeMs);
												t$5.placeholderBuffer += Math.max(0, e$5);
											}
										} else {
											const e$5 = .001 * (n$3 - t$5.lastSegmentFinishTimeMs);
											t$5.placeholderBuffer += Math.max(0, e$5);
										}
										t$5.lastCallTimeMs = n$3, t$5.lastSegmentStart = NaN, t$5.lastSegmentRequestTimeMs = NaN, t$5.lastSegmentFinishTimeMs = NaN, p$2(t$5, e$4);
									})(a$2, r$4);
									const d$3 = n$2.getCurrentBufferLevel(r$4);
									let c$3 = function(t$5, e$4) {
										const n$3 = t$5.representations.length;
										let a$3 = NaN, r$5 = NaN;
										for (let i$3 = 0; i$3 < n$3; ++i$3) {
											let n$4 = (t$5.Vp * (t$5.utilities[i$3] - 1 + t$5.gp) - e$4) / t$5.representations[i$3].bandwidth;
											(isNaN(r$5) || n$4 >= r$5) && (r$5 = n$4, a$3 = i$3);
										}
										return t$5.representations[a$3];
									}(a$2, d$3 + a$2.placeholderBuffer);
									const f$3 = i$2.getOptimalRepresentationForBitrate(o$3, s$2, !0);
									c$3.absoluteIndex > a$2.currentRepresentation.absoluteIndex && c$3.absoluteIndex > f$3.absoluteIndex && (c$3 = f$3.absoluteIndex > a$2.currentRepresentation.absoluteIndex ? f$3 : a$2.currentRepresentation);
									let g$3 = Math.max(0, d$3 + a$2.placeholderBuffer - b$2(a$2, c$3));
									g$3 <= a$2.placeholderBuffer ? (a$2.placeholderBuffer -= g$3, g$3 = 0) : (g$3 -= a$2.placeholderBuffer, a$2.placeholderBuffer = 0, i$2.isPlayingAtTopQuality(c$3) ? g$3 = 0 : u$3.setTimeToLoadDelay(1e3 * g$3)), t$4.representation = c$3, t$4.reason.throughput = s$2, t$4.reason.bufferLevel = d$3, t$4.reason.placeholderBuffer = a$2.placeholderBuffer, t$4.reason.delay = g$3, a$2.currentRepresentation = c$3;
								})(r$3, t$3, l$3);
								break;
							default: (function(t$4, e$3, n$3) {
								o$2.debug("BOLA ABR rule invoked in bad state.");
								const a$2 = e$3.getMediaInfo(), r$4 = e$3.getMediaType(), l$4 = e$3.getThroughputController().getSafeAverageThroughput(r$4);
								t$4.representation = i$2.getOptimalRepresentationForBitrate(a$2, l$4, !0), t$4.reason.state = n$3.state, t$4.reason.throughput = l$4, n$3.state = Mi, c$2(n$3);
							})(r$3, t$3, l$3);
						}
						return r$3;
					} catch (t$4) {
						return o$2.error(t$4), Ti(e$2).create();
					}
				},
				handleNewMediaInfo: function(t$3) {
					t$3 && t$3.streamInfo && t$3.type && s$1[t$3.streamInfo.id] && s$1[t$3.streamInfo.id][t$3.type] && delete s$1[t$3.streamInfo.id][t$3.type];
				},
				reset: function() {
					v$2(), r$2.off(D.default.BUFFER_EMPTY, u$2, l$2), r$2.off(D.default.PLAYBACK_SEEKING, d$2, l$2), r$2.off(D.default.METRIC_ADDED, f$2, l$2), r$2.off(D.default.QUALITY_CHANGE_REQUESTED, m$2, l$2), r$2.off(D.default.FRAGMENT_LOADING_ABANDONED, T$2, l$2), r$2.off(R.default.MEDIA_FRAGMENT_LOADED, y$2, l$2), r$2.off(R.default.SETTING_UPDATED_MAX_BITRATE, E$2, l$2), r$2.off(R.default.SETTING_UPDATED_MIN_BITRATE, E$2, l$2);
				}
			}, o$2 = (0, C.default)(e$2).getInstance().getLogger(l$2), v$2(), r$2.on(D.default.BUFFER_EMPTY, u$2, l$2), r$2.on(D.default.PLAYBACK_SEEKING, d$2, l$2), r$2.on(D.default.METRIC_ADDED, f$2, l$2), r$2.on(D.default.QUALITY_CHANGE_REQUESTED, m$2, l$2), r$2.on(D.default.FRAGMENT_LOADING_ABANDONED, T$2, l$2), r$2.on(R.default.MEDIA_FRAGMENT_LOADED, y$2, l$2), r$2.on(R.default.SETTING_UPDATED_MAX_BITRATE, E$2, l$2), r$2.on(R.default.SETTING_UPDATED_MIN_BITRATE, E$2, l$2), l$2;
		}
		Pi.__dashjs_factory_name = "BolaRule";
		var Li = N.default.getClassFactory(Pi);
		const Fi = "L2A_STATE_ONE_BITRATE", Ui = "L2A_STATE_STARTUP", ji = "L2A_STATE_STEADY", qi = Math.pow(4, .99);
		function Bi(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.dashMetrics, a$1 = (0, A.default)(e$2).getInstance();
			let r$2, i$2, l$2, o$2;
			function s$1(t$3) {
				t$3.placeholderBuffer = 0, t$3.mostAdvancedSegmentStart = NaN, t$3.lastSegmentWasReplacement = !1, t$3.lastSegmentStart = NaN, t$3.lastSegmentDurationS = NaN, t$3.lastSegmentRequestTimeMs = NaN, t$3.lastSegmentFinishTimeMs = NaN, t$3.lastSegmentUrl = "";
			}
			function u$2() {
				for (const t$3 in i$2) if (i$2.hasOwnProperty(t$3)) {
					const e$3 = i$2[t$3];
					e$3.state !== Fi && (e$3.state = Ui, s$1(e$3));
				}
			}
			function d$2(t$3) {
				if (t$3 && t$3.chunk && t$3.chunk.representation && t$3.chunk.representation.mediaInfo) {
					const e$3 = i$2[t$3.chunk.representation.mediaInfo.type], n$3 = l$2[t$3.chunk.representation.mediaInfo.type];
					if (e$3 && e$3.state !== Fi) {
						const a$2 = t$3.chunk.start;
						isNaN(e$3.mostAdvancedSegmentStart) || a$2 > e$3.mostAdvancedSegmentStart ? (e$3.mostAdvancedSegmentStart = a$2, e$3.lastSegmentWasReplacement = !1) : e$3.lastSegmentWasReplacement = !0, e$3.lastSegmentStart = a$2, e$3.lastSegmentDurationS = t$3.chunk.duration, e$3.currentRepresentation = t$3.chunk.representation, f$2(e$3, n$3);
					}
				}
			}
			function c$2(t$3) {
				if (t$3 && t$3.metric === k.HTTP_REQUEST && t$3.value && t$3.value.type === z.HTTPRequest.MEDIA_SEGMENT_TYPE && t$3.value.trace && t$3.value.trace.length) {
					const e$3 = i$2[t$3.mediaType], n$3 = l$2[t$3.mediaType];
					e$3 && e$3.state !== Fi && (e$3.lastSegmentRequestTimeMs = t$3.value.trequest.getTime(), e$3.lastSegmentFinishTimeMs = t$3.value._tfinish.getTime(), f$2(e$3, n$3));
				}
			}
			function f$2(t$3, e$3) {
				isNaN(t$3.lastSegmentStart) || isNaN(t$3.lastSegmentRequestTimeMs) || (e$3.segment_request_start_s = .001 * t$3.lastSegmentRequestTimeMs, e$3.segment_download_finish_s = .001 * t$3.lastSegmentFinishTimeMs, t$3.lastSegmentStart = NaN, t$3.lastSegmentRequestTimeMs = NaN);
			}
			function g$2(t$3, e$3) {
				if (t$3.length !== e$3.length) return -1;
				let n$3 = 0;
				for (let a$2 = 0; a$2 < t$3.length; a$2++) n$3 += t$3[a$2] * e$3[a$2];
				return n$3;
			}
			function m$2() {
				i$2 = {}, l$2 = {};
			}
			return r$2 = {
				getSwitchRequest: function(t$3) {
					try {
						const a$2 = Ti(e$2).create();
						a$2.rule = this.getClassName();
						const r$3 = t$3.getMediaType(), o$3 = t$3.getScheduleController();
						if (a$2.reason = a$2.reason || {}, r$3 === S$1.default.AUDIO) return a$2;
						o$3.setTimeToLoadDelay(0);
						const u$3 = function(t$4) {
							const e$3 = t$4.getMediaType();
							let n$3 = i$2[e$3];
							return n$3 || (n$3 = function(t$5) {
								const e$4 = {}, n$4 = t$5.getMediaInfo();
								return e$4.state = Ui, e$4.currentRepresentation = null, function(t$6) {
									t$6 && t$6.type && (l$2[t$6.type] = {}, l$2[t$6.type].w = [], l$2[t$6.type].prev_w = [], l$2[t$6.type].Q = 0, l$2[t$6.type].segment_request_start_s = 0, l$2[t$6.type].segment_download_finish_s = 0, l$2[t$6.type].B_target = 1.5);
								}(n$4), s$1(e$4), e$4;
							}(t$4), i$2[e$3] = n$3), n$3;
						}(t$3);
						if (!l$2[r$3]) return a$2;
						switch (a$2.reason.state = u$3.state, u$3.state) {
							case Fi: break;
							case Ui:
								(function(t$4, e$3, a$3) {
									const r$4 = t$4.getMediaInfo(), i$3 = t$4.getMediaType(), o$4 = t$4.getThroughputController().getSafeAverageThroughput(i$3);
									if (isNaN(o$4)) return e$3;
									const s$2 = t$4.getAbrController(), u$4 = s$2.getOptimalRepresentationForBitrate(r$4, o$4, !0), d$3 = n$2.getCurrentBufferLevel(i$3, !0), c$3 = l$2[i$3], f$3 = s$2.getPossibleVoRepresentationsFilteredBySettings(r$4, !0);
									if (e$3.representation = u$4, e$3.reason.throughput = o$4, a$3.currentRepresentation = u$4, !isNaN(a$3.lastSegmentDurationS) && d$3 >= c$3.B_target) {
										a$3.state = ji, c$3.Q = qi;
										for (let t$5 = 0; t$5 < f$3.length; ++t$5) f$3[t$5].id === a$3.currentRepresentation.id ? c$3.prev_w[t$5] = 1 : c$3.prev_w[t$5] = 0;
									}
								})(t$3, a$2, u$3);
								break;
							case ji:
								(function(t$4, e$3, a$3) {
									let r$4 = [];
									const i$3 = t$4.getThroughputController(), o$4 = t$4.getMediaType();
									let s$2 = i$3.getAverageThroughput(o$4, S$1.default.THROUGHPUT_CALCULATION_MODES.ARITHMETIC_MEAN, 1), u$4 = n$2.getCurrentHttpRequest(o$4), d$3 = null;
									const c$3 = l$2[o$4];
									if (s$2 < 1 && (s$2 = 1), u$4.url === a$3.lastSegmentUrl || u$4.type === z.HTTPRequest.INIT_SEGMENT_TYPE) d$3 = a$3.currentRepresentation;
									else {
										let e$4 = a$3.lastSegmentDurationS, n$3 = 1;
										const i$4 = t$4.getAbrController(), l$3 = t$4.getMediaInfo(), o$5 = i$4.getPossibleVoRepresentationsFilteredBySettings(l$3, !0);
										let f$3 = t$4.getVideoModel().getPlaybackRate();
										const m$3 = Math.max(Math.pow(4, 1), qi * Math.sqrt(4));
										for (let t$5 = 0; t$5 < o$5.length; ++t$5) {
											const a$4 = o$5[t$5];
											f$3 * a$4.bitrateInKbit > s$2 && (n$3 = -1), c$3.w[t$5] = c$3.prev_w[t$5] + n$3 * (e$4 / (2 * m$3)) * ((c$3.Q + qi) * (f$3 * a$4.bitrateInKbit / s$2));
										}
										c$3.w = function(t$5) {
											const e$5 = t$5.length;
											let n$4 = !1, a$4 = [];
											for (let n$5 = 0; n$5 < e$5; ++n$5) a$4[n$5] = t$5[n$5];
											let r$5 = t$5.sort((function(t$6, e$6) {
												return e$6 - t$6;
											})), i$5 = 0, l$4 = 0, o$6 = [];
											for (let t$6 = 0; t$6 < e$5 - 1; ++t$6) if (i$5 += r$5[t$6], l$4 = (i$5 - 1) / (t$6 + 1), l$4 >= r$5[t$6 + 1]) {
												n$4 = !0;
												break;
											}
											n$4 || (l$4 = (i$5 + r$5[e$5 - 1] - 1) / e$5);
											for (let t$6 = 0; t$6 < e$5; ++t$6) o$6[t$6] = Math.max(a$4[t$6] - l$4, 0);
											return o$6;
										}(c$3.w);
										for (let t$5 = 0; t$5 < o$5.length; ++t$5) r$4[t$5] = c$3.w[t$5] - c$3.prev_w[t$5], c$3.prev_w[t$5] = c$3.w[t$5];
										const h$2 = o$5.map(((t$5) => t$5.bandwidth));
										c$3.Q = Math.max(0, c$3.Q - e$4 + e$4 * f$3 * ((g$2(h$2, c$3.prev_w) + g$2(h$2, r$4)) / s$2));
										let p$2 = [];
										for (let t$5 = 0; t$5 < h$2.length; ++t$5) p$2[t$5] = Math.abs(h$2[t$5] - g$2(c$3.w, h$2));
										const b$2 = p$2.indexOf(Math.min(...p$2));
										d$3 = i$4.getRepresentationByAbsoluteIndex(b$2, l$3, !0), d$3.absoluteIndex > a$3.currentRepresentation.absoluteIndex && h$2[a$3.currentRepresentation.absoluteIndex + 1] <= s$2 && (d$3 = i$4.getRepresentationByAbsoluteIndex(a$3.currentRepresentation.absoluteIndex + 1, l$3, !0)), d$3.bitrateInKbit >= s$2 && (c$3.Q = 2 * Math.max(qi, c$3.Q)), a$3.lastSegmentUrl = u$4.url;
									}
									e$3.representation = d$3, a$3.currentRepresentation = e$3.representation;
								})(t$3, a$2, u$3);
								break;
							default: (function(t$4, e$3, n$3) {
								const a$3 = t$4.getAbrController(), r$4 = t$4.getMediaInfo(), i$3 = t$4.getMediaType(), l$3 = t$4.getThroughputController().getSafeAverageThroughput(i$3);
								e$3.representation = a$3.getOptimalRepresentationForBitrate(r$4, l$3, !0), e$3.reason.throughput = l$3, n$3.state = Ui, s$1(n$3);
							})(t$3, a$2, u$3);
						}
						return a$2;
					} catch (t$4) {
						return o$2.error(t$4), Ti(e$2).create();
					}
				},
				reset: function() {
					m$2(), a$1.off(R.default.PLAYBACK_SEEKING, u$2, r$2), a$1.off(R.default.MEDIA_FRAGMENT_LOADED, d$2, r$2), a$1.off(R.default.METRIC_ADDED, c$2, r$2);
				}
			}, o$2 = (0, C.default)(e$2).getInstance().getLogger(r$2), m$2(), a$1.on(R.default.PLAYBACK_SEEKING, u$2, r$2), a$1.on(R.default.MEDIA_FRAGMENT_LOADED, d$2, r$2), a$1.on(R.default.METRIC_ADDED, c$2, r$2), r$2;
		}
		Bi.__dashjs_factory_name = "L2ARule";
		var Gi = N.default.getClassFactory(Bi);
		function Hi() {
			const t$2 = this.context;
			let e$2, n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2;
			function d$2() {
				a$1 = null, r$2 = 1, i$2 = 100, l$2 = 0, o$2 = null, s$1 = null, u$2 = "dynamic_weight_selection";
			}
			function c$2() {
				let t$3 = 0;
				if (a$1) for (let e$3 = 0; e$3 < a$1.length; e$3++) {
					let n$3 = a$1[e$3];
					n$3.state.throughput > t$3 && (t$3 = n$3.state.throughput);
				}
				return t$3;
			}
			function f$2(t$3, e$3, n$3) {
				let a$2 = t$3.map(((t$4, a$3) => n$3[a$3] * Math.pow(t$4 - e$3[a$3], 2))).reduce(((t$4, e$4) => t$4 + e$4));
				return (a$2 < 0 ? -1 : 1) * Math.sqrt(Math.abs(a$2));
			}
			function g$2(t$3, e$3) {
				return f$2([
					t$3.state.throughput,
					t$3.state.latency,
					t$3.state.rebuffer,
					t$3.state.switch
				], [
					e$3.state.throughput,
					e$3.state.latency,
					e$3.state.rebuffer,
					e$3.state.switch
				], [
					1,
					1,
					1,
					1
				]);
			}
			function m$2(t$3, e$3) {
				for (let n$3 = 0; n$3 < a$1.length; n$3++) {
					let r$3 = a$1[n$3], i$3 = .1;
					const l$3 = g$2(r$3, t$3);
					h$2(r$3, e$3, Math.exp(-1 * Math.pow(l$3, 2) / (2 * Math.pow(i$3, 2))));
				}
			}
			function h$2(t$3, e$3, n$3) {
				let a$2 = t$3.state, r$3 = [
					.01,
					.01,
					.01,
					.01
				];
				a$2.throughput = a$2.throughput + (e$3[0] - a$2.throughput) * r$3[0] * n$3, a$2.latency = a$2.latency + (e$3[1] - a$2.latency) * r$3[1] * n$3, a$2.rebuffer = a$2.rebuffer + (e$3[2] - a$2.rebuffer) * r$3[2] * n$3, a$2.switch = a$2.switch + (e$3[3] - a$2.switch) * r$3[3] * n$3;
			}
			return e$2 = {
				getNextQuality: function(t$3, e$3, d$3, g$3, h$3, p$2, b$2, y$2) {
					let E$2 = g$3, _$2 = d$3;
					(function(t$4, e$4) {
						if (!a$1) {
							a$1 = [];
							const n$3 = e$4.getPossibleVoRepresentationsFilteredBySettings(t$4, !0), i$3 = n$3.map(((t$5) => t$5.bandwidth));
							l$2 = Math.min(...i$3), r$2 = function(t$5) {
								const e$5 = t$5.map(((t$6) => Math.pow(t$6, 2))).reduce(((t$6, e$6) => t$6 + e$6));
								return Math.sqrt(e$5);
							}(i$3), n$3.forEach(((t$5) => {
								let e$5 = {
									representation: t$5,
									state: {
										throughput: t$5.bandwidth / r$2,
										latency: 0,
										rebuffer: 0,
										switch: 0
									}
								};
								a$1.push(e$5);
							})), s$1 = function(t$5) {
								let e$5 = [], n$4 = function(t$6) {
									let e$6 = [];
									for (let n$5 = 0; n$5 < t$6; n$5++) {
										let t$7 = [
											Math.random() * c$2(),
											Math.random(),
											Math.random(),
											Math.random()
										];
										e$6.push(t$7);
									}
									return e$6;
								}(Math.pow(t$5.length, 2));
								e$5.push(n$4[0]);
								let a$2 = [
									1,
									1,
									1,
									1
								];
								for (let r$4 = 1; r$4 < t$5.length; r$4++) {
									let t$6 = null, r$5 = null;
									for (let i$5 = 0; i$5 < n$4.length; i$5++) {
										let l$4 = n$4[i$5], o$3 = null;
										for (let t$7 = 0; t$7 < e$5.length; t$7++) {
											let n$5 = f$2(l$4, e$5[t$7], a$2);
											(null === o$3 || n$5 < o$3) && (o$3 = n$5);
										}
										(null === r$5 || o$3 > r$5) && (t$6 = l$4, r$5 = o$3);
									}
									e$5.push(t$6);
								}
								let r$3 = null, i$4 = null;
								for (let t$6 = 0; t$6 < e$5.length; t$6++) {
									let n$5 = 0;
									for (let r$4 = 0; r$4 < e$5.length; r$4++) t$6 !== r$4 && (n$5 += f$2(e$5[t$6], e$5[r$4], a$2));
									(null === r$3 || n$5 > r$3) && (r$3 = n$5, i$4 = t$6);
								}
								let l$3 = [];
								for (l$3.push(e$5[i$4]), e$5.splice(i$4, 1); e$5.length > 0;) {
									let t$6 = null, n$5 = null;
									for (let r$4 = 0; r$4 < e$5.length; r$4++) {
										let i$5 = f$2(l$3[0], e$5[r$4], a$2);
										(null === t$6 || i$5 < t$6) && (t$6 = i$5, n$5 = r$4);
									}
									l$3.push(e$5[n$5]), e$5.splice(n$5, 1);
								}
								return l$3;
							}(a$1);
						}
					})(e$3, t$3);
					let T$2 = d$3 / r$2;
					T$2 > 1 && (T$2 = c$2()), g$3 /= i$2;
					let v$2 = a$1.find(((t$4) => t$4.representation.id === b$2.id)), w$2 = v$2.representation.bandwidth * y$2.getSegmentDuration() / _$2, S$2 = Math.max(0, w$2 - h$3);
					if (h$3 - w$2 < y$2.getMinBuffer()) return n$2.debug(`Buffer is low for bitrate= ${v$2.representation.bandwidth} downloadTime=${w$2} currentBuffer=${h$3} rebuffer=${S$2}`), function(t$4, e$4) {
						let n$3 = 0, r$3 = t$4;
						if (a$1) for (let i$3 = 0; i$3 < a$1.length; i$3++) {
							let l$3 = a$1[i$3];
							l$3.representation.bandwidth < t$4.representation.bandwidth && l$3.representation.bandwidth > n$3 && e$4 > l$3.representation.bandwidth && (n$3 = l$3.representation.bandwidth, r$3 = l$3);
						}
						return r$3;
					}(v$2, _$2).representation;
					switch (u$2) {
						case "manual_weight_selection":
							o$2 = [
								.4,
								.4,
								.4,
								.4
							];
							break;
						case "random_weight_selection":
							o$2 = function(t$4) {
								let e$4 = [], n$3 = Math.sqrt(2 / t$4);
								for (let t$5 = 0; t$5 < 4; t$5++) e$4.push(Math.random() * n$3);
								return o$2 = e$4, o$2;
							}(a$1.length);
							break;
						default: (function(t$4, e$4, n$3, r$3, i$3, l$3) {
							o$2 || (o$2 = s$1[s$1.length - 1]);
							let u$3 = t$4.findWeightVector(a$1, e$4, n$3, r$3, i$3, l$3);
							null !== u$3 && -1 !== u$3 && (o$2 = u$3);
						})(y$2, E$2, h$3, S$2, _$2, p$2);
					}
					let I$1 = null, k$1 = null, A$1 = null;
					for (let t$4 = 0; t$4 < a$1.length; t$4++) {
						let e$4 = a$1[t$4], r$3 = e$4.state, i$3 = [
							r$3.throughput,
							r$3.latency,
							r$3.rebuffer,
							r$3.switch
						], s$2 = o$2.slice(), u$3 = y$2.getNextBufferWithBitrate(e$4.representation.bandwidth, h$3, _$2), c$3 = u$3 < y$2.getMinBuffer();
						c$3 && n$2.debug(`Buffer is low for bitrate=${e$4.representation.bandwidth} downloadTime=${w$2} currentBuffer=${h$3} nextBuffer=${u$3}`), (e$4.representation.bandwidth > d$3 - 1e4 || c$3) && e$4.representation.bandwidth !== l$2 && (s$2[0] = 100);
						let g$4 = f$2(i$3, [
							T$2,
							0,
							0,
							0
						], s$2);
						(null === I$1 || g$4 < I$1) && (I$1 = g$4, k$1 = e$4.representation, A$1 = e$4);
					}
					let R$1 = Math.abs(v$2.representation.bandwidth - A$1.representation.bandwidth) / r$2;
					return m$2(v$2, [
						T$2,
						g$3,
						S$2,
						R$1
					]), m$2(A$1, [
						T$2,
						0,
						0,
						R$1
					]), k$1;
				},
				reset: function() {
					d$2();
				}
			}, n$2 = (0, C.default)(t$2).getInstance().getLogger(e$2), d$2(), e$2;
		}
		Hi.__dashjs_factory_name = "LearningAbrController";
		var Yi = N.default.getClassFactory(Hi), Vi = class {
			constructor() {
				this.type = null, this.lastBitrate = null, this.weights = {}, this.weights.bitrateReward = null, this.weights.bitrateSwitchPenalty = null, this.weights.rebufferPenalty = null, this.weights.latencyPenalty = null, this.weights.playbackSpeedPenalty = null, this.bitrateWSum = 0, this.bitrateSwitchWSum = 0, this.rebufferWSum = 0, this.latencyWSum = 0, this.playbackSpeedWSum = 0, this.totalQoe = 0;
			}
		};
		function Ki() {
			let t$2, e$2, n$2, a$1, r$2;
			function i$2() {
				e$2 = null, n$2 = null, a$1 = null, r$2 = null;
			}
			function l$2(t$3, e$3, n$3, a$2) {
				let r$3 = new Vi();
				return r$3.type = t$3, r$3.weights.bitrateReward = e$3 || 1, r$3.weights.bitrateSwitchPenalty = 1, r$3.weights.rebufferPenalty = n$3 || 1e3, r$3.weights.latencyPenalty = [], r$3.weights.latencyPenalty.push({
					threshold: 1.1,
					penalty: .05 * a$2
				}), r$3.weights.latencyPenalty.push({
					threshold: 1e8,
					penalty: .1 * n$3
				}), r$3.weights.playbackSpeedPenalty = a$2 || 200, r$3;
			}
			function o$2(t$3, e$3, n$3, a$2, r$3) {
				r$3.bitrateWSum += r$3.weights.bitrateReward * t$3, r$3.lastBitrate && (r$3.bitrateSwitchWSum += r$3.weights.bitrateSwitchPenalty * Math.abs(t$3 - r$3.lastBitrate)), r$3.lastBitrate = t$3, r$3.rebufferWSum += r$3.weights.rebufferPenalty * e$3;
				for (let t$4 = 0; t$4 < r$3.weights.latencyPenalty.length; t$4++) {
					let e$4 = r$3.weights.latencyPenalty[t$4];
					if (n$3 <= e$4.threshold) {
						r$3.latencyWSum += e$4.penalty * n$3;
						break;
					}
				}
				r$3.playbackSpeedWSum += r$3.weights.playbackSpeedPenalty * Math.abs(1 - a$2), r$3.totalQoe = r$3.bitrateWSum - r$3.bitrateSwitchWSum - r$3.rebufferWSum - r$3.latencyWSum - r$3.playbackSpeedWSum;
			}
			return t$2 = {
				setupPerSegmentQoe: function(t$3, i$3, o$3) {
					e$2 = l$2("segment", t$3, i$3, o$3), n$2 = t$3, a$1 = i$3, r$2 = o$3;
				},
				logSegmentMetrics: function(t$3, n$3, a$2, r$3) {
					e$2 && o$2(t$3, n$3, a$2, r$3, e$2);
				},
				getPerSegmentQoe: function() {
					return e$2;
				},
				calculateSingleUseQoe: function(t$3, e$3, i$3, s$1) {
					let u$2 = null;
					return n$2 && a$1 && r$2 && (u$2 = l$2("segment", n$2, a$1, r$2)), u$2 ? (o$2(t$3, e$3, i$3, s$1, u$2), u$2.totalQoe) : 0;
				},
				reset: function() {
					i$2();
				}
			}, i$2(), t$2;
		}
		Ki.__dashjs_factory_name = "LoLpQoeEvaluator";
		var Wi = N.default.getClassFactory(Ki);
		function $i(t$2) {
			let e$2, n$2, r$2, i$2, l$2 = t$2.targetLatency, o$2 = t$2.bufferMin, s$1 = t$2.segmentDuration, u$2 = t$2.qoeEvaluator;
			function d$2() {
				return s$1;
			}
			function c$2(t$3, e$3) {
				const n$3 = d$2();
				let a$1;
				return a$1 = e$3 > n$3 ? t$3 - n$3 : t$3 + n$3 - e$3, a$1;
			}
			return e$2 = {
				getMinBuffer: function() {
					return o$2;
				},
				getSegmentDuration: d$2,
				getNextBufferWithBitrate: function(t$3, e$3, n$3) {
					return c$2(e$3, t$3 * s$1 / n$3);
				},
				getNextBuffer: c$2,
				findWeightVector: function(t$3, e$3, n$3, a$1, d$3, f$2) {
					let g$2 = null, m$2 = null, h$2 = null, p$2 = Math.abs(e$3 - i$2);
					return t$3.forEach(((t$4) => {
						r$2.forEach(((a$2) => {
							a$2[0];
							let r$3, i$3 = a$2[1], b$2 = a$2[2], y$2 = (a$2[3], t$4.representation.bandwidth * s$1 / d$3), E$2 = c$2(n$3, y$2);
							r$3 = 0 === b$2 ? 10 : 1 / b$2;
							let _$2 = r$3 * Math.max(1e-5, y$2 - E$2);
							r$3 = 0 === i$3 ? 10 : 1 / i$3;
							let T$2 = r$3 * t$4.state.latency, v$2 = u$2.calculateSingleUseQoe(t$4.representation.bandwidth, _$2, T$2, f$2);
							(null === g$2 || v$2 > g$2) && function(t$5, e$4, n$4) {
								return !(t$5 > l$2 + n$4) && e$4 >= o$2;
							}(e$3, E$2, p$2) && (g$2 = v$2, m$2 = a$2, h$2 = t$4.representation.bandwidth);
						}));
					})), null === m$2 && null === h$2 && (m$2 = -1), i$2 = e$3, m$2;
				}
			}, n$2 = [
				.2,
				.4,
				.6,
				.8,
				1
			], r$2 = function(t$3) {
				let e$3 = t$3.map((function(t$4) {
					return [t$4];
				})), n$3 = function(e$4, a$1, r$3) {
					if (r$3 === a$1) return e$4;
					let i$3 = e$4.length;
					for (let n$4 = 0; n$4 < i$3; n$4++) {
						let n$5 = e$4.shift();
						for (let a$2 = 0; a$2 < t$3.length; a$2++) e$4.push(n$5.concat(t$3[a$2]));
					}
					return n$3(e$4, a$1, r$3 + 1);
				};
				return n$3(e$3, 4, 1);
			}(n$2), i$2 = 0, e$2;
		}
		$i.__dashjs_factory_name = "LoLpWeightSelector";
		var Xi = N.default.getClassFactory($i);
		function Qi(t$2) {
			let e$2, n$2, a$1, r$2, i$2 = (t$2 = t$2 || {}).dashMetrics, l$2 = this.context;
			return n$2 = {
				getSwitchRequest: function(t$3) {
					try {
						let n$3 = Ti(l$2).create();
						n$3.rule = this.getClassName();
						let o$2 = t$3.getMediaInfo().type, s$1 = t$3.getAbrController();
						const u$2 = t$3.getStreamInfo();
						let d$2 = t$3.getRepresentation();
						const c$2 = t$3.getMediaInfo(), f$2 = i$2.getCurrentBufferState(o$2), g$2 = t$3.getScheduleController(), m$2 = i$2.getCurrentBufferLevel(o$2, !0), h$2 = g$2.getPlaybackController();
						let p$2 = h$2.getCurrentLiveLatency();
						if (o$2 === S$1.default.AUDIO) return n$3;
						p$2 || (p$2 = 0);
						const b$2 = h$2.getPlaybackRate(), y$2 = t$3.getThroughputController().getSafeAverageThroughput(o$2);
						if (e$2.debug(`Throughput ${Math.round(y$2)} kbps`), isNaN(y$2) || !f$2) return n$3;
						if (s$1.getAbandonmentStateFor(u$2.id, o$2) === k.ABANDON_LOAD) return n$3;
						let E$2 = s$1.getPossibleVoRepresentationsFilteredBySettings(c$2, !0).map(((t$4) => t$4.bandwidth)), _$2 = t$3.getRepresentation().fragmentDuration, T$2 = Math.min(...E$2) / 1e3, v$2 = Math.max(...E$2) / 1e3, w$2 = d$2.bandwidth / 1e3, I$1 = i$2.getCurrentHttpRequest(o$2, !0), A$1 = (I$1.tresponse.getTime() - I$1.trequest.getTime()) / 1e3, R$1 = A$1 > _$2 ? A$1 - _$2 : 0;
						r$2.setupPerSegmentQoe(_$2, v$2, T$2), r$2.logSegmentMetrics(w$2, R$1, p$2, b$2);
						let N$1 = Xi(l$2).create({
							targetLatency: 1.5,
							bufferMin: .3,
							segmentDuration: _$2,
							qoeEvaluator: r$2
						});
						return n$3.representation = a$1.getNextQuality(s$1, c$2, 1e3 * y$2, p$2, m$2, b$2, d$2, N$1), n$3.reason = {
							throughput: y$2,
							latency: p$2
						}, n$3.priority = Ti.PRIORITY.STRONG, g$2.setTimeToLoadDelay(0), n$3;
					} catch (t$4) {
						throw t$4;
					}
				},
				reset: function() {
					a$1.reset(), r$2.reset();
				}
			}, e$2 = (0, C.default)(l$2).getInstance().getLogger(n$2), a$1 = Yi(l$2).create(), r$2 = Wi(l$2).create(), n$2;
		}
		Qi.__dashjs_factory_name = "LoLPRule";
		var Zi = N.default.getClassFactory(Qi);
		function Ji(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.mediaPlayerModel, a$1 = t$2.customParametersModel, r$2 = t$2.dashMetrics, i$2 = t$2.settings, l$2 = (0, A.default)(e$2).getInstance();
			let o$2, s$1, u$2, d$2;
			function c$2() {
				Object.values(S$1.default.QUALITY_SWITCH_RULES).forEach(((t$3) => {
					s$1 = f$2(t$3, s$1);
				})), Object.values(S$1.default.ABANDON_FRAGMENT_RULES).forEach(((t$3) => {
					u$2 = f$2(t$3, u$2);
				})), a$1.getAbrCustomRules().forEach((function(t$3) {
					t$3.type === S$1.default.RULES_TYPES.QUALITY_SWITCH_RULES && s$1.push(t$3.rule(e$2).create()), t$3.type === S$1.default.RULES_TYPES.ABANDON_FRAGMENT_RULES && u$2.push(t$3.rule(e$2).create());
				})), 0 === s$1.length && (s$1.push(Li(e$2).create({
					dashMetrics: r$2,
					mediaPlayerModel: n$2,
					settings: i$2
				})), s$1.push(wi(e$2).create({ dashMetrics: r$2 })));
			}
			function f$2(t$3, a$2) {
				const l$3 = t$3.charAt(0).toLowerCase() + t$3.slice(1);
				return i$2.get().streaming.abr.rules[l$3].active && !function(t$4, e$3) {
					return t$4.filter(((t$5) => t$5.getClassName() === e$3)).length > 0;
				}(a$2, t$3) ? (a$2.push(function(t$4) {
					switch (t$4) {
						case S$1.default.QUALITY_SWITCH_RULES.BOLA_RULE: return Li(e$2).create({
							dashMetrics: r$2,
							mediaPlayerModel: n$2,
							settings: i$2
						});
						case S$1.default.QUALITY_SWITCH_RULES.THROUGHPUT_RULE: return wi(e$2).create({ dashMetrics: r$2 });
						case S$1.default.QUALITY_SWITCH_RULES.INSUFFICIENT_BUFFER_RULE: return Ii(e$2).create({
							dashMetrics: r$2,
							settings: i$2
						});
						case S$1.default.QUALITY_SWITCH_RULES.SWITCH_HISTORY_RULE: return Di(e$2).create();
						case S$1.default.QUALITY_SWITCH_RULES.DROPPED_FRAMES_RULE: return Ni(e$2).create();
						case S$1.default.QUALITY_SWITCH_RULES.LEARN_TO_ADAPT_RULE: return Gi(e$2).create({
							dashMetrics: r$2,
							settings: i$2
						});
						case S$1.default.QUALITY_SWITCH_RULES.LOL_PLUS_RULE: return Zi(e$2).create({ dashMetrics: r$2 });
						case S$1.default.ABANDON_FRAGMENT_RULES.ABANDON_REQUEST_RULE: return Ai(e$2).create({
							dashMetrics: r$2,
							mediaPlayerModel: n$2,
							settings: i$2
						});
					}
				}(t$3)), a$2) : i$2.get().streaming.abr.rules[l$3].active ? a$2 : function(t$4, e$3) {
					return t$4.filter(((t$5) => t$5.getClassName() !== e$3));
				}(a$2, t$3);
			}
			function g$2(t$3) {
				return t$3.filter(((t$4) => t$4.representation !== Ti.NO_CHANGE));
			}
			function m$2(t$3) {
				const e$3 = {};
				let n$3, a$2, r$3, i$3 = null;
				if (0 !== t$3.length) {
					for (e$3[Ti.PRIORITY.STRONG] = null, e$3[Ti.PRIORITY.WEAK] = null, e$3[Ti.PRIORITY.DEFAULT] = null, n$3 = 0, a$2 = t$3.length; n$3 < a$2; n$3 += 1) r$3 = t$3[n$3], r$3.representation !== Ti.NO_CHANGE && (null === e$3[r$3.priority] || e$3[r$3.priority].representation !== Ti.NO_CHANGE && r$3.representation.bitrateInKbit < e$3[r$3.priority].representation.bitrateInKbit) && (e$3[r$3.priority] = r$3);
					return e$3[Ti.PRIORITY.WEAK] && e$3[Ti.PRIORITY.WEAK].representation !== Ti.NO_CHANGE && (i$3 = e$3[Ti.PRIORITY.WEAK]), e$3[Ti.PRIORITY.DEFAULT] && e$3[Ti.PRIORITY.DEFAULT].representation !== Ti.NO_CHANGE && (i$3 = e$3[Ti.PRIORITY.DEFAULT]), e$3[Ti.PRIORITY.STRONG] && e$3[Ti.PRIORITY.STRONG].representation !== Ti.NO_CHANGE && (i$3 = e$3[Ti.PRIORITY.STRONG]), i$3;
				}
			}
			function h$2() {
				c$2();
			}
			return o$2 = {
				clearDataForStream: function(t$3) {
					[s$1, u$2].forEach(((e$3) => {
						e$3 && e$3.length && e$3.forEach(((e$4) => e$4.clearDataForStream && "function" == typeof e$4.clearDataForStream && e$4.clearDataForStream(t$3)));
					}));
				},
				getAbandonFragmentRules: function() {
					return u$2;
				},
				getBestPossibleSwitchRequest: function(t$3) {
					return t$3 && m$2(g$2(s$1.filter(((e$3) => {
						const n$3 = e$3.getClassName();
						if (n$3 !== S$1.default.QUALITY_SWITCH_RULES.BOLA_RULE && n$3 !== S$1.default.QUALITY_SWITCH_RULES.THROUGHPUT_RULE) return !0;
						const a$2 = t$3.getMediaType();
						return d$2[a$2] && n$3 === S$1.default.QUALITY_SWITCH_RULES.BOLA_RULE || !d$2[a$2] && n$3 === S$1.default.QUALITY_SWITCH_RULES.THROUGHPUT_RULE;
					})).map(((e$3) => e$3.getSwitchRequest(t$3))))) || Ti(e$2).create();
				},
				getBolaState: function(t$3) {
					return d$2[t$3];
				},
				getMinSwitchRequest: m$2,
				getQualitySwitchRules: function() {
					return s$1;
				},
				handleNewMediaInfo: function(t$3) {
					s$1.forEach(((e$3) => e$3.handleNewMediaInfo && e$3.handleNewMediaInfo(t$3))), u$2.forEach(((e$3) => e$3.handleNewMediaInfo && e$3.handleNewMediaInfo(t$3)));
				},
				initialize: function() {
					s$1 = [], u$2 = [], d$2 = {}, c$2(), l$2.on(R.default.SETTING_UPDATED_ABR_ACTIVE_RULES, h$2, o$2);
				},
				reset: function() {
					[s$1, u$2].forEach(((t$3) => {
						t$3 && t$3.length && t$3.forEach(((t$4) => t$4.reset && t$4.reset()));
					})), s$1 = [], u$2 = [], d$2 = {}, l$2.off(R.default.SETTING_UPDATED_ABR_ACTIVE_RULES, h$2, o$2);
				},
				setBolaState: function(t$3, e$3) {
					d$2[t$3] = e$3;
				},
				shouldAbandonFragment: function(t$3) {
					if (!t$3) return Ti(e$2).create();
					const n$3 = m$2(g$2(u$2.map(((e$3) => e$3.shouldAbandon(t$3)))));
					return n$3 && (n$3.reason.forceAbandon = !0), n$3 || Ti(e$2).create();
				}
			}, o$2;
		}
		Ji.__dashjs_factory_name = "ABRRulesCollection";
		const tl = N.default.getClassFactory(Ji);
		N.default.updateSingletonFactory(Ji.__dashjs_factory_name, tl);
		var el = tl;
		function nl(t$2) {
			let e$2;
			const n$2 = (t$2 = t$2 || {}).abrController, a$1 = t$2.throughputController, r$2 = t$2.switchRequestHistory, i$2 = t$2.droppedFramesHistory, l$2 = t$2.currentRequest, o$2 = t$2.streamProcessor ? t$2.streamProcessor.getScheduleController() : null, s$1 = t$2.streamProcessor ? t$2.streamProcessor.getRepresentation() : null, u$2 = t$2.videoModel ? t$2.videoModel : null;
			function d$2() {
				return s$1 ? s$1.mediaInfo : null;
			}
			return e$2 = {
				getAbrController: function() {
					return n$2;
				},
				getCurrentRequest: function() {
					return l$2;
				},
				getDroppedFramesHistory: function() {
					return i$2;
				},
				getMediaInfo: d$2,
				getMediaType: function() {
					const t$3 = d$2();
					return t$3 ? t$3.type : null;
				},
				getRepresentation: function() {
					return s$1;
				},
				getScheduleController: function() {
					return o$2;
				},
				getStreamInfo: function() {
					const t$3 = d$2();
					return t$3 ? t$3.streamInfo : null;
				},
				getSwitchRequestHistory: function() {
					return r$2;
				},
				getThroughputController: function() {
					return a$1;
				},
				getVideoModel: function() {
					return u$2;
				}
			}, e$2;
		}
		nl.__dashjs_factory_name = "RulesContext";
		var al = N.default.getClassFactory(nl);
		function rl() {
			let t$2 = {}, e$2 = {};
			const n$2 = this.context, a$1 = (0, K.default)(n$2).getInstance();
			return {
				clearForStream: function(n$3) {
					delete t$2[n$3], delete e$2[n$3];
				},
				getSwitchRequests: function(e$3, n$3) {
					return null != e$3 && null != n$3 && t$2[e$3] && t$2[e$3][n$3] ? t$2[e$3][n$3] : {};
				},
				push: function(n$3) {
					const r$2 = n$3.currentRepresentation, i$2 = n$3.newRepresentation;
					if (r$2.mediaInfo.streamInfo.id !== i$2.mediaInfo.streamInfo.id || i$2.mediaInfo.id !== r$2.mediaInfo.id) return;
					const l$2 = r$2.mediaInfo.streamInfo.id;
					t$2[l$2] || function(n$4) {
						t$2[n$4] = {}, e$2[n$4] = {};
					}(l$2);
					const o$2 = r$2.mediaInfo.type;
					t$2[l$2][o$2] || function(n$4, a$2) {
						t$2[n$4][a$2] = {}, e$2[n$4][a$2] = [];
					}(l$2, o$2);
					const s$1 = n$3.currentRepresentation.id;
					t$2[l$2][o$2][s$1] || function(e$3, n$4, a$2) {
						t$2[e$3][n$4][a$2] = {
							noDrops: 0,
							drops: 0,
							dropSize: 0
						};
					}(l$2, o$2, s$1);
					let u$2 = n$3.newRepresentation.absoluteIndex - n$3.currentRepresentation.absoluteIndex, d$2 = u$2 < 0 ? 1 : 0, c$2 = d$2 ? -u$2 : 0, f$2 = d$2 ? 0 : 1;
					t$2[l$2][o$2][n$3.currentRepresentation.id].drops += d$2, t$2[l$2][o$2][n$3.currentRepresentation.id].dropSize += c$2, t$2[l$2][o$2][n$3.currentRepresentation.id].noDrops += f$2, e$2[l$2][o$2].push({
						id: n$3.currentRepresentation.id,
						noDrop: f$2,
						drop: d$2,
						dropSize: c$2
					});
					const g$2 = function(t$3, n$4) {
						return e$2[t$3][n$4].length > a$1.get().streaming.abr.rules.switchHistoryRule.parameters.sampleSize ? e$2[t$3][n$4].shift() : null;
					}(l$2, o$2);
					g$2 && function(e$3, n$4, a$2) {
						t$2[e$3][n$4][a$2.id].drops -= a$2.drop, t$2[e$3][n$4][a$2.id].dropSize -= a$2.dropSize, t$2[e$3][n$4][a$2.id].noDrops -= a$2.noDrop;
					}(l$2, o$2, g$2);
				},
				reset: function() {
					t$2 = {}, e$2 = {};
				}
			};
		}
		rl.__dashjs_factory_name = "SwitchRequestHistory";
		var il = N.default.getClassFactory(rl);
		function ll() {
			let t$2 = {}, e$2 = {}, n$2 = {};
			return {
				clearForStream: function(a$1) {
					delete t$2[a$1], delete e$2[a$1], delete n$2[a$1];
				},
				getFrameHistory: function(e$3) {
					return t$2[e$3];
				},
				push: function(a$1, r$2, i$2) {
					if (!r$2) return;
					t$2[a$1] || function(a$2) {
						t$2[a$2] = [], e$2[a$2] = 0, n$2[a$2] = 0;
					}(a$1);
					let l$2 = i$2 && i$2.droppedVideoFrames ? i$2.droppedVideoFrames : 0, o$2 = i$2 && i$2.totalVideoFrames ? i$2.totalVideoFrames : 0, s$1 = l$2 - e$2[a$1];
					e$2[a$1] = l$2;
					let u$2 = o$2 - n$2[a$1];
					n$2[a$1] = o$2;
					const d$2 = t$2[a$1];
					d$2[r$2] ? (d$2[r$2].droppedVideoFrames += s$1, d$2[r$2].totalVideoFrames += u$2) : d$2[r$2] = {
						droppedVideoFrames: s$1,
						totalVideoFrames: u$2
					};
				},
				reset: function() {
					t$2 = {}, e$2 = {}, n$2 = {};
				}
			};
		}
		ll.__dashjs_factory_name = "DroppedFramesHistory";
		var ol = N.default.getClassFactory(ll);
		function sl() {
			const t$2 = this.context, e$2 = (0, C.default)(t$2).getInstance(), n$2 = (0, A.default)(t$2).getInstance();
			let a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, w$2;
			function I$1() {
				u$2 = {}, s$1 = {}, void 0 === c$2 && (c$2 = !1), _$2 && _$2.reset(), E$2 && E$2.reset(), y$2 = void 0, _$2 = void 0, E$2 = void 0, clearTimeout(d$2), d$2 = null;
			}
			function N$1(t$3) {
				let e$3 = x$1(t$3, !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]);
				return e$3 = function(t$4) {
					try {
						return function(t$5) {
							try {
								if (!w$2.get().streaming.cmsd.enabled || !w$2.get().streaming.cmsd.abr.applyMb) return t$5;
								const e$4 = t$5.filter(((t$6) => {
									const e$5 = t$6.mediaInfo.type;
									let n$3 = p$2.getMaxBitrate(e$5);
									if (e$5 !== S$1.default.VIDEO || n$3 < 0) return !0;
									const a$2 = t$6.mediaInfo.streamInfo.id;
									return n$3 -= s$1[a$2][S$1.default.AUDIO].getRepresentation().bitrateInKbit || 0, t$6.bitrateInKbit <= n$3;
								}));
								return e$4.length > 0 ? e$4 : t$5;
							} catch (e$4) {
								return r$2.error(e$4), t$5;
							}
						}(t$4 = function(t$5) {
							try {
								if (!w$2.get().streaming.abr.limitBitrateByPortal) return t$5;
								const { elementWidth: e$4 } = g$2.getVideoElementSize(), n$3 = t$5.filter(((t$6) => t$6.mediaInfo.type !== S$1.default.VIDEO || t$6.width <= e$4));
								return n$3.length > 0 ? n$3 : t$5;
							} catch (e$4) {
								return r$2.error(e$4), t$5;
							}
						}(t$4 = function(t$5) {
							try {
								const e$4 = t$5.filter(((t$6) => {
									const e$5 = t$6.mediaInfo.type, n$3 = t$6.bitrateInKbit, a$2 = m$2.getAbrBitrateParameter("maxBitrate", e$5), r$3 = m$2.getAbrBitrateParameter("minBitrate", e$5);
									return !(a$2 > -1 && n$3 > a$2 || r$3 > -1 && n$3 < r$3);
								}));
								return e$4.length > 0 ? e$4 : t$5;
							} catch (e$4) {
								return r$2.error(e$4), t$5;
							}
						}(t$4)));
					} catch (e$4) {
						return r$2.error(e$4), t$4;
					}
				}(e$3), e$3;
			}
			function x$1(t$3, e$3) {
				let n$3 = [];
				if (!t$3) return n$3;
				return function(t$4) {
					try {
						const e$4 = [];
						if (t$4 && e$4.push(t$4), !w$2.get().streaming.abr.enableSupplementalPropertyAdaptationSetSwitching || !t$4.adaptationSetSwitchingCompatibleIds || 0 === t$4.adaptationSetSwitchingCompatibleIds.length) return e$4;
						const n$4 = s$1[t$4.streamInfo.id][t$4.type].getAllMediaInfos().filter(((e$5) => t$4.adaptationSetSwitchingCompatibleIds.includes(e$5.id)));
						return e$4.concat(n$4);
					} catch (e$4) {
						return [t$4];
					}
				}(t$3).forEach(((t$4) => {
					let e$4 = f$2.getVoRepresentations(t$4);
					e$4 && e$4.length > 0 && (n$3 = n$3.concat(e$4));
				})), n$3 = function(t$4) {
					return t$4 = function(t$5) {
						let e$4 = null;
						return t$5.filter(((t$6) => (e$4 || (e$4 = t$6.mediaInfo), !isNaN(t$6.qualityRanking) && f$2.areMediaInfosEqual(e$4, t$6.mediaInfo)))).length === t$5.length;
					}(t$4) ? function(t$5) {
						return t$5.sort(((t$6, e$4) => e$4.qualityRanking - t$6.qualityRanking)), t$5;
					}(t$4) : function(t$5) {
						return t$5.sort(((t$6, e$4) => f$2.areMediaInfosEqual(t$6.mediaInfo, e$4.mediaInfo) ? isNaN(t$6.pixelsPerSecond) || isNaN(e$4.pixelsPerSecond) || t$6.pixelsPerSecond === e$4.pixelsPerSecond ? t$6.bandwidth - e$4.bandwidth : t$6.pixelsPerSecond - e$4.pixelsPerSecond : isNaN(t$6.pixelsPerSecond) || isNaN(e$4.pixelsPerSecond) || t$6.pixelsPerSecond === e$4.pixelsPerSecond ? isNaN(t$6.bitsPerPixel) || isNaN(e$4.bitsPerPixel) ? t$6.bandwidth - e$4.bandwidth : e$4.bitsPerPixel - t$6.bitsPerPixel : t$6.pixelsPerSecond - e$4.pixelsPerSecond)), t$5;
					}(t$4);
				}(n$3), n$3.forEach(((t$4, e$4) => {
					t$4.absoluteIndex = e$4;
				})), n$3 = n$3.filter(((n$4) => {
					const a$2 = !!e$3 || f$2.areMediaInfosEqual(n$4.mediaInfo, t$3), r$3 = !n$4 || !n$4.mediaInfo || o$2.areKeyIdsUsable(n$4.mediaInfo);
					return a$2 && r$3;
				})), n$3;
			}
			function M$1(e$3) {
				const n$3 = e$3.request.mediaType, r$3 = e$3.streamId;
				if (!(n$3 && r$3 && s$1[r$3] && w$2.get().streaming.abr.autoSwitchBitrate[n$3])) return;
				const o$3 = s$1[r$3][n$3];
				if (!o$3) return;
				const c$3 = al(t$2).create({
					abrController: a$1,
					streamProcessor: o$3,
					currentRequest: e$3.request,
					throughputController: T$2,
					adapter: f$2,
					videoModel: g$2
				}), m$3 = i$2.shouldAbandonFragment(c$3);
				m$3 && m$3.representation !== Ti.NO_CHANGE && function(t$3, e$4, n$4, a$2, r$4) {
					if (a$2.getFragmentModel().getRequests({
						state: B.FRAGMENT_MODEL_LOADING,
						index: t$3.request.index
					})[0]) {
						const t$4 = function(t$5, e$5) {
							return u$2[t$5] && u$2[t$5][e$5] ? u$2[t$5][e$5] : null;
						}(e$4, n$4);
						t$4 && (t$4.state = k.ABANDON_LOAD), E$2.reset(), P$1(n$4, l$2.getActiveStreamInfo(), r$4.representation, r$4.reason), clearTimeout(d$2), d$2 = setTimeout((() => {
							t$4 && (u$2[e$4][n$4].state = k.ALLOW_LOAD), d$2 = null;
						}), w$2.get().streaming.abandonLoadTimeout);
					}
				}(e$3, r$3, n$3, o$3, m$3);
			}
			function z$1(t$3) {
				t$3.mediaType === S$1.default.VIDEO && (void 0 !== y$2 && _$2.push(t$3.streamId, y$2, g$2.getPlaybackQuality()), y$2 = t$3.newRepresentation.id);
			}
			function O$1(t$3) {
				!F$1() || t$3.metric !== k.BUFFER_LEVEL || t$3.mediaType !== S$1.default.AUDIO && t$3.mediaType !== S$1.default.VIDEO || function(t$4, e$3) {
					try {
						const n$3 = m$2.getBufferTimeDefault(), a$2 = n$3, l$3 = .5 * n$3, o$3 = i$2.getBolaState(t$4), s$2 = e$3 >= (o$3 ? l$3 : a$2);
						i$2.setBolaState(t$4, s$2), s$2 !== o$3 && (s$2 ? r$2.info("[" + t$4 + "] switching from throughput to buffer occupancy ABR rule (buffer: " + e$3.toFixed(3) + ").") : r$2.info("[" + t$4 + "] switching from buffer occupancy to throughput ABR rule (buffer: " + e$3.toFixed(3) + ")."));
					} catch (t$5) {
						r$2.error(t$5);
					}
				}(t$3.mediaType, .001 * t$3.value.level);
			}
			function P$1(t$3, e$3, n$3) {
				let a$2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
				if (!(e$3 && e$3.id && t$3 && s$1 && s$1[e$3.id] && s$1[e$3.id][t$3] && n$3)) return;
				const r$3 = s$1[e$3.id][t$3].getRepresentation();
				r$3 && n$3.id === r$3.id || L$1(r$3, n$3, a$2);
			}
			function L$1(t$3, e$3, a$2) {
				const i$3 = e$3.mediaInfo.streamInfo.id, l$3 = e$3.mediaInfo.type;
				if (l$3 && s$1[i$3] && s$1[i$3][l$3]) {
					const o$3 = s$1[i$3][l$3].getStreamInfo(), u$3 = v$2.getCurrentBufferLevel(l$3), d$3 = null !== t$3 && !f$2.areMediaInfosEqual(t$3.mediaInfo, e$3.mediaInfo), c$3 = t$3 ? t$3.bitrateInKbit : 0;
					r$2.info(`[AbrController]: Switching quality in period ${i$3} for media type ${l$3}. Switch from bitrate ${c$3} to bitrate ${e$3.bitrateInKbit}. Current buffer level: ${u$3}. Reason:` + (a$2 ? JSON.stringify(a$2) : "/")), n$2.trigger(R.default.QUALITY_CHANGE_REQUESTED, {
						oldRepresentation: t$3,
						newRepresentation: e$3,
						reason: a$2,
						streamInfo: o$3,
						mediaType: l$3,
						isAdaptationSetSwitch: d$3
					}, {
						streamId: o$3.id,
						mediaType: l$3
					});
					const g$3 = T$2.getAverageThroughput(l$3);
					isNaN(g$3) || b$2.setSavedBitrateSettings(l$3, g$3);
				}
			}
			function F$1() {
				return w$2.get().streaming.abr.rules.bolaRule.active && w$2.get().streaming.abr.rules.throughputRule.active;
			}
			return a$1 = {
				checkPlaybackQuality: function(e$3, n$3) {
					try {
						if (!(e$3 && s$1 && s$1[n$3] && s$1[n$3][e$3])) return !1;
						if (_$2) {
							const t$3 = g$2.getPlaybackQuality();
							t$3 && _$2.push(n$3, y$2, t$3);
						}
						if (!w$2.get().streaming.abr.autoSwitchBitrate[e$3]) return !1;
						const r$3 = s$1[n$3][e$3], l$3 = r$3.getRepresentation(), o$3 = al(t$2).create({
							abrController: a$1,
							throughputController: T$2,
							switchRequestHistory: E$2,
							droppedFramesHistory: _$2,
							streamProcessor: r$3,
							adapter: f$2,
							videoModel: g$2
						}), d$3 = i$2.getBestPossibleSwitchRequest(o$3);
						if (!d$3 || !d$3.representation) return !1;
						let c$3 = d$3.representation;
						return E$2.push({
							currentRepresentation: l$3,
							newRepresentation: c$3
						}), c$3.id !== l$3.id && (u$2[n$3][e$3].state === k.ALLOW_LOAD || c$3.absoluteIndex < l$3.absoluteIndex) && (L$1(l$3, c$3, d$3.reason), !0);
					} catch (t$3) {
						return r$2.error(t$3), !1;
					}
				},
				clearDataForStream: function(t$3) {
					_$2 && _$2.clearForStream(t$3), s$1[t$3] && delete s$1[t$3], E$2 && E$2.clearForStream(t$3), u$2[t$3] && delete u$2[t$3], i$2.clearDataForStream(t$3);
				},
				getAbandonmentStateFor: function(t$3, e$3) {
					return u$2[t$3] && u$2[t$3][e$3] ? u$2[t$3][e$3].state : null;
				},
				getInitialBitrateFor: function(t$3) {
					if (t$3 === S$1.default.TEXT) return NaN;
					let e$3 = m$2.getAbrBitrateParameter("initialBitrate", t$3);
					if (e$3 > 0) return e$3;
					let n$3 = NaN;
					if (b$2 && b$2.hasOwnProperty("getSavedBitrateSettings") && (n$3 = b$2.getSavedBitrateSettings(t$3)), !isNaN(n$3)) return n$3;
					const a$2 = T$2.getAverageThroughput(t$3);
					return !isNaN(a$2) && a$2 > 0 ? a$2 : t$3 === S$1.default.VIDEO ? 1e3 : 100;
				},
				getOptimalRepresentationForBitrate: function(t$3, e$3) {
					const n$3 = N$1(t$3, !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]);
					if (!n$3 || 0 === n$3.length) return null;
					const a$2 = n$3.reduce(((t$4, e$4) => t$4.bandwidth < e$4.bandwidth ? t$4 : e$4));
					if (e$3 <= 0) return a$2;
					const r$3 = n$3.filter(((t$4) => t$4.bitrateInKbit <= e$3));
					return r$3 && 0 !== r$3.length ? r$3.reduce(((t$4, e$4) => e$4.absoluteIndex > t$4.absoluteIndex ? e$4 : t$4)) : a$2;
				},
				getPossibleVoRepresentations: function(t$3) {
					return x$1(t$3, !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]);
				},
				getPossibleVoRepresentationsFilteredBySettings: N$1,
				getRepresentationByAbsoluteIndex: function(t$3, e$3) {
					let n$3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
					return isNaN(t$3) || t$3 < 0 ? null : N$1(e$3, n$3).find(((e$4) => e$4.absoluteIndex === t$3));
				},
				handleNewMediaInfo: function(t$3) {
					i$2.handleNewMediaInfo(t$3);
				},
				initialize: function() {
					_$2 = ol(t$2).create(), E$2 = il(t$2).create(), i$2 = el(t$2).create({
						dashMetrics: v$2,
						customParametersModel: h$2,
						mediaPlayerModel: m$2,
						settings: w$2
					}), i$2.initialize(), n$2.on(D.default.QUALITY_CHANGE_RENDERED, z$1, a$1), n$2.on(D.default.METRIC_ADDED, O$1, a$1), n$2.on(R.default.LOADING_PROGRESS, M$1, a$1);
				},
				isPlayingAtLowestQuality: function(t$3) {
					return N$1(t$3.mediaInfo, !0)[0].id === t$3.id;
				},
				isPlayingAtTopQuality: function(t$3) {
					if (!t$3) return !0;
					const e$3 = N$1(t$3.mediaInfo, !0);
					return e$3[e$3.length - 1].id === t$3.id;
				},
				registerStreamType: function(t$3, e$3) {
					const n$3 = e$3.getStreamInfo().id;
					s$1[n$3] || (s$1[n$3] = {}), s$1[n$3][t$3] = e$3, u$2[n$3] || (u$2[n$3] = {}), u$2[n$3][t$3] = {}, u$2[n$3][t$3].state = k.ALLOW_LOAD, void 0 === i$2.getBolaState(t$3) && i$2.setBolaState(t$3, w$2.get().streaming.abr.rules.bolaRule.active && !F$1());
				},
				reset: function() {
					I$1(), n$2.off(D.default.QUALITY_CHANGE_RENDERED, z$1, a$1), n$2.off(D.default.METRIC_ADDED, O$1, a$1), n$2.off(R.default.LOADING_PROGRESS, M$1, a$1), i$2 && i$2.reset();
				},
				setConfig: function(t$3) {
					t$3 && (t$3.streamController && (l$2 = t$3.streamController), t$3.throughputController && (T$2 = t$3.throughputController), t$3.domStorage && (b$2 = t$3.domStorage), t$3.mediaPlayerModel && (m$2 = t$3.mediaPlayerModel), t$3.customParametersModel && (h$2 = t$3.customParametersModel), t$3.cmsdModel && (p$2 = t$3.cmsdModel), t$3.dashMetrics && (v$2 = t$3.dashMetrics), t$3.adapter && (f$2 = t$3.adapter), t$3.videoModel && (g$2 = t$3.videoModel), t$3.settings && (w$2 = t$3.settings), t$3.capabilities && (o$2 = t$3.capabilities));
				},
				setPlaybackQuality: P$1,
				setWindowResizeEventCalled: function(t$3) {
					c$2 = t$3;
				},
				unRegisterStreamType: function(t$3, e$3) {
					try {
						s$1[t$3] && s$1[t$3][e$3] && delete s$1[t$3][e$3], u$2[t$3] && u$2[t$3][e$3] && delete u$2[t$3][e$3];
					} catch (t$4) {}
				}
			}, r$2 = e$2.getLogger(a$1), I$1(), a$1;
		}
		sl.__dashjs_factory_name = "AbrController";
		const ul = N.default.getSingletonFactory(sl);
		N.default.updateSingletonFactory(sl.__dashjs_factory_name, ul);
		var dl = ul;
		const cl = new Map([
			[S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, "loadedmetadata"],
			[S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_CURRENT_DATA, "loadeddata"],
			[S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA, "canplay"],
			[S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_ENOUGH_DATA, "canplaythrough"]
		]);
		function fl() {
			let t$2, e$2, n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2;
			const c$2 = this.context, f$2 = (0, A.default)(c$2).getInstance(), g$2 = [];
			function m$2(t$3) {
				a$1 && (arguments.length > 1 && void 0 !== arguments[1] && arguments[1] ? a$1.playbackRate = t$3 : k$1(S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA, (() => {
					a$1.playbackRate = t$3;
				})));
			}
			function h$2() {
				return g$2.length > 0;
			}
			function p$2(t$3) {
				let e$3 = g$2.indexOf(t$3);
				if (null !== t$3 && (-1 !== e$3 && g$2.splice(e$3, 1), n$2.get().streaming.buffer.syntheticStallEvents.enabled && a$1 && !h$2())) {
					const t$4 = () => {
						if (m$2(u$2 || 1, n$2.get().streaming.buffer.syntheticStallEvents.ignoreReadyState), !a$1.paused) {
							const t$5 = document.createEvent("Event");
							t$5.initEvent("playing", !0, !1), a$1.dispatchEvent(t$5);
						}
					};
					n$2.get().streaming.buffer.syntheticStallEvents.ignoreReadyState ? t$4() : (l$2 && l$2.func && l$2.event && E$2(l$2.event, l$2.func), l$2 = k$1(S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA, t$4));
				}
			}
			function b$2() {
				if (a$1 && h$2() && 0 === a$1.playbackRate) {
					const t$3 = document.createEvent("Event");
					t$3.initEvent("waiting", !0, !1), a$1.dispatchEvent(t$3);
				}
			}
			function y$2(t$3, e$3) {
				a$1 && a$1.addEventListener(t$3, e$3);
			}
			function E$2(t$3, e$3) {
				a$1 && a$1.removeEventListener(t$3, e$3);
			}
			function _$2() {
				return a$1 ? a$1.readyState : NaN;
			}
			function T$2() {
				return a$1 ? a$1.buffered : null;
			}
			function v$2() {
				return a$1 ? a$1.clientWidth : NaN;
			}
			function w$2() {
				return a$1 ? a$1.clientHeight : NaN;
			}
			function I$1(t$3, e$3, n$3, r$3, i$3) {
				if (a$1) {
					for (let l$3 = 0; l$3 < a$1.textTracks.length; l$3++) if (a$1.textTracks[l$3].kind === t$3 && (!e$3 || a$1.textTracks[l$3].label == e$3) && a$1.textTracks[l$3].language === n$3 && a$1.textTracks[l$3].isTTML === r$3 && a$1.textTracks[l$3].isEmbedded === i$3) return a$1.textTracks[l$3];
				}
				return null;
			}
			function k$1(t$3, e$3) {
				return t$3 === S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_NOTHING || _$2() >= t$3 ? (e$3(), null) : function(t$4, e$4) {
					const n$3 = () => {
						E$2(t$4, n$3), e$4(t$4);
					};
					return y$2(t$4, n$3), {
						func: n$3,
						event: t$4
					};
				}(cl.get(t$3), e$3);
			}
			return t$2 = {
				addEventListener: y$2,
				addTextTrack: function(t$3, e$3, n$3, r$3, i$3) {
					if (!a$1) return null;
					let l$3 = I$1(t$3, e$3, n$3, r$3, i$3);
					return l$3 || (l$3 = a$1.addTextTrack(t$3, e$3, n$3), l$3.isEmbedded = i$3, l$3.isTTML = r$3), l$3;
				},
				appendChild: function(t$3) {
					a$1 && (a$1.appendChild(t$3), void 0 !== t$3.isTTML && (a$1.textTracks[a$1.textTracks.length - 1].isTTML = t$3.isTTML, a$1.textTracks[a$1.textTracks.length - 1].isEmbedded = t$3.isEmbedded));
				},
				getBufferRange: T$2,
				getClientHeight: w$2,
				getClientWidth: v$2,
				getElement: function() {
					return a$1;
				},
				getEnded: function() {
					return a$1 ? a$1.ended : null;
				},
				getPlaybackQuality: function() {
					if (!a$1) return null;
					let t$3 = "webkitDroppedFrameCount" in a$1 && "webkitDecodedFrameCount" in a$1, e$3 = null;
					return "getVideoPlaybackQuality" in a$1 ? e$3 = a$1.getVideoPlaybackQuality() : t$3 && (e$3 = {
						droppedVideoFrames: a$1.webkitDroppedFrameCount,
						totalVideoFrames: a$1.webkitDroppedFrameCount + a$1.webkitDecodedFrameCount,
						creationTime: /* @__PURE__ */ new Date()
					}), e$3;
				},
				getPlaybackRate: function() {
					return a$1 ? a$1.playbackRate : null;
				},
				getPlayedRanges: function() {
					return a$1 ? a$1.played : null;
				},
				getReadyState: _$2,
				getSource: function() {
					return a$1 ? a$1.src : null;
				},
				getTTMLRenderingDiv: function() {
					return o$2;
				},
				getTextTrack: I$1,
				getTextTracks: function() {
					return a$1 ? a$1.textTracks : [];
				},
				getTime: function() {
					return a$1 ? isNaN(r$2) ? a$1.currentTime : r$2 : null;
				},
				getVideoElementSize: function() {
					const t$3 = n$2.get().streaming.abr.usePixelRatioInLimitBitrateByPortal && window.hasOwnProperty("devicePixelRatio") ? window.devicePixelRatio : 1;
					return {
						elementWidth: v$2() * t$3,
						elementHeight: w$2() * t$3
					};
				},
				getVideoHeight: function() {
					return a$1 ? a$1.videoHeight : NaN;
				},
				getVideoRelativeOffsetLeft: function() {
					if (a$1) {
						const t$3 = a$1.parentNode.host || a$1.parentNode;
						return t$3 ? a$1.getBoundingClientRect().left - t$3.getBoundingClientRect().left : NaN;
					}
					return NaN;
				},
				getVideoRelativeOffsetTop: function() {
					if (a$1) {
						const t$3 = a$1.parentNode.host || a$1.parentNode;
						return t$3 ? a$1.getBoundingClientRect().top - t$3.getBoundingClientRect().top : NaN;
					}
					return NaN;
				},
				getVideoWidth: function() {
					return a$1 ? a$1.videoWidth : NaN;
				},
				getVttRenderingDiv: function() {
					return s$1;
				},
				initialize: function() {
					f$2.on(R.default.PLAYBACK_PLAYING, b$2, this);
				},
				isPaused: function() {
					return a$1 ? a$1.paused : null;
				},
				isSeeking: function() {
					return a$1 ? a$1.seeking || !isNaN(r$2) : null;
				},
				isStalled: h$2,
				pause: function() {
					a$1 && (a$1.pause(), a$1.autoplay = !1);
				},
				play: function() {
					if (a$1) {
						a$1.autoplay = !0;
						const t$3 = a$1.play();
						t$3 && t$3.catch && "undefined" != typeof Promise && t$3.catch(((t$4) => {
							"NotAllowedError" === t$4.name && f$2.trigger(R.default.PLAYBACK_NOT_ALLOWED), e$2.warn(`Caught pending play exception - continuing (${t$4})`);
						}));
					}
				},
				removeChild: function(t$3) {
					a$1 && a$1.removeChild(t$3);
				},
				removeEventListener: E$2,
				reset: function() {
					clearTimeout(d$2), f$2.off(R.default.PLAYBACK_PLAYING, b$2, this), g$2.length = 0;
				},
				setConfig: function(t$3) {
					t$3 && t$3.settings && (n$2 = t$3.settings);
				},
				setCurrentTime: function(t$3, e$3) {
					a$1 && (i$2 && i$2.func && i$2.event && E$2(i$2.event, i$2.func), r$2 = t$3, i$2 = k$1(S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, (() => {
						if (a$1) if (a$1.currentTime !== r$2) try {
							r$2 = e$3 ? function(t$4) {
								const e$4 = T$2();
								let n$3 = t$4, a$2 = 9999999999;
								if (e$4) for (let r$3 = 0; r$3 < e$4.length; r$3++) {
									const i$3 = e$4.start(r$3), l$3 = e$4.end(r$3), o$3 = Math.abs(i$3 - t$4), s$2 = Math.abs(l$3 - t$4);
									if (t$4 >= i$3 && t$4 <= l$3) return t$4;
									o$3 < a$2 && (a$2 = o$3, n$3 = i$3), s$2 < a$2 && (a$2 = s$2, n$3 = l$3);
								}
								return n$3;
							}(r$2) : r$2, isNaN(r$2) || (a$1.currentTime = r$2), r$2 = NaN;
						} catch (t$4) {
							0 === a$1.readyState && t$4.code === t$4.INVALID_STATE_ERR && (d$2 = setTimeout((function() {
								a$1.currentTime = r$2, r$2 = NaN;
							}), 400));
						}
						else r$2 = NaN;
					})));
				},
				setDisableRemotePlayback: function(t$3) {
					a$1 && (a$1.disableRemotePlayback = t$3);
				},
				setElement: function(t$3) {
					if (!(null == t$3 || t$3 && /^(VIDEO|AUDIO)$/i.test(t$3.nodeName))) throw "element is not video or audio DOM type!";
					a$1 = t$3, a$1 && (a$1.preload = "auto");
				},
				setPlaybackRate: m$2,
				setSource: function(t$3) {
					a$1 && (t$3 ? a$1.src = t$3 : (a$1.removeAttribute("src"), a$1.load()));
				},
				setStallState: function(t$3, e$3) {
					(function(t$4, e$4) {
						e$4 ? function(t$5) {
							if (null !== t$5 && a$1 && !a$1.seeking && -1 === g$2.indexOf(t$5) && (g$2.push(t$5), n$2.get().streaming.buffer.syntheticStallEvents.enabled && a$1 && 1 === g$2.length && (n$2.get().streaming.buffer.syntheticStallEvents.ignoreReadyState || _$2() >= S$1.default.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA))) {
								u$2 = a$1.playbackRate, m$2(0, !0);
								const t$6 = document.createEvent("Event");
								t$6.initEvent("waiting", !0, !1), a$1.dispatchEvent(t$6);
							}
						}(t$4) : p$2(t$4);
					})(t$3, e$3);
				},
				setTTMLRenderingDiv: function(t$3) {
					o$2 = t$3, o$2.style.position = "absolute", o$2.style.display = "flex", o$2.style.overflow = "hidden", o$2.style.pointerEvents = "none", o$2.style.top = 0, o$2.style.left = 0;
				},
				setVttRenderingDiv: function(t$3) {
					s$1 = t$3;
				},
				waitForReadyState: k$1
			}, e$2 = (0, C.default)(c$2).getInstance().getLogger(t$2), n$2 = (0, K.default)(c$2).getInstance(), r$2 = NaN, t$2;
		}
		fl.__dashjs_factory_name = "VideoModel";
		var gl = N.default.getSingletonFactory(fl);
		const ml = [
			{
				oldKey: "dashjs_vbitrate",
				newKey: "dashjs_video_bitrate"
			},
			{
				oldKey: "dashjs_abitrate",
				newKey: "dashjs_audio_bitrate"
			},
			{
				oldKey: "dashjs_vsettings",
				newKey: "dashjs_video_settings"
			},
			{
				oldKey: "dashjs_asettings",
				newKey: "dashjs_audio_settings"
			}
		], hl = "dashjs_?_bitrate", pl = "dashjs_?_settings", bl = "localStorage", yl = "lastBitrate", El = "lastMediaSettings";
		function _l(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.settings;
			let a$1, r$2, i$2;
			function l$2(t$3) {
				if (void 0 !== i$2) return i$2;
				let e$3;
				i$2 = !1;
				try {
					"undefined" != typeof window && (e$3 = window[t$3]);
				} catch (t$4) {
					return r$2.warn("DOMStorage access denied: " + t$4.message), i$2;
				}
				if (!e$3 || t$3 !== bl && "sessionStorage" !== t$3) return i$2;
				try {
					e$3.setItem("1", "1"), e$3.removeItem("1"), i$2 = !0;
				} catch (t$4) {
					r$2.warn("DOMStorage is supported, but cannot be used: " + t$4.message);
				}
				return i$2;
			}
			function o$2() {
				const t$3 = 6e5;
				return Math.round((/* @__PURE__ */ new Date()).getTime() / t$3) * t$3;
			}
			function s$1(t$3, e$3) {
				return l$2(t$3) && n$2.get().streaming[e$3 + "CachingInfo"].enabled;
			}
			function u$2() {
				if (!n$2) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
			}
			return a$1 = {
				getSavedBitrateSettings: function(t$3) {
					if (u$2(), !n$2.get().streaming.lastBitrateCachingInfo.enabled) return NaN;
					let e$3 = NaN;
					if (s$1(bl, yl)) {
						const a$2 = hl.replace(/\?/, t$3);
						try {
							const i$3 = JSON.parse(localStorage.getItem(a$2)) || {}, l$3 = (/* @__PURE__ */ new Date()).getTime() - parseInt(i$3.timestamp, 10) >= n$2.get().streaming.lastBitrateCachingInfo.ttl || !1, o$3 = parseFloat(i$3.bitrate);
							isNaN(o$3) || l$3 ? l$3 && localStorage.removeItem(a$2) : (e$3 = o$3, r$2.debug("Last saved bitrate for " + t$3 + " was " + o$3));
						} catch (t$4) {
							return null;
						}
					}
					return e$3;
				},
				setSavedBitrateSettings: function(t$3, e$3) {
					if (s$1(bl, yl) && e$3) {
						const n$3 = hl.replace(/\?/, t$3);
						try {
							localStorage.setItem(n$3, JSON.stringify({
								bitrate: e$3.toFixed(3),
								timestamp: o$2()
							}));
						} catch (t$4) {
							r$2.error(t$4.message);
						}
					}
				},
				getSavedMediaSettings: function(t$3) {
					if (u$2(), !n$2.get().streaming.lastMediaSettingsCachingInfo.enabled) return null;
					let e$3 = null;
					if (s$1(bl, El)) {
						const a$2 = pl.replace(/\?/, t$3);
						try {
							const t$4 = JSON.parse(localStorage.getItem(a$2)) || {}, r$3 = (/* @__PURE__ */ new Date()).getTime() - parseInt(t$4.timestamp, 10) >= n$2.get().streaming.lastMediaSettingsCachingInfo.ttl || !1;
							e$3 = t$4.settings, r$3 && (localStorage.removeItem(a$2), e$3 = null);
						} catch (t$4) {
							return null;
						}
					}
					return e$3;
				},
				setSavedMediaSettings: function(t$3, e$3) {
					if (s$1(bl, El)) {
						const n$3 = pl.replace(/\?/, t$3);
						try {
							localStorage.setItem(n$3, JSON.stringify({
								settings: e$3,
								timestamp: o$2()
							}));
						} catch (t$4) {
							r$2.error(t$4.message);
						}
					}
				}
			}, r$2 = (0, C.default)(e$2).getInstance().getLogger(a$1), l$2(bl) && ml.forEach(((t$3) => {
				const e$3 = localStorage.getItem(t$3.oldKey);
				if (e$3) {
					localStorage.removeItem(t$3.oldKey);
					try {
						localStorage.setItem(t$3.newKey, e$3);
					} catch (t$4) {
						r$2.error(t$4.message);
					}
				}
			})), a$1;
		}
		_l.__dashjs_factory_name = "DOMStorage";
		var Tl = N.default.getSingletonFactory(_l), vl = n$1(8986);
		function wl() {
			const t$2 = this.context;
			let e$2, n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2, d$2, c$2, f$2;
			function g$2(t$3, e$3, a$2, i$3) {
				let l$3 = null;
				const s$2 = t$3 ? f$2.resolve(t$3.path) : null, u$3 = i$3 || {
					init: !0,
					url: s$2 ? s$2.url : void 0,
					range: {
						start: 0,
						end: 1500
					},
					searching: !1,
					bytesLoaded: 0,
					bytesToLoad: 1500,
					mediaType: e$3,
					representation: t$3
				};
				n$2.debug("Start searching for initialization.");
				const d$3 = p$2(u$3);
				o$2.load({
					request: d$3,
					success: function(n$3) {
						if (u$3.bytesLoaded = u$3.range.end, l$3 = r$2.findInitRange(n$3), !l$3) return u$3.range.end = u$3.bytesLoaded + u$3.bytesToLoad, g$2(t$3, e$3, a$2, u$3);
						t$3.range = l$3, a$2(t$3);
					},
					error: function() {
						a$2(t$3);
					}
				}), n$2.debug("Perform init search: " + u$3.url);
			}
			function m$2(t$3, e$3, a$2, i$3, l$3, s$2) {
				if (a$2 && (void 0 === a$2.start || void 0 === a$2.end)) {
					const t$4 = a$2 ? a$2.toString().split("-") : null;
					a$2 = t$4 ? {
						start: parseFloat(t$4[0]),
						end: parseFloat(t$4[1])
					} : null;
				}
				l$3 = l$3 || h$2;
				let u$3 = null, d$3 = null;
				const c$3 = !!a$2, g$3 = t$3 ? f$2.resolve(t$3.path) : null, b$2 = {
					init: !1,
					url: g$3 ? g$3.url : void 0,
					range: c$3 ? a$2 : {
						start: 0,
						end: 1500
					},
					searching: !c$3,
					bytesLoaded: s$2 ? s$2.bytesLoaded : 0,
					bytesToLoad: 1500,
					mediaType: e$3,
					representation: t$3
				}, y$2 = p$2(b$2);
				o$2.load({
					request: y$2,
					success: function(a$3) {
						const o$3 = b$2.bytesToLoad, s$3 = a$3.byteLength;
						if (b$2.bytesLoaded = b$2.range.end - b$2.range.start, u$3 = r$2.parse(a$3), d$3 = u$3.getBox("sidx"), d$3 && d$3.isComplete) {
							const a$4 = d$3.references;
							let r$3, o$4;
							if (null != a$4 && a$4.length > 0 && (r$3 = 1 === a$4[0].reference_type), r$3) {
								let r$4, o$5, s$4, u$4, c$4;
								n$2.debug("Initiate multiple SIDX load."), b$2.range.end = b$2.range.start + d$3.size;
								let f$3 = [], g$4 = 0, h$3 = (d$3.offset || b$2.range.start) + d$3.size;
								const p$3 = function(e$4) {
									e$4 ? (f$3 = f$3.concat(e$4), g$4++, g$4 >= o$5 && (f$3.sort((function(t$4, e$5) {
										return t$4.startTime - e$5.startTime < 0 ? -1 : 0;
									})), l$3(f$3, t$3, i$3))) : l$3(null, t$3, i$3);
								};
								for (r$4 = 0, o$5 = a$4.length; r$4 < o$5; r$4++) s$4 = h$3, u$4 = h$3 + a$4[r$4].referenced_size - 1, h$3 += a$4[r$4].referenced_size, c$4 = {
									start: s$4,
									end: u$4
								}, m$2(t$3, e$3, c$4, i$3, p$3, b$2);
							} else n$2.debug("Parsing segments from SIDX. representation " + e$3 + " - id: " + t$3.id + " for range : " + b$2.range.start + " - " + b$2.range.end), o$4 = function(t$4, e$4) {
								const n$3 = t$4.references, a$5 = n$3.length, r$4 = t$4.timescale;
								let i$4 = t$4.earliest_presentation_time, l$4 = e$4.range.start + t$4.offset + t$4.first_offset + t$4.size;
								const o$5 = [];
								let s$4, u$4, d$4, c$4;
								for (let t$5 = 0; t$5 < a$5; t$5++) d$4 = n$3[t$5].subsegment_duration, c$4 = n$3[t$5].referenced_size, s$4 = new dt(), s$4.duration = d$4, s$4.startTime = i$4, s$4.timescale = r$4, u$4 = l$4 + c$4 - 1, s$4.mediaRange = l$4 + "-" + u$4, o$5.push(s$4), i$4 += d$4, l$4 += c$4;
								return o$5;
							}(d$3, b$2), l$3(o$4, t$3, i$3);
						} else {
							if (d$3) b$2.range.start = d$3.offset || b$2.range.start, b$2.range.end = b$2.range.start + (d$3.size || o$3);
							else {
								if (s$3 < b$2.bytesLoaded) return void l$3(null, t$3, i$3);
								{
									const t$4 = u$3.getLastBox();
									t$4 && t$4.size ? (b$2.range.start = t$4.offset + t$4.size, b$2.range.end = b$2.range.start + o$3) : b$2.range.end += o$3;
								}
							}
							m$2(t$3, e$3, b$2.range, i$3, null, b$2);
						}
					},
					error: function() {
						l$3(null, t$3, i$3);
					}
				}), n$2.debug(`Perform SIDX load for type ${e$3} : ${b$2.url} with range ${b$2.range.start} - ${b$2.range.end}`);
			}
			function h$2(t$3, e$3, n$3) {
				n$3({
					segments: t$3,
					representation: e$3,
					error: t$3 ? void 0 : new G.default(s$1.SEGMENT_BASE_LOADER_ERROR_CODE, s$1.SEGMENT_BASE_LOADER_ERROR_MESSAGE)
				});
			}
			function p$2(t$3) {
				if (!t$3.url) return;
				const e$3 = new P();
				return e$3.setInfo(t$3), e$3;
			}
			return e$2 = {
				setConfig: function(t$3) {
					t$3.baseURLController && (f$2 = t$3.baseURLController), t$3.dashMetrics && (i$2 = t$3.dashMetrics), t$3.mediaPlayerModel && (l$2 = t$3.mediaPlayerModel), t$3.errHandler && (a$1 = t$3.errHandler), t$3.boxParser && (r$2 = t$3.boxParser), t$3.debug && (n$2 = t$3.debug.getLogger(e$2)), t$3.errors && (s$1 = t$3.errors), t$3.urlUtils && (c$2 = t$3.urlUtils), t$3.constants && (u$2 = t$3.constants), t$3.dashConstants && (d$2 = t$3.dashConstants);
				},
				initialize: function() {
					o$2 = qn(t$2).create({
						errHandler: a$1,
						dashMetrics: i$2,
						mediaPlayerModel: l$2,
						boxParser: r$2,
						errors: s$1,
						urlUtils: c$2,
						constants: u$2,
						dashConstants: d$2
					});
				},
				loadInitialization: function(t$3, e$3) {
					return new Promise(((n$3) => {
						g$2(t$3, e$3, n$3);
					}));
				},
				loadSegments: function(t$3, e$3, n$3) {
					return new Promise(((a$2) => {
						m$2(t$3, e$3, n$3, a$2);
					}));
				},
				reset: function() {
					o$2 && (o$2.abort(), o$2 = null);
				}
			}, e$2;
		}
		wl.__dashjs_factory_name = "SegmentBaseLoader";
		var Sl = N.default.getSingletonFactory(wl);
		function Il(t$2) {
			let e$2;
			t$2 = t$2 || {};
			let n$2 = new DataView(t$2.data), a$1 = 0;
			function r$2(t$3, e$3) {
				let r$3, i$3, l$2 = !0, o$2 = 0;
				if (void 0 === e$3 && (e$3 = !1), t$3.tag > 16777215 ? (n$2.getUint32(a$1) !== t$3.tag && (l$2 = !1), o$2 = 4) : t$3.tag > 65535 ? (r$3 = n$2.getUint16(a$1), i$3 = n$2.getUint8(a$1 + 2), 256 * r$3 + i$3 !== t$3.tag && (l$2 = !1), o$2 = 3) : t$3.tag > 255 ? (n$2.getUint16(a$1) !== t$3.tag && (l$2 = !1), o$2 = 2) : (n$2.getUint8(a$1) !== t$3.tag && (l$2 = !1), o$2 = 1), !l$2 && t$3.required && !e$3) throw new Error("required tag not found");
				return l$2 && (a$1 += o$2), l$2;
			}
			function i$2(t$3) {
				let e$3 = 1, r$3 = 128, i$3 = -1, l$2 = 0, o$2 = n$2.getUint8(a$1), s$1 = 0;
				for (s$1 = 0; s$1 < 8; s$1 += 1) {
					if ((o$2 & r$3) === r$3) {
						l$2 = void 0 === t$3 ? o$2 & ~r$3 : o$2, i$3 = s$1;
						break;
					}
					r$3 >>= 1;
				}
				for (s$1 = 0; s$1 < i$3; s$1 += 1, e$3 += 1) l$2 = l$2 << 8 | 255 & n$2.getUint8(a$1 + e$3);
				return a$1 += e$3, l$2;
			}
			return e$2 = {
				getPos: function() {
					return a$1;
				},
				setPos: function(t$3) {
					a$1 = t$3;
				},
				consumeTag: r$2,
				consumeTagAndSize: function(t$3, e$3) {
					let n$3 = r$2(t$3, e$3);
					return n$3 && i$2(), n$3;
				},
				parseTag: function(t$3) {
					let n$3;
					return r$2(t$3), n$3 = i$2(), e$2[t$3.parse](n$3);
				},
				skipOverElement: function(t$3, e$3) {
					let n$3, l$2 = r$2(t$3, e$3);
					return l$2 && (n$3 = i$2(), a$1 += n$3), l$2;
				},
				getMatroskaCodedNum: i$2,
				getMatroskaFloat: function(t$3) {
					let e$3;
					switch (t$3) {
						case 4:
							e$3 = n$2.getFloat32(a$1), a$1 += 4;
							break;
						case 8: e$3 = n$2.getFloat64(a$1), a$1 += 8;
					}
					return e$3;
				},
				getMatroskaUint: function(t$3) {
					if (t$3 > 4) return function(t$4) {
						const e$4 = Math.floor(Number.MAX_SAFE_INTEGER / 256);
						let r$3 = 0;
						for (let i$3 = 0; i$3 < t$4; i$3 += 1) {
							if (r$3 > e$4) throw new Error("Value exceeds safe integer limit");
							r$3 *= 256;
							const t$5 = n$2.getUint8(a$1 + i$3);
							if (r$3 > Number.MAX_SAFE_INTEGER - t$5) throw new Error("Value exceeds safe integer limit");
							r$3 += t$5;
						}
						return a$1 += t$4, r$3;
					}(t$3);
					let e$3 = 0;
					for (let r$3 = 0; r$3 < t$3; r$3 += 1) e$3 <<= 8, e$3 |= 255 & n$2.getUint8(a$1 + r$3);
					return a$1 += t$3, e$3 >>> 0;
				},
				moreData: function() {
					return a$1 < n$2.byteLength;
				}
			}, e$2;
		}
		Il.__dashjs_factory_name = "EBMLParser";
		var kl = N.default.getClassFactory(Il);
		function Al() {
			const t$2 = this.context;
			let e$2, n$2, a$1, r$2, i$2, l$2, o$2, s$1, u$2;
			function d$2(t$3) {
				const e$3 = new P();
				return e$3.setInfo(t$3), e$3;
			}
			return e$2 = {
				setConfig: function(t$3) {
					if (!(t$3.baseURLController && t$3.dashMetrics && t$3.mediaPlayerModel && t$3.errHandler)) throw new Error(S$1.default.MISSING_CONFIG_ERROR);
					u$2 = t$3.baseURLController, i$2 = t$3.dashMetrics, l$2 = t$3.mediaPlayerModel, r$2 = t$3.errHandler, s$1 = t$3.errors, n$2 = t$3.debug.getLogger(e$2);
				},
				initialize: function() {
					o$2 = qn(t$2).create({
						errHandler: r$2,
						dashMetrics: i$2,
						mediaPlayerModel: l$2,
						errors: s$1
					});
				},
				loadInitialization: function(t$3, e$3) {
					return new Promise(((a$2) => {
						let r$3 = null, i$3 = t$3 ? u$2.resolve(t$3.path) : null, l$3 = t$3 ? t$3.range.split("-") : null, s$2 = {
							range: {
								start: l$3 ? parseFloat(l$3[0]) : null,
								end: l$3 ? parseFloat(l$3[1]) : null
							},
							request: r$3,
							url: i$3 ? i$3.url : void 0,
							init: !0,
							mediaType: e$3
						};
						n$2.info("Start loading initialization."), r$3 = d$2(s$2), o$2.load({
							request: r$3,
							success: function() {
								a$2(t$3);
							},
							error: function() {
								a$2(t$3);
							}
						}), n$2.debug("Perform init load: " + s$2.url);
					}));
				},
				loadSegments: function(e$3, r$3, i$3) {
					return new Promise(((l$3) => {
						let c$2 = null, f$2 = e$3 ? u$2.resolve(e$3.path) : null, g$2 = f$2 ? f$2.url : void 0;
						c$2 = d$2({
							bytesLoaded: 0,
							bytesToLoad: 8192,
							range: {
								start: 0,
								end: 8192
							},
							request: c$2,
							url: g$2,
							init: !1,
							mediaType: r$3,
							representation: e$3
						}), n$2.debug("Parsing ebml header"), o$2.load({
							request: c$2,
							success: function(r$4) {
								(function(e$4, r$5, i$4, l$4) {
									if (!e$4 || 0 === e$4.byteLength) return void l$4(null);
									let s$2, u$3, c$3, f$3, g$3 = kl(t$2).create({ data: e$4 }), m$2 = i$4 ? i$4.split("-") : null, h$2 = null, p$2 = {
										url: r$5,
										range: {
											start: m$2 ? parseFloat(m$2[0]) : null,
											end: m$2 ? parseFloat(m$2[1]) : null
										},
										request: h$2
									};
									for (n$2.debug("Parse EBML header: " + p$2.url), g$3.skipOverElement(a$1.EBML), g$3.consumeTag(a$1.Segment), c$3 = g$3.getMatroskaCodedNum(), c$3 += g$3.getPos(), f$3 = g$3.getPos(); g$3.moreData() && !g$3.consumeTagAndSize(a$1.Segment.Info, !0);) if (!(g$3.skipOverElement(a$1.Segment.SeekHead, !0) || g$3.skipOverElement(a$1.Segment.Tracks, !0) || g$3.skipOverElement(a$1.Segment.Cues, !0) || g$3.skipOverElement(a$1.Void, !0))) throw new Error("no valid top level element found");
									for (; void 0 === s$2;) {
										let t$3 = g$3.getMatroskaCodedNum(!0), e$5 = g$3.getMatroskaCodedNum();
										t$3 === a$1.Segment.Info.Duration.tag ? s$2 = g$3[a$1.Segment.Info.Duration.parse](e$5) : g$3.setPos(g$3.getPos() + e$5);
									}
									h$2 = d$2(p$2), o$2.load({
										request: h$2,
										success: function(e$5) {
											u$3 = function(e$6, r$6, i$5, l$5) {
												let o$3, s$3, u$4, d$3, c$4, f$4, g$4, m$3;
												for (s$3 = function(e$7) {
													let n$3, r$7, i$6 = [], l$6 = kl(t$2).create({ data: e$7 });
													for (l$6.consumeTagAndSize(a$1.Segment.Cues); l$6.moreData() && l$6.consumeTagAndSize(a$1.Segment.Cues.CuePoint, !0);) {
														for (n$3 = {}, n$3.CueTime = l$6.parseTag(a$1.Segment.Cues.CuePoint.CueTime), n$3.CueTracks = []; l$6.moreData() && l$6.consumeTag(a$1.Segment.Cues.CuePoint.CueTrackPositions, !0);) {
															const t$3 = l$6.getMatroskaCodedNum(), e$8 = l$6.getPos();
															if (r$7 = {}, r$7.Track = l$6.parseTag(a$1.Segment.Cues.CuePoint.CueTrackPositions.CueTrack), 0 === r$7.Track) throw new Error("Cue track cannot be 0");
															r$7.ClusterPosition = l$6.parseTag(a$1.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition), n$3.CueTracks.push(r$7), l$6.setPos(e$8 + t$3);
														}
														if (0 === n$3.CueTracks.length) throw new Error("Mandatory cuetrack not found");
														i$6.push(n$3);
													}
													if (0 === i$6.length) throw new Error("mandatory cuepoint not found");
													return i$6;
												}(e$6), u$4 = [], c$4 = 0, f$4 = s$3.length; c$4 < f$4; c$4 += 1) d$3 = new dt(), o$3 = 0, o$3 = c$4 < s$3.length - 1 ? s$3[c$4 + 1].CueTime - s$3[c$4].CueTime : l$5 - s$3[c$4].CueTime, d$3.duration = o$3, d$3.startTime = s$3[c$4].CueTime, d$3.timescale = 1e3, g$4 = s$3[c$4].CueTracks[0].ClusterPosition + r$6, m$3 = c$4 < s$3.length - 1 ? s$3[c$4 + 1].CueTracks[0].ClusterPosition + r$6 - 1 : i$5 - 1, d$3.mediaRange = g$4 + "-" + m$3, u$4.push(d$3);
												return n$2.debug("Parsed cues: " + u$4.length + " cues."), u$4;
											}(e$5, f$3, c$3, s$2), l$4(u$3);
										},
										error: function() {
											n$2.error("Download Error: Cues " + p$2.url), l$4(null);
										}
									}), n$2.debug("Perform cues load: " + p$2.url + " bytes=" + p$2.range.start + "-" + p$2.range.end);
								})(r$4, g$2, i$3, (function(t$3) {
									l$3({
										segments: t$3,
										representation: e$3,
										error: t$3 ? void 0 : new G.default(s$1.SEGMENT_BASE_LOADER_ERROR_CODE, s$1.SEGMENT_BASE_LOADER_ERROR_MESSAGE)
									});
								}));
							},
							error: function() {
								l$3({
									representation: e$3,
									error: new G.default(s$1.SEGMENT_BASE_LOADER_ERROR_CODE, s$1.SEGMENT_BASE_LOADER_ERROR_MESSAGE)
								});
							}
						});
					}));
				},
				reset: function() {
					o$2 && (o$2.abort(), o$2 = null);
				}
			}, a$1 = {
				EBML: {
					tag: 440786851,
					required: !0
				},
				Segment: {
					tag: 408125543,
					required: !0,
					SeekHead: {
						tag: 290298740,
						required: !0
					},
					Info: {
						tag: 357149030,
						required: !0,
						TimecodeScale: {
							tag: 2807729,
							required: !0,
							parse: "getMatroskaUint"
						},
						Duration: {
							tag: 17545,
							required: !0,
							parse: "getMatroskaFloat"
						}
					},
					Tracks: {
						tag: 374648427,
						required: !0
					},
					Cues: {
						tag: 475249515,
						required: !0,
						CuePoint: {
							tag: 187,
							required: !0,
							CueTime: {
								tag: 179,
								required: !0,
								parse: "getMatroskaUint"
							},
							CueTrackPositions: {
								tag: 183,
								required: !0,
								CueTrack: {
									tag: 247,
									required: !0,
									parse: "getMatroskaUint"
								},
								CueClusterPosition: {
									tag: 241,
									required: !0,
									parse: "getMatroskaUint"
								}
							}
						}
					}
				},
				Void: {
					tag: 236,
					required: !0
				}
			}, e$2;
		}
		Al.__dashjs_factory_name = "WebmSegmentBaseLoader";
		var Rl = N.default.getSingletonFactory(Al);
		function Nl(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.eventBus, a$1 = t$2.events, r$2 = t$2.dashMetrics, i$2 = t$2.mediaPlayerModel, l$2 = t$2.errHandler, o$2 = t$2.baseURLController, s$1 = t$2.debug, u$2 = t$2.boxParser, d$2 = t$2.errors;
			let c$2, f$2, g$2;
			function m$2(t$3) {
				return "webm" === (t$3 ? t$3.split("/")[1] : "").toLowerCase();
			}
			return c$2 = {
				initialize: function() {
					f$2.initialize(), g$2.initialize();
				},
				getSegmentBaseInitSegment: function(t$3) {
					return m$2(t$3.representation.mimeType) ? g$2.loadInitialization(t$3.representation, t$3.mediaType) : f$2.loadInitialization(t$3.representation, t$3.mediaType);
				},
				getSegmentList: function(t$3) {
					return m$2(t$3.mimeType) ? g$2.loadSegments(t$3.representation, t$3.mediaType, t$3.representation ? t$3.representation.indexRange : null) : f$2.loadSegments(t$3.representation, t$3.mediaType, t$3.representation ? t$3.representation.indexRange : null);
				},
				reset: function() {
					f$2.reset(), g$2.reset();
				}
			}, f$2 = Sl(e$2).getInstance(), g$2 = Rl(e$2).getInstance(), f$2.setConfig({
				baseURLController: o$2,
				dashMetrics: r$2,
				mediaPlayerModel: i$2,
				errHandler: l$2,
				eventBus: n$2,
				events: a$1,
				errors: d$2,
				debug: s$1,
				boxParser: u$2
			}), g$2.setConfig({
				baseURLController: o$2,
				dashMetrics: r$2,
				mediaPlayerModel: i$2,
				errHandler: l$2,
				eventBus: n$2,
				events: a$1,
				errors: d$2,
				debug: s$1
			}), c$2;
		}
		Nl.__dashjs_factory_name = "SegmentBaseController";
		var Cl = N.default.getSingletonFactory(Nl), Dl = class {
			constructor() {
				this.accessibility = null, this.adaptationSetSwitchingCompatibleIds = [], this.audioChannelConfiguration = null, this.bitrateList = null, this.codec = null, this.contentProtection = null, this.essentialProperties = [], this.id = null, this.index = null, this.isEmbedded = null, this.isFragmented = null, this.isText = !1, this.labels = null, this.lang = null, this.mimeType = null, this.normalizedKeyIds = /* @__PURE__ */ new Set(), this.representationCount = 0, this.roles = null, this.segmentAlignment = !1, this.selectionPriority = 1, this.streamInfo = null, this.subSegmentAlignment = !1, this.supplementalProperties = [], this.type = null, this.viewpoint = null;
			}
		}, xl = class {
			constructor() {
				this.id = null, this.index = null, this.start = NaN, this.duration = NaN, this.manifestInfo = null, this.isLast = !0, this.isEncrypted = !1;
			}
		}, Ml = class {
			constructor() {
				this.dvrWindowSize = NaN, this.loadedTime = null, this.availableFrom = null, this.minBufferTime = NaN, this.duration = NaN, this.isDynamic = !1, this.maxFragmentDuration = null, this.serviceDescriptions = [], this.protocol = null;
			}
		}, zl = class {
			constructor(t$2) {
				this.valid = "/" == t$2[0], this.path = t$2.split("/").filter(((t$3) => 0 !== t$3.length)).map(((t$3) => {
					let e$2 = { name: t$3 }, n$2 = t$3.indexOf("[");
					if (-1 != n$2) {
						e$2.name = t$3.substring(0, n$2);
						let a$1 = t$3.substring(n$2 + 1, t$3.length - 1);
						this.valid = this.valid && -1 == a$1.indexOf("[");
						let r$2 = a$1.indexOf("=");
						-1 != r$2 ? (e$2.attribute = {
							name: a$1.substring(1, r$2),
							value: a$1.substring(r$2 + 1)
						}, -1 != ["'", "\""].indexOf(e$2.attribute.value[0]) && (e$2.attribute.value = e$2.attribute.value.substring(1, e$2.attribute.value.length - 1))) : e$2.position = parseInt(a$1, 10) - 1;
					}
					return e$2;
				}));
			}
			isValid() {
				return this.valid;
			}
			findsElement() {
				return !this.findsAttribute();
			}
			findsAttribute() {
				return this.path[this.path.length - 1].name.startsWith("@");
			}
			findsTextReplace() {
				return "text()" === this.path[this.path.length - 1].name;
			}
			getMpdTarget(t$2, e$2) {
				let n$2 = null, a$1 = t$2, r$2 = 1, i$2 = "MPD";
				for (; r$2 < this.path.length && null !== a$1;) {
					n$2 = a$1;
					let t$3 = this.path[r$2];
					if (i$2 = t$3.name, r$2 !== this.path.length - 1 || !i$2.startsWith("@") && "text()" !== i$2) {
						let e$3 = n$2[i$2] || [];
						if (0 === e$3.length && n$2[i$2] && e$3.push(n$2[i$2]), t$3.position) a$1 = e$3[t$3.position] || null;
						else if (t$3.attribute) {
							let n$3 = t$3.attribute;
							a$1 = e$3.filter(((t$4) => t$4[n$3.name] == n$3.value))[0] || null;
						} else a$1 = Array.isArray(e$3) ? e$3[0] : e$3;
					}
					r$2++;
				}
				return null === a$1 ? null : i$2.startsWith("@") ? {
					name: i$2.substring(1),
					leaf: a$1,
					target: a$1
				} : "text()" === i$2 ? {
					name: "__text",
					leaf: a$1,
					target: a$1
				} : {
					name: i$2,
					leaf: a$1,
					target: e$2 ? n$2 : a$1
				};
			}
		}, Ol = class {
			constructor(t$2, e$2, n$2) {
				this.action = t$2, this.xpath = e$2, this.value = n$2, this.position = null;
			}
			getMpdTarget(t$2) {
				let e$2 = "remove" === this.action || "replace" === this.action || "before" === this.position || "after" === this.position;
				return this.xpath.getMpdTarget(t$2, e$2);
			}
		};
		function Pl() {
			let t$2, e$2;
			const n$2 = this.context;
			return t$2 = {
				getIsPatch: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.ORIGINAL_MPD_ID) || !1;
				},
				getMpdId: function(t$3) {
					return t$3 && t$3[I.default.ORIGINAL_MPD_ID] || null;
				},
				getOriginalPublishTime: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.ORIGINAL_PUBLISH_TIME) ? new Date(t$3[I.default.ORIGINAL_PUBLISH_TIME]) : null;
				},
				getPatchOperations: function(t$3) {
					return t$3 ? (t$3.__children || []).map(((t$4) => {
						const n$3 = t$4.tagName;
						if ("add" !== n$3 && "remove" !== n$3 && "replace" !== n$3) return e$2.warn(`Ignoring node of invalid action: ${n$3}`), null;
						let a$1 = t$4.sel;
						if ("add" === n$3 && t$4.type) {
							if (!t$4.type.startsWith("@")) return e$2.warn(`Ignoring add action for prefixed namespace declaration: ${t$4.type}=${t$4.__text}`), null;
							a$1 = `${a$1}/${t$4.type}`;
						}
						let r$2 = new zl(a$1);
						if (!r$2.isValid()) return e$2.warn(`Ignoring action with invalid selector: ${n$3} - ${a$1}`), null;
						let i$2 = null;
						r$2.findsAttribute() || r$2.findsTextReplace() ? i$2 = t$4.__text || "" : "remove" !== n$3 && (i$2 = t$4.__children.reduce(((t$5, e$3) => {
							let n$4 = e$3.tagName;
							return "#text" !== n$4 && (t$5[n$4] = t$5[n$4] || [], t$5[n$4].push(e$3)), t$5;
						}), {}));
						let l$2 = new Ol(n$3, r$2, i$2);
						return "add" === n$3 && (l$2.position = t$4.pos), l$2;
					})).filter(((t$4) => !!t$4)) : [];
				},
				getPublishTime: function(t$3) {
					return t$3 && t$3.hasOwnProperty(I.default.PUBLISH_TIME) ? new Date(t$3[I.default.PUBLISH_TIME]) : null;
				}
			}, e$2 = (0, C.default)(n$2).getInstance().getLogger(t$2), t$2;
		}
		Pl.__dashjs_factory_name = "PatchManifestModel";
		var Ll = N.default.getSingletonFactory(Pl);
		function Fl(t$2) {
			let e$2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
			if ("undefined" != typeof TextDecoder) {
				const n$3 = new TextDecoder("utf-8").decode(t$2);
				if (e$2) {
					const t$3 = n$3.indexOf("\0");
					return -1 !== t$3 ? n$3.substring(0, t$3) : n$3;
				}
				return n$3.replace(/\0/g, "");
			}
			const n$2 = t$2.length;
			let a$1, r$2, i$2, l$2 = "", o$2 = 0;
			for (; o$2 < n$2;) {
				if (a$1 = t$2[o$2++], 0 === a$1 && e$2) return l$2;
				if (0 !== a$1 && 3 !== a$1) switch (a$1 >> 4) {
					case 0:
					case 1:
					case 2:
					case 3:
					case 4:
					case 5:
					case 6:
					case 7:
						l$2 += String.fromCharCode(a$1);
						break;
					case 12:
					case 13:
						r$2 = t$2[o$2++], l$2 += String.fromCharCode((31 & a$1) << 6 | 63 & r$2);
						break;
					case 14: r$2 = t$2[o$2++], i$2 = t$2[o$2++], l$2 += String.fromCharCode((15 & a$1) << 12 | (63 & r$2) << 6 | 63 & i$2);
				}
			}
			return l$2;
		}
		function Ul(t$2) {
			return function(t$3, e$2, n$2, a$1) {
				const r$2 = (i$2 = t$3) instanceof ArrayBuffer ? i$2 : i$2.buffer;
				var i$2;
				let l$2 = 1;
				"BYTES_PER_ELEMENT" in a$1 && (l$2 = a$1.BYTES_PER_ELEMENT);
				const o$2 = (c$2 = t$3) && c$2.buffer instanceof ArrayBuffer && void 0 !== c$2.byteLength && void 0 !== c$2.byteOffset ? t$3.byteOffset : 0, s$1 = (o$2 + t$3.byteLength) / l$2, u$2 = (o$2 + e$2) / l$2, d$2 = Math.floor(Math.max(0, Math.min(u$2, s$1)));
				var c$2;
				return new a$1(r$2, d$2, Math.floor(Math.min(d$2 + Math.max(n$2, 0), s$1)) - d$2);
			}(t$2, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Infinity, Uint8Array);
		}
		function jl(t$2) {
			return "PRIV" === t$2.type ? function(t$3) {
				if (t$3.size < 2) return;
				const e$2 = Fl(t$3.data, !0), n$2 = new Uint8Array(t$3.data.subarray(e$2.length + 1));
				return {
					key: t$3.type,
					info: e$2,
					data: n$2.buffer
				};
			}(t$2) : "W" === t$2.type[0] ? function(t$3) {
				if ("WXXX" === t$3.type) {
					if (t$3.size < 2) return;
					let e$3 = 1;
					const n$2 = Fl(t$3.data.subarray(e$3), !0);
					e$3 += n$2.length + 1;
					const a$1 = Fl(t$3.data.subarray(e$3));
					return {
						key: t$3.type,
						info: n$2,
						data: a$1
					};
				}
				const e$2 = Fl(t$3.data);
				return {
					key: t$3.type,
					info: "",
					data: e$2
				};
			}(t$2) : "APIC" === t$2.type ? function(t$3) {
				const e$2 = {
					key: t$3.type,
					description: "",
					data: "",
					mimeType: null,
					pictureType: null
				};
				if (t$3.size < 2) return;
				if (3 !== t$3.data[0]) return void console.log("Ignore frame with unrecognized character encoding");
				const n$2 = t$3.data.subarray(1).indexOf(0);
				if (-1 === n$2) return;
				const a$1 = Fl(Ul(t$3.data, 1, n$2)), r$2 = t$3.data[2 + n$2], i$2 = t$3.data.subarray(3 + n$2).indexOf(0);
				if (-1 === i$2) return;
				const l$2 = Fl(Ul(t$3.data, 3 + n$2, i$2));
				let o$2;
				return o$2 = "-->" === a$1 ? Fl(Ul(t$3.data, 4 + n$2 + i$2)) : (s$1 = t$3.data.subarray(4 + n$2 + i$2)) instanceof ArrayBuffer ? s$1 : 0 == s$1.byteOffset && s$1.byteLength == s$1.buffer.byteLength ? s$1.buffer : new Uint8Array(s$1).buffer, e$2.mimeType = a$1, e$2.pictureType = r$2, e$2.description = l$2, e$2.data = o$2, e$2;
				var s$1;
			}(t$2) : function(t$3) {
				if (t$3.size < 2) return;
				if ("TXXX" === t$3.type) {
					let e$3 = 1;
					const n$2 = Fl(t$3.data.subarray(e$3), !0);
					e$3 += n$2.length + 1;
					const a$1 = Fl(t$3.data.subarray(e$3));
					return {
						key: t$3.type,
						info: n$2,
						data: a$1
					};
				}
				const e$2 = Fl(t$3.data.subarray(1));
				return {
					key: t$3.type,
					info: "",
					data: e$2
				};
			}(t$2);
		}
		function ql(t$2, e$2) {
			let n$2 = 0;
			return n$2 = (127 & t$2[e$2]) << 21, n$2 |= (127 & t$2[e$2 + 1]) << 14, n$2 |= (127 & t$2[e$2 + 2]) << 7, n$2 |= 127 & t$2[e$2 + 3], n$2;
		}
		function Bl(t$2) {
			const e$2 = String.fromCharCode(t$2[0], t$2[1], t$2[2], t$2[3]), n$2 = ql(t$2, 4);
			return {
				type: e$2,
				size: n$2,
				data: t$2.subarray(10, 10 + n$2)
			};
		}
		function Gl(t$2, e$2) {
			return e$2 + 10 <= t$2.length && 51 === t$2[e$2] && 68 === t$2[e$2 + 1] && 73 === t$2[e$2 + 2] && t$2[e$2 + 3] < 255 && t$2[e$2 + 4] < 255 && t$2[e$2 + 6] < 128 && t$2[e$2 + 7] < 128 && t$2[e$2 + 8] < 128 && t$2[e$2 + 9] < 128;
		}
		function Hl(t$2, e$2) {
			return e$2 + 10 <= t$2.length && 73 === t$2[e$2] && 68 === t$2[e$2 + 1] && 51 === t$2[e$2 + 2] && t$2[e$2 + 3] < 255 && t$2[e$2 + 4] < 255 && t$2[e$2 + 6] < 128 && t$2[e$2 + 7] < 128 && t$2[e$2 + 8] < 128 && t$2[e$2 + 9] < 128;
		}
		function Yl() {
			let t$2, e$2, n$2, a$1, r$2, i$2;
			const l$2 = this.context;
			function o$2(t$3, n$3) {
				const r$3 = n$3 ? n$3.index : 0, i$3 = e$2.getAdaptationsForType(a$1[r$3].mpd.manifest, r$3, t$3);
				if (!i$3 || 0 === i$3.length) return null;
				if (i$3.length > 1 && n$3) {
					for (let t$4 = 0, n$4 = i$3.length; t$4 < n$4; t$4++) if (l$3 = i$3[t$4], e$2.getRolesForAdaptation(l$3).filter((function(t$5) {
						return t$5.schemeIdUri === S$1.default.DASH_ROLE_SCHEME_ID && t$5.value === I.default.MAIN;
					}))[0]) return i$3[t$4];
				}
				var l$3;
				return i$3[0];
			}
			function s$1(t$3, n$3, a$2, i$3, l$3, o$3) {
				let s$2, u$3, d$3, c$3, f$3, g$3, m$3 = [];
				if (!i$3 || 0 === i$3.length) return [];
				const b$3 = e$2.getAdaptationsForPeriod(n$3);
				for (c$3 = 0, g$3 = i$3.length; c$3 < g$3; c$3++) if (s$2 = i$3[c$3], d$3 = e$2.getIndexForAdaptation(s$2, t$3, a$2.index), u$3 = h$2(b$3[d$3]), o$3) {
					let t$4 = u$3.accessibility.length;
					for (f$3 = 0; f$3 < t$4; f$3++) {
						if (!u$3) continue;
						let t$5 = u$3.accessibility[f$3];
						if (t$5.schemeIdUri === r$2.ACCESSIBILITY_CEA608_SCHEME) if (t$5.value && "" !== t$5.value) {
							let e$3 = t$5.value.split(";");
							if ("CC" === e$3[0].substring(0, 2)) for (f$3 = 0; f$3 < e$3.length; f$3++) u$3 || (u$3 = h$2.call(this, b$3[d$3])), p$2(u$3, e$3[f$3].substring(0, 3), e$3[f$3].substring(4)), m$3.push(u$3), u$3 = null;
							else for (f$3 = 0; f$3 < e$3.length; f$3++) u$3 || (u$3 = h$2.call(this, b$3[d$3])), p$2(u$3, "CC" + (f$3 + 1), e$3[f$3]), m$3.push(u$3), u$3 = null;
						} else p$2(u$3, r$2.CC1, "eng"), m$3.push(u$3), u$3 = null;
					}
				} else l$3 === r$2.IMAGE ? (u$3.type = r$2.IMAGE, m$3.push(u$3), u$3 = null) : u$3 && m$3.push(u$3);
				return m$3;
			}
			function u$2(t$3) {
				const n$3 = d$2(t$3);
				return e$2.getRegularPeriods(n$3);
			}
			function d$2(t$3) {
				const n$3 = f$2(t$3);
				return e$2.getMpd(n$3);
			}
			function c$2() {
				a$1 = [];
			}
			function f$2(t$3) {
				return t$3 || (a$1.length > 0 ? a$1[0].mpd.manifest : null);
			}
			function g$2(t$3) {
				try {
					const n$3 = m$2(t$3.streamInfo, a$1), r$3 = e$2.getAdaptationsForPeriod(n$3);
					return t$3 && t$3.streamInfo && void 0 !== t$3.streamInfo.id && r$3 ? r$3[t$3.index] : null;
				} catch (t$4) {
					return null;
				}
			}
			function m$2(t$3, e$3) {
				const n$3 = e$3.length;
				for (let a$2 = 0; a$2 < n$3; a$2++) {
					let n$4 = e$3[a$2];
					if (t$3 && t$3.id === n$4.id) return n$4;
				}
				return null;
			}
			function h$2(t$3) {
				if (!t$3) return null;
				let n$3 = new Dl();
				const a$2 = t$3.period.mpd.manifest.Period[t$3.period.index].AdaptationSet[t$3.index];
				return n$3.id = t$3.id, n$3.index = t$3.index, n$3.type = t$3.type, n$3.streamInfo = b$2(t$3.period), n$3.representationCount = e$2.getRepresentationCount(a$2), n$3.labels = e$2.getLabelsForAdaptation(a$2), n$3.lang = e$2.getLanguageForAdaptation(a$2), n$3.segmentAlignment = e$2.getSegmentAlignment(a$2), n$3.subSegmentAlignment = e$2.getSubSegmentAlignment(a$2), n$3.viewpoint = e$2.getViewpointForAdaptation(a$2), n$3.accessibility = e$2.getAccessibilityForAdaptation(a$2), n$3.accessibility.filter((function(t$4) {
					if (t$4.schemeIdUri && t$4.schemeIdUri.search("cea-608") >= 0 && void 0 !== i$2) return !0;
				}))[0] && (n$3.embeddedCaptions = !0), n$3.audioChannelConfiguration = e$2.getAudioChannelConfigurationForAdaptation(a$2), 0 === n$3.audioChannelConfiguration.length && a$2.Representation && a$2.Representation.length > 0 && (n$3.audioChannelConfiguration = e$2.getAudioChannelConfigurationForRepresentation(a$2.Representation[0])), n$3.roles = e$2.getRolesForAdaptation(a$2), n$3.codec = e$2.getCodec(a$2), n$3.mimeType = e$2.getMimeType(a$2), n$3.contentProtection = e$2.getContentProtectionByAdaptation(a$2), n$3.bitrateList = e$2.getBitrateListForAdaptation(a$2), n$3.selectionPriority = e$2.getSelectionPriority(a$2), n$3.contentProtection && n$3.contentProtection.length > 0 && (n$3.contentProtection = function(t$4, n$4) {
					if (!t$4 || !t$4.length || !n$4) return t$4;
					const a$3 = e$2.getContentProtectionByManifest(n$4);
					if (!a$3 || !a$3.length) return t$4;
					const r$3 = a$3.reduce(((t$5, e$3) => (e$3.refId && t$5.set(e$3.refId, e$3), t$5)), /* @__PURE__ */ new Map());
					return t$4.map(((t$5) => {
						if (t$5.ref) {
							const e$3 = r$3.get(t$5.ref);
							e$3 && t$5.mergeAttributesFromReference(e$3);
						}
						return t$5;
					}));
				}(n$3.contentProtection, t$3.period.mpd.manifest), n$3.contentProtection = function(t$4) {
					const e$3 = t$4.map(((t$5) => t$5.cencDefaultKid)).filter(((t$5) => null !== t$5));
					if (e$3.length) {
						const n$4 = e$3[0];
						t$4.forEach(((t$5) => {
							t$5.keyId = n$4;
						}));
					}
					return t$4;
				}(n$3.contentProtection), n$3.normalizedKeyIds = function(t$4) {
					const e$3 = /* @__PURE__ */ new Set();
					return t$4.forEach(((t$5) => {
						t$5.cencDefaultKid && "string" == typeof t$5.cencDefaultKid && e$3.add(t$5.cencDefaultKid.replace(/-/g, "").toLowerCase());
					})), e$3;
				}(n$3.contentProtection)), n$3.isText = e$2.getIsText(a$2), n$3.essentialProperties = e$2.getCombinedEssentialPropertiesForAdaptationSet(a$2), n$3.supplementalProperties = e$2.getCombinedSupplementalPropertiesForAdaptationSet(a$2), n$3.isFragmented = e$2.getIsFragmented(a$2), n$3.isEmbedded = !1, n$3.adaptationSetSwitchingCompatibleIds = function(t$4) {
					if (!t$4 || !t$4.supplementalProperties) return [];
					let e$3 = [];
					const n$4 = t$4.supplementalProperties.filter(((t$5) => t$5.schemeIdUri === I.default.ADAPTATION_SET_SWITCHING_SCHEME_ID_URI));
					return n$4 && n$4.length > 0 && (e$3 = n$4[0].value.toString().split(",").map(((t$5) => t$5))), e$3;
				}(n$3), n$3;
			}
			function p$2(t$3, e$3, n$3) {
				t$3.id = e$3, t$3.index = 100 + parseInt(e$3.substring(2, 3)), t$3.type = r$2.TEXT, t$3.codec = "cea-608-in-SEI", t$3.isEmbedded = !0, t$3.isFragmented = !1, t$3.lang = rr(n$3), t$3.roles = [{
					schemeIdUri: "urn:mpeg:dash:role:2011",
					value: "caption"
				}];
			}
			function b$2(t$3) {
				let n$3 = new xl();
				return n$3.id = t$3.id, n$3.index = t$3.index, n$3.start = t$3.start, n$3.duration = t$3.duration, n$3.manifestInfo = function(t$4) {
					let n$4 = new Ml();
					return n$4.dvrWindowSize = t$4.timeShiftBufferDepth, n$4.loadedTime = t$4.manifest.loadedTime, n$4.availableFrom = t$4.availabilityStartTime, n$4.minBufferTime = t$4.manifest.minBufferTime, n$4.maxFragmentDuration = t$4.maxSegmentDuration, n$4.duration = e$2.getDuration(t$4.manifest), n$4.isDynamic = e$2.getIsDynamic(t$4.manifest), n$4.serviceDescriptions = e$2.getServiceDescriptions(t$4.manifest), n$4.protocol = t$4.manifest.protocol, n$4;
				}(t$3.mpd), n$3.isLast = 1 === t$3.mpd.manifest.Period.length || Math.abs(n$3.start + n$3.duration - n$3.manifestInfo.duration) < 1, n$3.isEncrypted = t$3.isEncrypted, n$3;
			}
			function y$2() {
				if (!r$2) throw new Error("setConfig function has to be called previously");
			}
			function E$2(t$3) {
				return a$1.length > 0 ? a$1[0].mpd.manifest.Period[t$3] : null;
			}
			function _$2(t$3, e$3, n$3) {
				let a$2, r$3, i$3, l$3, o$3, s$2;
				if (t$3) {
					for (r$3 = t$3.AdaptationSet, o$3 = 0; o$3 < r$3.length; o$3 += 1) for (a$2 = r$3[o$3], l$3 = a$2.Representation, s$2 = 0; s$2 < l$3.length; s$2 += 1) if (i$3 = l$3[s$2], e$3 === i$3.id) return n$3 ? s$2 : i$3;
				}
				return null;
			}
			return t$2 = {
				applyPatchToManifest: function(t$3, e$3) {
					n$2.getPatchOperations(e$3).forEach(((e$4) => {
						let n$3 = e$4.getMpdTarget(t$3);
						if (null === n$3) return;
						let { name: a$2, target: r$3, leaf: i$3 } = n$3;
						if (e$4.xpath.findsAttribute() || "__text" === a$2) {
							switch (e$4.action) {
								case "add":
								case "replace":
									r$3[a$2] = e$4.value;
									break;
								case "remove": delete r$3[a$2];
							}
							return;
						}
						let l$3 = (r$3[a$2] || []).indexOf(i$3), o$3 = "prepend" === e$4.position || "before" === e$4.position;
						if ("remove" === e$4.action || "replace" === e$4.action) if (Array.isArray(r$3[a$2])) {
							if (-1 != l$3) {
								let t$4 = r$3[a$2];
								t$4.splice(l$3, 1), t$4.length > 0 ? r$3[a$2] = t$4 : delete r$3[a$2];
							}
						} else delete r$3[a$2];
						"add" !== e$4.action && "replace" !== e$4.action || Object.keys(e$4.value).forEach(((t$4) => {
							let n$4 = e$4.value[t$4], i$4 = r$3[t$4] || [];
							if (0 === i$4.length && r$3[t$4] && i$4.push(r$3[t$4]), 0 === i$4.length) i$4 = n$4;
							else {
								let r$4 = i$4.length;
								r$4 = t$4 == a$2 && -1 != l$3 ? l$3 + (o$3 ? 0 : 1) + ("replace" === e$4.action ? -1 : 0) : o$3 ? 0 : i$4.length, i$4.splice.apply(i$4, [r$4, 0].concat(n$4));
							}
							r$3[t$4] = i$4;
						}));
					}));
				},
				areMediaInfosEqual: function(t$3, e$3) {
					if (!t$3 || !e$3) return !1;
					const n$3 = t$3.id === e$3.id, a$2 = t$3.codec === e$3.codec, r$3 = JSON.stringify(t$3.viewpoint) === JSON.stringify(e$3.viewpoint), i$3 = t$3.lang === e$3.lang, l$3 = JSON.stringify(t$3.roles) === JSON.stringify(e$3.roles), o$3 = JSON.stringify(t$3.accessibility) === JSON.stringify(e$3.accessibility), s$2 = JSON.stringify(t$3.audioChannelConfiguration) === JSON.stringify(e$3.audioChannelConfiguration);
					return n$3 && a$2 && r$3 && i$3 && l$3 && o$3 && s$2;
				},
				getAllMediaInfoForType: function(t$3, n$3, i$3) {
					let l$3 = a$1, o$3 = i$3, d$3 = [];
					if (o$3) y$2(), l$3 = u$2(o$3);
					else {
						if (!(a$1.length > 0)) return d$3;
						o$3 = a$1[0].mpd.manifest;
					}
					const c$3 = m$2(t$3, l$3);
					let f$3 = e$2.getAdaptationsForType(o$3, t$3 ? t$3.index : null, n$3);
					return d$3 = s$1(o$3, c$3, t$3, f$3, n$3), n$3 === r$2.TEXT && (f$3 = e$2.getAdaptationsForType(o$3, t$3 ? t$3.index : null, r$2.VIDEO), d$3 = d$3.concat(s$1(o$3, c$3, t$3, f$3, n$3, !0))), d$3;
				},
				getAvailabilityStartTime: function(t$3) {
					const n$3 = d$2(t$3);
					return e$2.getAvailabilityStartTime(n$3);
				},
				getBandwidthForRepresentation: function(t$3, e$3) {
					let n$3;
					return n$3 = _$2(E$2(e$3), t$3), n$3 ? n$3.bandwidth : null;
				},
				getBaseURLsFromElement: function(t$3) {
					return e$2.getBaseURLsFromElement(t$3);
				},
				getCodec: function(t$3, n$3, a$2) {
					return e$2.getCodec(t$3, n$3, a$2);
				},
				getContentSteering: function(t$3) {
					return e$2.getContentSteering(t$3);
				},
				getDuration: function(t$3) {
					const n$3 = f$2(t$3);
					return e$2.getDuration(n$3);
				},
				getEssentialPropertiesForAdaptationSet: function(t$3) {
					try {
						return e$2.getEssentialPropertiesForRepresentation(t$3);
					} catch (t$4) {
						return [];
					}
				},
				getEssentialPropertiesForRepresentation: function(t$3) {
					try {
						return e$2.getEssentialPropertiesForRepresentation(t$3);
					} catch (t$4) {
						return [];
					}
				},
				getEvent: function(t$3, e$3, n$3, a$2) {
					try {
						if (!t$3 || !e$3 || isNaN(n$3) || !a$2) return null;
						const r$3 = t$3.scheme_id_uri, i$3 = t$3.value;
						if (!e$3[r$3 + "/" + i$3]) return null;
						const l$3 = new ae(), o$3 = t$3.timescale || 1, s$2 = a$2.adaptation.period.start, u$3 = e$3[r$3 + "/" + i$3], d$3 = isNaN(a$2.presentationTimeOffset) ? isNaN(u$3.presentationTimeOffset) ? 0 : u$3.presentationTimeOffset : a$2.presentationTimeOffset;
						let c$3, f$3 = t$3.presentation_time_delta / o$3;
						c$3 = 0 === t$3.version ? s$2 + n$3 - d$3 + f$3 : s$2 - d$3 + f$3;
						const g$3 = t$3.event_duration / o$3, m$3 = t$3.id, h$3 = t$3.message_data;
						return l$3.eventStream = u$3, l$3.eventStream.value = i$3, l$3.eventStream.timescale = o$3, l$3.duration = g$3, l$3.id = m$3, l$3.calculatedPresentationTime = c$3, l$3.messageData = h$3, l$3.presentationTimeDelta = f$3, l$3.parsedMessageData = r$3 === S$1.default.ID3_SCHEME_ID_URI ? function(t$4) {
							let e$4 = 0;
							const n$4 = [];
							for (; Hl(t$4, e$4);) {
								const a$3 = ql(t$4, e$4 + 6);
								t$4[e$4 + 5] >> 6 & 1 && (e$4 += 10), e$4 += 10;
								const r$4 = e$4 + a$3;
								for (; e$4 + 10 < r$4;) {
									const a$4 = Bl(t$4.subarray(e$4)), r$5 = jl(a$4);
									r$5 && n$4.push(r$5), e$4 += a$4.size + 10;
								}
								Gl(t$4, e$4) && (e$4 += 10);
							}
							return n$4;
						}(h$3) : null, l$3;
					} catch (t$4) {
						return null;
					}
				},
				getEventsFor: function(t$3, n$3, r$3) {
					let i$3 = [];
					if (a$1.length > 0) {
						const l$3 = a$1[0].mpd.manifest;
						if (t$3 instanceof xl) {
							const n$4 = m$2(t$3, a$1);
							i$3 = e$2.getEventsForPeriod(n$4);
						} else if (t$3 instanceof Dl) {
							const n$4 = m$2(r$3, a$1);
							i$3 = e$2.getEventStreamForAdaptationSet(l$3, g$2(t$3), n$4);
						} else if (t$3 instanceof fe) {
							const t$4 = m$2(r$3, a$1);
							i$3 = e$2.getEventStreamForRepresentation(l$3, n$3, t$4);
						}
					}
					return i$3;
				},
				getFramerate: function(t$3) {
					return e$2.getFramerate(t$3);
				},
				getIndexForRepresentation: function(t$3, e$3) {
					return function(t$4, e$4) {
						const n$3 = _$2(t$4, e$4, !0);
						return null !== n$3 ? n$3 : -1;
					}(E$2(e$3), t$3);
				},
				getIsDVB: function(t$3) {
					return e$2.hasProfile(t$3, "urn:dvb:dash:profile:dvb-dash:2014");
				},
				getIsDynamic: function(t$3) {
					const n$3 = f$2(t$3);
					return e$2.getIsDynamic(n$3);
				},
				getIsPatch: function(t$3) {
					return n$2.getIsPatch(t$3);
				},
				getIsTextTrack: function(t$3) {
					return e$2.getIsText(t$3);
				},
				getIsTypeOf: function(t$3, n$3) {
					return e$2.getIsTypeOf(t$3, n$3);
				},
				getLocation: function(t$3) {
					return e$2.getLocation(t$3);
				},
				getMainAdaptationForType: o$2,
				getManifestUpdatePeriod: function(t$3) {
					let n$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
					return e$2.getManifestUpdatePeriod(t$3, n$3);
				},
				getMediaInfoForType: function(t$3, n$3) {
					if (0 === a$1.length || !t$3) return null;
					let r$3 = m$2(t$3, a$1);
					if (!r$3) return null;
					const i$3 = e$2.getAdaptationsForPeriod(r$3);
					let l$3 = o$2(n$3, t$3);
					return l$3 ? h$2(i$3[e$2.getIndexForAdaptation(l$3, a$1[0].mpd.manifest, t$3.index)]) : null;
				},
				getMpd: d$2,
				getPatchLocation: function(t$3) {
					const n$3 = e$2.getPatchLocation(t$3), a$2 = e$2.getPublishTime(t$3);
					return n$3 && 0 !== n$3.length && a$2 ? n$3.filter(((t$4) => isNaN(t$4.ttl) || a$2.getTime() + t$4.ttl > (/* @__PURE__ */ new Date()).getTime())) : [];
				},
				getPeriodById: function(t$3) {
					if (!t$3 || 0 === a$1.length) return null;
					const e$3 = a$1.filter(((e$4) => e$4.id === t$3));
					return e$3 && e$3.length > 0 ? e$3[0] : null;
				},
				getProducerReferenceTimes: function(t$3, n$3) {
					let r$3, i$3;
					const l$3 = m$2(t$3, a$1);
					return r$3 = n$3 ? n$3.id : null, a$1.length > 0 && l$3 && (i$3 = r$3 ? e$2.getAdaptationForId(r$3, a$1[0].mpd.manifest, l$3.index) : e$2.getAdaptationForIndex(n$3 ? n$3.index : null, a$1[0].mpd.manifest, l$3.index)), i$3 ? e$2.getProducerReferenceTimesForAdaptation(i$3) : [];
				},
				getPublishTime: function(t$3) {
					return e$2.getPublishTime(t$3);
				},
				getRealAdaptation: function(t$3, n$3) {
					let r$3, i$3;
					const l$3 = m$2(t$3, a$1);
					return r$3 = n$3 ? n$3.id : null, a$1.length > 0 && l$3 && (i$3 = r$3 ? e$2.getAdaptationForId(r$3, a$1[0].mpd.manifest, l$3.index) : e$2.getAdaptationForIndex(n$3 ? n$3.index : null, a$1[0].mpd.manifest, l$3.index)), i$3;
				},
				getRealPeriodByIndex: function(t$3) {
					return e$2.getRealPeriodForIndex(t$3, a$1[0].mpd.manifest);
				},
				getRegularPeriods: u$2,
				getRepresentationSortFunction: function() {
					return e$2.getRepresentationSortFunction();
				},
				getStreamsInfo: function(t$3, e$3) {
					const n$3 = [];
					let r$3 = a$1;
					if (t$3 && (y$2(), r$3 = u$2(t$3)), r$3.length > 0) {
						(!e$3 || e$3 > r$3.length) && (e$3 = r$3.length);
						for (let t$4 = 0; t$4 < e$3; t$4++) n$3.push(b$2(r$3[t$4]));
					}
					return n$3;
				},
				getSuggestedPresentationDelay: function() {
					const t$3 = a$1.length > 0 ? a$1[0].mpd : null;
					return e$2.getSuggestedPresentationDelay(t$3);
				},
				getSupplementalCodecs: function(t$3) {
					const e$3 = t$3[I.default.SUPPLEMENTAL_CODECS];
					return e$3 ? e$3.split(" ").map(((e$4) => t$3.mimeType + ";codecs=\"" + e$4 + "\"")) : [];
				},
				getUTCTimingSources: function() {
					const t$3 = f$2();
					return e$2.getUTCTimingSources(t$3);
				},
				getVoRepresentations: function(t$3) {
					let n$3;
					const a$2 = g$2(t$3);
					return n$3 = e$2.getRepresentationsForAdaptation(a$2, t$3), n$3;
				},
				isPatchValid: function(t$3, a$2) {
					let r$3 = e$2.getId(t$3), i$3 = n$2.getMpdId(a$2), l$3 = e$2.getPublishTime(t$3), o$3 = n$2.getPublishTime(a$2), s$2 = n$2.getOriginalPublishTime(a$2);
					return !!(r$3 && i$3 && r$3 == i$3 && l$3 && s$2 && l$3.getTime() == s$2.getTime() && o$3 && l$3.getTime() < o$3.getTime());
				},
				reset: c$2,
				setConfig: function(t$3) {
					t$3 && (t$3.constants && (r$2 = t$3.constants), t$3.cea608parser && (i$2 = t$3.cea608parser), t$3.errHandler && e$2.setConfig({ errHandler: t$3.errHandler }), t$3.BASE64 && e$2.setConfig({ BASE64: t$3.BASE64 }));
				},
				updatePeriods: function(t$3) {
					if (!t$3) return null;
					y$2(), a$1 = u$2(t$3);
				}
			}, e$2 = he(l$2).getInstance(), n$2 = Ll(l$2).getInstance(), c$2(), t$2;
		}
		Yl.__dashjs_factory_name = "DashAdapter";
		var Vl = N.default.getSingletonFactory(Yl);
		class Kl {
			static round10(t$2, e$2) {
				return function(t$3, e$3, n$2) {
					return void 0 === n$2 || 0 == +n$2 ? Math[t$3](e$3) : (n$2 = +n$2, null === (e$3 = +e$3) || isNaN(e$3) || "number" != typeof n$2 || n$2 % 1 != 0 ? NaN : (e$3 = e$3.toString().split("e"), +((e$3 = (e$3 = Math[t$3](+(e$3[0] + "e" + (e$3[1] ? +e$3[1] - n$2 : -n$2)))).toString().split("e"))[0] + "e" + (e$3[1] ? +e$3[1] + n$2 : n$2))));
				}("round", t$2, e$2);
			}
		}
		var Wl = class {
			constructor() {
				this.TcpList = [], this.HttpList = [], this.RepSwitchList = [], this.BufferLevel = [], this.BufferState = [], this.PlayList = [], this.DroppedFrames = [], this.SchedulingInfo = [], this.DVRInfo = [], this.ManifestUpdate = [], this.RequestsQueue = null, this.DVBErrors = [];
			}
		}, $l = class {
			constructor() {
				this.t = null, this.mt = null, this.to = null, this.lto = null;
			}
		}, Xl = class {
			constructor() {
				this.t = null, this.level = null;
			}
		}, Ql = class {
			constructor() {
				this.target = null, this.state = k.BUFFER_EMPTY;
			}
		}, Zl = class {
			constructor() {
				this.time = null, this.range = null, this.manifestInfo = null;
			}
		}, Jl = class {
			constructor() {
				this.time = null, this.droppedFrames = null;
			}
		};
		class to {
			constructor() {
				this.mediaType = null, this.type = null, this.requestTime = null, this.fetchTime = null, this.availabilityStartTime = null, this.presentationStartTime = 0, this.clientTimeOffset = 0, this.currentTime = null, this.buffered = null, this.latency = 0, this.streamInfo = [], this.representationInfo = [];
			}
		}
		class eo {
			constructor() {
				this.id = null, this.index = null, this.start = null, this.duration = null;
			}
		}
		class no {
			constructor() {
				this.id = null, this.index = null, this.mediaType = null, this.presentationTimeOffset = null, this.startNumber = null;
			}
		}
		var ao = class {
			constructor() {
				this.mediaType = null, this.t = null, this.type = null, this.startTime = null, this.availabilityStartTime = null, this.duration = null, this.bandwidth = null, this.range = null, this.state = null;
			}
		}, ro = class {
			constructor() {
				this.loadingRequests = [], this.executedRequests = [];
			}
		};
		function io(t$2) {
			const e$2 = (t$2 = t$2 || {}).settings;
			let n$2, a$1, r$2 = this.context, i$2 = (0, A.default)(r$2).getInstance();
			function l$2() {
				i$2.trigger(R.default.METRICS_CHANGED);
			}
			function o$2(t$3) {
				i$2.trigger(R.default.METRIC_CHANGED, { mediaType: t$3 }), l$2();
			}
			function s$1(t$3, e$3, n$3) {
				i$2.trigger(R.default.METRIC_UPDATED, {
					mediaType: t$3,
					metric: e$3,
					value: n$3
				}), o$2(t$3);
			}
			function u$2(t$3, e$3, n$3) {
				i$2.trigger(R.default.METRIC_ADDED, {
					mediaType: t$3,
					metric: e$3,
					value: n$3
				}), o$2(t$3);
			}
			function d$2(t$3, e$3) {
				let n$3 = null;
				return t$3 ? (a$1.hasOwnProperty(t$3) ? n$3 = a$1[t$3] : e$3 || (n$3 = new Wl(), a$1[t$3] = n$3), n$3) : n$3;
			}
			function c$2(t$3, n$3, a$2) {
				let r$3 = d$2(t$3);
				null !== r$3 && (r$3[n$3].push(a$2), r$3[n$3].length > e$2.get().streaming.metrics.maxListDepth && r$3[n$3].shift());
			}
			function f$2(t$3, e$3, n$3) {
				c$2(t$3, e$3, n$3), u$2(t$3, e$3, n$3);
			}
			return n$2 = {
				addBufferLevel: function(t$3, e$3, n$3) {
					let a$2 = new Xl();
					a$2.t = e$3, a$2.level = n$3, f$2(t$3, k.BUFFER_LEVEL, a$2);
				},
				addBufferState: function(t$3, e$3, n$3) {
					let a$2 = new Ql();
					a$2.target = n$3, a$2.state = e$3, f$2(t$3, k.BUFFER_STATE, a$2);
				},
				addDVBErrors: function(t$3) {
					f$2(S$1.default.STREAM, k.DVB_ERRORS, t$3);
				},
				addDVRInfo: function(t$3, e$3, n$3, a$2) {
					let r$3 = new Zl();
					r$3.time = e$3, r$3.range = a$2, r$3.manifestInfo = n$3, f$2(t$3, k.DVR_INFO, r$3);
				},
				addDroppedFrames: function(t$3, e$3) {
					let n$3 = new Jl(), a$2 = d$2(t$3).DroppedFrames;
					e$3 && (n$3.time = e$3.creationTime, n$3.droppedFrames = e$3.droppedVideoFrames, a$2.length > 0 && a$2[a$2.length - 1] == n$3 || f$2(t$3, k.DROPPED_FRAMES, n$3));
				},
				addHttpRequest: function t$3(e$3, n$3, a$2, r$3) {
					let i$3 = new z.HTTPRequest();
					n$3.url && n$3.url !== e$3.url && (t$3({
						mediaType: e$3.mediaType,
						type: e$3.type,
						url: e$3.url,
						serviceLocation: null,
						range: e$3.range,
						startDate: e$3.startDate,
						firstByteDate: null,
						endDate: null,
						duration: e$3.duration,
						fileLoaderType: e$3.fileLoaderType,
						resourceTimingValues: e$3.resourceTimingValues
					}, {
						url: null,
						status: null,
						headers: null
					}, null, r$3), i$3.actualurl = n$3.url), i$3.tcpid = null, i$3.type = e$3.type, i$3.url = e$3.url, i$3.range = e$3.range || null, i$3.trequest = e$3.startDate, i$3.tresponse = e$3.firstByteDate, i$3.responsecode = n$3.status, i$3.cmsd = r$3, i$3._tfinish = e$3.endDate, i$3._stream = e$3.mediaType, i$3._mediaduration = e$3.duration, i$3._responseHeaders = "";
					for (const t$4 in n$3.headers) i$3._responseHeaders += t$4 + ": " + n$3.headers[t$4] + "\r\n";
					i$3._serviceLocation = e$3.serviceLocation || null, i$3._fileLoaderType = e$3.fileLoaderType, i$3._resourceTimingValues = e$3.resourceTimingValues, i$3._streamId = e$3 && e$3.representation && e$3.representation.mediaInfo && e$3.representation.mediaInfo.streamInfo ? e$3.representation.mediaInfo.streamInfo.id : null, a$2 ? a$2.forEach(((t$4) => {
						(function(t$5, e$4, n$4, a$3) {
							let r$4 = new z.HTTPRequestTrace();
							r$4.s = e$4, r$4.d = n$4, r$4.b = a$3, t$5.trace.push(r$4), t$5.interval || (t$5.interval = 0), t$5.interval += n$4;
						})(i$3, t$4.s, t$4.d, t$4.b, t$4.t);
					})) : (delete i$3.interval, delete i$3.trace), f$2(e$3.mediaType, k.HTTP_REQUEST, i$3);
				},
				addManifestUpdate: function(t$3, e$3, n$3, a$2) {
					let r$3 = new to();
					r$3.mediaType = t$3, r$3.type = e$3, r$3.requestTime = n$3, r$3.fetchTime = a$2, c$2(S$1.default.STREAM, k.MANIFEST_UPDATE, r$3), u$2(t$3, k.MANIFEST_UPDATE, r$3);
				},
				addManifestUpdateRepresentationInfo: function(t$3, e$3, n$3) {
					if (t$3 && t$3.representationInfo) {
						const a$2 = new no();
						a$2.id = e$3 ? e$3.id : null, a$2.index = e$3 ? e$3.index : null, a$2.mediaType = n$3, a$2.startNumber = e$3 ? e$3.startNumber : null, a$2.presentationTimeOffset = e$3 ? e$3.presentationTimeOffset : null, t$3.representationInfo.push(a$2), s$1(t$3.mediaType, k.MANIFEST_UPDATE_TRACK_INFO, t$3);
					}
				},
				addManifestUpdateStreamInfo: function(t$3, e$3, n$3, a$2, r$3) {
					if (t$3) {
						let i$3 = new eo();
						i$3.id = e$3, i$3.index = n$3, i$3.start = a$2, i$3.duration = r$3, t$3.streamInfo.push(i$3), s$1(t$3.mediaType, k.MANIFEST_UPDATE_STREAM_INFO, t$3);
					}
				},
				addPlayList: function(t$3) {
					t$3.trace && Array.isArray(t$3.trace) ? t$3.trace.forEach(((t$4) => {
						t$4.hasOwnProperty("subreplevel") && !t$4.subreplevel && delete t$4.subreplevel;
					})) : delete t$3.trace, f$2(S$1.default.STREAM, k.PLAY_LIST, t$3);
				},
				addRepresentationSwitch: function(t$3, e$3, n$3, a$2, r$3) {
					let i$3 = new $l();
					i$3.t = e$3, i$3.mt = n$3, i$3.to = a$2, r$3 ? i$3.lto = r$3 : delete i$3.lto, f$2(t$3, k.TRACK_SWITCH, i$3);
				},
				addRequestsQueue: function(t$3, e$3, n$3) {
					let a$2 = new ro();
					a$2.loadingRequests = e$3, a$2.executedRequests = n$3, d$2(t$3).RequestsQueue = a$2, u$2(t$3, k.REQUESTS_QUEUE, a$2);
				},
				addSchedulingInfo: function(t$3, e$3, n$3, a$2, r$3, i$3, l$3, o$3, s$2) {
					let u$3 = new ao();
					u$3.mediaType = t$3, u$3.t = e$3, u$3.type = n$3, u$3.startTime = a$2, u$3.availabilityStartTime = r$3, u$3.duration = i$3, u$3.bandwidth = l$3, u$3.range = o$3, u$3.state = s$2, f$2(t$3, k.SCHEDULING_INFO, u$3);
				},
				clearAllCurrentMetrics: function() {
					a$1 = {}, l$2();
				},
				clearCurrentMetricsForType: function(t$3) {
					delete a$1[t$3], o$2(t$3);
				},
				getMetricsFor: d$2,
				updateManifestUpdateInfo: function(t$3, e$3) {
					if (t$3) {
						for (let n$3 in e$3) t$3[n$3] = e$3[n$3];
						s$1(t$3.mediaType, k.MANIFEST_UPDATE, t$3);
					}
				}
			}, a$1 = {}, n$2;
		}
		io.__dashjs_factory_name = "MetricsModel";
		var lo = N.default.getSingletonFactory(io);
		function oo(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context;
			let n$2, a$1, r$2, i$2, l$2 = t$2.metricsModel;
			function o$2(t$3) {
				const e$3 = l$2.getMetricsFor(t$3, !0);
				if (!e$3) return null;
				const n$3 = e$3.HttpList;
				let a$2, r$3 = null;
				if (!n$3 || n$3.length <= 0) return null;
				for (a$2 = n$3.length - 1; a$2 >= 0;) {
					if (n$3[a$2].responsecode) {
						r$3 = n$3[a$2];
						break;
					}
					a$2--;
				}
				return r$3;
			}
			function s$1(t$3) {
				const e$3 = l$2.getMetricsFor(t$3, !0);
				return e$3 && e$3.HttpList ? e$3.HttpList : [];
			}
			function u$2(t$3, e$3) {
				if (!t$3) return null;
				const n$3 = t$3[e$3];
				return n$3 && 0 !== n$3.length ? n$3[n$3.length - 1] : null;
			}
			return n$2 = {
				getCurrentRepresentationSwitch: function(t$3) {
					return u$2(l$2.getMetricsFor(t$3, !0), k.TRACK_SWITCH);
				},
				getCurrentBufferState: function(t$3) {
					return u$2(l$2.getMetricsFor(t$3, !0), k.BUFFER_STATE);
				},
				getCurrentBufferLevel: function(t$3) {
					const e$3 = u$2(l$2.getMetricsFor(t$3, !0), k.BUFFER_LEVEL);
					return e$3 ? Kl.round10(e$3.level / 1e3, -3) : 0;
				},
				getCurrentHttpRequest: o$2,
				getHttpRequests: s$1,
				getCurrentDroppedFrames: function() {
					return u$2(l$2.getMetricsFor(S$1.default.VIDEO, !0), k.DROPPED_FRAMES);
				},
				getCurrentSchedulingInfo: function(t$3) {
					return u$2(l$2.getMetricsFor(t$3, !0), k.SCHEDULING_INFO);
				},
				getCurrentDVRInfo: function(t$3) {
					return u$2(t$3 ? l$2.getMetricsFor(t$3, !0) : l$2.getMetricsFor(S$1.default.VIDEO, !0) || l$2.getMetricsFor(S$1.default.AUDIO, !0), k.DVR_INFO);
				},
				getCurrentManifestUpdate: function() {
					return u$2(l$2.getMetricsFor(S$1.default.STREAM), k.MANIFEST_UPDATE);
				},
				getLatestFragmentRequestHeaderValueByID: function(t$3, e$3) {
					if (!e$3) return null;
					let n$3 = {}, a$2 = o$2(t$3);
					a$2 && (n$3 = Gt.default.parseHttpHeaders(a$2._responseHeaders));
					const r$3 = n$3[e$3.toLowerCase()];
					return void 0 === r$3 ? null : r$3;
				},
				getLatestMPDRequestHeaderValueByID: function(t$3) {
					if (!t$3) return null;
					let e$3, n$3, a$2, r$3 = {};
					for (e$3 = s$1(S$1.default.STREAM), a$2 = e$3.length - 1; a$2 >= 0; a$2--) if (n$3 = e$3[a$2], n$3.type === z.HTTPRequest.MPD_TYPE) {
						r$3 = Gt.default.parseHttpHeaders(n$3._responseHeaders);
						break;
					}
					const i$3 = r$3[t$3.toLowerCase()];
					return void 0 === i$3 ? null : i$3;
				},
				addRepresentationSwitch: function(t$3, e$3, n$3, a$2, r$3) {
					l$2.addRepresentationSwitch(t$3, e$3, n$3, a$2, r$3);
				},
				addDVRInfo: function(t$3, e$3, n$3, a$2) {
					l$2.addDVRInfo(t$3, e$3, n$3, a$2);
				},
				updateManifestUpdateInfo: function(t$3) {
					const e$3 = this.getCurrentManifestUpdate();
					l$2.updateManifestUpdateInfo(e$3, t$3);
				},
				addManifestUpdateStreamInfo: function(t$3) {
					if (t$3) {
						const e$3 = this.getCurrentManifestUpdate();
						l$2.addManifestUpdateStreamInfo(e$3, t$3.id, t$3.index, t$3.start, t$3.duration);
					}
				},
				addManifestUpdateRepresentationInfo: function(t$3, e$3) {
					if (t$3) {
						const n$3 = this.getCurrentManifestUpdate();
						l$2.addManifestUpdateRepresentationInfo(n$3, t$3, e$3);
					}
				},
				addManifestUpdate: function(t$3) {
					l$2.addManifestUpdate(S$1.default.STREAM, t$3.type, t$3.startDate, t$3.endDate);
				},
				addHttpRequest: function(t$3, e$3, n$3, a$2, r$3, i$3) {
					const o$3 = {
						status: n$3,
						headers: a$2,
						url: e$3
					};
					l$2.addHttpRequest(t$3, o$3, r$3, i$3);
				},
				addSchedulingInfo: function(t$3, e$3) {
					l$2.addSchedulingInfo(t$3.mediaType, /* @__PURE__ */ new Date(), t$3.type, t$3.startTime, t$3.availabilityStartTime, t$3.duration, t$3.bandwidth, t$3.range, e$3);
				},
				addRequestsQueue: function(t$3, e$3, n$3) {
					l$2.addRequestsQueue(t$3, e$3, n$3);
				},
				addBufferLevel: function(t$3, e$3, n$3) {
					l$2.addBufferLevel(t$3, e$3, n$3);
				},
				addBufferState: function(t$3, e$3, n$3) {
					l$2.addBufferState(t$3, e$3, n$3);
				},
				addDroppedFrames: function(t$3) {
					l$2.addDroppedFrames(S$1.default.VIDEO, t$3);
				},
				addPlayList: function() {
					i$2 && (l$2.addPlayList(i$2), i$2 = null);
				},
				addDVBErrors: function(t$3) {
					l$2.addDVBErrors(t$3);
				},
				createPlaylistMetrics: function(t$3, e$3) {
					i$2 = new It(), i$2.start = /* @__PURE__ */ new Date(), i$2.mstart = t$3, i$2.starttype = e$3;
				},
				createPlaylistTraceMetrics: function(t$3, e$3, n$3) {
					!0 === a$1 && (a$1 = !1, r$2 = new kt(), r$2.representationid = t$3, r$2.start = /* @__PURE__ */ new Date(), r$2.mstart = e$3, r$2.playbackspeed = null !== n$3 ? n$3.toString() : null);
				},
				updatePlayListTraceMetrics: function(t$3) {
					if (r$2) for (let e$3 in r$2) r$2[e$3] = t$3[e$3];
				},
				pushPlayListTraceMetrics: function(t$3, e$3) {
					if (!1 === a$1 && i$2 && r$2 && r$2.start) {
						const n$3 = r$2.start;
						r$2.duration = t$3.getTime() - n$3.getTime(), r$2.stopreason = e$3, i$2.trace.push(r$2), a$1 = !0;
					}
				},
				clearAllCurrentMetrics: function() {
					l$2.clearAllCurrentMetrics();
				}
			}, l$2 = l$2 || lo(e$2).getInstance({ settings: t$2.settings }), a$1 = !0, r$2 = null, i$2 = null, n$2;
		}
		oo.__dashjs_factory_name = "DashMetrics";
		var so = N.default.getSingletonFactory(oo);
		function uo() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance(), n$2 = (0, K.default)(t$2).getInstance();
			let a$1, r$2, i$2, l$2;
			function o$2(t$3) {
				l$2 = t$3;
			}
			function s$1(t$3, e$3, n$3, a$2) {
				let r$3, i$3 = e$3.adaptation.period.mpd;
				const l$3 = i$3.availabilityStartTime;
				if (a$2) r$3 = n$3 && i$3.timeShiftBufferDepth !== Number.POSITIVE_INFINITY ? new Date(l$3.getTime() + 1e3 * (t$3 + i$3.timeShiftBufferDepth)) : i$3.availabilityEndTime;
				else if (n$3) {
					const n$4 = e$3.availabilityTimeOffset;
					r$3 = new Date(l$3.getTime() + 1e3 * (t$3 - n$4));
				} else r$3 = l$3;
				return r$3;
			}
			function u$2(t$3, e$3) {
				return (t$3.getTime() - e$3.mpd.availabilityStartTime.getTime() + 1e3 * l$2) / 1e3;
			}
			function d$2(t$3, e$3) {
				return t$3 + (e$3.adaptation.period.start - e$3.presentationTimeOffset);
			}
			function c$2(t$3) {
				const e$3 = {
					start: NaN,
					end: NaN
				}, n$3 = t$3[0].getAdapter().getRegularPeriods()[0], a$2 = u$2(/* @__PURE__ */ new Date(), n$3);
				if (!t$3 || 0 === t$3.length) return {
					range: e$3,
					now: a$2
				};
				t$3.forEach(((t$4) => {
					let n$4 = t$4.getCurrentRepresentationForType(S$1.default.VIDEO);
					if (n$4 || (n$4 = t$4.getCurrentRepresentationForType(S$1.default.AUDIO)), !n$4) {
						const e$4 = t$4.getAdapter(), a$3 = e$4.getMediaInfoForType(t$4.getStreamInfo(), S$1.default.VIDEO) || e$4.getMediaInfoForType(t$4.getStreamInfo(), S$1.default.AUDIO);
						n$4 = e$4.getVoRepresentations(a$3)[0];
					}
					let i$4 = {
						start: NaN,
						end: NaN
					};
					if (n$4) if (n$4.segmentInfoType === I.default.SEGMENT_TIMELINE) i$4 = function(t$5) {
						const e$4 = t$5.adaptation.period.mpd.manifest.Period[t$5.adaptation.period.index].AdaptationSet[t$5.adaptation.index], n$5 = r$2.getRepresentationFor(t$5.index, e$4), a$3 = n$5.SegmentTemplate || n$5.SegmentList, i$5 = a$3.SegmentTimeline, l$3 = a$3.timescale, o$3 = i$5.S, s$2 = {
							start: 0,
							end: 0
						}, u$3 = o$3[0].t, c$3 = !isNaN(u$3), f$3 = c$3 ? u$3 : 0;
						let g$3, m$3, h$3, p$3, b$2 = 0;
						for (c$3 && (s$2.start = d$2(f$3 / l$3, t$5)), h$3 = 0, p$3 = o$3.length; h$3 < p$3; h$3++) g$3 = o$3[h$3], m$3 = 0, g$3.hasOwnProperty("r") && (m$3 = g$3.r), b$2 += g$3.d * (1 + m$3);
						return s$2.end = d$2((f$3 + b$2) / l$3, t$5), s$2;
					}(n$4);
					else {
						const t$5 = n$4.adaptation.period;
						i$4.start = t$5.start, i$4.end = Math.max(a$2, t$5.start + t$5.duration);
					}
					!isNaN(i$4.start) && (isNaN(e$3.start) || e$3.start > i$4.start) && (e$3.start = i$4.start), !isNaN(i$4.end) && (isNaN(e$3.end) || e$3.end < i$4.end) && (e$3.end = i$4.end);
				})), e$3.end = Math.min(a$2, e$3.end);
				const i$3 = g$2(t$3, e$3.end, !0);
				return e$3.end = isNaN(i$3) ? e$3.end : i$3, e$3.start = n$3 && n$3.mpd && n$3.mpd.timeShiftBufferDepth && !isNaN(n$3.mpd.timeShiftBufferDepth) && !isNaN(e$3.end) ? Math.max(e$3.end - n$3.mpd.timeShiftBufferDepth, e$3.start) : e$3.start, e$3.start = g$2(t$3, e$3.start), {
					range: e$3,
					now: a$2
				};
			}
			function f$2(t$3, e$3) {
				i$2 = t$3 - e$3.end;
			}
			function g$2(t$3, e$3) {
				let n$3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
				try {
					let a$2 = 0, r$3 = !1, i$3 = NaN;
					for (; !r$3 && a$2 < t$3.length;) {
						const l$3 = t$3[a$2].getStreamInfo();
						l$3.start <= e$3 && (!isFinite(l$3.duration) || l$3.start + l$3.duration >= e$3) ? (i$3 = e$3, r$3 = !0) : !n$3 && l$3.start > e$3 && (isNaN(i$3) || l$3.start < i$3) ? i$3 = l$3.start : n$3 && l$3.start + l$3.duration < e$3 && (isNaN(i$3) || l$3.start + l$3.duration > i$3) && (i$3 = l$3.start + l$3.duration), a$2 += 1;
					}
					return i$3;
				} catch (t$4) {
					return e$3;
				}
			}
			function m$2(t$3) {
				void 0 === t$3.offset || isNaN(t$3.offset) || o$2(t$3.offset / 1e3);
			}
			function h$2() {
				l$2 = 0, i$2 = 0;
			}
			function p$2() {
				e$2.off(R.default.UPDATE_TIME_SYNC_OFFSET, m$2, this), h$2();
			}
			return a$1 = {
				initialize: function() {
					h$2(), e$2.on(R.default.UPDATE_TIME_SYNC_OFFSET, m$2, this);
				},
				getClientTimeOffset: function() {
					return l$2;
				},
				setClientTimeOffset: o$2,
				getClientReferenceTime: function() {
					return Date.now() - 1e3 * i$2 + 1e3 * l$2;
				},
				calcAvailabilityStartTimeFromPresentationTime: function(t$3, e$3, n$3) {
					return s$1(t$3, e$3, n$3);
				},
				calcAvailabilityEndTimeFromPresentationTime: function(t$3, e$3, n$3) {
					return s$1(t$3, e$3, n$3, !0);
				},
				calcPresentationTimeFromWallTime: u$2,
				calcPresentationTimeFromMediaTime: d$2,
				calcPeriodRelativeTimeFromMpdRelativeTime: function(t$3, e$3) {
					return e$3 - t$3.adaptation.period.start;
				},
				calcMediaTimeFromPresentationTime: function(t$3, e$3) {
					return t$3 - e$3.adaptation.period.start + e$3.presentationTimeOffset;
				},
				calcWallTimeForSegment: function(t$3, e$3) {
					let n$3, a$2, r$3;
					return e$3 && (n$3 = t$3.representation.adaptation.period.mpd.suggestedPresentationDelay, a$2 = t$3.presentationStartTime + n$3, r$3 = new Date(t$3.availabilityStartTime.getTime() + 1e3 * a$2)), r$3;
				},
				calcTimeShiftBufferWindow: function(t$3, a$2) {
					if (!a$2) return function(t$4) {
						const e$3 = {
							start: NaN,
							end: NaN
						};
						let n$3 = 0, a$3 = NaN;
						return t$4.forEach(((t$5) => {
							const e$4 = t$5.getStreamInfo();
							n$3 += e$4.duration, (isNaN(a$3) || e$4.start < a$3) && (a$3 = e$4.start);
						})), e$3.start = a$3, e$3.end = a$3 + n$3, e$3;
					}(t$3);
					if (n$2.get().streaming.timeShiftBuffer.calcFromSegmentTimeline) {
						const e$3 = c$2(t$3);
						return f$2(e$3.now, e$3.range), e$3.range;
					}
					return function(t$4) {
						const a$3 = {
							start: NaN,
							end: NaN
						};
						if (!t$4 || 0 === t$4.length) return a$3;
						const r$3 = t$4[0].getAdapter().getRegularPeriods()[0], i$3 = u$2(/* @__PURE__ */ new Date(), r$3), l$3 = r$3.mpd.timeShiftBufferDepth, o$3 = isNaN(l$3) ? 0 : i$3 - l$3;
						if (a$3.start = g$2(t$4, o$3), a$3.end = !isNaN(a$3.start) && i$3 < a$3.start ? i$3 : g$2(t$4, i$3, !0), !isNaN(l$3) && a$3.end < i$3 - l$3 && (a$3.end = NaN), n$2.get().streaming.timeShiftBuffer.fallbackToSegmentTimeline) {
							const n$3 = c$2(t$4);
							if (n$3.range.end < a$3.start) return e$2.trigger(D.default.CONFORMANCE_VIOLATION, {
								level: Aa.LEVELS.WARNING,
								event: Aa.EVENTS.INVALID_DVR_WINDOW
							}), f$2(n$3.now, n$3.range), n$3.range;
						}
						return a$3;
					}(t$3);
				},
				reset: p$2
			}, r$2 = he(t$2).getInstance(), p$2(), a$1;
		}
		uo.__dashjs_factory_name = "TimelineConverter";
		var co, fo, go, mo, ho, po = N.default.getSingletonFactory(uo), bo = function(t$2) {
			for (var e$2 = [], n$2 = 0; n$2 < t$2.length; ++n$2) {
				var a$1 = t$2.charCodeAt(n$2);
				a$1 < 128 ? e$2.push(a$1) : a$1 < 2048 ? (e$2.push(192 | a$1 >> 6), e$2.push(128 | 63 & a$1)) : a$1 < 65536 ? (e$2.push(224 | a$1 >> 12), e$2.push(128 | 63 & a$1 >> 6), e$2.push(128 | 63 & a$1)) : (e$2.push(240 | a$1 >> 18), e$2.push(128 | 63 & a$1 >> 12), e$2.push(128 | 63 & a$1 >> 6), e$2.push(128 | 63 & a$1));
			}
			return e$2;
		}, yo = function(t$2) {
			for (var e$2 = [], n$2 = 0; n$2 < t$2.length;) {
				var a$1 = t$2[n$2++];
				a$1 < 128 || (a$1 < 224 ? (a$1 = (31 & a$1) << 6, a$1 |= 63 & t$2[n$2++]) : a$1 < 240 ? (a$1 = (15 & a$1) << 12, a$1 |= (63 & t$2[n$2++]) << 6, a$1 |= 63 & t$2[n$2++]) : (a$1 = (7 & a$1) << 18, a$1 |= (63 & t$2[n$2++]) << 12, a$1 |= (63 & t$2[n$2++]) << 6, a$1 |= 63 & t$2[n$2++])), e$2.push(String.fromCharCode(a$1));
			}
			return e$2.join("");
		}, Eo = {};
		co = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", fo = function(t$2) {
			for (var e$2 = 0, n$2 = [], a$1 = 0 | t$2.length / 3; 0 < a$1--;) {
				var r$2 = (t$2[e$2] << 16) + (t$2[e$2 + 1] << 8) + t$2[e$2 + 2];
				e$2 += 3, n$2.push(co.charAt(63 & r$2 >> 18)), n$2.push(co.charAt(63 & r$2 >> 12)), n$2.push(co.charAt(63 & r$2 >> 6)), n$2.push(co.charAt(63 & r$2));
			}
			return 2 == t$2.length - e$2 ? (r$2 = (t$2[e$2] << 16) + (t$2[e$2 + 1] << 8), n$2.push(co.charAt(63 & r$2 >> 18)), n$2.push(co.charAt(63 & r$2 >> 12)), n$2.push(co.charAt(63 & r$2 >> 6)), n$2.push("=")) : 1 == t$2.length - e$2 && (r$2 = t$2[e$2] << 16, n$2.push(co.charAt(63 & r$2 >> 18)), n$2.push(co.charAt(63 & r$2 >> 12)), n$2.push("==")), n$2.join("");
		}, go = function() {
			for (var t$2 = [], e$2 = 0; e$2 < 64; ++e$2) t$2[co.charCodeAt(e$2)] = e$2;
			return t$2["=".charCodeAt(0)] = 0, t$2;
		}(), mo = function(t$2) {
			for (var e$2 = 0, n$2 = [], a$1 = 0 | t$2.length / 4; 0 < a$1--;) {
				var r$2 = (go[t$2.charCodeAt(e$2)] << 18) + (go[t$2.charCodeAt(e$2 + 1)] << 12) + (go[t$2.charCodeAt(e$2 + 2)] << 6) + go[t$2.charCodeAt(e$2 + 3)];
				n$2.push(255 & r$2 >> 16), n$2.push(255 & r$2 >> 8), n$2.push(255 & r$2), e$2 += 4;
			}
			return n$2 && ("=" == t$2.charAt(e$2 - 2) ? (n$2.pop(), n$2.pop()) : "=" == t$2.charAt(e$2 - 1) && n$2.pop()), n$2;
		}, ho = {
			encode: function(t$2) {
				for (var e$2 = [], n$2 = 0; n$2 < t$2.length; ++n$2) e$2.push(t$2.charCodeAt(n$2));
				return e$2;
			},
			decode: function(t$2) {
				for (var e$2 = 0; e$2 < s.length; ++e$2) a[e$2] = String.fromCharCode(a[e$2]);
				return a.join("");
			}
		}, Eo.decodeArray = function(t$2) {
			var e$2 = mo(t$2);
			return new Uint8Array(e$2);
		}, Eo.encodeASCII = function(t$2) {
			var e$2 = ho.encode(t$2);
			return fo(e$2);
		}, Eo.decodeASCII = function(t$2) {
			var e$2 = mo(t$2);
			return ho.decode(e$2);
		}, Eo.encode = function(t$2) {
			var e$2 = bo(t$2);
			return fo(e$2);
		}, Eo.decode = function(t$2) {
			var e$2 = mo(t$2);
			return yo(e$2);
		}, "undefined" != typeof exports && (exports.decode = Eo.decode, exports.decodeArray = Eo.decodeArray, exports.encode = Eo.encode, exports.encodeASCII = Eo.encodeASCII);
		var _o = Eo, To = class extends Dl {
			constructor() {
				super(), this.captionData = null, this.label = null, this.defaultTrack = !1, this.kind = null, this.isFragmented = !1, this.isEmbedded = !1, this.isTTML = null;
			}
		}, vo = n$1(7377);
		function wo() {
			let t$2, e$2 = 0;
			function n$2(t$3) {
				let e$3 = "";
				for (let n$3 = 0; n$3 < t$3.length; ++n$3) e$3 += t$3[n$3].uchar;
				return e$3.length - e$3.replace(/^\s+/, "").length;
			}
			function a$1(t$3) {
				return "left: " + 3.125 * t$3.x + "%; top: " + 6.66 * t$3.y1 + "%; width: " + (100 - 3.125 * t$3.x) + "%; height: " + 6.66 * Math.max(t$3.y2 - 1 - t$3.y1, 1) + "%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;";
			}
			function r$2(t$3) {
				return "red" === t$3 ? "rgb(255, 0, 0)" : "green" === t$3 ? "rgb(0, 255, 0)" : "blue" === t$3 ? "rgb(0, 0, 255)" : "cyan" === t$3 ? "rgb(0, 255, 255)" : "magenta" === t$3 ? "rgb(255, 0, 255)" : "yellow" === t$3 ? "rgb(255, 255, 0)" : "white" === t$3 ? "rgb(255, 255, 255)" : "black" === t$3 ? "rgb(0, 0, 0)" : t$3;
			}
			function i$2(t$3, e$3) {
				const n$3 = t$3.videoHeight / 15;
				return e$3 ? "font-size: " + n$3 + "px; font-family: Menlo, Consolas, 'Cutive Mono', monospace; color: " + (e$3.foreground ? r$2(e$3.foreground) : "rgb(255, 255, 255)") + "; font-style: " + (e$3.italics ? "italic" : "normal") + "; text-decoration: " + (e$3.underline ? "underline" : "none") + "; white-space: pre; background-color: " + (e$3.background ? r$2(e$3.background) : "transparent") + ";" : "font-size: " + n$3 + "px; font-family: Menlo, Consolas, 'Cutive Mono', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;";
			}
			function l$2(t$3) {
				return t$3.replace(/^\s+/g, "");
			}
			function o$2(t$3) {
				return t$3.replace(/\s+$/g, "");
			}
			return t$2 = { createHTMLCaptionsFromScreen: function(t$3, r$3, s$1, u$2) {
				let d$2 = null, c$2 = null, f$2 = !1, g$2 = -1, m$2 = {
					start: r$3,
					end: s$1,
					spans: []
				}, h$2 = "style_cea608_white_black";
				const p$2 = {}, b$2 = {}, y$2 = [];
				let E$2, _$2;
				for (E$2 = 0; E$2 < 15; ++E$2) {
					const t$4 = u$2.rows[E$2];
					let e$3 = "", a$2 = null;
					if (!1 === t$4.isEmpty()) {
						const i$3 = n$2(t$4.chars);
						null === d$2 && (d$2 = {
							x: i$3,
							y1: E$2,
							y2: E$2 + 1,
							p: []
						}), i$3 !== g$2 && f$2 && (d$2.p.push(m$2), m$2 = {
							start: r$3,
							end: s$1,
							spans: []
						}, d$2.y2 = E$2, d$2.name = "region_" + d$2.x + "_" + d$2.y1 + "_" + d$2.y2, !1 === p$2.hasOwnProperty(d$2.name) ? (y$2.push(d$2), p$2[d$2.name] = d$2) : (c$2 = p$2[d$2.name], c$2.p.contat(d$2.p)), d$2 = {
							x: i$3,
							y1: E$2,
							y2: E$2 + 1,
							p: []
						});
						for (let n$3 = 0; n$3 < t$4.chars.length; ++n$3) {
							const r$4 = t$4.chars[n$3], i$4 = r$4.penState;
							if (null === a$2 || !i$4.equals(a$2)) {
								e$3.trim().length > 0 && (m$2.spans.push({
									name: h$2,
									line: e$3,
									row: E$2
								}), e$3 = "");
								let t$5 = "style_cea608_" + i$4.foreground + "_" + i$4.background;
								i$4.underline && (t$5 += "_underline"), i$4.italics && (t$5 += "_italics"), b$2.hasOwnProperty(t$5) || (b$2[t$5] = JSON.parse(JSON.stringify(i$4))), a$2 = i$4, h$2 = t$5;
							}
							e$3 += r$4.uchar;
						}
						e$3.trim().length > 0 && m$2.spans.push({
							name: h$2,
							line: e$3,
							row: E$2
						}), f$2 = !0, g$2 = i$3;
					} else f$2 = !1, g$2 = -1, d$2 && (d$2.p.push(m$2), m$2 = {
						start: r$3,
						end: s$1,
						spans: []
					}, d$2.y2 = E$2, d$2.name = "region_" + d$2.x + "_" + d$2.y1 + "_" + d$2.y2, !1 === p$2.hasOwnProperty(d$2.name) ? (y$2.push(d$2), p$2[d$2.name] = d$2) : (c$2 = p$2[d$2.name], c$2.p.contat(d$2.p)), d$2 = null);
				}
				d$2 && (d$2.p.push(m$2), d$2.y2 = E$2 + 1, d$2.name = "region_" + d$2.x + "_" + d$2.y1 + "_" + d$2.y2, !1 === p$2.hasOwnProperty(d$2.name) ? (y$2.push(d$2), p$2[d$2.name] = d$2) : (c$2 = p$2[d$2.name], c$2.p.contat(d$2.p)), d$2 = null);
				const T$2 = [];
				for (E$2 = 0; E$2 < y$2.length; ++E$2) {
					const n$3 = y$2[E$2], u$3 = "sub_cea608_" + e$2++, d$3 = document.createElement("div");
					d$3.id = u$3;
					const c$3 = a$1(n$3);
					d$3.style.cssText = "position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;" + c$3;
					const f$3 = document.createElement("div");
					f$3.className = "paragraph bodyStyle", f$3.style.cssText = i$2(t$3);
					const g$3 = document.createElement("div");
					g$3.className = "cueUniWrapper", g$3.style.cssText = "unicode-bidi: normal; direction: ltr;";
					for (let e$3 = 0; e$3 < n$3.p.length; ++e$3) {
						const a$2 = n$3.p[e$3];
						let r$4 = 0;
						for (_$2 = 0; _$2 < a$2.spans.length; ++_$2) {
							let e$4 = a$2.spans[_$2];
							if (e$4.line.length > 0) {
								if (0 !== _$2 && r$4 != e$4.row) {
									const t$4 = document.createElement("br");
									t$4.className = "lineBreak", g$3.appendChild(t$4);
								}
								let n$4 = !1;
								r$4 === e$4.row && (n$4 = !0), r$4 = e$4.row;
								const s$2 = b$2[e$4.name], u$4 = document.createElement("span");
								u$4.className = "spanPadding " + e$4.name + " customSpanColor", u$4.style.cssText = i$2(t$3, s$2), 0 !== _$2 && n$4 ? _$2 === a$2.spans.length - 1 ? u$4.textContent = o$2(e$4.line) : u$4.textContent = e$4.line : a$2.spans.length > 1 && _$2 < a$2.spans.length - 1 && e$4.row === a$2.spans[_$2 + 1].row ? u$4.textContent = l$2(e$4.line) : u$4.textContent = e$4.line.trim(), g$3.appendChild(u$4);
							}
						}
					}
					f$3.appendChild(g$3), d$3.appendChild(f$3);
					const m$3 = { bodyStyle: ["%", 90] };
					for (const t$4 in b$2) b$2.hasOwnProperty(t$4) && (m$3[t$4] = ["%", 90]);
					T$2.push({
						type: "html",
						start: r$3,
						end: s$1,
						cueHTMLElement: d$3,
						cueID: u$3,
						cellResolution: [32, 15],
						isFromCEA608: !0,
						fontSize: m$3,
						lineHeight: {},
						linePadding: {}
					});
				}
				return T$2;
			} }, t$2;
		}
		wo.__dashjs_factory_name = "EmbeddedTextHtmlRender";
		var So = N.default.getSingletonFactory(wo);
		function Io(t$2, e$2, n$2) {
			const a$1 = [];
			for (let r$2 = e$2; r$2 < n$2; r$2++) r$2 + 2 < n$2 && 0 === t$2.getUint8(r$2) && 0 === t$2.getUint8(r$2 + 1) && 3 === t$2.getUint8(r$2 + 2) ? (a$1.push(0), a$1.push(0), r$2 += 2) : a$1.push(t$2.getUint8(r$2));
			return new DataView(new Uint8Array(a$1).buffer);
		}
		function ko(t$2, e$2, n$2, a$1) {
			return !(4 !== t$2 || e$2 < 8) && 181 === n$2.getUint8(a$1) && 49 === n$2.getUint16(a$1 + 1) && 1195456820 === n$2.getUint32(a$1 + 3) && 3 === n$2.getUint8(a$1 + 7);
		}
		function Ao(t$2, e$2) {
			return (127 & t$2) > 0 || (127 & e$2) > 0;
		}
		function Ro(t$2, e$2) {
			let n$2 = 0;
			for (; n$2 < t$2.byteLength;) {
				let r$2, i$2 = 0, l$2 = 0;
				do
					i$2 += r$2 = t$2.getUint8(n$2++);
				while (255 === r$2);
				do
					l$2 += r$2 = t$2.getUint8(n$2++);
				while (255 === r$2);
				if (ko(i$2, l$2, t$2, n$2)) {
					const r$3 = n$2 + 10, i$3 = r$3 + 3 * (31 & t$2.getUint8(r$3 - 2));
					for (let n$3 = r$3; n$3 < i$3; n$3 += 3) {
						const r$4 = t$2.getUint8(n$3);
						if (4 & r$4) {
							const i$4 = 3 & r$4;
							if (0 === (a$1 = i$4) || 1 === a$1) {
								const a$2 = t$2.getUint8(n$3 + 1), r$5 = t$2.getUint8(n$3 + 2);
								Ao(a$2, r$5) && e$2[i$4].push(a$2, r$5);
							}
						}
					}
				}
				n$2 += l$2;
			}
			var a$1;
		}
		function No(t$2, e$2, n$2) {
			let a$1 = 0, r$2 = 0;
			const i$2 = [[], []];
			for (let l$2 = e$2; l$2 < e$2 + n$2 - 5 && (a$1 = t$2.getUint32(l$2), r$2 = 31 & t$2.getUint8(l$2 + 4), !(l$2 + 5 + a$1 > e$2 + n$2)); l$2++) 6 === r$2 && l$2 + 5 + a$1 <= t$2.byteLength && Ro(Io(t$2, l$2 + 5, l$2 + 5 + a$1), i$2), l$2 += a$1 + 3;
			return i$2;
		}
		function Co(t$2) {
			const e$2 = t$2.errHandler, n$2 = t$2.manifestModel, a$1 = t$2.mediaController, r$2 = t$2.videoModel, i$2 = t$2.textTracks, l$2 = t$2.vttParser, o$2 = t$2.vttCustomRenderingParser, s$1 = t$2.ttmlParser, u$2 = t$2.streamInfo, d$2 = t$2.settings, c$2 = this.context, f$2 = (0, A.default)(c$2).getInstance();
			let g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, k$1, N$1, D$1, x$1, M$1, O$1, P$1, L$1 = !1;
			function F$1() {
				y$2 = null, _$2 = NaN, T$2 = [], v$2 = null, E$2 = !1, b$2 = [], p$2 = null;
			}
			function U$1(t$3) {
				const e$3 = {};
				e$3[I.default.SUBTITLE] = "subtitles", e$3[I.default.CAPTION] = "captions", e$3[I.default.FORCED_SUBTITLE] = "subtitles";
				const n$3 = new To();
				for (let e$4 in t$3) n$3[e$4] = t$3[e$4];
				n$3.defaultTrack = function(t$4) {
					let e$4 = !1;
					return N$1.length > 1 && t$4.isEmbedded ? e$4 = t$4.id && t$4.id === S$1.default.CC1 : 1 === N$1.length ? t$4.id && "string" == typeof t$4.id && "CC" === t$4.id.substring(0, 2) && (e$4 = !0) : 0 === N$1.length && (e$4 = t$4.index === b$2[0].index), e$4;
				}(t$3), n$3.isTTML = function(t$4) {
					return t$4.codec && t$4.codec.search(S$1.default.STPP) >= 0 || t$4.mimeType && t$4.mimeType.search(S$1.default.TTML) >= 0;
				}(t$3), n$3.kind = function(t$4, e$4) {
					let n$4 = t$4.roles && t$4.roles.length > 0 ? e$4[t$4.roles[0].value] : e$4.caption;
					return n$4 = Object.values(e$4).includes(n$4) ? n$4 : e$4.caption, n$4;
				}(t$3, e$3), i$2.addTextTrackInfo(n$3);
			}
			function j$1(t$3) {
				const e$3 = t$3.chunk;
				e$3.representation.mediaInfo.embeddedCaptions && B$1(e$3.bytes, e$3);
			}
			function q$1(t$3) {
				k$1 = t$3;
			}
			function B$1(t$3, a$2) {
				const r$3 = a$2.representation.mediaInfo, o$3 = r$3.type, s$2 = r$3.mimeType, u$3 = r$3.codec || s$2;
				u$3 ? -1 !== r$3.codec.indexOf("application/mp4") ? function(t$4, e$3, a$3) {
					let r$4, o$4;
					if ("InitializationSegment" === e$3.segmentType) E$2 = !0, _$2 = h$2.getMediaTimescaleFromMoov(t$4);
					else {
						if (!E$2) return;
						o$4 = h$2.getSamplesInfo(t$4), r$4 = o$4.sampleList, r$4.length > 0 && (v$2 = r$4[0].cts - e$3.start * _$2), a$3.search(S$1.default.STPP) >= 0 ? function(t$5, e$4, a$4) {
							let r$5, l$3;
							for (p$2 = null !== p$2 ? p$2 : K$1(a$4), r$5 = 0; r$5 < e$4.length; r$5++) {
								const a$5 = e$4[r$5], o$5 = a$5.cts, s$3 = Y$1(), u$4 = s$3 + o$5 / _$2, d$3 = u$4 + a$5.duration / _$2;
								g$2.buffered.add(u$4, d$3);
								const c$3 = new DataView(t$5, a$5.offset, a$5.subSizes[0]);
								let f$3 = Jn.Utils.dataViewToString(c$3, S$1.default.UTF8);
								const h$3 = [];
								let b$3 = a$5.offset + a$5.subSizes[0];
								for (l$3 = 1; l$3 < a$5.subSizes.length; l$3++) {
									const e$5 = new Uint8Array(t$5, b$3, a$5.subSizes[l$3]), n$3 = String.fromCharCode.apply(null, e$5);
									h$3.push(n$3), b$3 += a$5.subSizes[l$3];
								}
								try {
									const t$6 = n$2.getValue().ttmlTimeIsRelative ? o$5 / _$2 : 0, e$5 = p$2.parse(f$3, t$6, o$5 / _$2, (o$5 + a$5.duration) / _$2, h$3);
									i$2.addCaptions(k$1, s$3, e$5);
								} catch (t$6) {
									y$2.removeExecutedRequestsBeforeTime(), W$1(), m$2.error("TTML parser error: " + t$6);
								}
							}
						}(t$4, r$4, a$3) : function(t$5, e$4) {
							let n$3, a$4, r$5;
							const o$5 = [];
							for (n$3 = 0; n$3 < e$4.length; n$3++) {
								const i$3 = e$4[n$3];
								i$3.cts -= v$2;
								const s$3 = Y$1() + i$3.cts / _$2, u$4 = s$3 + i$3.duration / _$2;
								g$2.buffered.add(s$3, u$4);
								const d$3 = t$5.slice(i$3.offset, i$3.offset + i$3.size), c$3 = Jn.parseBuffer(d$3);
								for (a$4 = 0; a$4 < c$3.boxes.length; a$4++) {
									const t$6 = c$3.boxes[a$4];
									if (m$2.debug("VTT box1: " + t$6.type), "vtte" !== t$6.type && "vttc" === t$6.type) {
										m$2.debug("VTT vttc boxes.length = " + t$6.boxes.length);
										let e$5 = { styles: {} };
										for (r$5 = 0; r$5 < t$6.boxes.length; r$5++) {
											const n$4 = t$6.boxes[r$5];
											if (m$2.debug("VTT box2: " + n$4.type), "payl" === n$4.type) e$5.start = i$3.cts / _$2, e$5.end = (i$3.cts + i$3.duration) / _$2, e$5.data = n$4.cue_text;
											else if ("sttg" === n$4.type && n$4.settings && "" !== n$4.settings) try {
												const t$7 = n$4.settings.split(" ");
												e$5.styles = l$2.getCaptionStyles(t$7);
											} catch (t$7) {}
										}
										e$5 && e$5.data && (o$5.push(e$5), m$2.debug(`VTT  ${e$5.start} - ${e$5.end} :  ${e$5.data}`));
									}
								}
							}
							o$5.length > 0 && i$2.addCaptions(k$1, 0, o$5);
						}(t$4, r$4);
					}
				}(t$3, a$2, u$3) : o$3 === S$1.default.VIDEO ? function(t$4, e$3) {
					let n$3, a$3;
					if (e$3.segmentType === z.HTTPRequest.INIT_SEGMENT_TYPE) 0 === D$1 && (D$1 = h$2.getMediaTimescaleFromMoov(t$4));
					else if (e$3.segmentType === z.HTTPRequest.MEDIA_SEGMENT_TYPE) {
						if (0 === D$1) return void m$2.warn("CEA-608: No timescale for embeddedTextTrack yet");
						a$3 = h$2.getSamplesInfo(t$4);
						const r$4 = a$3.lastSequenceNumber, l$3 = Math.trunc(e$3.start), o$4 = Math.trunc(e$3.end);
						if (O$1[0] || O$1[1] || function() {
							let t$5;
							for (let e$4 = 0; e$4 < N$1.length; e$4++) {
								if (t$5 = i$2.getTrackIdxForId(N$1[e$4].id), -1 === t$5) return void m$2.warn("CEA-608: data before track is ready.");
								const n$4 = H$1(t$5);
								O$1[e$4] = new w$1(e$4 + 1, { newCue: n$4 }, null);
							}
						}(), D$1) {
							if (function(t$5, e$5, n$4, a$4, r$5) {
								return null !== t$5 && null !== e$5 && null !== a$4 && null !== r$5 && (e$5 === t$5 ? a$4 !== r$5 : e$5 !== t$5 + n$4);
							}(x$1, r$4, a$3.numSequences, M$1, l$3)) for (n$3 = 0; n$3 < O$1.length; n$3++) O$1[n$3] && O$1[n$3].reset();
							const e$4 = function(t$5, e$5) {
								if (0 === e$5.length) return null;
								const n$4 = {
									splits: [],
									fields: [[], []]
								}, a$4 = new DataView(t$5);
								for (let t$6 = 0; t$6 < e$5.length; t$6++) {
									const r$5 = e$5[t$6], i$3 = No(a$4, r$5.offset, r$5.size);
									let l$4 = null, o$5 = 0;
									for (let t$7 = 0; t$7 < 2; t$7++) if (i$3[t$7].length > 0) {
										r$5.cts !== l$4 ? o$5 = 0 : o$5 += 1;
										const e$6 = Y$1();
										n$4.fields[t$7].push([
											r$5.cts + e$6 * D$1,
											i$3[t$7],
											o$5
										]), l$4 = r$5.cts;
									}
								}
								return n$4.fields.forEach((function(t$6) {
									t$6.sort((function(t$7, e$6) {
										return t$7[0] === e$6[0] ? t$7[2] - e$6[2] : t$7[0] - e$6[0];
									}));
								})), n$4;
							}(t$4, a$3.sampleList);
							for (let t$5 = 0; t$5 < O$1.length; t$5++) {
								const a$4 = e$4.fields[t$5], r$5 = O$1[t$5];
								if (r$5) for (n$3 = 0; n$3 < a$4.length; n$3++) r$5.addData(a$4[n$3][0] / D$1, a$4[n$3][1]);
							}
							x$1 = r$4, M$1 = o$4;
						}
					}
				}(t$3, a$2) : function(t$4, n$3, a$3) {
					let r$4, l$3;
					const o$4 = new DataView(t$4, 0, t$4.byteLength);
					l$3 = Jn.Utils.dataViewToString(o$4, S$1.default.UTF8);
					try {
						r$4 = K$1(a$3).parse(l$3, 0), i$2.addCaptions(i$2.getCurrentTrackIdx(), 0, r$4), g$2.buffered && g$2.buffered.add(n$3.start, n$3.end);
					} catch (t$5) {
						e$2.error(new G.default(V.TIMED_TEXT_ERROR_ID_PARSE_CODE, V.TIMED_TEXT_ERROR_MESSAGE_PARSE + t$5.message, l$3));
					}
				}(t$3, a$2, u$3) : m$2.error("No text type defined");
			}
			function H$1(t$3) {
				return function(e$3, n$3, a$2) {
					let l$3;
					l$3 = r$2.getTTMLRenderingDiv() ? P$1.createHTMLCaptionsFromScreen(r$2.getElement(), e$3, n$3, a$2) : [{
						start: e$3,
						end: n$3,
						data: a$2.getDisplayText(),
						styles: {}
					}], l$3 && i$2.addCaptions(t$3, 0, l$3);
				};
			}
			function Y$1() {
				return isNaN(g$2.timestampOffset) ? 0 : g$2.timestampOffset;
			}
			function K$1(t$3) {
				let e$3;
				return t$3.search(S$1.default.VTT) >= 0 ? e$3 = d$2.get().streaming.text.webvtt.customRenderingEnabled && o$2 ? o$2 : l$2 : (t$3.search(S$1.default.TTML) >= 0 || t$3.search(S$1.default.STPP) >= 0) && (e$3 = s$1), e$3;
			}
			function W$1(t$3, e$3) {
				void 0 === t$3 && t$3 === e$3 && (t$3 = g$2.buffered.start(0), e$3 = g$2.buffered.end(g$2.buffered.length - 1)), g$2.buffered.remove(t$3, e$3), i$2.deleteCuesFromTrackIdx(k$1, t$3, e$3);
			}
			function $$1(t$3) {
				N$1.forEach((function(e$3) {
					const n$3 = i$2.getTrackIdxForId(e$3.id);
					n$3 >= 0 && i$2.deleteCuesFromTrackIdx(n$3, t$3.from, t$3.to);
				}));
			}
			return g$2 = {
				initialize: function() {
					L$1 || (N$1 = [], k$1 = null, D$1 = 0, O$1 = [], x$1 = null, M$1 = null, L$1 = !0, P$1 = So(c$2).getInstance(), f$2.on(R.default.VIDEO_CHUNK_RECEIVED, j$1, g$2), f$2.on(R.default.BUFFER_CLEARED, $$1, g$2));
				},
				addMediaInfos: function(t$3, e$3, n$3) {
					if (b$2 = b$2.concat(e$3), t$3 === S$1.default.TEXT && e$3[0].isFragmented && !e$3[0].isEmbedded) {
						y$2 = n$3, g$2.buffered = (0, vo.default)(c$2).create(), T$2 = a$1.getTracksFor(S$1.default.TEXT, u$2.id).filter(((t$5) => t$5.isFragmented));
						const t$4 = a$1.getCurrentTrackFor(S$1.default.TEXT, u$2.id);
						for (let e$4 = 0; e$4 < T$2.length; e$4++) if (T$2[e$4] === t$4) {
							q$1(e$4);
							break;
						}
					}
					for (let t$4 = 0; t$4 < e$3.length; t$4++) U$1(e$3[t$4]);
				},
				resetMediaInfos: function() {
					b$2 = [];
				},
				getStreamId: function() {
					return u$2.id;
				},
				append: B$1,
				abort: function() {},
				addEmbeddedTrack: function(t$3) {
					if (L$1 && t$3) if (t$3.id === S$1.default.CC1 || t$3.id === S$1.default.CC3) {
						for (let e$3 = 0; e$3 < N$1.length; e$3++) if (N$1[e$3].id === t$3.id) return;
						N$1.push(t$3);
					} else m$2.warn("Embedded track " + t$3.id + " not supported!");
				},
				resetEmbedded: function() {
					f$2.off(R.default.VIDEO_CHUNK_RECEIVED, j$1, g$2), f$2.off(R.default.BUFFER_CLEARED, $$1, g$2), i$2 && i$2.deleteAllTextTracks(), L$1 = !1, N$1 = [], O$1 = [null, null], x$1 = null, M$1 = null;
				},
				getConfig: function() {
					return {
						fragmentModel: y$2,
						fragmentedTracks: T$2,
						videoModel: r$2
					};
				},
				setCurrentFragmentedTrackIdx: q$1,
				remove: W$1,
				reset: function() {
					F$1(), b$2 = [], h$2 = null;
				}
			}, m$2 = (0, C.default)(c$2).getInstance().getLogger(g$2), h$2 = na(c$2).getInstance(), F$1(), g$2;
		}
		Co.__dashjs_factory_name = "TextSourceBuffer";
		var Do = N.default.getClassFactory(Co);
		class xo {
			constructor(t$2) {
				if (this.cues = /* @__PURE__ */ new Map(), t$2) for (const e$2 of t$2) this.addCue(e$2);
			}
			hasCue(t$2) {
				const e$2 = this.cues.get(t$2.startTime);
				return e$2 && e$2.some(((e$3) => {
					return a$1 = t$2, (n$2 = e$3).startTime === a$1.startTime && n$2.endTime === a$1.endTime && n$2 instanceof VTTCue && a$1 instanceof VTTCue && n$2.text === a$1.text;
					var n$2, a$1;
				}));
			}
			addCue(t$2) {
				const e$2 = this.cues.get(t$2.startTime);
				e$2 ? this.hasCue(t$2) || e$2.push(t$2) : this.cues.set(t$2.startTime, [t$2]);
			}
		}
		var Mo = n$1(7640);
		const zo = [
			"text",
			"align",
			"fontSize",
			"id",
			"isd",
			"line",
			"lineAlign",
			"lineHeight",
			"linePadding",
			"position",
			"positionAlign",
			"region",
			"size",
			"snapToLines",
			"vertical"
		];
		function Oo(t$2) {
			const e$2 = this.context, n$2 = (0, A.default)(e$2).getInstance(), a$1 = t$2.videoModel, r$2 = t$2.streamInfo, i$2 = t$2.settings;
			let l$2, o$2, s$1, u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, w$2, I$1, k$1;
			function N$1(t$3) {
				const e$3 = t$3.kind, n$3 = void 0 !== t$3.id ? t$3.id : t$3.lang, r$3 = t$3.lang, i$3 = t$3.isTTML, l$3 = t$3.isEmbedded;
				return a$1.addTextTrack(e$3, n$3, r$3, i$3, l$3);
			}
			function x$1(t$3, e$3, n$3, a$2, r$3, i$3) {
				let l$3 = 0, o$3 = 0;
				t$3 / e$3 > n$3 / a$2 ? (o$3 = e$3, l$3 = o$3 / a$2 * n$3) : (l$3 = t$3, o$3 = l$3 / n$3 * a$2);
				let s$2 = 0, u$3 = 0, d$3 = 0, c$3 = 0;
				return l$3 / o$3 > r$3 ? (c$3 = o$3, d$3 = o$3 * r$3) : (d$3 = l$3, c$3 = l$3 / r$3), s$2 = (t$3 - d$3) / 2, u$3 = (e$3 - c$3) / 2, i$3 ? {
					x: s$2 + .1 * d$3,
					y: u$3 + .1 * c$3,
					w: .8 * d$3,
					h: .8 * c$3
				} : {
					x: s$2,
					y: u$3,
					w: d$3,
					h: c$3
				};
			}
			function M$1(t$3, e$3) {
				const r$3 = a$1.getClientWidth(), i$3 = a$1.getClientHeight(), l$3 = a$1.getVideoWidth(), o$3 = a$1.getVideoHeight(), s$2 = a$1.getVideoRelativeOffsetTop(), u$3 = a$1.getVideoRelativeOffsetLeft();
				if (0 !== l$3 && 0 !== o$3) {
					let a$2 = l$3 / o$3, d$3 = !1;
					t$3.isFromCEA608 && (a$2 = 3.5 / 3, d$3 = !0);
					const c$3 = x$1.call(this, r$3, i$3, l$3, o$3, a$2, d$3), b$3 = c$3.w, y$3 = c$3.h, T$3 = c$3.x, w$3 = c$3.y;
					if (b$3 != m$2 || y$3 != h$2 || T$3 != f$2 || w$3 != g$2 || e$3) {
						if (f$2 = T$3 + u$3, g$2 = w$3 + s$2, m$2 = b$3, h$2 = y$3, p$2) {
							const t$4 = p$2.style;
							t$4 && (t$4.left = f$2 + "px", t$4.top = g$2 + "px", t$4.width = m$2 + "px", t$4.height = h$2 + "px", t$4.zIndex = E$2 && document[E$2] || _$2 ? v$2 : null, n$2.trigger(D.default.CAPTION_CONTAINER_RESIZE));
						}
						const e$4 = t$3.activeCues;
						if (e$4) {
							const t$4 = e$4.length;
							for (let n$3 = 0; n$3 < t$4; ++n$3) {
								const t$5 = e$4[n$3];
								t$5.scaleCue(t$5);
							}
						}
					}
				}
			}
			function z$1(t$3) {
				const e$3 = m$2, n$3 = h$2;
				let a$2, r$3, i$3, l$3, o$3;
				if (t$3.cellResolution) {
					const s$2 = [e$3 / t$3.cellResolution[0], n$3 / t$3.cellResolution[1]];
					if (t$3.linePadding) {
						for (a$2 in t$3.linePadding) if (t$3.linePadding.hasOwnProperty(a$2)) {
							r$3 = (t$3.linePadding[a$2] * s$2[0]).toString();
							const e$4 = document.getElementsByClassName("spanPadding");
							for (let t$4 = 0; t$4 < e$4.length; t$4++) e$4[t$4].style.cssText = e$4[t$4].style.cssText.replace(/(padding-left\s*:\s*)[\d.,]+(?=\s*px)/gi, "$1" + r$3), e$4[t$4].style.cssText = e$4[t$4].style.cssText.replace(/(padding-right\s*:\s*)[\d.,]+(?=\s*px)/gi, "$1" + r$3);
						}
					}
					if (t$3.fontSize) {
						for (a$2 in t$3.fontSize) if (t$3.fontSize.hasOwnProperty(a$2)) {
							"%" === t$3.fontSize[a$2][0] ? i$3 = t$3.fontSize[a$2][1] / 100 : "c" === t$3.fontSize[a$2][0] && (i$3 = t$3.fontSize[a$2][1]), r$3 = (i$3 * s$2[1]).toString(), o$3 = "defaultFontSize" !== a$2 ? document.getElementsByClassName(a$2) : document.getElementsByClassName("paragraph");
							for (let t$4 = 0; t$4 < o$3.length; t$4++) o$3[t$4].style.cssText = o$3[t$4].style.cssText.replace(/(font-size\s*:\s*)[\d.,]+(?=\s*px)/gi, "$1" + r$3);
						}
						if (t$3.lineHeight) {
							for (a$2 in t$3.lineHeight) if (t$3.lineHeight.hasOwnProperty(a$2)) {
								"%" === t$3.lineHeight[a$2][0] ? l$3 = t$3.lineHeight[a$2][1] / 100 : "c" === t$3.fontSize[a$2][0] && (l$3 = t$3.lineHeight[a$2][1]), r$3 = (l$3 * s$2[1]).toString(), o$3 = document.getElementsByClassName(a$2);
								for (let t$4 = 0; t$4 < o$3.length; t$4++) o$3[t$4].style.cssText = o$3[t$4].style.cssText.replace(/(line-height\s*:\s*)[\d.,]+(?=\s*px)/gi, "$1" + r$3);
							}
						}
					}
				}
				if (t$3.isd) {
					let e$4 = document.getElementById(t$3.cueID);
					e$4 && p$2.removeChild(e$4), P$1(t$3);
				}
			}
			function O$1(t$3, e$3) {
				const n$3 = /^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/, a$2 = /^#(.*)$/;
				if (n$3.test(e$3)) {
					const a$3 = n$3.exec(e$3), r$3 = parseInt(a$3[4], 10) - 1;
					return "data:image/png;base64," + btoa(t$3.images[r$3]);
				}
				if (a$2.test(e$3)) {
					const n$4 = a$2.exec(e$3)[1];
					return "data:image/png;base64," + t$3.embeddedImages[n$4];
				}
				return e$3;
			}
			function P$1(t$3) {
				if (p$2) {
					it$1.call(this);
					const e$3 = document.createElement("div");
					p$2.appendChild(e$3), T$2 = (0, Mo.renderHTML)(t$3.isd, e$3, (function(e$4) {
						return O$1(t$3, e$4);
					}), p$2.clientHeight, p$2.clientWidth, i$2.get().streaming.text.imsc.displayForcedOnlyMode, (function(t$4) {
						o$2.info("renderCaption :", t$4);
					}), T$2, i$2.get().streaming.text.imsc.enableRollUp), e$3.id = t$3.cueID, n$2.trigger(D.default.CAPTION_RENDERED, {
						captionDiv: e$3,
						currentTrackIdx: c$2
					});
				}
			}
			function L$1(t$3, e$3) {
				return !!e$3 && e$3.endTime >= t$3.startTime;
			}
			function F$1(t$3, e$3) {
				return !!i$2.get().streaming.text.extendSegmentedCues && !!function(t$4, e$4, n$3) {
					for (let a$2 = 0; a$2 < n$3.length; a$2++) {
						const r$3 = n$3[a$2];
						if (JSON.stringify(t$4[r$3]) !== JSON.stringify(e$4[r$3])) return !1;
					}
					return !0;
				}(e$3, t$3, zo) && (e$3.endTime = Math.max(e$3.endTime, t$3.endTime), !0);
			}
			function U$1(t$3, e$3) {
				e$3 && e$3.forEach(((e$4) => {
					e$4.kind && "image" === e$4.kind && (e$4.src = O$1(t$3, e$4.src)), U$1(t$3, e$4.contents);
				}));
			}
			function j$1(t$3, e$3, n$3) {
				const r$3 = X$1(t$3), l$3 = i$2.get().streaming.text.dispatchForManualRendering;
				if (!r$3) return;
				if (!Array.isArray(n$3) || 0 === n$3.length) return;
				const s$2 = new xo(r$3.cues);
				for (let t$4 = 0; t$4 < n$3.length; t$4++) {
					let u$3 = null;
					const d$3 = n$3[t$4];
					r$3.cellResolution = d$3.cellResolution, r$3.isFromCEA608 = d$3.isFromCEA608, isNaN(d$3.start) || isNaN(d$3.end) || (l$3 ? u$3 = q$1(d$3, e$3) : V$1(d$3) && p$2 ? u$3 = H$1(d$3, e$3, r$3) : d$3.data && (u$3 = Y$1(d$3, e$3, r$3)));
					try {
						if (u$3) {
							if (!s$2.hasCue(u$3)) if (s$2.addCue(u$3), i$2.get().streaming.text.webvtt.customRenderingEnabled) r$3.manualCueList || (r$3.manualCueList = []), r$3.manualCueList.push(u$3);
							else {
								let t$6;
								r$3.cues && 0 !== r$3.cues.length && (t$6 = r$3.cues[r$3.cues.length - 1]), L$1(u$3, t$6) ? F$1(u$3, t$6) || (t$6.isd && (t$6.onexit = function() {}), r$3.mode !== S$1.default.TEXT_DISABLED && r$3.addCue(u$3)) : r$3.mode !== S$1.default.TEXT_DISABLED && r$3.addCue(u$3);
							}
							const t$5 = i$2.get().streaming.buffer.bufferToKeep;
							tt$1(r$3, 0, a$1.getTime() - t$5);
						} else o$2.error("Impossible to display subtitles. You might have missed setting a TTML rendering div via player.attachTTMLRenderingDiv(TTMLRenderingDiv)");
					} catch (t$5) {
						throw et$1(r$3), r$3.addCue(u$3), t$5;
					}
				}
			}
			function q$1(t$3, e$3) {
				let n$3 = K$1(t$3, e$3);
				return n$3.onenter = function() {
					V$1(t$3) && k$1 && k$1.cueID !== n$3.cueID && G$1(k$1), delete n$3.type, k$1 = n$3, B$1(n$3);
				}, n$3.onexit = function() {
					G$1(n$3), k$1 = null;
				}, n$3;
			}
			function B$1(t$3) {
				n$2.trigger(D.default.CUE_ENTER, t$3);
			}
			function G$1(t$3) {
				n$2.trigger(D.default.CUE_EXIT, { cueID: t$3.cueID });
			}
			function H$1(t$3, e$3, a$2) {
				const r$3 = this;
				let i$3 = K$1(t$3, e$3);
				return p$2.style.left = f$2 + "px", p$2.style.top = g$2 + "px", p$2.style.width = m$2 + "px", p$2.style.height = h$2 + "px", i$3.onenter = function() {
					a$2.mode === S$1.default.TEXT_SHOWING && (this.isd ? (I$1 ? requestAnimationFrame((() => P$1(this))) : P$1(this), o$2.debug("Cue enter id:" + this.cueID)) : (p$2.appendChild(this.cueHTMLElement), z$1.call(r$3, this), n$2.trigger(D.default.CAPTION_RENDERED, {
						captionDiv: this.cueHTMLElement,
						currentTrackIdx: c$2
					})));
				}, i$3.onexit = function() {
					if (p$2) {
						const t$4 = p$2.childNodes;
						for (let e$4 = 0; e$4 < t$4.length; ++e$4) t$4[e$4].id === this.cueID && (o$2.debug("Cue exit id:" + t$4[e$4].id), p$2.removeChild(t$4[e$4]), --e$4);
					}
				}, i$3;
			}
			function Y$1(t$3, e$3, a$2) {
				let r$3 = K$1(t$3, e$3);
				if (r$3.isActive = !1, t$3.styles) try {
					void 0 !== t$3.styles.align && "align" in r$3 && (r$3.align = t$3.styles.align), void 0 !== t$3.styles.line && "line" in r$3 && (r$3.line = t$3.styles.line), void 0 !== t$3.styles.lineAlign && (r$3.lineAlign = t$3.styles.lineAlign), void 0 !== t$3.styles.snapToLines && "snapToLines" in r$3 && (r$3.snapToLines = t$3.styles.snapToLines), void 0 !== t$3.styles.position && "position" in r$3 && (r$3.position = t$3.styles.position), void 0 !== t$3.styles.positionAlign && (r$3.positionAlign = t$3.styles.positionAlign), void 0 !== t$3.styles.size && "size" in r$3 && (r$3.size = t$3.styles.size);
				} catch (t$4) {
					o$2.error(t$4);
				}
				return r$3.onenter = function() {
					a$2.mode === S$1.default.TEXT_SHOWING && n$2.trigger(D.default.CAPTION_RENDERED, { currentTrackIdx: c$2 });
				}, r$3;
			}
			function V$1(t$3) {
				return "html" === t$3.type;
			}
			function K$1(t$3, e$3) {
				return V$1(t$3) ? function(t$4, e$4) {
					let n$3 = new s$1(t$4.start + e$4, t$4.end + e$4, "");
					return n$3.cueHTMLElement = t$4.cueHTMLElement, n$3.isd = t$4.isd, n$3.images = t$4.images, n$3.embeddedImages = t$4.embeddedImages, n$3.cueID = t$4.cueID, n$3.scaleCue = z$1.bind(self), n$3.cellResolution = t$4.cellResolution, n$3.lineHeight = t$4.lineHeight, n$3.linePadding = t$4.linePadding, n$3.fontSize = t$4.fontSize, n$3.isd && U$1(n$3, n$3.isd.contents), n$3;
				}(t$3, e$3) : function(t$4, e$4) {
					let n$3 = new s$1(t$4.start - e$4, t$4.end - e$4, t$4.data);
					return n$3.cueID = Gt.default.generateUuid(), n$3;
				}(t$3, e$3);
			}
			function W$1(t$3) {
				if (b$2) {
					const e$3 = b$2.childNodes;
					for (let n$3 = 0; n$3 < e$3.length; ++n$3) e$3[n$3].id === t$3.cueID && (b$2.removeChild(e$3[n$3]), --n$3);
				}
			}
			function $$1() {
				const t$3 = a$1.getTextTracks(), e$3 = [];
				for (const n$3 of t$3) n$3.manualMode === S$1.default.TEXT_SHOWING && e$3.push(n$3);
				return e$3;
			}
			function X$1(t$3) {
				return t$3 >= 0 && u$2[t$3] ? a$1.getTextTrack(u$2[t$3].kind, u$2[t$3].id, u$2[t$3].lang, u$2[t$3].isTTML, u$2[t$3].isEmbedded) : null;
			}
			function Q$1(t$3) {
				if (t$3 === c$2) return;
				c$2 = t$3;
				const e$3 = X$1(c$2);
				Z$1.call(this, e$3), y$2 && (clearInterval(y$2), y$2 = null), e$3 && "html" === e$3.renderingType && (M$1.call(this, e$3, !0), window.ResizeObserver ? (w$2 = new window.ResizeObserver((() => {
					M$1.call(this, e$3, !0);
				})), w$2.observe(a$1.getElement())) : y$2 = setInterval(M$1.bind(this, e$3), 500));
			}
			function Z$1(t$3) {
				it$1.call(this), t$3 && "html" === t$3.renderingType ? at$1.call(this) : rt$1.call(this);
			}
			function J$1(t$3, e$3, n$3) {
				let a$2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
				return !!t$3 && (isNaN(e$3) || (a$2 ? t$3.startTime : t$3.endTime) >= e$3) && (isNaN(n$3) || (a$2 ? t$3.endTime : t$3.startTime) <= n$3);
			}
			function tt$1(t$3, e$3, n$3) {
				if (!(n$3 < e$3) && t$3 && (t$3.cues || t$3.manualCueList)) {
					const a$2 = t$3.cues && t$3.cues.length > 0 ? "native" : "custom", r$3 = "native" === a$2 ? t$3.cues : t$3.manualCueList;
					if (!r$3 || 0 === r$3.length) return;
					for (let i$3 = r$3.length - 1; i$3 >= 0; i$3--) J$1(r$3[i$3], e$3, n$3, !0) && !nt$1(r$3[i$3]) && ("native" === a$2 ? t$3.removeCue(r$3[i$3]) : (W$1(r$3[i$3]), delete t$3.manualCueList[i$3]));
				}
			}
			function et$1(t$3, e$3, n$3) {
				let a$2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
				if (t$3 && (t$3.cues || t$3.manualCueList)) {
					const r$3 = t$3.cues && t$3.cues.length > 0 ? "native" : "custom", i$3 = "native" === r$3 ? t$3.cues : t$3.manualCueList;
					if (!i$3 || 0 === i$3.length) return;
					for (let l$3 = i$3.length - 1; l$3 >= 0; l$3--) J$1(i$3[l$3], e$3, n$3, a$2) && ("native" === r$3 ? (i$3[l$3].onexit && i$3[l$3].onexit(), t$3.removeCue(i$3[l$3])) : (W$1(i$3[l$3]), delete t$3.manualCueList[l$3]));
				}
			}
			function nt$1(t$3) {
				const e$3 = a$1.getTime();
				return e$3 >= t$3.startTime && e$3 <= t$3.endTime;
			}
			function at$1() {
				let t$3 = document.getElementById("native-cue-style");
				if (t$3) return;
				t$3 = document.createElement("style"), t$3.id = "native-cue-style", document.head.appendChild(t$3);
				const e$3 = t$3.sheet, n$3 = a$1.getElement();
				try {
					n$3 && (n$3.id ? e$3.insertRule("#" + n$3.id + "::cue {background: transparent}", 0) : 0 !== n$3.classList.length ? e$3.insertRule("." + n$3.className + "::cue {background: transparent}", 0) : e$3.insertRule("video::cue {background: transparent}", 0));
				} catch (t$4) {
					o$2.info("" + t$4.message);
				}
			}
			function rt$1() {
				const t$3 = document.getElementById("native-cue-style");
				t$3 && document.head.removeChild(t$3);
			}
			function it$1() {
				if (p$2) for (; p$2.firstChild;) p$2.removeChild(p$2.firstChild);
			}
			return l$2 = {
				addCaptions: j$1,
				addTextTrackInfo: function(t$3) {
					u$2.push(t$3);
				},
				createTracks: function() {
					u$2.sort((function(t$4, e$3) {
						return t$4.index - e$3.index;
					})), p$2 = a$1.getTTMLRenderingDiv(), b$2 = a$1.getVttRenderingDiv();
					let t$3 = -1;
					for (let e$3 = 0; e$3 < u$2.length; e$3++) {
						const a$2 = N$1(u$2[e$3]);
						d$2.push(a$2), u$2[e$3].defaultTrack && (a$2.default = !0, t$3 = e$3);
						const r$3 = X$1(e$3);
						r$3 && (r$3.mode = S$1.default.TEXT_SHOWING, p$2 && (u$2[e$3].isTTML || u$2[e$3].isEmbedded) ? r$3.renderingType = "html" : r$3.renderingType = "default"), j$1(e$3, 0, u$2[e$3].captionData), n$2.trigger(D.default.TEXT_TRACK_ADDED);
					}
					if (Q$1.call(this, t$3), t$3 >= 0) {
						let e$3 = function() {
							const a$2 = X$1(t$3);
							a$2 && "html" === a$2.renderingType && M$1.call(this, a$2, !0), n$2.off(D.default.PLAYBACK_METADATA_LOADED, e$3, this);
						};
						n$2.on(D.default.PLAYBACK_METADATA_LOADED, e$3, this);
						for (let e$4 = 0; e$4 < u$2.length; e$4++) {
							const n$3 = X$1(e$4);
							if (n$3) {
								const a$2 = i$2.get().streaming.text.dispatchForManualRendering;
								n$3.mode = e$4 !== t$3 || a$2 ? S$1.default.TEXT_HIDDEN : S$1.default.TEXT_SHOWING, n$3.manualMode = e$4 === t$3 ? S$1.default.TEXT_SHOWING : S$1.default.TEXT_HIDDEN;
							}
						}
					}
					n$2.trigger(R.default.TEXT_TRACKS_QUEUE_INITIALIZED, {
						index: c$2,
						tracks: u$2,
						streamId: r$2.id
					});
				},
				deleteAllTextTracks: function() {
					const t$3 = d$2 ? d$2.length : 0;
					for (let e$3 = 0; e$3 < t$3; e$3++) {
						const t$4 = X$1(e$3);
						t$4 && et$1.call(this, t$4, r$2.start, r$2.start + r$2.duration, !1);
					}
					d$2 = [], u$2 = [], y$2 && (clearInterval(y$2), y$2 = null), w$2 && a$1 && (w$2.unobserve(a$1.getElement()), w$2 = null), c$2 = -1, it$1.call(this);
				},
				deleteCuesFromTrackIdx: function(t$3, e$3, n$3) {
					const a$2 = X$1(t$3);
					a$2 && et$1(a$2, e$3, n$3);
				},
				disableManualTracks: function() {
					const t$3 = $$1();
					if (t$3 && t$3.length > 0) {
						const e$3 = t$3[0].manualCueList;
						e$3 && e$3.length > 0 && e$3.forEach(((t$4) => {
							if (t$4.isActive) {
								if (t$4.isActive = !1, i$2.get().streaming.text.dispatchForManualRendering) G$1(t$4);
								else if (b$2) {
									const e$4 = b$2.childNodes;
									for (let n$3 = 0; n$3 < e$4.length; ++n$3) e$4[n$3].id === t$4.cueID && (b$2.removeChild(e$4[n$3]), --n$3);
								}
							}
						}));
					}
				},
				getCurrentTrackIdx: function() {
					return c$2;
				},
				getCurrentTextTrackInfo: function() {
					return u$2[c$2];
				},
				getStreamId: function() {
					return r$2.id;
				},
				getTextTrackInfos: function() {
					return u$2;
				},
				getTrackIdxForId: function(t$3) {
					let e$3 = -1;
					for (let n$3 = 0; n$3 < u$2.length; n$3++) if (u$2[n$3].id === t$3) {
						e$3 = n$3;
						break;
					}
					return e$3;
				},
				initialize: function() {
					"undefined" != typeof window && "undefined" != typeof navigator && (s$1 = window.VTTCue || window.TextTrackCue, u$2 = [], d$2 = [], c$2 = -1, f$2 = 0, g$2 = 0, m$2 = 0, h$2 = 0, p$2 = null, b$2 = null, y$2 = null, _$2 = !1, v$2 = 2147483647, T$2 = null, I$1 = "requestAnimationFrame" in window, void 0 !== document.fullscreenElement ? E$2 = "fullscreenElement" : void 0 !== document.webkitIsFullScreen ? E$2 = "webkitIsFullScreen" : document.msFullscreenElement ? E$2 = "msFullscreenElement" : document.mozFullScreen && (E$2 = "mozFullScreen"));
				},
				manualCueProcessing: function(t$3) {
					const e$3 = $$1();
					if (e$3 && e$3.length > 0) {
						const n$3 = e$3[0].manualCueList;
						n$3 && n$3.length > 0 && n$3.forEach(((e$4) => {
							e$4.startTime <= t$3 && e$4.endTime >= t$3 && !e$4.isActive ? (e$4.isActive = !0, i$2.get().streaming.text.dispatchForManualRendering ? B$1(e$4) : WebVTT.processCues(window, [e$4], b$2, e$4.cueID)) : e$4.isActive && (e$4.startTime > t$3 || e$4.endTime < t$3) && (e$4.isActive = !1, i$2.get().streaming.text.dispatchForManualRendering ? G$1(e$4) : W$1(e$4));
						}));
					}
				},
				setCurrentTrackIdx: Q$1,
				setModeForTrackIdx: function(t$3, e$3) {
					const n$3 = X$1(t$3);
					n$3 && n$3.mode !== e$3 && (n$3.mode = e$3), n$3 && n$3.manualMode !== e$3 && (n$3.manualMode = e$3);
				}
			}, o$2 = (0, C.default)(e$2).getInstance().getLogger(l$2), l$2;
		}
		Oo.__dashjs_factory_name = "TextTracks";
		var Po = N.default.getClassFactory(Oo);
		function Lo() {
			const t$2 = this.context;
			let e$2, n$2, a$1, r$2, i$2, l$2;
			function o$2(t$3) {
				const e$3 = t$3.split(":"), n$3 = e$3.length - 1;
				return t$3 = 60 * parseInt(e$3[n$3 - 1], 10) + parseFloat(e$3[n$3]), 2 === n$3 && (t$3 += 3600 * parseInt(e$3[0], 10)), t$3;
			}
			function s$1(t$3) {
				const e$3 = t$3.split(r$2), n$3 = e$3[1].split(l$2);
				return n$3.shift(), e$3[1] = n$3[0], n$3.shift(), {
					cuePoints: e$3,
					styles: u$2(n$3)
				};
			}
			function u$2(t$3) {
				const e$3 = {};
				return t$3.forEach((function(t$4) {
					const n$3 = t$4.split(":");
					if (n$3.length > 1) {
						const [t$5, a$2] = n$3;
						switch (t$5) {
							case "align":
							case "A":
								e$3.align = a$2;
								break;
							case "line":
							case "L":
								const [t$6, n$4] = a$2.split(","), r$3 = t$6.endsWith("%");
								e$3.line = "auto" === t$6 ? t$6 : parseInt(t$6, 10), r$3 && (e$3.snapToLines = !1), n$4 && (e$3.lineAlign = n$4);
								break;
							case "position":
							case "P":
								const [i$3, l$3] = a$2.split(",");
								e$3.position = parseInt(i$3, 10), l$3 && (e$3.positionAlign = l$3);
								break;
							case "size":
							case "S": e$3.size = parseInt(a$2, 10);
						}
					}
				})), e$3;
			}
			function d$2(t$3, e$3) {
				let n$3, a$2 = e$3, i$3 = "", l$3 = "";
				for (; "" !== t$3[a$2] && a$2 < t$3.length;) a$2++;
				if (n$3 = a$2 - e$3, n$3 > 1) for (let a$3 = 0; a$3 < n$3; a$3++) {
					if (l$3 = t$3[e$3 + a$3], l$3.match(r$2)) {
						i$3 = "";
						break;
					}
					i$3 += l$3, a$3 !== n$3 - 1 && (i$3 += "\n");
				}
				else l$3 = t$3[e$3], l$3.match(r$2) || (i$3 = l$3);
				return i$3;
			}
			return e$2 = {
				parse: function(t$3) {
					const e$3 = [];
					let l$3, u$3;
					if (!t$3) return e$3;
					l$3 = (t$3 = t$3.split(a$1)).length, u$3 = -1;
					for (let a$2 = 0; a$2 < l$3; a$2++) {
						let l$4 = t$3[a$2];
						if (l$4.length > 0 && "WEBVTT" !== l$4 && l$4.match(r$2)) {
							const r$3 = s$1(l$4), c$2 = r$3.cuePoints, f$2 = r$3.styles, g$2 = d$2(t$3, a$2 + 1), m$2 = o$2(c$2[0].replace(i$2, "")), h$2 = o$2(c$2[1].replace(i$2, ""));
							!isNaN(m$2) && !isNaN(h$2) && m$2 >= u$3 && h$2 > m$2 ? "" !== g$2 ? (u$3 = m$2, e$3.push({
								start: m$2,
								end: h$2,
								data: g$2,
								styles: f$2
							})) : n$2.error("Skipping cue due to empty/malformed cue text") : n$2.error("Skipping cue due to incorrect cue timing");
						}
					}
					return e$3;
				},
				getCaptionStyles: u$2
			}, n$2 = (0, C.default)(t$2).getInstance().getLogger(e$2), a$1 = /(?:\r\n|\r|\n)/gm, r$2 = /-->/, i$2 = /(^[\s]+|[\s]+$)/g, l$2 = /\s\b/g, e$2;
		}
		Lo.__dashjs_factory_name = "VTTParser";
		var Fo = N.default.getSingletonFactory(Lo);
		function Uo() {
			let t$2, e$2;
			return t$2 = { parse: function(t$3) {
				let n$2 = [];
				return e$2.oncue = function(t$4) {
					t$4.start = t$4.startTime, t$4.end = t$4.endTime, t$4.data = t$4.text, t$4.styles = {
						align: t$4.align,
						line: t$4.line,
						position: t$4.position,
						size: t$4.size
					}, n$2.push(t$4);
				}, e$2.parse(t$3), n$2;
			} }, function() {
				try {
					window && window.WebVTT && window.WebVTT.Parser && (e$2 = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder()));
				} catch (t$3) {}
			}(), t$2;
		}
		Uo.__dashjs_factory_name = "VttCustomRenderingParser";
		var jo = N.default.getSingletonFactory(Uo);
		function qo() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2 = 0;
			function i$2() {
				const t$3 = "cue_TTML_" + r$2;
				return r$2++, t$3;
			}
			return n$2 = { parse: function(t$3, n$3, r$3, l$2, o$2) {
				let s$1 = "";
				const u$2 = [];
				let d$2, c$2, f$2;
				const g$2 = {}, m$2 = {};
				let h$2 = "", p$2 = "", b$2 = {
					onOpenTag: function(t$4, n$4, r$4) {
						if (r$4[" imagetype"] && !r$4[" imageType"] && (e$2.trigger(D.default.CONFORMANCE_VIOLATION, {
							level: Aa.LEVELS.ERROR,
							event: Aa.EVENTS.NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE
						}), r$4[" imageType"] = r$4[" imagetype"]), "image" === n$4 && ("http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt" === t$4 || "http://www.smpte-ra.org/schemas/2052-1/2013/smpte-tt" === t$4)) {
							if (!r$4[" imageType"] || "PNG" !== r$4[" imageType"].value) return void a$1.warn("smpte-tt imageType != PNG. Discarded");
							h$2 = r$4["http://www.w3.org/XML/1998/namespace id"].value;
						}
					},
					onCloseTag: function() {
						h$2 && (m$2[h$2] = p$2.trim()), p$2 = "", h$2 = "";
					},
					onText: function(t$4) {
						h$2 && (p$2 += t$4);
					}
				};
				if (!t$3) throw s$1 = "no ttml data to parse", new Error(s$1);
				g$2.data = t$3, e$2.trigger(R.default.TTML_TO_PARSE, g$2);
				let y$2 = (0, Mo.fromXML)(g$2.data, (function(t$4) {
					s$1 = t$4;
				}), b$2);
				e$2.trigger(R.default.TTML_PARSED, {
					ttmlString: g$2.data,
					ttmlDoc: y$2
				});
				const E$2 = y$2.getMediaTimeEvents();
				for (f$2 = 0; f$2 < E$2.length; f$2++) {
					let t$4 = (0, Mo.generateISD)(y$2, E$2[f$2], (function(t$5) {
						s$1 = t$5;
					}));
					t$4.contents.some(((t$5) => t$5.contents.length)) && (d$2 = E$2[f$2] + n$3, c$2 = E$2[f$2 + 1] + n$3, d$2 < c$2 && u$2.push({
						start: d$2,
						end: c$2,
						type: "html",
						cueID: i$2(),
						isd: t$4,
						images: o$2,
						embeddedImages: m$2
					}));
				}
				if ("" !== s$1) throw a$1.error(s$1), new Error(s$1);
				return u$2;
			} }, a$1 = (0, C.default)(t$2).getInstance().getLogger(n$2), n$2;
		}
		qo.__dashjs_factory_name = "TTMLParser";
		var Bo = N.default.getSingletonFactory(qo);
		function Go(t$2) {
			let e$2 = this.context;
			const n$2 = (0, A.default)(e$2).getInstance(), a$1 = St(e$2).getInstance(), r$2 = t$2.adapter, i$2 = t$2.baseURLController, l$2 = "error", o$2 = "loaded", s$1 = "unloaded";
			let u$2, d$2, c$2;
			function f$2(t$3, e$3) {
				let n$3, l$3, o$3 = !1;
				if (i$2.resolve()) {
					const e$4 = r$2.getVoRepresentations(t$3);
					e$4 && e$4.length > 0 && (n$3 = i$2.resolve(e$4[0].path).url);
				}
				const u$3 = t$3.essentialProperties.filter(((t$4) => t$4.schemeIdUri && t$4.schemeIdUri === S$1.default.FONT_DOWNLOAD_DVB_SCHEME)), d$3 = t$3.supplementalProperties.filter(((t$4) => t$4.schemeIdUri && t$4.schemeIdUri === S$1.default.FONT_DOWNLOAD_DVB_SCHEME));
				u$3.length > 0 ? (o$3 = !0, l$3 = u$3) : l$3 = d$3, l$3.forEach(((r$3) => {
					if (function(t$4) {
						return !(!(t$4.value && 1 === parseInt(t$4.value) && t$4.dvbUrl && t$4.dvbUrl.length > 0 && t$4.dvbFontFamily && t$4.dvbFontFamily.length > 0 && t$4.dvbMimeType) || t$4.dvbMimeType !== S$1.default.OFF_MIMETYPE && t$4.dvbMimeType !== S$1.default.WOFF_MIMETYPE);
					}(r$3)) {
						let u$4 = (i$3 = r$3.dvbUrl, l$4 = n$3, a$1.isPathAbsolute(i$3) ? i$3 : a$1.isRelative(i$3) ? l$4 ? a$1.resolve(i$3, l$4) : a$1.resolve(i$3) : i$3);
						c$2.push({
							fontFamily: r$3.dvbFontFamily,
							url: u$4,
							mimeType: r$3.dvbMimeType,
							trackId: t$3.id,
							streamId: e$3,
							isEssential: o$3,
							status: s$1,
							fontFace: new FontFace(r$3.dvbFontFamily, `url(${u$4})`, { display: "swap" })
						});
					}
					var i$3, l$4;
				}));
			}
			function g$2(t$3, e$3) {
				c$2[t$3] = {
					...c$2[t$3],
					status: e$3
				};
			}
			function m$2() {
				c$2 = [];
			}
			return u$2 = {
				addFontsFromTracks: function(t$3, e$3) {
					if (t$3 && Array.isArray(t$3) && e$3) for (let n$3 = 0; n$3 < t$3.length; n$3++) f$2(t$3[n$3], e$3);
				},
				downloadFonts: function() {
					for (let t$3 = 0; t$3 < c$2.length; t$3++) {
						let e$3 = c$2[t$3];
						document.fonts.add(e$3.fontFace), n$2.trigger(D.default.DVB_FONT_DOWNLOAD_ADDED, e$3), e$3.fontFace.load().then((() => {
							g$2(t$3, o$2), n$2.trigger(D.default.DVB_FONT_DOWNLOAD_COMPLETE, e$3);
						}), ((a$2) => {
							g$2(t$3, l$2), d$2.debug("Font download error: ", a$2), n$2.trigger(D.default.DVB_FONT_DOWNLOAD_FAILED, e$3);
						}));
					}
				},
				getFonts: function() {
					return c$2;
				},
				getFontsForTrackId: function(t$3) {
					return c$2.filter(((e$3) => e$3.trackId && e$3.trackId === t$3));
				},
				reset: function() {
					(function() {
						for (const t$3 of c$2) {
							let e$3 = document.fonts.delete(t$3.fontFace);
							d$2.debug(`Removal of fontFamily: ${t$3.fontFamily} was ${e$3 ? "successful" : "unsuccessful"}`);
						}
					})(), m$2();
				}
			}, d$2 = (0, C.default)(e$2).getInstance().getLogger(u$2), m$2(), u$2;
		}
		Go.__dashjs_factory_name = "DVBFonts";
		var Ho = N.default.getClassFactory(Go);
		function Yo(t$2) {
			let e$2 = this.context;
			const n$2 = t$2.adapter, a$1 = t$2.errHandler, r$2 = t$2.manifestModel, i$2 = t$2.mediaController, l$2 = t$2.baseURLController, o$2 = t$2.videoModel, s$1 = t$2.settings;
			let u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2;
			function w$2(t$3) {
				if (v$2.error(`Could not download ${t$3.isEssential ? "an essential" : "a"} font - fontFamily: ${t$3.fontFamily}, url: ${t$3.url}`), t$3.isEssential) {
					let e$3 = f$2[t$3.streamId].getTrackIdxForId(t$3.trackId);
					f$2[t$3.streamId].setModeForTrackIdx(e$3, S$1.default.TEXT_DISABLED);
				}
			}
			function k$1(t$3) {
				if (v$2.debug(`Successfully downloaded ${t$3.isEssential ? "an essential" : "a"} font - fontFamily: ${t$3.fontFamily}, url: ${t$3.url}`), t$3.isEssential) {
					let e$3 = f$2[t$3.streamId].getTrackIdxForId(t$3.trackId);
					e$3 === f$2[t$3.streamId].getCurrentTrackIdx() ? f$2[t$3.streamId].setModeForTrackIdx(e$3, S$1.default.TEXT_SHOWING) : f$2[t$3.streamId].setModeForTrackIdx(e$3, S$1.default.TEXT_HIDDEN);
				}
			}
			function N$1(t$3) {
				let e$3 = t$3.tracks, n$3 = t$3.index;
				const a$2 = t$3.streamId;
				if (!1 === s$1.get().streaming.text.defaultEnabled && !O$1() || _$2) P$1(a$2, -1);
				else {
					const t$4 = i$2.getCurrentTrackFor(S$1.default.TEXT, a$2);
					if (t$4) {
						const r$3 = {
							lang: t$4.lang,
							role: t$4.roles[0],
							index: t$4.index,
							codec: t$4.codec,
							accessibility: t$4.accessibility[0]
						};
						e$3.some(((t$5, e$4) => {
							if (i$2.matchSettings(r$3, t$5)) return P$1(a$2, e$4), n$3 = e$4, !0;
						}));
					}
					b$2 = !1;
				}
				d$2[a$2].lastEnabledIndex = n$3, p$2.trigger(D.default.TEXT_TRACKS_ADDED, {
					enabled: O$1(),
					index: n$3,
					tracks: e$3,
					streamId: a$2
				}), E$2 = !0, T$2.addFontsFromTracks(e$3, a$2), T$2.getFonts().forEach(((t$4) => {
					if (t$4.isEssential) {
						let e$4 = f$2[t$4.streamId].getTrackIdxForId(t$4.trackId);
						f$2[t$4.streamId].setModeForTrackIdx(e$4, S$1.default.TEXT_DISABLED);
					}
				})), T$2.downloadFonts();
			}
			function x$1(t$3) {
				try {
					const e$3 = t$3.streamId;
					if (!f$2[e$3] || isNaN(t$3.time)) return;
					f$2[e$3].manualCueProcessing(t$3.time);
				} catch (t$4) {}
			}
			function M$1(t$3) {
				try {
					const e$3 = t$3.streamId;
					if (!f$2[e$3]) return;
					f$2[e$3].disableManualTracks();
				} catch (t$4) {}
			}
			function z$1(t$3) {
				try {
					if (!t$3 || !t$3.mediaType || t$3.mediaType !== S$1.default.AUDIO || !t$3.currentMediaInfo) return;
					const e$3 = f$2[t$3.streamId].getCurrentTextTrackInfo();
					let n$3 = NaN;
					b$2 ? n$3 = L$1(t$3.streamId) : F$1(e$3) && t$3.currentMediaInfo.lang && t$3.currentMediaInfo.lang !== e$3.lang && (n$3 = L$1(t$3.streamId), isNaN(n$3) && (n$3 = -1)), isNaN(n$3) || P$1(t$3.streamId, n$3);
				} catch (t$4) {
					v$2.error(t$4);
				}
			}
			function O$1() {
				let t$3 = !0;
				return b$2 && !y$2 && (t$3 = !1), t$3;
			}
			function P$1(t$3, e$3) {
				b$2 = -1 === e$3, b$2 && i$2 && i$2.saveTextSettingsDisabled();
				let n$3 = U$1(t$3);
				if (n$3 === e$3 || !f$2[t$3]) return;
				f$2[t$3].disableManualTracks();
				let a$2 = f$2[t$3].getCurrentTextTrackInfo(), r$3 = a$2 ? o$2.getTextTrack(a$2.kind, a$2.id, a$2.lang, a$2.isTTML, a$2.isEmbedded) : null;
				r$3 && r$3.mode !== S$1.default.TEXT_DISABLED && f$2[t$3].setModeForTrackIdx(n$3, S$1.default.TEXT_HIDDEN), f$2[t$3].setCurrentTrackIdx(e$3), a$2 = f$2[t$3].getCurrentTextTrackInfo();
				const l$3 = s$1.get().streaming.text.dispatchForManualRendering;
				if (a$2 && !l$3 && a$2.mode !== S$1.default.TEXT_DISABLED && f$2[t$3].setModeForTrackIdx(e$3, S$1.default.TEXT_SHOWING), a$2 && a$2.isFragmented && !a$2.isEmbedded) (function(t$4, e$4, n$4) {
					if (!c$2[t$4]) return;
					let a$3 = c$2[t$4].getConfig().fragmentedTracks;
					for (let r$4 = 0; r$4 < a$3.length; r$4++) {
						let l$4 = a$3[r$4];
						if (e$4.lang === l$4.lang && (l$4.id ? e$4.id === l$4.id : e$4.index === l$4.index)) {
							let e$5 = i$2.getCurrentTrackFor(S$1.default.TEXT, t$4);
							(l$4.id ? e$5.id !== l$4.id : e$5.index !== l$4.index) ? (f$2[t$4].deleteCuesFromTrackIdx(n$4), c$2[t$4].setCurrentFragmentedTrackIdx(r$4)) : -1 === n$4 && p$2.trigger(R.default.SET_FRAGMENTED_TEXT_AFTER_DISABLED, {}, {
								streamId: t$4,
								mediaType: S$1.default.TEXT
							});
						}
					}
				})(t$3, a$2, n$3);
				else if (a$2 && !a$2.isFragmented) (function(t$4, e$4) {
					p$2.trigger(R.default.SET_NON_FRAGMENTED_TEXT, { currentTrackInfo: e$4 }, {
						streamId: t$4,
						mediaType: S$1.default.TEXT
					});
				})(t$3, a$2);
				else if (!a$2 && b$2) {
					const e$4 = L$1(t$3);
					isNaN(e$4) || P$1(t$3, e$4);
					return;
				}
				i$2.setTrack(a$2);
			}
			function L$1(t$3) {
				const e$3 = function(t$4) {
					return f$2[t$4].getTextTrackInfos().filter(((t$5, e$4) => (t$5._indexToSelect = e$4, !!(t$5 && t$5.roles && t$5.roles.length > 0) && F$1(t$5))));
				}(t$3);
				if (!e$3 || e$3.length <= 0) return NaN;
				const n$3 = i$2.getCurrentTrackFor(S$1.default.AUDIO, t$3);
				if (!n$3) return NaN;
				const a$2 = e$3.find(((t$4) => n$3.lang === t$4.lang));
				return a$2 ? a$2._indexToSelect : NaN;
			}
			function F$1(t$3) {
				return !(!t$3 || !t$3.roles || 0 === t$3.roles.length) && t$3.roles.some(((t$4) => t$4.schemeIdUri === S$1.default.DASH_ROLE_SCHEME_ID && t$4.value === I.default.FORCED_SUBTITLE));
			}
			function U$1(t$3) {
				return f$2[t$3].getCurrentTrackIdx();
			}
			function j$1() {
				c$2 = {}, f$2 = {}, d$2 = {}, b$2 = !0, E$2 = !1, _$2 = !1;
			}
			return u$2 = {
				addEmbeddedTrack: function(t$3, e$3) {
					const n$3 = t$3.id;
					c$2[n$3] && c$2[n$3].addEmbeddedTrack(e$3);
				},
				addMediaInfosToBuffer: function(t$3, e$3, n$3) {
					let a$2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
					const r$3 = t$3.id;
					c$2[r$3] && c$2[r$3].addMediaInfos(e$3, n$3, a$2);
				},
				createTracks: function(t$3) {
					const e$3 = t$3.id;
					f$2[e$3] && f$2[e$3].createTracks();
				},
				deactivateStream: function(t$3) {
					if (!t$3) return;
					const e$3 = t$3.id;
					c$2[e$3] && c$2[e$3].resetMediaInfos(), f$2[e$3] && f$2[e$3].deleteAllTextTracks();
				},
				enableForcedTextStreaming: function(t$3) {
					return (0, yt.checkParameterType)(t$3, "boolean"), y$2 = t$3, !0;
				},
				enableText: function(t$3, e$3) {
					return (0, yt.checkParameterType)(e$3, "boolean"), O$1() !== e$3 && (e$3 && P$1(t$3, d$2[t$3].lastEnabledIndex), e$3 || (d$2[t$3].lastEnabledIndex = U$1(t$3), E$2 ? P$1(t$3, -1) : _$2 = !0)), !0;
				},
				getAllTracksAreDisabled: function() {
					return b$2;
				},
				getCurrentTrackIdx: U$1,
				getTextSourceBuffer: function(t$3) {
					const e$3 = t$3.id;
					if (c$2 && c$2[e$3]) return c$2[e$3];
				},
				initialize: function() {
					T$2 = Ho(e$2).create({
						adapter: n$2,
						baseURLController: l$2
					}), p$2.on(R.default.TEXT_TRACKS_QUEUE_INITIALIZED, N$1, u$2), p$2.on(R.default.DVB_FONT_DOWNLOAD_FAILED, w$2, u$2), p$2.on(R.default.DVB_FONT_DOWNLOAD_COMPLETE, k$1, u$2), p$2.on(R.default.MEDIAINFO_UPDATED, z$1, u$2), s$1.get().streaming.text.webvtt.customRenderingEnabled && (p$2.on(R.default.PLAYBACK_TIME_UPDATED, x$1, u$2), p$2.on(R.default.PLAYBACK_SEEKING, M$1, u$2));
				},
				initializeForStream: function(t$3) {
					const l$3 = t$3.id, u$3 = Po(e$2).create({
						videoModel: o$2,
						settings: s$1,
						streamInfo: t$3
					});
					u$3.initialize(), f$2[l$3] = u$3;
					const p$3 = Do(e$2).create({
						errHandler: a$1,
						adapter: n$2,
						dvbFonts: T$2,
						manifestModel: r$2,
						mediaController: i$2,
						videoModel: o$2,
						textTracks: u$3,
						vttParser: g$2,
						vttCustomRenderingParser: m$2,
						ttmlParser: h$2,
						streamInfo: t$3,
						settings: s$1
					});
					p$3.initialize(), c$2[l$3] = p$3, d$2[l$3] = {}, d$2[l$3].lastEnabledIndex = -1;
				},
				isTextEnabled: O$1,
				reset: function() {
					Object.keys(c$2).forEach(((t$3) => {
						c$2[t$3].resetEmbedded(), c$2[t$3].reset();
					})), T$2.reset(), j$1(), p$2.off(R.default.TEXT_TRACKS_QUEUE_INITIALIZED, N$1, u$2), p$2.off(R.default.DVB_FONT_DOWNLOAD_FAILED, w$2, u$2), p$2.off(R.default.DVB_FONT_DOWNLOAD_COMPLETE, k$1, u$2), p$2.off(R.default.MEDIAINFO_UPDATED, z$1, u$2), s$1.get().streaming.text.webvtt.customRenderingEnabled && (p$2.off(R.default.PLAYBACK_TIME_UPDATED, x$1, u$2), p$2.off(R.default.PLAYBACK_SEEKING, M$1, u$2));
				},
				setTextTrack: P$1,
				clearDataForStream: function(t$3) {
					c$2[t$3] && (c$2[t$3].resetEmbedded(), c$2[t$3].reset(), delete c$2[t$3]), f$2[t$3] && (f$2[t$3].deleteAllTextTracks(), delete f$2[t$3]), d$2[t$3] && delete d$2[t$3];
				}
			}, y$2 = !1, E$2 = !1, _$2 = !1, g$2 = Fo(e$2).getInstance(), m$2 = jo(e$2).getInstance(), h$2 = Bo(e$2).getInstance(), p$2 = (0, A.default)(e$2).getInstance(), v$2 = (0, C.default)(e$2).getInstance().getLogger(u$2), j$1(), u$2;
		}
		Yo.__dashjs_factory_name = "TextController";
		var Vo = N.default.getClassFactory(Yo);
		function Ko(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = (0, C.default)(e$2).getInstance(), a$1 = t$2.settings, r$2 = (0, A.default)(e$2).getInstance();
			let i$2, l$2, o$2, s$1, u$2, d$2;
			function c$2() {
				return navigator && navigator.connection && !isNaN(navigator.connection.downlink) && navigator.connection.downlink > 0 ? 1e3 * navigator.connection.downlink : NaN;
			}
			function f$2(t$3, e$3, n$3, a$2) {
				const r$3 = Math.pow(.5, n$3 / a$2.fast);
				t$3.fastEstimate = (1 - r$3) * e$3 + r$3 * t$3.fastEstimate;
				const i$3 = Math.pow(.5, n$3 / a$2.slow);
				t$3.slowEstimate = (1 - i$3) * e$3 + i$3 * t$3.slowEstimate, t$3.totalWeight += n$3;
			}
			function g$2() {
				i$2 = {}, l$2 = {}, o$2 = {}, s$1 = {};
			}
			const m$2 = {
				addEntry: function(t$3, e$3) {
					try {
						if (!(t$3 && e$3 && e$3.trace && e$3.trace.length)) return;
						(function(t$4) {
							i$2[t$4] = i$2[t$4] || [], l$2[t$4] = l$2[t$4] || [], o$2[t$4] = o$2[t$4] || {
								fastEstimate: 0,
								slowEstimate: 0,
								totalWeight: 0
							}, s$1[t$4] = s$1[t$4] || {
								fastEstimate: 0,
								slowEstimate: 0,
								totalWeight: 0
							};
						})(t$3);
						const n$3 = e$3.tresponse.getTime() - e$3.trequest.getTime() || 1;
						let g$3 = function(t$4, e$4) {
							return t$4._fileLoaderType && t$4._fileLoaderType === S$1.default.FILE_LOADER_TYPES.FETCH ? function(t$5) {
								const e$5 = t$5.trace.reduce(((t$6, e$6) => t$6 + e$6.b[0]), 0), n$4 = t$5.trace.reduce(((t$6, e$6) => t$6 + e$6.d), 0);
								let r$3 = NaN;
								return a$1.get().streaming.abr.throughput.useNetworkInformationApi.fetch && (r$3 = c$2()), isNaN(r$3) && (r$3 = Math.round(8 * e$5 / n$4)), {
									downloadedBytes: e$5,
									value: r$3,
									downloadTimeInMs: n$4
								};
							}(t$4) : function(t$5, e$5) {
								let n$4 = NaN, r$3 = NaN, i$3 = !1;
								if (a$1.get().streaming.abr.throughput.useResourceTimingApi && t$5._resourceTimingValues) n$4 = t$5._resourceTimingValues.transferSize, r$3 = t$5._resourceTimingValues.responseEnd - t$5._resourceTimingValues.responseStart, i$3 = !0;
								else {
									if (t$5.trace.length <= 1) return {
										throughput: NaN,
										downloadTimeInMs: NaN
									};
									n$4 = t$5.trace.reduce(((t$6, e$6) => t$6 + e$6.b[0]), 0) - t$5.trace[0].b[0], r$3 = Math.max(t$5.trace.reduce(((t$6, e$6) => t$6 + e$6.d), 0) - t$5.trace[0].d, 1);
								}
								let l$3 = NaN;
								if (!i$3 && a$1.get().streaming.abr.throughput.useNetworkInformationApi.xhr && (l$3 = c$2()), isNaN(l$3)) {
									const t$6 = a$1.get().streaming.abr.throughput.useDeadTimeLatency ? r$3 : r$3 + e$5;
									l$3 = Math.round(8 * n$4 / t$6);
								}
								return {
									downloadedBytes: n$4,
									value: l$3,
									downloadTimeInMs: r$3
								};
							}(t$4, e$4);
						}(e$3, n$3);
						if (g$3.latencyInMs = n$3, isNaN(g$3.value) || !isFinite(g$3.value)) return;
						if (e$3.cmsd) {
							const t$4 = e$3.cmsd.dynamic && e$3.cmsd.dynamic.etp ? e$3.cmsd.dynamic.etp : null;
							if (t$4) {
								const e$4 = a$1.get().streaming.cmsd.abr.etpWeightRatio;
								e$4 > 0 && e$4 <= 1 && (g$3.value = g$3.value * (1 - e$4) + t$4 * e$4);
							}
						}
						if (function(t$4, e$4, n$4) {
							return a$1.get().streaming.abr.throughput.useResourceTimingApi && n$4._resourceTimingValues ? 0 === n$4._resourceTimingValues.transferSize && n$4._resourceTimingValues.decodedBodySize > 0 : !isNaN(e$4) && (t$4 === S$1.default.VIDEO ? e$4 < a$1.get().streaming.cacheLoadThresholds[S$1.default.VIDEO] : t$4 === S$1.default.AUDIO ? e$4 < a$1.get().streaming.cacheLoadThresholds[S$1.default.AUDIO] : void 0);
						}(t$3, e$3._tfinish.getTime() - e$3.trequest.getTime(), e$3)) return void d$2.debug(`${t$3} Assuming segment ${e$3.url} came from cache, ignoring it for throughput calculation`);
						d$2.debug(`Added throughput entry for ${t$3}: ${g$3.value} kbit/s`), g$3.serviceLocation = e$3._serviceLocation, i$2[t$3].push(g$3), l$2[t$3].push({ value: n$3 }), function(t$4) {
							i$2[t$4].length > a$1.get().streaming.abr.throughput.sampleSettings.maxMeasurementsToKeep && i$2[t$4].shift(), l$2[t$4].length > a$1.get().streaming.abr.throughput.sampleSettings.maxMeasurementsToKeep && l$2[t$4].shift();
						}(t$3), r$2.trigger(D.default.THROUGHPUT_MEASUREMENT_STORED, { throughputValues: g$3 }), e$3.type !== z.HTTPRequest.MPD_TYPE && (f$2(o$2[t$3], g$3.value, a$1.get().streaming.abr.throughput.ewma.weightDownloadTimeMultiplicationFactor * g$3.downloadTimeInMs, u$2.bandwidthHalfLife), f$2(s$1[t$3], n$3, 1, u$2.latencyHalfLife));
					} catch (t$4) {
						d$2.error(t$4);
					}
				},
				getThroughputDict: function(t$3) {
					return t$3 ? i$2[t$3] : i$2;
				},
				getEwmaThroughputDict: function(t$3) {
					return t$3 ? o$2[t$3] : o$2;
				},
				getEwmaLatencyDict: function(t$3) {
					return t$3 ? s$1[t$3] : s$1;
				},
				getEwmaHalfLife: function() {
					return u$2;
				},
				getLatencyDict: function(t$3) {
					return t$3 ? l$2[t$3] : l$2;
				},
				reset: g$2
			};
			return d$2 = n$2.getLogger(m$2), u$2 = {
				bandwidthHalfLife: {
					fast: a$1.get().streaming.abr.throughput.ewma.throughputFastHalfLifeSeconds,
					slow: a$1.get().streaming.abr.throughput.ewma.throughputSlowHalfLifeSeconds
				},
				latencyHalfLife: {
					fast: a$1.get().streaming.abr.throughput.ewma.latencyFastHalfLifeCount,
					slow: a$1.get().streaming.abr.throughput.ewma.latencySlowHalfLifeCount
				}
			}, g$2(), m$2;
		}
		Ko.__dashjs_factory_name = "ThroughputModel";
		var Wo = N.default.getClassFactory(Ko);
		function $o() {
			const t$2 = this.context, e$2 = (0, A.default)(t$2).getInstance();
			let n$2, a$1, r$2;
			function i$2() {
				performance.clearResourceTimings();
			}
			function l$2(t$3) {
				t$3.metric !== k.HTTP_REQUEST || !t$3.value || t$3.value.type !== z.HTTPRequest.MPD_TYPE && (t$3.value.type !== z.HTTPRequest.MEDIA_SEGMENT_TYPE || t$3.mediaType !== S$1.default.AUDIO && t$3.mediaType !== S$1.default.VIDEO) || n$2.addEntry(t$3.mediaType, t$3.value);
			}
			function o$2(t$3, e$3) {
				let i$3, l$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, o$3 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : NaN, b$3 = null, y$3 = n$2.getEwmaHalfLife(), E$2 = null, _$2 = !0;
				switch (l$3 || (l$3 = r$2.get().streaming.abr.throughput.averageCalculationMode), t$3) {
					case S$1.default.THROUGHPUT_TYPES.BANDWIDTH:
						b$3 = l$3 === S$1.default.THROUGHPUT_CALCULATION_MODES.EWMA ? n$2.getEwmaThroughputDict(e$3) : n$2.getThroughputDict(e$3), E$2 = y$3.bandwidthHalfLife, _$2 = !0, o$3 = isNaN(o$3) ? a$1.getIsDynamic() ? r$2.get().streaming.abr.throughput.sampleSettings.live : r$2.get().streaming.abr.throughput.sampleSettings.vod : o$3;
						break;
					case S$1.default.THROUGHPUT_TYPES.LATENCY: b$3 = l$3 === S$1.default.THROUGHPUT_CALCULATION_MODES.EWMA ? n$2.getEwmaLatencyDict(e$3) : n$2.getLatencyDict(e$3), E$2 = y$3.latencyHalfLife, _$2 = !1, o$3 = isNaN(o$3) ? r$2.get().streaming.abr.throughput.sampleSettings.averageLatencySampleAmount : o$3;
				}
				if (!b$3 || 0 === b$3.length) return NaN;
				switch (l$3) {
					case S$1.default.THROUGHPUT_CALCULATION_MODES.ARITHMETIC_MEAN: return i$3 = s$1(b$3, o$3, t$3), u$2(b$3, i$3);
					case S$1.default.THROUGHPUT_CALCULATION_MODES.BYTE_SIZE_WEIGHTED_ARITHMETIC_MEAN: return i$3 = s$1(b$3, o$3, t$3), d$2(b$3, i$3);
					case S$1.default.THROUGHPUT_CALCULATION_MODES.DATE_WEIGHTED_ARITHMETIC_MEAN: return i$3 = s$1(b$3, o$3, t$3), c$2(b$3, i$3);
					case S$1.default.THROUGHPUT_CALCULATION_MODES.HARMONIC_MEAN: return i$3 = s$1(b$3, o$3, t$3), f$2(b$3, i$3);
					case S$1.default.THROUGHPUT_CALCULATION_MODES.BYTE_SIZE_WEIGHTED_HARMONIC_MEAN: return i$3 = s$1(b$3, o$3, t$3), g$2(b$3, i$3);
					case S$1.default.THROUGHPUT_CALCULATION_MODES.DATE_WEIGHTED_HARMONIC_MEAN: return i$3 = s$1(b$3, o$3, t$3), m$2(b$3, i$3);
					case S$1.default.THROUGHPUT_CALCULATION_MODES.EWMA: return h$2(b$3, E$2, _$2);
					case S$1.default.THROUGHPUT_CALCULATION_MODES.ZLEMA: return i$3 = s$1(b$3, o$3, t$3), p$2(b$3, i$3);
				}
			}
			function s$1(t$3, e$3, n$3) {
				if (t$3) {
					if (e$3 >= t$3.length) e$3 = t$3.length;
					else if (n$3 === S$1.default.THROUGHPUT_TYPES.BANDWIDTH && r$2.get().streaming.abr.throughput.sampleSettings.enableSampleSizeAdjustment) for (let n$4 = 1; n$4 < e$3; ++n$4) {
						const a$2 = t$3[t$3.length - n$4].value / t$3[t$3.length - n$4 - 1].value;
						if ((a$2 >= r$2.get().streaming.abr.throughput.sampleSettings.increaseScale || a$2 <= r$2.get().streaming.abr.throughput.sampleSettings.decreaseScale) && (e$3 += 1) === t$3.length) break;
					}
				} else e$3 = 0;
				return e$3;
			}
			function u$2(t$3, e$3) {
				let n$3 = t$3;
				return 0 !== e$3 && n$3 && 0 !== n$3.length ? (n$3 = n$3.slice(-e$3), n$3.reduce(((t$4, e$4) => t$4 + e$4.value), 0) / n$3.length) : NaN;
			}
			function d$2(t$3, e$3) {
				let n$3 = t$3;
				if (0 === e$3 || !n$3 || 0 === n$3.length) return NaN;
				n$3 = n$3.slice(-e$3);
				let a$2 = 0;
				return n$3.reduce(((t$4, e$4) => {
					let n$4 = Math.sqrt(e$4.downloadedBytes);
					return a$2 += n$4, t$4 + e$4.value * n$4;
				}), 0) / a$2;
			}
			function c$2(t$3, e$3) {
				let n$3 = t$3;
				if (0 === e$3 || !n$3 || 0 === n$3.length) return NaN;
				n$3 = n$3.slice(-e$3);
				let a$2 = 0;
				return n$3.reduce(((t$4, e$4, n$4) => {
					let r$3 = n$4 + 1;
					return a$2 += r$3, t$4 + e$4.value * r$3;
				}), 0) / a$2;
			}
			function f$2(t$3, e$3) {
				let n$3 = t$3;
				if (0 === e$3 || !n$3 || 0 === n$3.length) return NaN;
				n$3 = n$3.slice(-e$3);
				const a$2 = n$3.reduce(((t$4, e$4) => t$4 + 1 / e$4.value), 0);
				return n$3.length / a$2;
			}
			function g$2(t$3, e$3) {
				let n$3 = t$3;
				if (0 === e$3 || !n$3 || 0 === n$3.length) return NaN;
				n$3 = n$3.slice(-e$3);
				let a$2 = 0;
				const r$3 = n$3.reduce(((t$4, e$4) => {
					let n$4 = Math.sqrt(e$4.downloadedBytes);
					return a$2 += n$4, t$4 + 1 / e$4.value * n$4;
				}), 0);
				return a$2 / r$3;
			}
			function m$2(t$3, e$3) {
				let n$3 = t$3;
				if (0 === e$3 || !n$3 || 0 === n$3.length) return NaN;
				n$3 = n$3.slice(-e$3);
				let a$2 = 0;
				const r$3 = n$3.reduce(((t$4, e$4, n$4) => {
					let r$4 = n$4 + 1;
					return a$2 += r$4, t$4 + 1 / e$4.value * r$4;
				}), 0);
				return a$2 / r$3;
			}
			function h$2(t$3, e$3) {
				let n$3 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
				if (!t$3 || t$3.totalWeight <= 0) return NaN;
				const a$2 = t$3.fastEstimate / (1 - Math.pow(.5, t$3.totalWeight / e$3.fast)), r$3 = t$3.slowEstimate / (1 - Math.pow(.5, t$3.totalWeight / e$3.slow));
				return n$3 ? Math.min(a$2, r$3) : Math.max(a$2, r$3);
			}
			function p$2(t$3, e$3) {
				if (0 === e$3 || !t$3 || 0 === t$3.length) return NaN;
				let n$3 = t$3.slice(-e$3).map(((t$4) => t$4.value)), a$2 = 2 / (n$3.length + 1), r$3 = n$3[n$3.length - 1], i$3 = n$3[n$3.length - 1];
				for (let t$4 = 0; t$4 < n$3.length; t$4++) r$3 = a$2 * n$3[t$4] + (1 - a$2) * r$3, i$3 = a$2 * r$3 + (1 - a$2) * i$3;
				return i$3;
			}
			function b$2(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : NaN;
				const a$2 = o$2(S$1.default.THROUGHPUT_TYPES.BANDWIDTH, t$3, e$3, n$3);
				return Math.round(a$2);
			}
			const y$2 = {
				getArithmeticMean: u$2,
				getAverageLatency: function(t$3) {
					let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : NaN;
					const a$2 = o$2(S$1.default.THROUGHPUT_TYPES.LATENCY, t$3, e$3, n$3);
					return Math.round(a$2);
				},
				getAverageThroughput: b$2,
				getByteSizeWeightedArithmeticMean: d$2,
				getByteSizeWeightedHarmonicMean: g$2,
				getDateWeightedArithmeticMean: c$2,
				getDateWeightedHarmonicMean: m$2,
				getEwma: h$2,
				getHarmonicMean: f$2,
				getRawThroughputData: function(t$3) {
					return t$3 ? n$2.getThroughputDict(t$3) : [];
				},
				getSafeAverageThroughput: function(t$3) {
					let e$3 = b$2(t$3, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : NaN);
					return isNaN(e$3) || (e$3 *= r$2.get().streaming.abr.throughput.bandwidthSafetyFactor), e$3;
				},
				getZlema: p$2,
				initialize: function() {
					n$2 = Wo(t$2).create({ settings: r$2 }), e$2.on(D.default.METRIC_ADDED, l$2, y$2), performance && performance.addEventListener("resourcetimingbufferfull", i$2);
				},
				reset: function() {
					n$2.reset(), e$2.off(D.default.METRIC_ADDED, l$2, y$2), performance && performance.removeEventListener("resourcetimingbufferfull", i$2);
				},
				setConfig: function(t$3) {
					t$3.settings && (r$2 = t$3.settings), t$3.playbackController && (a$1 = t$3.playbackController);
				}
			};
			return y$2;
		}
		$o.__dashjs_factory_name = "ThroughputController";
		var Xo = N.default.getSingletonFactory($o);
		function Qo() {
			const t$2 = "You must first call initialize() and set a source before calling this method", e$2 = "You must first call initialize() and set a valid source and view before calling this method", n$2 = "You must first call attachView() to set the video element before calling this method", a$1 = "You must first call attachSource() with a valid source before calling this method", r$2 = "MediaPlayer not initialized!", i$2 = this.context, l$2 = (0, A.default)(i$2).getInstance();
			let o$2 = (0, K.default)(i$2).getInstance();
			const s$1 = (0, C.default)(i$2).getInstance({ settings: o$2 });
			let u$2, d$2, c$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2, _$2, T$2, v$2, x$1, O$1, P$1, L$1, F$1, U$1, j$1, q$1, B$1, H$1, Y$1, W$1, $$1, X$1, Q$1, Z$1, J$1, tt$1, et$1, nt$1, at$1, rt$1, it$1, lt$1, ot$1, st$1, ut$1;
			function dt$1() {
				kt$1(null), wt$1(null), f$2 = null, x$1 && (x$1.reset(), x$1 = null), O$1 && (O$1.reset(), O$1 = null), j$1 && j$1.reset(), o$2.reset(), L$1 && (L$1.reset(), L$1 = null);
			}
			function ct$1() {
				return !!c$2 && !!it$1.getElement();
			}
			function ft$1() {
				return (0, vl.getVersionString)();
			}
			function gt$1() {
				if (!h$2) throw e$2;
				return Q$1.isPaused();
			}
			function mt$1() {
				if (!h$2) throw e$2;
				return Q$1.getIsDynamic();
			}
			function ht$1(t$3) {
				const e$3 = W$1 && W$1.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO;
				let n$3 = et$1.getCurrentDVRInfo(e$3);
				return n$3 ? pt$1(n$3.range.start + t$3, n$3) : 0;
			}
			function pt$1(t$3, e$3) {
				let n$3 = Q$1.getOriginalLiveDelay();
				return t$3 > e$3.range.end - n$3 && (t$3 = e$3.range.end - n$3), t$3;
			}
			function bt$1() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
				if (!h$2) throw e$2;
				let n$3 = vt$1().currentTime;
				return "" !== t$3 && (n$3 = W$1.getTimeRelativeToStreamId(n$3, t$3)), n$3;
			}
			function Et$1(t$3) {
				(0, yt.checkParameterType)(t$3, "boolean"), p$2 = t$3;
			}
			function _t$1() {
				j$1.restoreDefaultUTCTimingSources();
			}
			function Tt$1() {
				return et$1;
			}
			function vt$1() {
				if (!it$1.getElement()) throw n$2;
				return it$1.getElement();
			}
			function wt$1(t$3) {
				if (!g$2) throw r$2;
				it$1.setElement(t$3), t$3 && (Ct$1(), function() {
					if (O$1 || "undefined" == typeof dashjs) return;
					let t$4 = dashjs.MetricsReporting;
					if ("function" == typeof t$4) O$1 = t$4(i$2).create().createMetricsReporting({
						debug: s$1,
						eventBus: l$2,
						mediaElement: vt$1(),
						adapter: F$1,
						dashMetrics: et$1,
						mediaPlayerModel: U$1,
						events: R.default,
						constants: S$1.default,
						metricsConstants: k
					});
				}(), function() {
					if (P$1 || "undefined" == typeof dashjs) return;
					let t$4 = dashjs.MssHandler;
					"function" == typeof t$4 && (V.extend(t$4.errors), P$1 = t$4(i$2).create({
						eventBus: l$2,
						mediaPlayerModel: U$1,
						dashMetrics: et$1,
						manifestModel: nt$1,
						playbackController: Q$1,
						streamController: W$1,
						protectionController: x$1,
						baseURLController: B$1,
						errHandler: q$1,
						events: R.default,
						constants: S$1.default,
						debug: s$1,
						initSegmentType: z.HTTPRequest.INIT_SEGMENT_TYPE,
						BASE64: _o,
						ISOBoxer: Jn,
						settings: o$2
					}));
				}(), W$1 && W$1.switchToVideoElement(b$2)), h$2 && Rt$1(), xt$1(b$2);
			}
			function It$1(e$3) {
				if (!m$2) throw t$2;
				let n$3 = W$1.getActiveStreamInfo();
				return n$3 ? v$2.getTracksFor(e$3, n$3.id).filter(((t$3) => !x$1 || x$1.areKeyIdsUsable(t$3.normalizedKeyIds))) : [];
			}
			function kt$1(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : NaN;
				if (!g$2) throw r$2;
				"string" == typeof t$3 && lt$1.initialize(t$3), e$3 ??= NaN, isNaN(e$3) || (e$3 = Math.max(0, e$3)), b$2 = e$3, c$2 = t$3, (m$2 || h$2) && Rt$1(), ct$1() && xt$1(b$2);
			}
			function At$1() {
				if (!m$2) throw t$2;
				let e$3 = W$1.getActiveStreamInfo();
				return e$3 ? W$1.getStreamById(e$3.id) : null;
			}
			function Rt$1() {
				h$2 = !1, m$2 = !1, F$1.reset(), W$1.reset(), X$1.reset(), tt$1.reset(), Q$1.reset(), Z$1.reset(), J$1.reset(), y$2.reset(), E$2.reset(), v$2.reset(), st$1.reset(), x$1 && (o$2.get().streaming.protection.keepProtectionMediaKeys ? x$1.stop() : (x$1.reset(), x$1 = null, Ct$1())), $$1.reset(), at$1.reset(), rt$1.reset();
			}
			function Nt$1() {
				return ii(i$2).create({
					debug: s$1,
					errHandler: q$1,
					dashMetrics: et$1,
					mediaPlayerModel: U$1,
					mssHandler: P$1,
					settings: o$2
				});
			}
			function Ct$1() {
				if (x$1) return x$1;
				if ("undefined" == typeof dashjs) return null;
				let t$3 = dashjs.Protection;
				if ("function" == typeof t$3) {
					let e$3 = t$3(i$2).create();
					return R.default.extend(t$3.events), D.default.extend(t$3.events, { publicOnly: !0 }), V.extend(t$3.errors), x$1 = e$3.createProtectionSystem({
						debug: s$1,
						errHandler: q$1,
						videoModel: it$1,
						customParametersModel: j$1,
						capabilities: H$1,
						eventBus: l$2,
						events: R.default,
						BASE64: _o,
						constants: S$1.default,
						cmcdModel: at$1,
						settings: o$2
					}), H$1 || (H$1 = (0, si.default)(i$2).getInstance()), H$1.setProtectionController(x$1), x$1;
				}
				return null;
			}
			function Dt$1() {
				if (!g$2) throw r$2;
				if (L$1) return L$1;
				if ("undefined" == typeof dashjs) return null;
				let t$3 = dashjs.OfflineController;
				if ("function" == typeof t$3) {
					R.default.extend(t$3.events), D.default.extend(t$3.events, { publicOnly: !0 }), V.extend(t$3.errors);
					const e$3 = Nt$1(), n$3 = Ea(i$2).create();
					return n$3.setConfig({
						manifestModel: nt$1,
						adapter: F$1,
						manifestLoader: e$3,
						errHandler: q$1,
						contentSteeringController: J$1
					}), L$1 = t$3(i$2).create({
						debug: s$1,
						manifestUpdater: n$3,
						baseURLController: B$1,
						manifestLoader: e$3,
						manifestModel: nt$1,
						mediaPlayerModel: U$1,
						abrController: y$2,
						playbackController: Q$1,
						adapter: F$1,
						errHandler: q$1,
						dashMetrics: et$1,
						timelineConverter: T$2,
						segmentBaseController: st$1,
						schemeLoaderFactory: _$2,
						eventBus: l$2,
						events: R.default,
						errors: V,
						constants: S$1.default,
						settings: o$2,
						dashConstants: I.default,
						urlUtils: St(i$2).getInstance()
					}), L$1;
				}
				return null;
			}
			function xt$1() {
				let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : NaN;
				L$1 && L$1.resetRecords(), !m$2 && c$2 && (m$2 = !0, d$2.info("Streaming Initialized"), function() {
					const t$4 = Nt$1();
					W$1 || (W$1 = Da(i$2).getInstance()), $$1 || ($$1 = Vo(i$2).create({
						errHandler: q$1,
						manifestModel: nt$1,
						adapter: F$1,
						mediaController: v$2,
						baseURLController: B$1,
						videoModel: it$1,
						settings: o$2
					})), Y$1.setConfig({
						capabilities: H$1,
						customParametersModel: j$1,
						adapter: F$1,
						settings: o$2,
						protectionController: x$1,
						manifestModel: nt$1,
						errHandler: q$1
					}), W$1.setConfig({
						capabilities: H$1,
						capabilitiesFilter: Y$1,
						manifestLoader: t$4,
						manifestModel: nt$1,
						mediaPlayerModel: U$1,
						customParametersModel: j$1,
						protectionController: x$1,
						textController: $$1,
						adapter: F$1,
						dashMetrics: et$1,
						errHandler: q$1,
						timelineConverter: T$2,
						videoModel: it$1,
						playbackController: Q$1,
						serviceDescriptionController: Z$1,
						contentSteeringController: J$1,
						abrController: y$2,
						throughputController: E$2,
						mediaController: v$2,
						settings: o$2,
						baseURLController: B$1,
						uriFragmentModel: lt$1,
						segmentBaseController: st$1
					}), X$1.setConfig({
						settings: o$2,
						playbackController: Q$1,
						streamController: W$1,
						videoModel: it$1,
						timelineConverter: T$2,
						adapter: F$1
					}), Q$1.setConfig({
						streamController: W$1,
						serviceDescriptionController: Z$1,
						dashMetrics: et$1,
						adapter: F$1,
						videoModel: it$1,
						timelineConverter: T$2,
						settings: o$2
					}), tt$1.setConfig({
						streamController: W$1,
						playbackController: Q$1,
						mediaPlayerModel: U$1,
						videoModel: it$1,
						settings: o$2
					}), E$2.setConfig({
						settings: o$2,
						playbackController: Q$1
					}), y$2.setConfig({
						streamController: W$1,
						capabilities: H$1,
						domStorage: ot$1,
						mediaPlayerModel: U$1,
						customParametersModel: j$1,
						throughputController: E$2,
						cmsdModel: rt$1,
						dashMetrics: et$1,
						adapter: F$1,
						videoModel: it$1,
						settings: o$2
					}), at$1.setConfig({
						abrController: y$2,
						dashMetrics: et$1,
						playbackController: Q$1,
						serviceDescriptionController: Z$1,
						throughputController: E$2
					}), ut$1.setConfig({ serviceDescriptionController: Z$1 }), rt$1.setConfig({}), v$2.initialize(), E$2.initialize(), y$2.initialize(), W$1.initialize(p$2, f$2), $$1.initialize(), X$1.initialize(), tt$1.initialize(), at$1.initialize(p$2), rt$1.initialize(), J$1.initialize(), st$1.initialize();
				}(), "string" == typeof c$2 ? W$1.load(c$2, t$3) : W$1.loadWithManifest(c$2, t$3)), !h$2 && ct$1() && (h$2 = !0, l$2.trigger(D.default.PLAYBACK_INITIALIZED), d$2.info("Playback Initialized"));
			}
			return u$2 = {
				addABRCustomRule: function(t$3, e$3, n$3) {
					j$1.addAbrCustomRule(t$3, e$3, n$3);
				},
				addRequestInterceptor: function(t$3) {
					j$1.addRequestInterceptor(t$3);
				},
				addResponseInterceptor: function(t$3) {
					j$1.addResponseInterceptor(t$3);
				},
				addUTCTimingSource: function(t$3, e$3) {
					j$1.addUTCTimingSource(t$3, e$3);
				},
				attachProtectionController: function(t$3) {
					x$1 = t$3;
				},
				attachSource: kt$1,
				attachTTMLRenderingDiv: function(t$3) {
					if (!it$1.getElement()) throw n$2;
					it$1.setTTMLRenderingDiv(t$3);
				},
				attachView: wt$1,
				attachVttRenderingDiv: function(t$3) {
					if (!it$1.getElement()) throw n$2;
					it$1.setVttRenderingDiv(t$3);
				},
				clearDefaultUTCTimingSources: function() {
					j$1.clearDefaultUTCTimingSources();
				},
				convertToTimeCode: function(t$3) {
					t$3 = Math.max(t$3, 0);
					let e$3 = Math.floor(t$3 / 3600), n$3 = Math.floor(t$3 % 3600 / 60), a$2 = Math.floor(t$3 % 3600 % 60);
					return (0 === e$3 ? "" : e$3 < 10 ? "0" + e$3.toString() + ":" : e$3.toString() + ":") + (n$3 < 10 ? "0" + n$3.toString() : n$3.toString()) + ":" + (a$2 < 10 ? "0" + a$2.toString() : a$2.toString());
				},
				destroy: function() {
					dt$1(), N.default.deleteSingletonInstances(i$2);
				},
				duration: function() {
					if (!h$2) throw e$2;
					let t$3 = vt$1().duration;
					if (Q$1.getIsDynamic()) {
						const e$3 = W$1 && W$1.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO;
						let n$3 = et$1.getCurrentDVRInfo(e$3);
						t$3 = n$3 ? n$3.range.end - n$3.range.start : 0;
					}
					return t$3;
				},
				enableForcedTextStreaming: function(t$3) {
					return !(!W$1.getActiveStreamInfo() || !$$1) && $$1.enableForcedTextStreaming(t$3);
				},
				enableText: function(t$3) {
					const e$3 = W$1.getActiveStreamInfo();
					return !(!e$3 || !$$1) && $$1.enableText(e$3.id, t$3);
				},
				extend: function(t$3, e$3, n$3) {
					N.default.extend(t$3, e$3, n$3, i$2);
				},
				formatUTC: function(t$3, e$3, n$3) {
					let a$2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
					const r$3 = /* @__PURE__ */ new Date(1e3 * t$3), i$3 = r$3.toLocaleDateString(e$3), l$3 = r$3.toLocaleTimeString(e$3, { hour12: n$3 });
					return a$2 ? l$3 + " " + i$3 : l$3;
				},
				getABRCustomRules: function() {
					return j$1.getAbrCustomRules();
				},
				getActiveStream: At$1,
				getAutoPlay: function() {
					return p$2;
				},
				getAvailableBaseUrls: function() {
					const t$3 = nt$1.getValue();
					return t$3 ? B$1.getBaseUrls(t$3) : [];
				},
				getAvailableLocations: function() {
					const t$3 = nt$1.getValue();
					if (!t$3) return [];
					const e$3 = F$1.getLocation(t$3), n$3 = J$1.getSynthesizedLocationElements(e$3);
					return e$3.concat(n$3);
				},
				getAverageLatency: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : S$1.default.VIDEO, e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : NaN;
					return E$2 ? E$2.getAverageLatency(t$3, e$3, n$3) : 0;
				},
				getAverageThroughput: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : S$1.default.VIDEO, e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : NaN;
					return E$2 ? E$2.getAverageThroughput(t$3, e$3, n$3) : 0;
				},
				getBufferLength: function(t$3) {
					const e$3 = [
						S$1.default.VIDEO,
						S$1.default.AUDIO,
						S$1.default.TEXT
					];
					if (t$3) {
						if (-1 !== e$3.indexOf(t$3)) return Tt$1().getCurrentBufferLevel(t$3) || NaN;
						return d$2.warn("getBufferLength requested for invalid type"), NaN;
					}
					{
						const t$4 = e$3.map(((t$5) => It$1(t$5).length > 0 ? Tt$1().getCurrentBufferLevel(t$5) : Number.MAX_VALUE)).reduce(((t$5, e$4) => Math.min(t$5, e$4)));
						return t$4 === Number.MAX_VALUE ? NaN : t$4;
					}
				},
				getCurrentLiveLatency: function() {
					if (!g$2) throw r$2;
					return h$2 ? Q$1.getCurrentLiveLatency() : NaN;
				},
				getCurrentRepresentationForType: function(e$3) {
					if (!m$2) throw t$2;
					if (e$3 !== S$1.default.IMAGE && e$3 !== S$1.default.VIDEO && e$3 !== S$1.default.AUDIO) return null;
					const n$3 = At$1();
					if (!n$3) return null;
					if (e$3 === S$1.default.IMAGE) {
						const t$3 = n$3.getThumbnailController();
						return t$3 ? t$3.getCurrentTrack() : -1;
					}
					return n$3.getCurrentRepresentationForType(e$3);
				},
				getCurrentSteeringResponseData: function() {
					if (J$1) return J$1.getCurrentSteeringResponseData();
				},
				getCurrentTextTrackIndex: function() {
					let t$3 = NaN;
					const e$3 = W$1.getActiveStreamInfo();
					if (e$3 && $$1) return t$3 = $$1.getCurrentTrackIdx(e$3.id), t$3;
				},
				getCurrentTrackFor: function(e$3) {
					if (!m$2) throw t$2;
					let n$3 = W$1.getActiveStreamInfo();
					return n$3 ? v$2.getCurrentTrackFor(e$3, n$3.id) : null;
				},
				getDashAdapter: function() {
					return F$1;
				},
				getDashMetrics: Tt$1,
				getDebug: function() {
					return s$1;
				},
				getDvrSeekOffset: ht$1,
				getDvrWindow: function() {
					if (!h$2) throw e$2;
					const t$3 = W$1 && W$1.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO;
					let n$3 = et$1.getCurrentDVRInfo(t$3);
					if (!n$3) return {};
					let a$2 = 0;
					const r$3 = Q$1.getIsDynamic();
					return r$3 && (a$2 = n$3.manifestInfo.availableFrom.getTime() / 1e3), {
						start: n$3.range.start,
						end: n$3.range.end,
						startAsUtc: r$3 ? a$2 + n$3.range.start : NaN,
						endAsUtc: r$3 ? a$2 + n$3.range.end : NaN,
						size: n$3.range.end - n$3.range.start
					};
				},
				getInitialMediaSettingsFor: function(t$3) {
					if (!g$2) throw r$2;
					return v$2.getInitialSettings(t$3);
				},
				getLowLatencyModeEnabled: function() {
					if (!h$2) throw e$2;
					return Q$1.getLowLatencyModeEnabled();
				},
				getManifest: function() {
					return nt$1.getValue();
				},
				getOfflineController: function() {
					return Dt$1();
				},
				getPlaybackRate: function() {
					return vt$1().playbackRate;
				},
				getProtectionController: function() {
					return Ct$1();
				},
				getRawThroughputData: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : S$1.default.VIDEO;
					return E$2 ? E$2.getRawThroughputData(t$3) : [];
				},
				getRepresentationsByType: function(e$3) {
					let n$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
					if (!m$2) throw t$2;
					let a$2 = n$3 ? W$1.getStreamById(n$3) : At$1();
					return a$2 ? a$2.getRepresentationsByType(e$3) : [];
				},
				getSafeAverageThroughput: function() {
					let t$3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : S$1.default.VIDEO, e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n$3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : NaN;
					return E$2 ? E$2.getSafeAverageThroughput(t$3, e$3, n$3) : 0;
				},
				getSettings: function() {
					return o$2.get();
				},
				getSource: function() {
					if (!c$2) throw a$1;
					return c$2;
				},
				getStreamsFromManifest: function(e$3) {
					if (!m$2) throw t$2;
					return F$1.getStreamsInfo(e$3);
				},
				getTTMLRenderingDiv: function() {
					return it$1 ? it$1.getTTMLRenderingDiv() : null;
				},
				getTargetLiveDelay: function() {
					if (!h$2) throw e$2;
					return Q$1.getOriginalLiveDelay();
				},
				getTracksFor: It$1,
				getTracksForTypeFromManifest: function(e$3, n$3, a$2) {
					if (!m$2) throw t$2;
					return (a$2 = a$2 || F$1.getStreamsInfo(n$3, 1)[0]) ? F$1.getAllMediaInfoForType(a$2, e$3, n$3) : [];
				},
				getVersion: ft$1,
				getVideoElement: vt$1,
				getVolume: function() {
					return vt$1().volume;
				},
				getXHRWithCredentialsForType: function(t$3) {
					return j$1.getXHRWithCredentialsForType(t$3);
				},
				initialize: function(t$3, e$3, n$3) {
					let a$2 = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : NaN;
					H$1 || (H$1 = (0, si.default)(i$2).getInstance(), H$1.setConfig({
						settings: o$2,
						protectionController: x$1
					})), q$1 || (q$1 = oi(i$2).getInstance()), H$1.supportsMediaSource() ? (g$2 || (g$2 = !0, T$2 = po(i$2).getInstance(), E$2 || (E$2 = Xo(i$2).getInstance()), y$2 || (y$2 = dl(i$2).getInstance()), _$2 || (_$2 = Un(i$2).getInstance()), Q$1 || (Q$1 = M(i$2).getInstance()), v$2 || (v$2 = mr(i$2).getInstance()), W$1 || (W$1 = Da(i$2).getInstance()), X$1 || (X$1 = Ma(i$2).getInstance()), tt$1 || (tt$1 = Oa(i$2).getInstance()), Z$1 || (Z$1 = ja(i$2).getInstance()), J$1 || (J$1 = ha(i$2).getInstance()), Y$1 || (Y$1 = di(i$2).getInstance()), F$1 = Vl(i$2).getInstance(), nt$1 = hi(i$2).getInstance(), at$1 = an(i$2).getInstance(), rt$1 = kn(i$2).getInstance(), ut$1 = Dn(i$2).getInstance(), et$1 = so(i$2).getInstance({ settings: o$2 }), ot$1 = Tl(i$2).getInstance({ settings: o$2 }), F$1.setConfig({
						constants: S$1.default,
						cea608parser: new w$1(),
						errHandler: q$1,
						BASE64: _o
					}), B$1 || (B$1 = Rr(i$2).create()), B$1.setConfig({
						adapter: F$1,
						contentSteeringController: J$1
					}), Z$1.setConfig({ adapter: F$1 }), st$1 || (st$1 = Cl(i$2).getInstance({
						dashMetrics: et$1,
						mediaPlayerModel: U$1,
						errHandler: q$1,
						baseURLController: B$1,
						events: R.default,
						eventBus: l$2,
						debug: s$1,
						boxParser: na(i$2).getInstance(),
						errors: V
					})), v$2.setConfig({
						domStorage: ot$1,
						settings: o$2,
						mediaPlayerModel: U$1,
						customParametersModel: j$1,
						videoModel: it$1
					}), U$1.setConfig({
						playbackController: Q$1,
						serviceDescriptionController: Z$1
					}), J$1.setConfig({
						adapter: F$1,
						errHandler: q$1,
						dashMetrics: et$1,
						mediaPlayerModel: U$1,
						manifestModel: nt$1,
						serviceDescriptionController: Z$1,
						throughputController: E$2,
						eventBus: l$2
					}), _t$1(), Et$1(void 0 === n$3 || n$3), Dt$1()), t$3 && wt$1(t$3), e$3 && kt$1(e$3, a$2), d$2.info("[dash.js " + ft$1() + "] MediaPlayer has been initialized")) : q$1.error(new G.default(V.CAPABILITY_MEDIASOURCE_ERROR_CODE, V.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE));
				},
				isDynamic: mt$1,
				isMuted: function() {
					return vt$1().muted;
				},
				isPaused: gt$1,
				isReady: ct$1,
				isSeeking: function() {
					if (!h$2) throw e$2;
					return Q$1.isSeeking();
				},
				isTextEnabled: function() {
					const t$3 = W$1.getActiveStreamInfo();
					return !(!t$3 || !$$1) && $$1.isTextEnabled(t$3);
				},
				off: function(t$3, e$3, n$3) {
					l$2.off(t$3, e$3, n$3);
				},
				on: function(t$3, e$3, n$3, a$2) {
					l$2.on(t$3, e$3, n$3, a$2);
				},
				pause: function() {
					if (!h$2) throw e$2;
					Q$1.pause();
				},
				play: function() {
					if (!h$2) throw e$2;
					(!p$2 || gt$1() && h$2) && Q$1.play(!0);
				},
				preload: function() {
					if (!it$1.getElement() && !m$2) {
						if (!c$2) throw a$1;
						xt$1(b$2);
					}
				},
				provideThumbnail: function(t$3, e$3) {
					if ("function" != typeof e$3) return;
					if (t$3 < 0) return void e$3(null);
					const n$3 = Q$1.getIsDynamic() ? ht$1(t$3) : t$3, a$2 = W$1.getStreamForTime(n$3);
					if (null === a$2) return void e$3(null);
					const r$3 = a$2.getThumbnailController();
					if (r$3) return r$3.provide(n$3, e$3);
					e$3(null);
				},
				refreshManifest: function(t$3) {
					if (!g$2) throw r$2;
					if (!ct$1()) return t$3(null, a$1);
					let e$3 = this;
					if ("function" == typeof t$3) {
						const n$3 = function(a$2) {
							l$2.off(R.default.INTERNAL_MANIFEST_LOADED, n$3, e$3), a$2.error ? t$3(null, a$2.error) : t$3(a$2.manifest);
						};
						l$2.on(R.default.INTERNAL_MANIFEST_LOADED, n$3, e$3);
					}
					W$1.refreshManifest();
				},
				registerCustomCapabilitiesFilter: function(t$3) {
					j$1.registerCustomCapabilitiesFilter(t$3);
				},
				registerLicenseRequestFilter: function(t$3) {
					j$1.registerLicenseRequestFilter(t$3);
				},
				registerLicenseResponseFilter: function(t$3) {
					j$1.registerLicenseResponseFilter(t$3);
				},
				removeABRCustomRule: function(t$3) {
					j$1.removeAbrCustomRule(t$3);
				},
				removeAllABRCustomRule: function() {
					j$1.removeAllAbrCustomRule();
				},
				removeRequestInterceptor: function(t$3) {
					j$1.removeRequestInterceptor(t$3);
				},
				removeResponseInterceptor: function(t$3) {
					j$1.removeResponseInterceptor(t$3);
				},
				removeUTCTimingSource: function(t$3, e$3) {
					j$1.removeUTCTimingSource(t$3, e$3);
				},
				reset: dt$1,
				resetCustomInitialTrackSelectionFunction: function() {
					j$1.resetCustomInitialTrackSelectionFunction(null);
				},
				resetSettings: function() {
					o$2.reset();
				},
				restoreDefaultUTCTimingSources: _t$1,
				retrieveManifest: function(t$3, e$3) {
					let n$3 = Nt$1(), a$2 = this;
					const r$3 = function(t$4) {
						t$4.error ? e$3(null, t$4.error) : e$3(t$4.manifest), l$2.off(R.default.INTERNAL_MANIFEST_LOADED, r$3, a$2), n$3.reset();
					};
					l$2.on(R.default.INTERNAL_MANIFEST_LOADED, r$3, a$2), lt$1.initialize(t$3), n$3.load(t$3);
				},
				seek: function(t$3) {
					if (!h$2) throw e$2;
					if ((0, yt.checkParameterType)(t$3, "number"), isNaN(t$3)) throw S$1.default.BAD_ARGUMENT_ERROR;
					t$3 < 0 && (t$3 = 0);
					let n$3 = Q$1.getIsDynamic() ? ht$1(t$3) : t$3;
					const a$2 = vt$1();
					!Q$1.getIsDynamic() && a$2.duration && (n$3 = Math.min(a$2.duration, n$3)), Q$1.seek(n$3, !1, !1, !0);
				},
				seekToOriginalLive: function() {
					h$2 && mt$1() && Q$1.seekToOriginalLive();
				},
				seekToPresentationTime: function(t$3) {
					if (!h$2) throw e$2;
					if ((0, yt.checkParameterType)(t$3, "number"), isNaN(t$3)) throw S$1.default.BAD_ARGUMENT_ERROR;
					t$3 < 0 && (t$3 = 0);
					const n$3 = vt$1();
					if (!Q$1.getIsDynamic() && n$3.duration && (t$3 = Math.min(n$3.duration, t$3)), Q$1.getIsDynamic()) {
						const e$3 = W$1 && W$1.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO;
						let n$4 = et$1.getCurrentDVRInfo(e$3);
						if (!n$4) return;
						(t$3 = pt$1(t$3, n$4)) < n$4.range.start && (t$3 = n$4.range.start);
					}
					Q$1.seek(t$3, !1, !1, !0);
				},
				setAutoPlay: Et$1,
				setConfig: function(t$3) {
					t$3 && (t$3.capabilities && (H$1 = t$3.capabilities), t$3.capabilitiesFilter && (Y$1 = t$3.capabilitiesFilter), t$3.streamController && (W$1 = t$3.streamController), t$3.textController && ($$1 = t$3.textController), t$3.gapController && (X$1 = t$3.gapController), t$3.throughputController && (E$2 = t$3.throughputController), t$3.playbackController && (Q$1 = t$3.playbackController), t$3.serviceDescriptionController && (Z$1 = t$3.serviceDescriptionController), t$3.contentSteeringController && (J$1 = t$3.contentSteeringController), t$3.clientDataReportingController && (ut$1 = t$3.clientDataReportingController), t$3.catchupController && (tt$1 = t$3.catchupController), t$3.mediaPlayerModel && (U$1 = t$3.mediaPlayerModel), t$3.customParametersModel && (j$1 = t$3.customParametersModel), t$3.abrController && (y$2 = t$3.abrController), t$3.schemeLoaderFactory && (_$2 = t$3.schemeLoaderFactory), t$3.mediaController && (v$2 = t$3.mediaController), t$3.settings && (o$2 = t$3.settings), t$3.dashMetrics && (et$1 = t$3.dashMetrics));
				},
				setCurrentTrack: function(e$3) {
					let n$3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
					if (!m$2) throw t$2;
					!x$1 || x$1.areKeyIdsUsable(e$3.normalizedKeyIds) ? v$2.setTrack(e$3, { noSettingsSave: n$3 }) : d$2.error(`Can not switch to track with index ${e$3.index} because key is not usable`);
				},
				setCustomInitialTrackSelectionFunction: function(t$3) {
					j$1.setCustomInitialTrackSelectionFunction(t$3);
				},
				setInitialMediaSettingsFor: function(t$3, e$3) {
					if (!g$2) throw r$2;
					let n$3 = function(t$4) {
						const e$4 = o$2.get().streaming.defaultSchemeIdUri;
						let n$4 = {};
						function a$2(t$5, e$5, n$5) {
							let a$3 = {};
							if (e$5) {
								if (e$5 instanceof Array) throw "Array type not supported for settings!";
								return e$5 instanceof Object ? (a$3.schemeIdUri = e$5.schemeIdUri ? e$5.schemeIdUri : "", a$3.value = e$5.value ? e$5.value : "") : (a$3.schemeIdUri = n$5, a$3.value = e$5, d$2.warn("No schemeIdUri provided for " + t$5 + ", using default \"" + n$5 + "\"")), a$3;
							}
							return null;
						}
						return void 0 !== t$4.id && (n$4.id = t$4.id), void 0 !== t$4.lang && (n$4.lang = t$4.lang), isNaN(t$4.index) || (n$4.index = t$4.index), void 0 !== t$4.viewpoint && (n$4.viewpoint = a$2("viewpoint", t$4.viewpoint, e$4.viewpoint)), void 0 !== t$4.audioChannelConfiguration && (n$4.audioChannelConfiguration = a$2("audioChannelConfiguration", t$4.audioChannelConfiguration, e$4.audioChannelConfiguration)), void 0 !== t$4.role && (n$4.role = a$2("role", t$4.role, e$4.role), n$4.role.schemeIdUri === S$1.default.DASH_ROLE_SCHEME_ID && "Main" === n$4.role.value && (n$4.role.value = I.default.MAIN)), void 0 !== t$4.accessibility && (n$4.accessibility = a$2("accessibility", t$4.accessibility, e$4.accessibility)), n$4;
					}(e$3);
					v$2.setInitialSettings(t$3, n$3);
				},
				setMute: function(t$3) {
					(0, yt.checkParameterType)(t$3, "boolean"), vt$1().muted = t$3;
				},
				setPlaybackRate: function(t$3) {
					vt$1().playbackRate = t$3;
				},
				setProtectionData: function(t$3) {
					f$2 = t$3, W$1 && W$1.setProtectionData(f$2);
				},
				setRepresentationForTypeById: function(e$3, n$3) {
					let a$2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
					if (e$3 !== S$1.default.IMAGE && e$3 !== S$1.default.VIDEO && e$3 !== S$1.default.AUDIO) return;
					if (!m$2) throw t$2;
					const r$3 = At$1();
					if (r$3) if (e$3 === S$1.default.IMAGE) {
						const t$3 = r$3.getThumbnailController();
						t$3 && t$3.setTrackById(n$3);
					} else {
						const t$3 = r$3.getRepresentationForTypeById(e$3, n$3);
						t$3 && y$2.setPlaybackQuality(e$3, W$1.getActiveStreamInfo(), t$3, { forceReplace: a$2 });
					}
				},
				setRepresentationForTypeByIndex: function(e$3, n$3) {
					let a$2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
					if (e$3 !== S$1.default.IMAGE && e$3 !== S$1.default.VIDEO && e$3 !== S$1.default.AUDIO) return;
					if (!m$2) throw t$2;
					const r$3 = At$1();
					if (r$3) if (e$3 === S$1.default.IMAGE) {
						const t$3 = r$3.getThumbnailController();
						t$3 && t$3.setTrackByIndex(n$3);
					} else {
						const t$3 = r$3.getRepresentationForTypeByIndex(e$3, n$3);
						t$3 && y$2.setPlaybackQuality(e$3, W$1.getActiveStreamInfo(), t$3, { forceReplace: a$2 });
					}
				},
				setTextTrack: function(t$3) {
					if (!h$2) throw e$2;
					const n$3 = W$1.getActiveStreamInfo();
					n$3 && $$1 && $$1.setTextTrack(n$3.id, t$3);
				},
				setVolume: function(t$3) {
					if ("number" != typeof t$3 || isNaN(t$3) || t$3 < 0 || t$3 > 1) throw S$1.default.BAD_ARGUMENT_ERROR;
					vt$1().volume = t$3;
				},
				setXHRWithCredentialsForType: function(t$3, e$3) {
					j$1.setXHRWithCredentialsForType(t$3, e$3);
				},
				time: bt$1,
				timeAsUTC: function() {
					if (!h$2) throw e$2;
					if (!Q$1.getIsDynamic() || bt$1() < 0) return NaN;
					const t$3 = W$1 && W$1.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO;
					let n$3, a$2, r$3 = et$1.getCurrentDVRInfo(t$3);
					return r$3 ? (n$3 = r$3.manifestInfo.availableFrom.getTime() / 1e3, a$2 = n$3 + bt$1(), a$2) : 0;
				},
				timeInDvrWindow: function() {
					if (!h$2) throw e$2;
					if (!Q$1.getIsDynamic()) return bt$1();
					let t$3 = vt$1().currentTime;
					const n$3 = W$1 && W$1.hasVideoTrack() ? S$1.default.VIDEO : S$1.default.AUDIO;
					let a$2 = et$1.getCurrentDVRInfo(n$3);
					return t$3 = null === a$2 || 0 === t$3 ? 0 : Math.max(0, t$3 - a$2.range.start), t$3;
				},
				trigger: function(t$3, e$3, n$3) {
					l$2.trigger(t$3, e$3, n$3);
				},
				triggerSteeringRequest: function() {
					if (J$1) return J$1.loadSteeringData();
				},
				unregisterCustomCapabilitiesFilter: function(t$3) {
					j$1.unregisterCustomCapabilitiesFilter(t$3);
				},
				unregisterLicenseRequestFilter: function(t$3) {
					j$1.unregisterLicenseRequestFilter(t$3);
				},
				unregisterLicenseResponseFilter: function(t$3) {
					j$1.unregisterLicenseResponseFilter(t$3);
				},
				updateSettings: function(t$3) {
					o$2.update(t$3);
				},
				updateSource: function(t$3) {
					c$2 = t$3, W$1.load(c$2);
				}
			}, d$2 = s$1.getLogger(u$2), g$2 = !1, h$2 = !1, m$2 = !1, p$2 = !0, b$2 = NaN, x$1 = null, L$1 = null, f$2 = null, F$1 = null, st$1 = null, R.default.extend(D.default), U$1 = bi(i$2).getInstance(), j$1 = (0, An.default)(i$2).getInstance(), it$1 = gl(i$2).getInstance(), lt$1 = gi(i$2).getInstance(), u$2;
		}
		Qo.__dashjs_factory_name = "MediaPlayer";
		const Zo = N.default.getClassFactory(Qo);
		Zo.events = D.default, Zo.errors = V, N.default.updateClassFactory(Qo.__dashjs_factory_name, Zo);
		var Jo = Zo;
	},
	1191: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(7252);
		class r$1 extends a$1.default {
			constructor() {
				super(), this.AST_IN_FUTURE = "astInFuture", this.BASE_URLS_UPDATED = "baseUrlsUpdated", this.BUFFER_EMPTY = "bufferStalled", this.BUFFER_LOADED = "bufferLoaded", this.BUFFER_LEVEL_STATE_CHANGED = "bufferStateChanged", this.BUFFER_LEVEL_UPDATED = "bufferLevelUpdated", this.DVB_FONT_DOWNLOAD_ADDED = "dvbFontDownloadAdded", this.DVB_FONT_DOWNLOAD_COMPLETE = "dvbFontDownloadComplete", this.DVB_FONT_DOWNLOAD_FAILED = "dvbFontDownloadFailed", this.DYNAMIC_TO_STATIC = "dynamicToStatic", this.ERROR = "error", this.FRAGMENT_LOADING_COMPLETED = "fragmentLoadingCompleted", this.FRAGMENT_LOADING_PROGRESS = "fragmentLoadingProgress", this.FRAGMENT_LOADING_STARTED = "fragmentLoadingStarted", this.FRAGMENT_LOADING_ABANDONED = "fragmentLoadingAbandoned", this.LOG = "log", this.MANIFEST_LOADING_STARTED = "manifestLoadingStarted", this.MANIFEST_LOADING_FINISHED = "manifestLoadingFinished", this.MANIFEST_LOADED = "manifestLoaded", this.METRICS_CHANGED = "metricsChanged", this.METRIC_CHANGED = "metricChanged", this.METRIC_ADDED = "metricAdded", this.METRIC_UPDATED = "metricUpdated", this.PERIOD_SWITCH_STARTED = "periodSwitchStarted", this.PERIOD_SWITCH_COMPLETED = "periodSwitchCompleted", this.QUALITY_CHANGE_REQUESTED = "qualityChangeRequested", this.QUALITY_CHANGE_RENDERED = "qualityChangeRendered", this.NEW_TRACK_SELECTED = "newTrackSelected", this.TRACK_CHANGE_RENDERED = "trackChangeRendered", this.STREAM_INITIALIZING = "streamInitializing", this.STREAM_UPDATED = "streamUpdated", this.STREAM_ACTIVATED = "streamActivated", this.STREAM_DEACTIVATED = "streamDeactivated", this.STREAM_INITIALIZED = "streamInitialized", this.STREAM_TEARDOWN_COMPLETE = "streamTeardownComplete", this.TEXT_TRACKS_ADDED = "allTextTracksAdded", this.TEXT_TRACK_ADDED = "textTrackAdded", this.CUE_ENTER = "cueEnter", this.CUE_EXIT = "cueExit", this.THROUGHPUT_MEASUREMENT_STORED = "throughputMeasurementStored", this.TTML_PARSED = "ttmlParsed", this.TTML_TO_PARSE = "ttmlToParse", this.CAPTION_RENDERED = "captionRendered", this.CAPTION_CONTAINER_RESIZE = "captionContainerResize", this.CAN_PLAY = "canPlay", this.CAN_PLAY_THROUGH = "canPlayThrough", this.PLAYBACK_ENDED = "playbackEnded", this.PLAYBACK_ERROR = "playbackError", this.PLAYBACK_INITIALIZED = "playbackInitialized", this.PLAYBACK_NOT_ALLOWED = "playbackNotAllowed", this.PLAYBACK_METADATA_LOADED = "playbackMetaDataLoaded", this.PLAYBACK_LOADED_DATA = "playbackLoadedData", this.PLAYBACK_PAUSED = "playbackPaused", this.PLAYBACK_PLAYING = "playbackPlaying", this.PLAYBACK_PROGRESS = "playbackProgress", this.PLAYBACK_RATE_CHANGED = "playbackRateChanged", this.PLAYBACK_SEEKED = "playbackSeeked", this.PLAYBACK_SEEKING = "playbackSeeking", this.PLAYBACK_STALLED = "playbackStalled", this.PLAYBACK_STARTED = "playbackStarted", this.PLAYBACK_TIME_UPDATED = "playbackTimeUpdated", this.PLAYBACK_VOLUME_CHANGED = "playbackVolumeChanged", this.PLAYBACK_WAITING = "playbackWaiting", this.MANIFEST_VALIDITY_CHANGED = "manifestValidityChanged", this.EVENT_MODE_ON_START = "eventModeOnStart", this.EVENT_MODE_ON_RECEIVE = "eventModeOnReceive", this.CONFORMANCE_VIOLATION = "conformanceViolation", this.REPRESENTATION_SWITCH = "representationSwitch", this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = "adaptationSetRemovedNoCapabilities", this.CONTENT_STEERING_REQUEST_COMPLETED = "contentSteeringRequestCompleted", this.INBAND_PRFT = "inbandPrft", this.MANAGED_MEDIA_SOURCE_START_STREAMING = "managedMediaSourceStartStreaming", this.MANAGED_MEDIA_SOURCE_END_STREAMING = "managedMediaSourceEndStreaming";
			}
		}
		e$1.default = new r$1();
	},
	5212: function(t$1, e$1, n$1) {
		n$1.r(e$1), e$1.default = {
			STREAM: "stream",
			VIDEO: "video",
			AUDIO: "audio",
			TEXT: "text",
			MUXED: "muxed",
			IMAGE: "image",
			STPP: "stpp",
			TTML: "ttml",
			VTT: "vtt",
			WVTT: "wvtt",
			CONTENT_STEERING: "contentSteering",
			LIVE_CATCHUP_MODE_DEFAULT: "liveCatchupModeDefault",
			LIVE_CATCHUP_MODE_LOLP: "liveCatchupModeLoLP",
			MOVING_AVERAGE_SLIDING_WINDOW: "slidingWindow",
			MOVING_AVERAGE_EWMA: "ewma",
			BAD_ARGUMENT_ERROR: "Invalid Arguments",
			MISSING_CONFIG_ERROR: "Missing config parameter(s)",
			TRACK_SWITCH_MODE_ALWAYS_REPLACE: "alwaysReplace",
			TRACK_SWITCH_MODE_NEVER_REPLACE: "neverReplace",
			TRACK_SELECTION_MODE_FIRST_TRACK: "firstTrack",
			TRACK_SELECTION_MODE_HIGHEST_BITRATE: "highestBitrate",
			TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY: "highestEfficiency",
			TRACK_SELECTION_MODE_WIDEST_RANGE: "widestRange",
			CMCD_QUERY_KEY: "CMCD",
			CMCD_MODE_QUERY: "query",
			CMCD_MODE_HEADER: "header",
			CMCD_AVAILABLE_KEYS: [
				"br",
				"d",
				"ot",
				"tb",
				"bl",
				"dl",
				"mtp",
				"nor",
				"nrr",
				"su",
				"bs",
				"rtp",
				"cid",
				"pr",
				"sf",
				"sid",
				"st",
				"v"
			],
			CMCD_V2_AVAILABLE_KEYS: ["msd", "ltc"],
			CMCD_AVAILABLE_REQUESTS: [
				"segment",
				"mpd",
				"xlink",
				"steering",
				"other"
			],
			INITIALIZE: "initialize",
			TEXT_SHOWING: "showing",
			TEXT_HIDDEN: "hidden",
			TEXT_DISABLED: "disabled",
			ACCESSIBILITY_CEA608_SCHEME: "urn:scte:dash:cc:cea-608:2015",
			CC1: "CC1",
			CC3: "CC3",
			UTF8: "utf-8",
			SCHEME_ID_URI: "schemeIdUri",
			START_TIME: "starttime",
			SERVICE_DESCRIPTION_DVB_LL_SCHEME: "urn:dvb:dash:lowlatency:scope:2019",
			SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME: "urn:dvb:dash:lowlatency:critical:2019",
			CTA_5004_2023_SCHEME: "urn:mpeg:dash:cta-5004:2023",
			THUMBNAILS_SCHEME_ID_URIS: ["http://dashif.org/thumbnail_tile", "http://dashif.org/guidelines/thumbnail_tile"],
			FONT_DOWNLOAD_DVB_SCHEME: "urn:dvb:dash:fontdownload:2014",
			COLOUR_PRIMARIES_SCHEME_ID_URI: "urn:mpeg:mpegB:cicp:ColourPrimaries",
			URL_QUERY_INFO_SCHEME: "urn:mpeg:dash:urlparam:2014",
			EXT_URL_QUERY_INFO_SCHEME: "urn:mpeg:dash:urlparam:2016",
			MATRIX_COEFFICIENTS_SCHEME_ID_URI: "urn:mpeg:mpegB:cicp:MatrixCoefficients",
			TRANSFER_CHARACTERISTICS_SCHEME_ID_URI: "urn:mpeg:mpegB:cicp:TransferCharacteristics",
			HDR_METADATA_FORMAT_SCHEME_ID_URI: "urn:dvb:dash:hdr-dmi",
			HDR_METADATA_FORMAT_VALUES: {
				ST2094_10: "ST2094-10",
				SL_HDR2: "SL-HDR2",
				ST2094_40: "ST2094-40"
			},
			MEDIA_CAPABILITIES_API: {
				COLORGAMUT: {
					SRGB: "srgb",
					P3: "p3",
					REC2020: "rec2020"
				},
				TRANSFERFUNCTION: {
					SRGB: "srgb",
					PQ: "pq",
					HLG: "hlg"
				},
				HDR_METADATATYPE: {
					SMPTE_ST_2094_10: "smpteSt2094-10",
					SLHDR2: "slhdr2",
					SMPTE_ST_2094_40: "smpteSt2094-40"
				}
			},
			XML: "XML",
			ARRAY_BUFFER: "ArrayBuffer",
			DVB_REPORTING_URL: "dvb:reportingUrl",
			DVB_PROBABILITY: "dvb:probability",
			OFF_MIMETYPE: "application/font-sfnt",
			WOFF_MIMETYPE: "application/font-woff",
			VIDEO_ELEMENT_READY_STATES: {
				HAVE_NOTHING: 0,
				HAVE_METADATA: 1,
				HAVE_CURRENT_DATA: 2,
				HAVE_FUTURE_DATA: 3,
				HAVE_ENOUGH_DATA: 4
			},
			FILE_LOADER_TYPES: {
				FETCH: "fetch_loader",
				XHR: "xhr_loader"
			},
			THROUGHPUT_TYPES: {
				LATENCY: "throughput_type_latency",
				BANDWIDTH: "throughput_type_bandwidth"
			},
			THROUGHPUT_CALCULATION_MODES: {
				EWMA: "throughputCalculationModeEwma",
				ZLEMA: "throughputCalculationModeZlema",
				ARITHMETIC_MEAN: "throughputCalculationModeArithmeticMean",
				BYTE_SIZE_WEIGHTED_ARITHMETIC_MEAN: "throughputCalculationModeByteSizeWeightedArithmeticMean",
				DATE_WEIGHTED_ARITHMETIC_MEAN: "throughputCalculationModeDateWeightedArithmeticMean",
				HARMONIC_MEAN: "throughputCalculationModeHarmonicMean",
				BYTE_SIZE_WEIGHTED_HARMONIC_MEAN: "throughputCalculationModeByteSizeWeightedHarmonicMean",
				DATE_WEIGHTED_HARMONIC_MEAN: "throughputCalculationModeDateWeightedHarmonicMean"
			},
			LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE: {
				MOOF_PARSING: "lowLatencyDownloadTimeCalculationModeMoofParsing",
				DOWNLOADED_DATA: "lowLatencyDownloadTimeCalculationModeDownloadedData",
				AAST: "lowLatencyDownloadTimeCalculationModeAast"
			},
			RULES_TYPES: {
				QUALITY_SWITCH_RULES: "qualitySwitchRules",
				ABANDON_FRAGMENT_RULES: "abandonFragmentRules"
			},
			QUALITY_SWITCH_RULES: {
				BOLA_RULE: "BolaRule",
				THROUGHPUT_RULE: "ThroughputRule",
				INSUFFICIENT_BUFFER_RULE: "InsufficientBufferRule",
				SWITCH_HISTORY_RULE: "SwitchHistoryRule",
				DROPPED_FRAMES_RULE: "DroppedFramesRule",
				LEARN_TO_ADAPT_RULE: "L2ARule",
				LOL_PLUS_RULE: "LoLPRule"
			},
			ABANDON_FRAGMENT_RULES: { ABANDON_REQUEST_RULE: "AbandonRequestsRule" },
			ID3_SCHEME_ID_URI: "https://aomedia.org/emsg/ID3",
			COMMON_ACCESS_TOKEN_HEADER: "common-access-token",
			DASH_ROLE_SCHEME_ID: "urn:mpeg:dash:role:2011",
			CODEC_FAMILIES: {
				MP3: "mp3",
				AAC: "aac",
				AC3: "ac3",
				EC3: "ec3",
				DTSX: "dtsx",
				DTSC: "dtsc",
				AVC: "avc",
				HEVC: "hevc"
			}
		};
	},
	2861: function(t$1, e$1, n$1) {
		n$1.r(e$1), e$1.default = {
			CLEARKEY_KEYSTEM_STRING: "org.w3.clearkey",
			WIDEVINE_KEYSTEM_STRING: "com.widevine.alpha",
			PLAYREADY_KEYSTEM_STRING: "com.microsoft.playready",
			PLAYREADY_RECOMMENDATION_KEYSTEM_STRING: "com.microsoft.playready.recommendation",
			WIDEVINE_UUID: "edef8ba9-79d6-4ace-a3c8-27dcd51d21ed",
			PLAYREADY_UUID: "9a04f079-9840-4286-ab92-e65be0885f95",
			CLEARKEY_UUID: "e2719d58-a985-b3c9-781a-b030af78d30e",
			W3C_CLEARKEY_UUID: "1077efec-c0b2-4d02-ace3-3c1e52e2fb4b",
			INITIALIZATION_DATA_TYPE_CENC: "cenc",
			INITIALIZATION_DATA_TYPE_KEYIDS: "keyids",
			INITIALIZATION_DATA_TYPE_WEBM: "webm",
			ENCRYPTION_SCHEME_CENC: "cenc",
			ENCRYPTION_SCHEME_CBCS: "cbcs",
			MEDIA_KEY_MESSAGE_TYPES: {
				LICENSE_REQUEST: "license-request",
				LICENSE_RENEWAL: "license-renewal",
				LICENSE_RELEASE: "license-release",
				INDIVIDUALIZATION_REQUEST: "individualization-request"
			},
			ROBUSTNESS_STRINGS: { WIDEVINE: {
				SW_SECURE_CRYPTO: "SW_SECURE_CRYPTO",
				SW_SECURE_DECODE: "SW_SECURE_DECODE",
				HW_SECURE_CRYPTO: "HW_SECURE_CRYPTO",
				HW_SECURE_DECODE: "HW_SECURE_DECODE",
				HW_SECURE_ALL: "HW_SECURE_ALL"
			} },
			MEDIA_KEY_STATUSES: {
				USABLE: "usable",
				EXPIRED: "expired",
				RELEASED: "released",
				OUTPUT_RESTRICTED: "output-restricted",
				OUTPUT_DOWNSCALED: "output-downscaled",
				STATUS_PENDING: "status-pending",
				INTERNAL_ERROR: "internal-error"
			}
		};
	},
	4469: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, { default: function() {
			return K;
		} });
		class a$1 {
			constructor() {
				this.mpdurl = null, this.errorcode = null, this.terror = null, this.url = null, this.ipaddress = null, this.servicelocation = null;
			}
		}
		a$1.SSL_CONNECTION_FAILED_PREFIX = "SSL", a$1.DNS_RESOLUTION_FAILED = "C00", a$1.HOST_UNREACHABLE = "C01", a$1.CONNECTION_REFUSED = "C02", a$1.CONNECTION_ERROR = "C03", a$1.CORRUPT_MEDIA_ISOBMFF = "M00", a$1.CORRUPT_MEDIA_OTHER = "M01", a$1.BASE_URL_CHANGED = "F00", a$1.BECAME_REPORTER = "S00";
		var r$1 = a$1, i$1 = n$1(913), l$1 = n$1(138);
		function o$1(t$2) {
			let e$2, n$2;
			const a$2 = (t$2 = t$2 || {}).eventBus, l$2 = t$2.dashMetrics, o$2 = t$2.metricsConstants, s$2 = t$2.events;
			function u$2(t$3) {
				let e$3 = new r$1();
				if (n$2) {
					for (const n$3 in t$3) t$3.hasOwnProperty(n$3) && (e$3[n$3] = t$3[n$3]);
					e$3.mpdurl || (e$3.mpdurl = n$2.originalUrl || n$2.url), e$3.terror || (e$3.terror = /* @__PURE__ */ new Date()), l$2.addDVBErrors(e$3);
				}
			}
			function d$2(t$3) {
				t$3.error || (n$2 = t$3.manifest);
			}
			function c$2(t$3) {
				u$2({
					errorcode: r$1.BASE_URL_CHANGED,
					servicelocation: t$3.entry
				});
			}
			function f$2() {
				u$2({ errorcode: r$1.BECAME_REPORTER });
			}
			function g$2(t$3) {
				var e$3;
				t$3.metric === o$2.HTTP_REQUEST && (0 === (e$3 = t$3.value).responsecode || null == e$3.responsecode || e$3.responsecode >= 400 || e$3.responsecode < 100 || e$3.responsecode >= 600) && u$2({
					errorcode: e$3.responsecode || r$1.CONNECTION_ERROR,
					url: e$3.url,
					terror: e$3.tresponse,
					servicelocation: e$3._serviceLocation
				});
			}
			function m$2(t$3) {
				let e$3;
				switch (t$3.error ? t$3.error.code : 0) {
					case MediaError.MEDIA_ERR_NETWORK:
						e$3 = r$1.CONNECTION_ERROR;
						break;
					case MediaError.MEDIA_ERR_DECODE:
						e$3 = r$1.CORRUPT_MEDIA_OTHER;
						break;
					default: return;
				}
				u$2({ errorcode: e$3 });
			}
			return e$2 = {
				initialize: function() {
					a$2.on(s$2.MANIFEST_UPDATED, d$2, e$2), a$2.on(s$2.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED, c$2, e$2), a$2.on(s$2.METRIC_ADDED, g$2, e$2), a$2.on(s$2.METRIC_UPDATED, g$2, e$2), a$2.on(s$2.PLAYBACK_ERROR, m$2, e$2), a$2.on(i$1.default.BECAME_REPORTING_PLAYER, f$2, e$2);
				},
				reset: function() {
					a$2.off(s$2.MANIFEST_UPDATED, d$2, e$2), a$2.off(s$2.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED, c$2, e$2), a$2.off(s$2.METRIC_ADDED, g$2, e$2), a$2.off(s$2.METRIC_UPDATED, g$2, e$2), a$2.off(s$2.PLAYBACK_ERROR, m$2, e$2), a$2.off(i$1.default.BECAME_REPORTING_PLAYER, f$2, e$2);
				}
			}, e$2;
		}
		o$1.__dashjs_factory_name = "DVBErrorsTranslator";
		var s$1 = l$1.default.getSingletonFactory(o$1), u$1 = n$1(7377);
		function d$1(t$2) {
			t$2 = t$2 || {};
			let e$2, n$2, a$2 = !1, r$2 = this.context, i$2 = t$2.mediaElement;
			return e$2 = {
				initialize: function(t$3) {
					t$3 && t$3.length && (t$3.forEach(((t$4) => {
						let e$3 = t$4.starttime, a$3 = e$3 + t$4.duration;
						n$2.add(e$3, a$3);
					})), a$2 = !!t$3[0]._useWallClockTime);
				},
				reset: function() {
					n$2.clear();
				},
				isEnabled: function() {
					let t$3, e$3 = n$2.length;
					if (!e$3) return !0;
					t$3 = a$2 ? (/* @__PURE__ */ new Date()).getTime() / 1e3 : i$2.currentTime;
					for (let a$3 = 0; a$3 < e$3; a$3 += 1) {
						let e$4 = n$2.start(a$3), r$3 = n$2.end(a$3);
						if (e$4 <= t$3 && t$3 < r$3) return !0;
					}
					return !1;
				}
			}, n$2 = (0, u$1.default)(r$2).create(), e$2;
		}
		d$1.__dashjs_factory_name = "RangeController";
		var c$1 = l$1.default.getClassFactory(d$1);
		function f$1() {
			return { serialise: function t$2(e$2) {
				let n$2, a$2, r$2 = [], i$2 = [];
				for (n$2 in e$2) if (e$2.hasOwnProperty(n$2) && 0 !== n$2.indexOf("_")) {
					if (a$2 = e$2[n$2], a$2 ??= "", Array.isArray(a$2)) {
						if (!a$2.length) continue;
						i$2 = [], a$2.forEach((function(e$3) {
							let n$3 = "Object" !== Object.prototype.toString.call(e$3).slice(8, -1);
							i$2.push(n$3 ? e$3 : t$2(e$3));
						})), a$2 = i$2.map(encodeURIComponent).join(",");
					} else "string" == typeof a$2 ? a$2 = encodeURIComponent(a$2) : a$2 instanceof Date ? a$2 = a$2.toISOString() : "number" == typeof a$2 && (a$2 = Math.round(a$2));
					r$2.push(n$2 + "=" + a$2);
				}
				return r$2.join("&");
			} };
		}
		f$1.__dashjs_factory_name = "MetricSerialiser";
		var g$1 = l$1.default.getSingletonFactory(f$1);
		function m$1() {
			let t$2, e$2, n$2, a$2 = window.crypto || window.msCrypto, r$2 = Uint32Array, i$2 = Math.pow(2, 8 * r$2.BYTES_PER_ELEMENT) - 1;
			function l$2() {
				a$2 && (t$2 || (t$2 = new r$2(10)), a$2.getRandomValues(t$2), e$2 = 0);
			}
			return n$2 = { random: function(n$3, r$3) {
				let o$2;
				return n$3 || (n$3 = 0), r$3 || (r$3 = 1), a$2 ? (e$2 === t$2.length && l$2(), o$2 = t$2[e$2] / i$2, e$2 += 1) : o$2 = Math.random(), o$2 * (r$3 - n$3) + n$3;
			} }, l$2(), n$2;
		}
		m$1.__dashjs_factory_name = "RNG";
		var h$1 = l$1.default.getSingletonFactory(m$1), p$1 = n$1(1926);
		function b$1(t$2) {
			let e$2;
			t$2 = t$2 || {};
			let n$2, a$2, r$2, i$2, l$2, o$2, s$2, u$2 = this.context, d$2 = [];
			const c$2 = t$2.metricsConstants;
			function f$2() {
				i$2 = !1, l$2 = !1, o$2 = null, s$2 = null;
			}
			return e$2 = {
				report: function(t$3, e$3) {
					Array.isArray(e$3) || (e$3 = [e$3]), l$2 && s$2.isEnabled() && e$3.forEach((function(e$4) {
						let r$3 = n$2.serialise(e$4);
						t$3 !== c$2.DVB_ERRORS && (r$3 = `metricname=${t$3}&${r$3}`), r$3 = `${o$2}?${r$3}`, function(t$4, e$5, n$3) {
							let r$4 = new XMLHttpRequest();
							r$4.withCredentials = a$2.getXHRWithCredentialsForType(c$2.HTTP_REQUEST_DVB_REPORTING_TYPE);
							const i$3 = function() {
								let t$5 = d$2.indexOf(r$4);
								-1 !== t$5 && (d$2.splice(t$5, 1), !(r$4.status >= 200 && r$4.status < 300) && n$3 && n$3());
							};
							d$2.push(r$4);
							try {
								r$4.open("GET", t$4), r$4.onloadend = i$3, r$4.onerror = i$3, r$4.send();
							} catch (t$5) {
								r$4.onerror();
							}
						}(r$3, 0, (function() {
							l$2 = !1;
						}));
					}));
				},
				initialize: function(t$3, e$3) {
					let n$3;
					if (s$2 = e$3, o$2 = t$3.dvbReportingUrl, !o$2) throw new Error("required parameter missing (dvb:reportingUrl)");
					i$2 || (n$3 = t$3.dvbProbability, n$3 && (1e3 === n$3 || n$3 / 1e3 >= r$2.random()) && (l$2 = !0), i$2 = !0);
				},
				reset: function() {
					f$2();
				}
			}, n$2 = g$1(u$2).getInstance(), r$2 = h$1(u$2).getInstance(), a$2 = (0, p$1.default)(u$2).getInstance(), f$2(), e$2;
		}
		b$1.__dashjs_factory_name = "DVBReporting";
		var y$1 = l$1.default.getClassFactory(b$1);
		function E$1(t$2) {
			t$2 = t$2 || {};
			const e$2 = { "urn:dvb:dash:reporting:2014": y$1 }, n$2 = this.context;
			let a$2;
			const r$2 = t$2.debug ? t$2.debug.getLogger(a$2) : {}, i$2 = t$2.metricsConstants, l$2 = t$2.mediaPlayerModel || {};
			return a$2 = {
				create: function(t$3, a$3) {
					let o$2;
					try {
						o$2 = e$2[t$3.schemeIdUri](n$2).create({
							metricsConstants: i$2,
							mediaPlayerModel: l$2
						}), o$2.initialize(t$3, a$3);
					} catch (e$3) {
						o$2 = null, r$2.error(`ReportingFactory: could not create Reporting with schemeIdUri ${t$3.schemeIdUri} (${e$3.message})`);
					}
					return o$2;
				},
				register: function(t$3, n$3) {
					e$2[t$3] = n$3;
				},
				unregister: function(t$3) {
					delete e$2[t$3];
				}
			}, a$2;
		}
		E$1.__dashjs_factory_name = "ReportingFactory";
		var _$1 = l$1.default.getSingletonFactory(E$1);
		function T$1(t$2) {
			let e$2, n$2 = [];
			const a$2 = _$1(this.context).getInstance(t$2);
			return e$2 = {
				initialize: function(t$3, e$3) {
					t$3.some(((t$4) => {
						let r$2 = a$2.create(t$4, e$3);
						if (r$2) return n$2.push(r$2), !0;
					}));
				},
				reset: function() {
					n$2.forEach(((t$3) => t$3.reset())), n$2 = [];
				},
				report: function(t$3, e$3) {
					n$2.forEach(((n$3) => n$3.report(t$3, e$3)));
				}
			}, e$2;
		}
		T$1.__dashjs_factory_name = "ReportingController";
		var v$1 = l$1.default.getClassFactory(T$1);
		function w$1() {
			return {
				reconstructFullMetricName: function(t$2, e$2, n$2) {
					let a$2 = t$2;
					return e$2 && (a$2 += "(" + e$2, n$2 && n$2.length && (a$2 += "," + n$2), a$2 += ")"), a$2;
				},
				validateN: function(t$2) {
					if (!t$2) throw new Error("missing n");
					if (isNaN(t$2)) throw new Error("n is NaN");
					if (t$2 < 0) throw new Error("n must be positive");
					return t$2;
				}
			};
		}
		w$1.__dashjs_factory_name = "HandlerHelpers";
		var S$1 = l$1.default.getSingletonFactory(w$1);
		function I(t$2) {
			let e$2, n$2, a$2, r$2, i$2, l$2;
			t$2 = t$2 || {};
			let o$2 = this.context, s$2 = S$1(o$2).getInstance(), u$2 = [];
			const d$2 = t$2.metricsConstants;
			function c$2() {
				let t$3 = function() {
					try {
						return Object.keys(u$2).map(((t$4) => u$2[t$4])).reduce(((t$4, e$3) => t$4.level < e$3.level ? t$4 : e$3));
					} catch (t$4) {
						return;
					}
				}();
				t$3 && l$2 !== t$3.t && (l$2 = t$3.t, n$2.report(r$2, t$3));
			}
			return e$2 = {
				initialize: function(t$3, e$3, l$3) {
					e$3 && (a$2 = s$2.validateN(l$3), n$2 = e$3, r$2 = s$2.reconstructFullMetricName(t$3, l$3), i$2 = setInterval(c$2, a$2));
				},
				reset: function() {
					clearInterval(i$2), i$2 = null, a$2 = 0, n$2 = null, l$2 = null;
				},
				handleNewMetric: function(t$3, e$3, n$3) {
					t$3 === d$2.BUFFER_LEVEL && (u$2[n$3] = e$3);
				}
			}, e$2;
		}
		I.__dashjs_factory_name = "BufferLevelHandler";
		var k = l$1.default.getClassFactory(I), A = l$1.default.getClassFactory((function(t$2) {
			let e$2, n$2, a$2 = (t$2 = t$2 || {}).eventBus;
			const r$2 = t$2.metricsConstants;
			function l$2() {
				a$2.off(i$1.default.METRICS_INITIALISATION_COMPLETE, l$2, this), a$2.trigger(i$1.default.BECAME_REPORTING_PLAYER);
			}
			return e$2 = {
				initialize: function(t$3, e$3) {
					e$3 && (n$2 = e$3, a$2.on(i$1.default.METRICS_INITIALISATION_COMPLETE, l$2, this));
				},
				reset: function() {
					n$2 = null;
				},
				handleNewMetric: function(t$3, e$3) {
					t$3 === r$2.DVB_ERRORS && n$2 && n$2.report(t$3, e$3);
				}
			}, e$2;
		}));
		function R(t$2) {
			let e$2, n$2, a$2, r$2, i$2, l$2;
			t$2 = t$2 || {};
			let o$2 = [], s$2 = S$1(this.context).getInstance();
			const u$2 = t$2.metricsConstants;
			function d$2() {
				var t$3 = o$2;
				t$3.length && n$2 && n$2.report(i$2, t$3), o$2 = [];
			}
			return e$2 = {
				initialize: function(t$3, e$3, o$3, u$3) {
					e$3 && (a$2 = s$2.validateN(o$3), n$2 = e$3, u$3 && u$3.length && (r$2 = u$3), i$2 = s$2.reconstructFullMetricName(t$3, o$3, u$3), l$2 = setInterval(d$2, a$2));
				},
				reset: function() {
					clearInterval(l$2), l$2 = null, a$2 = null, r$2 = null, o$2 = [], n$2 = null;
				},
				handleNewMetric: function(t$3, e$3) {
					t$3 === u$2.HTTP_REQUEST && (r$2 && r$2 !== e$3.type || o$2.push(e$3));
				}
			}, e$2;
		}
		R.__dashjs_factory_name = "HttpListHandler";
		var N = l$1.default.getClassFactory(R);
		function C() {
			let t$2, e$2, n$2;
			return t$2 = {
				initialize: function(t$3, a$2) {
					e$2 = t$3, n$2 = a$2;
				},
				reset: function() {
					n$2 = null, e$2 = void 0;
				},
				handleNewMetric: function(t$3, a$2) {
					t$3 === e$2 && n$2 && n$2.report(e$2, a$2);
				}
			}, t$2;
		}
		C.__dashjs_factory_name = "GenericMetricHandler";
		var D = l$1.default.getClassFactory(C);
		function x(t$2) {
			let e$2;
			const n$2 = (t$2 = t$2 || {}).debug ? t$2.debug.getLogger(e$2) : {};
			let a$2 = /([a-zA-Z]*)(\(([0-9]*)(\,\s*([a-zA-Z]*))?\))?/;
			const r$2 = this.context;
			let i$2 = {
				BufferLevel: k,
				DVBErrors: A,
				HttpList: N,
				PlayList: D,
				RepSwitchList: D,
				TcpList: D
			};
			return e$2 = {
				create: function(e$3, l$2) {
					var o$2, s$2 = e$3.match(a$2);
					if (s$2) {
						try {
							(o$2 = i$2[s$2[1]](r$2).create({
								eventBus: t$2.eventBus,
								metricsConstants: t$2.metricsConstants
							})).initialize(s$2[1], l$2, s$2[3], s$2[5]);
						} catch (t$3) {
							o$2 = null, n$2.error(`MetricsHandlerFactory: Could not create handler for type ${s$2[1]} with args ${s$2[3]}, ${s$2[5]} (${t$3.message})`);
						}
						return o$2;
					}
				},
				register: function(t$3, e$3) {
					i$2[t$3] = e$3;
				},
				unregister: function(t$3) {
					delete i$2[t$3];
				}
			}, e$2;
		}
		x.__dashjs_factory_name = "MetricsHandlerFactory";
		var M = l$1.default.getSingletonFactory(x);
		function z(t$2) {
			t$2 = t$2 || {};
			let e$2, n$2 = [];
			const a$2 = this.context, r$2 = t$2.eventBus, i$2 = t$2.events;
			let l$2 = M(a$2).getInstance({
				debug: t$2.debug,
				eventBus: t$2.eventBus,
				metricsConstants: t$2.metricsConstants
			});
			function o$2(t$3) {
				n$2.forEach(((e$3) => {
					e$3.handleNewMetric(t$3.metric, t$3.value, t$3.mediaType);
				}));
			}
			return e$2 = {
				initialize: function(t$3, a$3) {
					t$3.split(",").forEach(((t$4, e$3, r$3) => {
						let i$3;
						if (-1 !== t$4.indexOf("(") && -1 === t$4.indexOf(")")) {
							let n$3 = r$3[e$3 + 1];
							n$3 && -1 === n$3.indexOf("(") && -1 !== n$3.indexOf(")") && (t$4 += "," + n$3, delete r$3[e$3 + 1]);
						}
						i$3 = l$2.create(t$4, a$3), i$3 && n$2.push(i$3);
					})), r$2.on(i$2.METRIC_ADDED, o$2, e$2), r$2.on(i$2.METRIC_UPDATED, o$2, e$2);
				},
				reset: function() {
					r$2.off(i$2.METRIC_ADDED, o$2, e$2), r$2.off(i$2.METRIC_UPDATED, o$2, e$2), n$2.forEach(((t$3) => t$3.reset())), n$2 = [];
				}
			}, e$2;
		}
		z.__dashjs_factory_name = "MetricsHandlersController";
		var O = l$1.default.getClassFactory(z);
		function P(t$2) {
			let e$2, n$2, a$2, r$2;
			t$2 = t$2 || {};
			let i$2 = this.context;
			function l$2() {
				e$2 && e$2.reset(), n$2 && n$2.reset(), a$2 && a$2.reset();
			}
			return r$2 = {
				initialize: function(r$3) {
					try {
						a$2 = c$1(i$2).create({ mediaElement: t$2.mediaElement }), a$2.initialize(r$3.Range), n$2 = v$1(i$2).create({
							debug: t$2.debug,
							metricsConstants: t$2.metricsConstants,
							mediaPlayerModel: t$2.mediaPlayerModel
						}), n$2.initialize(r$3.Reporting, a$2), e$2 = O(i$2).create({
							debug: t$2.debug,
							eventBus: t$2.eventBus,
							metricsConstants: t$2.metricsConstants,
							events: t$2.events
						}), e$2.initialize(r$3.metrics, n$2);
					} catch (t$3) {
						throw l$2(), t$3;
					}
				},
				reset: l$2
			}, r$2;
		}
		P.__dashjs_factory_name = "MetricsController";
		var L = l$1.default.getClassFactory(P), F = class {
			constructor() {
				this.metrics = "", this.Range = [], this.Reporting = [];
			}
		}, U = class {
			constructor() {
				this.starttime = 0, this.duration = Infinity, this._useWallClockTime = !1;
			}
		}, j = class {
			constructor() {
				this.schemeIdUri = "", this.value = "", this.dvbReportingUrl = "", this.dvbProbability = 1e3;
			}
		};
		function q(t$2) {
			let e$2, n$2 = (t$2 = t$2 || {}).adapter;
			const a$2 = t$2.constants;
			return e$2 = { getMetrics: function(t$3) {
				let e$3 = [];
				return t$3 && t$3.Metrics && t$3.Metrics.forEach(((r$2) => {
					var i$2 = new F(), l$2 = n$2.getIsDynamic(t$3);
					r$2.hasOwnProperty("metrics") && (i$2.metrics = r$2.metrics, r$2.Range && r$2.Range.forEach(((e$4) => {
						var r$3 = new U();
						r$3.starttime = function(t$4, e$5, r$4) {
							let i$3, l$3, o$2 = 0;
							return e$5 ? o$2 = n$2.getAvailabilityStartTime(t$4) / 1e3 : (i$3 = n$2.getRegularPeriods(t$4), i$3.length && (o$2 = i$3[0].start)), l$3 = o$2, r$4 && r$4.hasOwnProperty(a$2.START_TIME) && (l$3 += r$4.starttime), l$3;
						}(t$3, l$2, e$4), e$4.hasOwnProperty("duration") ? r$3.duration = e$4.duration : r$3.duration = n$2.getDuration(t$3), r$3._useWallClockTime = l$2, i$2.Range.push(r$3);
					})), r$2.Reporting && (r$2.Reporting.forEach(((t$4) => {
						var e$4 = new j();
						t$4.hasOwnProperty(a$2.SCHEME_ID_URI) && (e$4.schemeIdUri = t$4.schemeIdUri, t$4.hasOwnProperty("value") && (e$4.value = t$4.value), t$4.hasOwnProperty(a$2.DVB_REPORTING_URL) && (e$4.dvbReportingUrl = t$4[a$2.DVB_REPORTING_URL]), t$4.hasOwnProperty(a$2.DVB_PROBABILITY) && (e$4.dvbProbability = t$4[a$2.DVB_PROBABILITY]), i$2.Reporting.push(e$4));
					})), e$3.push(i$2)));
				})), e$3;
			} }, e$2;
		}
		q.__dashjs_factory_name = "ManifestParsing";
		var B = l$1.default.getSingletonFactory(q);
		function G(t$2) {
			let e$2;
			t$2 = t$2 || {};
			let n$2 = {}, a$2 = this.context, r$2 = t$2.eventBus;
			const l$2 = t$2.events;
			function o$2(e$3) {
				if (e$3.error) return;
				let l$3 = Object.keys(n$2);
				B(a$2).getInstance({
					adapter: t$2.adapter,
					constants: t$2.constants
				}).getMetrics(e$3.manifest).forEach(((e$4) => {
					const r$3 = JSON.stringify(e$4);
					if (n$2.hasOwnProperty(r$3)) l$3.splice(r$3, 1);
					else try {
						let i$2 = L(a$2).create(t$2);
						i$2.initialize(e$4), n$2[r$3] = i$2;
					} catch (t$3) {}
				})), l$3.forEach(((t$3) => {
					n$2[t$3].reset(), delete n$2[t$3];
				})), r$2.trigger(i$1.default.METRICS_INITIALISATION_COMPLETE);
			}
			function s$2() {
				Object.keys(n$2).forEach(((t$3) => {
					n$2[t$3].reset();
				})), n$2 = {};
			}
			return e$2 = { reset: function() {
				r$2.off(l$2.MANIFEST_UPDATED, o$2, e$2), r$2.off(l$2.STREAM_TEARDOWN_COMPLETE, s$2, e$2);
			} }, r$2.on(l$2.MANIFEST_UPDATED, o$2, e$2), r$2.on(l$2.STREAM_TEARDOWN_COMPLETE, s$2, e$2), e$2;
		}
		G.__dashjs_factory_name = "MetricsCollectionController";
		var H = l$1.default.getClassFactory(G);
		function Y() {
			let t$2, e$2, n$2 = this.context;
			return t$2 = {
				createMetricsReporting: function(t$3) {
					return e$2 = s$1(n$2).getInstance({
						eventBus: t$3.eventBus,
						dashMetrics: t$3.dashMetrics,
						metricsConstants: t$3.metricsConstants,
						events: t$3.events
					}), e$2.initialize(), H(n$2).create(t$3);
				},
				getReportingFactory: function() {
					return _$1(n$2).getInstance();
				},
				getMetricsHandlerFactory: function() {
					return M(n$2).getInstance();
				}
			}, t$2;
		}
		Y.__dashjs_factory_name = "MetricsReporting";
		const V = dashjs.FactoryMaker.getClassFactory(Y);
		V.events = i$1.default, dashjs.FactoryMaker.updateClassFactory(Y.__dashjs_factory_name, V);
		var K = V;
	},
	913: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(7252);
		class r$1 extends a$1.default {
			constructor() {
				super(), this.METRICS_INITIALISATION_COMPLETE = "internal_metricsReportingInitialized", this.BECAME_REPORTING_PLAYER = "internal_becameReportingPlayer", this.CMCD_DATA_GENERATED = "cmcdDataGenerated";
			}
		}
		e$1.default = new r$1();
	},
	1926: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(5717), r$1 = n$1(138), i$1 = n$1(8261), l$1 = n$1(656), o$1 = n$1(5212);
		function s$1() {
			let t$2, e$2, n$2, r$2, s$2, u$1, d$1, c$1, f$1, g$1;
			const m$1 = this.context, h$1 = (0, i$1.default)(m$1).getInstance();
			function p$1() {
				r$2 = [], s$2 = [], u$1 = [], d$1 = [], c$1 = [], g$1 = [], f$1 = null, e$2 = [];
			}
			function b$1(t$3, e$3) {
				let n$3 = -1;
				t$3.some(((t$4, a$2) => {
					if (t$4 === e$3) return n$3 = a$2, !0;
				})), n$3 < 0 || t$3.splice(n$3, 1);
			}
			function y$1(t$3) {
				let e$3;
				for (e$3 = 0; e$3 < g$1.length; e$3++) if (g$1[e$3].rulename === t$3) return e$3;
				return -1;
			}
			function E$1(t$3, n$3) {
				_$1(t$3, n$3);
				let r$3 = new a$1.default();
				r$3.schemeIdUri = t$3, r$3.value = n$3, e$2.push(r$3);
			}
			function _$1(t$3, n$3) {
				(0, l$1.checkParameterType)(t$3, "string"), (0, l$1.checkParameterType)(n$3, "string"), e$2.forEach((function(a$2, r$3) {
					a$2.schemeIdUri === t$3 && a$2.value === n$3 && e$2.splice(r$3, 1);
				}));
			}
			return t$2 = {
				addAbrCustomRule: function(t$3, e$3, n$3) {
					if ("string" != typeof t$3 || t$3 !== o$1.default.RULES_TYPES.ABANDON_FRAGMENT_RULES && t$3 !== o$1.default.RULES_TYPES.QUALITY_SWITCH_RULES || "string" != typeof e$3) throw o$1.default.BAD_ARGUMENT_ERROR;
					let a$2 = y$1(e$3);
					-1 === a$2 ? g$1.push({
						type: t$3,
						rulename: e$3,
						rule: n$3
					}) : (g$1[a$2].type = t$3, g$1[a$2].rule = n$3);
				},
				addRequestInterceptor: function(t$3) {
					r$2.push(t$3);
				},
				addResponseInterceptor: function(t$3) {
					s$2.push(t$3);
				},
				addUTCTimingSource: E$1,
				clearDefaultUTCTimingSources: function() {
					e$2 = [];
				},
				getAbrCustomRules: function() {
					return g$1;
				},
				getCustomCapabilitiesFilters: function() {
					return c$1;
				},
				getCustomInitialTrackSelectionFunction: function() {
					return f$1;
				},
				getLicenseRequestFilters: function() {
					return u$1;
				},
				getLicenseResponseFilters: function() {
					return d$1;
				},
				getRequestInterceptors: function() {
					return r$2;
				},
				getResponseInterceptors: function() {
					return s$2;
				},
				getUTCTimingSources: function() {
					return e$2;
				},
				getXHRWithCredentialsForType: function(t$3) {
					const e$3 = n$2[t$3];
					return void 0 === e$3 ? n$2.default : e$3;
				},
				registerCustomCapabilitiesFilter: function(t$3) {
					c$1.push(t$3);
				},
				registerLicenseRequestFilter: function(t$3) {
					u$1.push(t$3);
				},
				registerLicenseResponseFilter: function(t$3) {
					d$1.push(t$3);
				},
				removeAbrCustomRule: function(t$3) {
					if (t$3) {
						let e$3 = y$1(t$3);
						-1 !== e$3 && g$1.splice(e$3, 1);
					} else g$1 = [];
				},
				removeAllAbrCustomRule: function() {
					g$1 = [];
				},
				removeRequestInterceptor: function(t$3) {
					b$1(r$2, t$3);
				},
				removeResponseInterceptor: function(t$3) {
					b$1(s$2, t$3);
				},
				removeUTCTimingSource: _$1,
				reset: function() {
					p$1();
				},
				resetCustomInitialTrackSelectionFunction: function() {
					f$1 = null;
				},
				restoreDefaultUTCTimingSources: function() {
					let t$3 = h$1.get().streaming.utcSynchronization.defaultTimingSource;
					E$1(t$3.scheme, t$3.value);
				},
				setConfig: function() {},
				setCustomInitialTrackSelectionFunction: function(t$3) {
					f$1 = t$3;
				},
				setXHRWithCredentialsForType: function t$3(e$3, a$2) {
					e$3 ? n$2[e$3] = !!a$2 : Object.keys(n$2).forEach(((e$4) => {
						t$3(e$4, a$2);
					}));
				},
				unregisterCustomCapabilitiesFilter: function(t$3) {
					b$1(c$1, t$3);
				},
				unregisterLicenseRequestFilter: function(t$3) {
					b$1(u$1, t$3);
				},
				unregisterLicenseResponseFilter: function(t$3) {
					b$1(d$1, t$3);
				}
			}, n$2 = { default: !1 }, p$1(), t$2;
		}
		s$1.__dashjs_factory_name = "CustomParametersModel", e$1.default = r$1.default.getSingletonFactory(s$1);
	},
	3888: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, { default: function() {
			return mt;
		} });
		var a$1 = n$1(8854), r$1 = n$1(2861);
		const i$1 = { prefixes: [
			"clearkey",
			"dashif",
			"ck"
		] };
		class l$1 {
			static findMp4ProtectionElement(t$2) {
				let e$2 = null;
				for (let n$2 = 0; n$2 < t$2.length; ++n$2) {
					let i$2 = t$2[n$2];
					i$2.schemeIdUri && i$2.schemeIdUri.toLowerCase() === a$1.default.MP4_PROTECTION_SCHEME && i$2.value && (i$2.value.toLowerCase() === r$1.default.ENCRYPTION_SCHEME_CENC || i$2.value.toLowerCase() === r$1.default.ENCRYPTION_SCHEME_CBCS) && (e$2 = i$2);
				}
				return e$2;
			}
			static getPSSHData(t$2) {
				let e$2 = 8, n$2 = new DataView(t$2), a$2 = n$2.getUint8(e$2);
				return e$2 += 20, a$2 > 0 && (e$2 += 4 + 16 * n$2.getUint32(e$2)), e$2 += 4, t$2.slice(e$2);
			}
			static getPSSHForKeySystem(t$2, e$2) {
				let n$2 = l$1.parsePSSHList(e$2);
				return t$2 && n$2.hasOwnProperty(t$2.uuid.toLowerCase()) ? n$2[t$2.uuid.toLowerCase()] : null;
			}
			static parseInitDataFromContentProtection(t$2, e$2) {
				return "pssh" in t$2 && t$2.pssh ? (t$2.pssh.__text = t$2.pssh.__text.replace(/\r?\n|\r/g, "").replace(/\s+/g, ""), e$2.decodeArray(t$2.pssh.__text).buffer) : null;
			}
			static parsePSSHList(t$2) {
				if (null == t$2) return [];
				let e$2 = new DataView(t$2.buffer || t$2), n$2 = {}, a$2 = 0;
				for (;;) {
					let t$3, r$2, i$2, l$2, o$2, s$2, u$2 = a$2;
					if (a$2 >= e$2.buffer.byteLength) break;
					if (t$3 = e$2.getUint32(a$2), r$2 = a$2 + t$3, a$2 += 4, 1886614376 === e$2.getUint32(a$2)) if (a$2 += 4, i$2 = e$2.getUint8(a$2), 0 === i$2 || 1 === i$2) {
						for (a$2++, a$2 += 3, l$2 = "", o$2 = 0; o$2 < 4; o$2++) s$2 = e$2.getUint8(a$2 + o$2).toString(16), l$2 += 1 === s$2.length ? "0" + s$2 : s$2;
						for (a$2 += 4, l$2 += "-", o$2 = 0; o$2 < 2; o$2++) s$2 = e$2.getUint8(a$2 + o$2).toString(16), l$2 += 1 === s$2.length ? "0" + s$2 : s$2;
						for (a$2 += 2, l$2 += "-", o$2 = 0; o$2 < 2; o$2++) s$2 = e$2.getUint8(a$2 + o$2).toString(16), l$2 += 1 === s$2.length ? "0" + s$2 : s$2;
						for (a$2 += 2, l$2 += "-", o$2 = 0; o$2 < 2; o$2++) s$2 = e$2.getUint8(a$2 + o$2).toString(16), l$2 += 1 === s$2.length ? "0" + s$2 : s$2;
						for (a$2 += 2, l$2 += "-", o$2 = 0; o$2 < 6; o$2++) s$2 = e$2.getUint8(a$2 + o$2).toString(16), l$2 += 1 === s$2.length ? "0" + s$2 : s$2;
						a$2 += 6, l$2 = l$2.toLowerCase(), a$2 += 4, n$2[l$2] = e$2.buffer.slice(u$2, r$2), a$2 = r$2;
					} else a$2 = r$2;
					else a$2 = r$2;
				}
				return n$2;
			}
			static getLicenseServerUrlFromMediaInfo(t$2, e$2) {
				try {
					if (!t$2 || 0 === t$2.length) return null;
					let n$2 = 0, a$2 = null;
					for (; n$2 < t$2.length && !a$2;) {
						const r$2 = t$2[n$2];
						if (r$2 && r$2.contentProtection && r$2.contentProtection.length > 0) {
							const t$3 = r$2.contentProtection.filter(((t$4) => t$4.schemeIdUri && t$4.schemeIdUri === e$2));
							if (t$3 && t$3.length > 0) {
								let e$3 = 0;
								for (; e$3 < t$3.length && !a$2;) {
									const n$3 = t$3[e$3];
									n$3.laUrl && n$3.laUrl.__prefix && i$1.prefixes.includes(n$3.laUrl.__prefix) && n$3.laUrl.__text && (a$2 = n$3.laUrl.__text), e$3 += 1;
								}
							}
						}
						n$2 += 1;
					}
					return a$2;
				} catch (t$3) {
					return null;
				}
			}
			static hexKidToBufferSource(t$2) {
				const e$2 = t$2.replace(/-/g, "");
				return new Uint8Array(e$2.match(/[\da-f]{2}/gi).map((function(t$3) {
					return parseInt(t$3, 16);
				}))).buffer;
			}
		}
		var o$1 = l$1, s$1 = class {
			constructor(t$2, e$2) {
				this.contentType = t$2, this.robustness = e$2;
			}
		}, u$1 = class {
			constructor(t$2, e$2, n$2, a$2, i$2, l$2) {
				this.initDataTypes = l$2 && l$2.length > 0 ? l$2 : [r$1.default.INITIALIZATION_DATA_TYPE_CENC], t$2 && t$2.length && (this.audioCapabilities = t$2), e$2 && e$2.length && (this.videoCapabilities = e$2), this.distinctiveIdentifier = n$2, this.persistentState = a$2, this.sessionTypes = i$2;
			}
		}, d$1 = n$1(1923), c$1 = n$1(1944), f$1 = class {
			constructor(t$2, e$2, n$2, a$2, r$2, i$2, l$2, o$2) {
				this.url = t$2, this.method = e$2, this.responseType = n$2, this.headers = a$2, this.withCredentials = r$2, this.messageType = i$2, this.sessionId = l$2, this.data = o$2;
			}
		}, g$1 = class {
			constructor(t$2, e$2, n$2) {
				this.url = t$2, this.headers = e$2, this.data = n$2;
			}
		}, m$1 = n$1(7568), h$1 = n$1(7263), p$1 = n$1(5212), b$1 = n$1(138);
		function y$1(t$2) {
			const e$2 = (t$2 = t$2 || {}).BASE64, n$2 = t$2.cmcdModel, a$2 = t$2.constants, i$2 = t$2.customParametersModel, l$2 = t$2.debug, b$2 = t$2.eventBus, y$2 = t$2.events, E$2 = t$2.protectionKeyController, _$2 = t$2.settings;
			let T$2, v$2, w$2, S$2, I$1, k$1, A$1, R$1, N$1, C$1, D$1, x$1, M$1 = t$2.protectionModel, z$1 = [];
			function O$1() {
				if (!(b$2 && b$2.hasOwnProperty("on") && E$2 && E$2.hasOwnProperty("getSupportedKeySystemMetadataFromContentProtection"))) throw new Error("Missing config parameter(s)");
			}
			function P$1(t$3, n$3) {
				D$1 || S$2 ? D$1 && L$1() : function(t$4, n$4) {
					if (S$2) return;
					var a$3;
					S$2 = !0;
					const r$2 = function(t$5) {
						const e$3 = [];
						for (let n$5 = 0; n$5 < t$5.length; n$5++) {
							const a$4 = F$1(t$5[n$5]);
							e$3.push({
								ks: t$5[n$5].ks,
								configs: [a$4],
								protData: t$5[n$5].protData
							});
						}
						return e$3;
					}(t$4 = (a$3 = t$4).sort(((t$5, e$3) => (T$2 && T$2[t$5.ks.systemString] && T$2[t$5.ks.systemString].priority >= 0 ? T$2[t$5.ks.systemString].priority : a$3.length) - (T$2 && T$2[e$3.ks.systemString] && T$2[e$3.ks.systemString].priority >= 0 ? T$2[e$3.ks.systemString].priority : a$3.length))));
					let i$3;
					M$1.requestKeySystemAccess(r$2).then(((t$5) => (i$3 = t$5.data, function(t$6) {
						let e$3 = t$6 && t$6.selectedSystemString ? t$6.selectedSystemString : t$6.keySystem.systemString;
						return A$1.info("DRM: KeySystem Access Granted for system string (" + e$3 + ")!  Selecting key system..."), M$1.selectKeySystem(t$6);
					}(i$3)))).then(((t$5) => {
						(function(t$6, n$5) {
							D$1 = t$6, S$2 = !1, b$2.trigger(y$2.KEY_SYSTEM_SELECTED, { data: n$5 });
							const a$4 = q$1(D$1);
							a$4 && a$4.serverCertificate && a$4.serverCertificate.length > 0 && M$1.setServerCertificate(e$2.decodeArray(a$4.serverCertificate).buffer), L$1();
						})(t$5, i$3);
					})).catch(((t$5) => {
						(function(t$6, e$3) {
							D$1 = null, S$2 = !1, e$3 || b$2.trigger(y$2.KEY_SYSTEM_SELECTED, {
								data: null,
								error: new c$1.default(d$1.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE, d$1.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE + "Error selecting key system! -- " + t$6.error)
							});
						})(t$5, n$4);
					}));
				}(t$3, n$3);
			}
			function L$1() {
				let t$3;
				for (let n$3 = 0; n$3 < N$1.length; n$3++) for (t$3 = 0; t$3 < N$1[n$3].length; t$3++) if (D$1 === N$1[n$3][t$3].ks) {
					e$3 = N$1[n$3][t$3], E$2.isClearKey(D$1) && function(t$4) {
						if (t$4.protData && t$4.protData.hasOwnProperty("clearkeys") && 0 !== Object.keys(t$4.protData.clearkeys).length) {
							const e$4 = { kids: Object.keys(t$4.protData.clearkeys) };
							t$4.initData = new TextEncoder().encode(JSON.stringify(e$4));
						}
					}(e$3), e$3.sessionId ? U$1(e$3) : null !== e$3.initData && j$1(e$3);
					break;
				}
				var e$3;
				N$1 = [];
			}
			function F$1(t$3) {
				const e$3 = t$3.protData, n$3 = [], i$3 = [], l$3 = e$3 && e$3.initDataTypes && e$3.initDataTypes.length > 0 ? e$3.initDataTypes : [r$1.default.INITIALIZATION_DATA_TYPE_CENC], o$2 = e$3 && e$3.audioRobustness && e$3.audioRobustness.length > 0 ? e$3.audioRobustness : C$1, d$2 = e$3 && e$3.videoRobustness && e$3.videoRobustness.length > 0 ? e$3.videoRobustness : C$1, c$2 = t$3.sessionType, f$2 = e$3 && e$3.distinctiveIdentifier ? e$3.distinctiveIdentifier : "optional", g$2 = e$3 && e$3.persistentState ? e$3.persistentState : "temporary" === c$2 ? "optional" : "required";
				return R$1.forEach(((t$4) => {
					t$4.type === a$2.AUDIO ? n$3.push(new s$1(t$4.codec, o$2)) : t$4.type === a$2.VIDEO && i$3.push(new s$1(t$4.codec, d$2));
				})), new u$1(n$3, i$3, f$2, g$2, [c$2], l$3);
			}
			function U$1(t$3) {
				O$1(), M$1.loadKeySession(t$3);
			}
			function j$1(t$3) {
				if (t$3 && function(t$4) {
					if (!t$4) return !1;
					try {
						const e$4 = M$1.getSessionTokens();
						for (let n$3 = 0; n$3 < e$4.length; n$3++) if (e$4[n$3].getKeyId() === t$4) return !0;
						return !1;
					} catch (t$5) {
						return !1;
					}
				}(t$3.keyId)) return;
				const e$3 = o$1.getPSSHForKeySystem(D$1, t$3 ? t$3.initData : null);
				if (e$3) {
					if (B$1(e$3)) return;
					try {
						t$3.initData = e$3, M$1.createKeySession(t$3);
					} catch (t$4) {
						b$2.trigger(y$2.KEY_SESSION_CREATED, {
							data: null,
							error: new c$1.default(d$1.default.KEY_SESSION_CREATED_ERROR_CODE, d$1.default.KEY_SESSION_CREATED_ERROR_MESSAGE + t$4.message)
						});
					}
				} else t$3 && t$3.initData ? M$1.createKeySession(t$3) : b$2.trigger(y$2.KEY_SESSION_CREATED, {
					data: null,
					error: new c$1.default(d$1.default.KEY_SESSION_CREATED_ERROR_CODE, d$1.default.KEY_SESSION_CREATED_ERROR_MESSAGE + "Selected key system is " + (D$1 ? D$1.systemString : null) + ".  needkey/encrypted event contains no initData corresponding to that key system!")
				});
			}
			function q$1(t$3) {
				if (t$3) {
					const e$3 = t$3.systemString;
					if (T$2) return e$3 in T$2 ? T$2[e$3] : null;
				}
				return null;
			}
			function B$1(t$3) {
				if (!t$3) return !1;
				try {
					const e$3 = M$1.getAllInitData();
					for (let n$3 = 0; n$3 < e$3.length; n$3++) if (E$2.initDataEquals(t$3, e$3[n$3])) return A$1.debug("DRM: Ignoring initData because we have already seen it!"), !0;
					return !1;
				} catch (t$4) {
					return !1;
				}
			}
			function G$1(t$3) {
				O$1(), t$3 ? (M$1.setMediaElement(t$3), b$2.on(y$2.NEED_KEY, Q$1, v$2)) : null === t$3 && (M$1.setMediaElement(t$3), b$2.off(y$2.NEED_KEY, Q$1, v$2));
			}
			function H$1(t$3) {
				A$1.debug("DRM: onKeyMessage");
				const e$3 = t$3.data;
				b$2.trigger(y$2.KEY_MESSAGE, { data: e$3 });
				const n$3 = e$3.messageType ? e$3.messageType : r$1.default.MEDIA_KEY_MESSAGE_TYPES.LICENSE_REQUEST, a$3 = e$3.message, l$3 = e$3.sessionToken, s$2 = q$1(D$1), u$2 = E$2.getLicenseServerModelInstance(D$1, s$2, n$3), p$2 = {
					sessionToken: l$3,
					messageType: n$3
				};
				if (a$3 && 0 !== a$3.byteLength) {
					if (!u$2) return A$1.debug("DRM: License server request not required for this message (type = " + t$3.data.messageType + ").  Session ID = " + l$3.getSessionId()), void Y$1(p$2);
					if (E$2.isClearKey(D$1)) {
						const t$4 = E$2.processClearKeyLicenseRequest(D$1, s$2, a$3);
						if (t$4 && t$4.keyPairs && t$4.keyPairs.length > 0) return A$1.debug("DRM: ClearKey license request handled by application!"), Y$1(p$2), void M$1.updateKeySession(l$3, t$4);
					}
					(function(t$4, e$4, n$4) {
						const a$4 = t$4.sessionToken, l$4 = t$4.messageType ? t$4.messageType : r$1.default.MEDIA_KEY_MESSAGE_TYPES.LICENSE_REQUEST, s$3 = {
							sessionToken: a$4,
							messageType: l$4
						}, u$3 = D$1 ? D$1.systemString : null;
						let p$3 = function(t$5, e$5, n$5, a$5, r$2) {
							let i$3 = null;
							const l$5 = a$5.message;
							if (t$5 && t$5.serverURL) {
								const n$6 = t$5.serverURL;
								"string" == typeof n$6 && "" !== n$6 ? i$3 = n$6 : "object" == typeof n$6 && n$6.hasOwnProperty(e$5) && (i$3 = n$6[e$5]);
							} else if (t$5 && t$5.laURL && "" !== t$5.laURL) i$3 = t$5.laURL;
							else if (i$3 = o$1.getLicenseServerUrlFromMediaInfo(R$1, D$1.schemeIdURI), !i$3 && !E$2.isClearKey(D$1)) {
								const t$6 = o$1.getPSSHData(n$5.initData);
								i$3 = D$1.getLicenseServerURLFromInitData(t$6), i$3 || (i$3 = a$5.laURL);
							}
							return i$3 = r$2.getServerURLFromMessage(i$3, l$5, e$5), i$3;
						}(n$4, l$4, a$4, t$4, e$4);
						if (!p$3) return void Y$1(s$3, new c$1.default(d$1.default.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE, d$1.default.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));
						const b$3 = {};
						let y$3 = !1;
						n$4 && W$1(b$3, n$4.httpRequestHeaders);
						const T$3 = t$4.message;
						W$1(b$3, D$1.getRequestHeadersFromMessage(T$3)), Object.keys(b$3).forEach(((t$5) => {
							"authorization" === t$5.toLowerCase() && (y$3 = !0);
						})), n$4 && "boolean" == typeof n$4.withCredentials && (y$3 = n$4.withCredentials);
						const v$3 = function(t$5) {
							if (M$1) if (t$5.status >= 200 && t$5.status <= 299) {
								const n$5 = h$1.default.parseHttpHeaders(t$5.getAllResponseHeaders ? t$5.getAllResponseHeaders() : null);
								let r$2 = new g$1(t$5.responseURL, n$5, t$5.response);
								X$1(i$2.getLicenseResponseFilters(), r$2).then((() => {
									const n$6 = e$4.getLicenseMessage(r$2.data, u$3, l$4);
									null !== n$6 ? (Y$1(s$3), M$1.updateKeySession(a$4, n$6)) : $$1(t$5, s$3, u$3, l$4, e$4);
								}));
							} else $$1(t$5, s$3, u$3, l$4, e$4);
						}, w$3 = function(t$5) {
							Y$1(s$3, new c$1.default(d$1.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE, d$1.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + u$3 + " update, XHR aborted. status is \"" + t$5.statusText + "\" (" + t$5.status + "), readyState is " + t$5.readyState));
						}, S$3 = function(t$5) {
							Y$1(s$3, new c$1.default(d$1.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE, d$1.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + u$3 + " update, XHR error. status is \"" + t$5.statusText + "\" (" + t$5.status + "), readyState is " + t$5.readyState));
						}, I$2 = D$1.getLicenseRequestFromMessage(T$3), k$2 = e$4.getHTTPMethod(l$4), A$2 = e$4.getResponseType(u$3, l$4), N$2 = n$4 && !isNaN(n$4.httpTimeout) ? n$4.httpTimeout : 8e3, C$2 = a$4.getSessionId() || null;
						let x$2 = new f$1(p$3, k$2, A$2, b$3, y$3, l$4, C$2, I$2);
						const z$2 = isNaN(_$2.get().streaming.retryAttempts[m$1.HTTPRequest.LICENSE]) ? 3 : _$2.get().streaming.retryAttempts[m$1.HTTPRequest.LICENSE];
						X$1(i$2.getLicenseRequestFilters(), x$2).then((() => {
							V$1(x$2, z$2, N$2, v$3, w$3, S$3);
						}));
					})(e$3, u$2, s$2);
				} else Y$1(p$2, new c$1.default(d$1.default.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE, d$1.default.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));
			}
			function Y$1(t$3) {
				let e$3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
				b$2.trigger(y$2.LICENSE_REQUEST_COMPLETE, {
					data: t$3,
					error: e$3
				});
			}
			function V$1(t$3, e$3, a$3, r$2, i$3, l$3) {
				const o$2 = new XMLHttpRequest(), s$2 = n$2.getCmcdParametersFromManifest();
				if (n$2.isCmcdEnabled() && (s$2.mode ? s$2.mode : _$2.get().streaming.cmcd.mode) === p$1.default.CMCD_MODE_QUERY) {
					const e$4 = n$2.getQueryParameter({
						url: t$3.url,
						type: m$1.HTTPRequest.LICENSE
					});
					e$4 && (t$3.url = h$1.default.addAdditionalQueryParameterToUrl(t$3.url, [e$4]));
				}
				o$2.open(t$3.method, t$3.url, !0), o$2.responseType = t$3.responseType, o$2.withCredentials = t$3.withCredentials, a$3 > 0 && (o$2.timeout = a$3);
				for (const e$4 in t$3.headers) o$2.setRequestHeader(e$4, t$3.headers[e$4]);
				if (n$2.isCmcdEnabled() && (s$2.mode ? s$2.mode : _$2.get().streaming.cmcd.mode) === p$1.default.CMCD_MODE_HEADER) {
					const e$4 = n$2.getHeaderParameters({
						url: t$3.url,
						type: m$1.HTTPRequest.LICENSE
					});
					if (e$4) for (const t$4 in e$4) {
						let n$3 = e$4[t$4];
						n$3 && o$2.setRequestHeader(t$4, n$3);
					}
				}
				const u$2 = function() {
					e$3--;
					const n$3 = isNaN(_$2.get().streaming.retryIntervals[m$1.HTTPRequest.LICENSE]) ? 1e3 : _$2.get().streaming.retryIntervals[m$1.HTTPRequest.LICENSE];
					I$1 = setTimeout((function() {
						V$1(t$3, e$3, a$3, r$2, i$3, l$3);
					}), n$3);
				};
				o$2.onload = function() {
					k$1 = null, this.status >= 200 && this.status <= 299 || e$3 <= 0 ? r$2(this) : (A$1.warn("License request failed (" + this.status + "). Retrying it... Pending retries: " + e$3), u$2());
				}, o$2.ontimeout = o$2.onerror = function() {
					k$1 = null, e$3 <= 0 ? l$3(this) : (A$1.warn("License request network request failed . Retrying it... Pending retries: " + e$3), u$2());
				}, o$2.onabort = function() {
					i$3(this);
				}, b$2.trigger(y$2.LICENSE_REQUEST_SENDING, {
					url: t$3.url,
					headers: t$3.headers,
					payload: t$3.data,
					sessionId: t$3.sessionId
				}), k$1 = o$2, o$2.send(t$3.data);
			}
			function K$1() {
				k$1 && (k$1.onloadend = k$1.onerror = k$1.onprogress = void 0, k$1.abort(), k$1 = null), I$1 && (clearTimeout(I$1), I$1 = null);
			}
			function W$1(t$3, e$3) {
				if (e$3) for (const n$3 in e$3) t$3[n$3] = e$3[n$3];
			}
			function $$1(t$3, e$3, n$3, a$3, r$2) {
				let i$3 = "NONE", l$3 = null;
				t$3.response && (i$3 = r$2.getErrorResponse(t$3.response, n$3, a$3), l$3 = {
					serverResponse: t$3.response || null,
					responseCode: t$3.status || null,
					responseText: t$3.statusText || null
				}), Y$1(e$3, new c$1.default(d$1.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE, d$1.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE + n$3 + " update, XHR complete. status is \"" + t$3.statusText + "\" (" + t$3.status + "), readyState is " + t$3.readyState + ".  Response is " + i$3, l$3));
			}
			function X$1(t$3, e$3) {
				return t$3 ? t$3.reduce(((t$4, n$3) => t$4.then((() => n$3(e$3)))), Promise.resolve()) : Promise.resolve();
			}
			function Q$1(t$3, e$3) {
				if (_$2.get().streaming.protection.ignoreEmeEncryptedEvent) return;
				if (A$1.debug("DRM: onNeedKey"), t$3.key.initDataType !== r$1.default.INITIALIZATION_DATA_TYPE_CENC) return void A$1.warn("DRM:  Only 'cenc' initData is supported!  Ignoring initData of type: " + t$3.key.initDataType);
				if (0 === R$1.length && (A$1.warn("DRM: onNeedKey called before initializeForMedia, wait until initialized"), (e$3 = void 0 === e$3 ? 1 : e$3 + 1) < 5)) return void z$1.push(setTimeout((() => {
					Q$1(t$3, e$3);
				}), 500));
				let n$3 = t$3.key.initData;
				if (ArrayBuffer.isView(n$3) && (n$3 = n$3.buffer), D$1) {
					const t$4 = o$1.getPSSHForKeySystem(D$1, n$3);
					if (t$4 && B$1(t$4)) return;
				}
				A$1.debug("DRM: initData:", String.fromCharCode.apply(null, new Uint8Array(n$3)));
				const a$3 = E$2.getSupportedKeySystemMetadataFromSegmentPssh(n$3, T$2, x$1);
				0 !== a$3.length ? function(t$4) {
					N$1.push(t$4), P$1(t$4, !1);
				}(a$3) : A$1.debug("DRM: Received needkey event with initData, but we don't support any of the key systems!");
			}
			function Z$1(t$3, e$3) {
				if (t$3.size <= 0) return !1;
				if (e$3.size > 0 && [...t$3].every(((t$4) => {
					const n$4 = e$3.get(t$4);
					return void 0 !== n$4 && "" !== n$4;
				}))) return !0;
				const n$3 = M$1.getSessionTokens();
				if (n$3 && n$3.length > 0) {
					const e$4 = n$3.filter(((e$5) => [...t$3].includes(e$5.normalizedKeyId)));
					if (e$4.some(((t$4) => !t$4.hasTriggeredKeyStatusMapUpdate)) || 0 === e$4.length) return !1;
				}
				return !_$2.get().streaming.protection.ignoreKeyStatuses && t$3 && t$3.size > 0 && e$3 && e$3.size > 0;
			}
			return v$2 = {
				areKeyIdsExpired: function(t$3) {
					try {
						return !!Z$1(t$3, w$2) && [...t$3].every(((t$4) => w$2.get(t$4) === r$1.default.MEDIA_KEY_STATUSES.EXPIRED));
					} catch (t$4) {
						return A$1.error(t$4), !1;
					}
				},
				areKeyIdsUsable: function(t$3) {
					try {
						return !Z$1(t$3, w$2) || [...t$3].some(((t$4) => {
							const e$3 = w$2.get(t$4);
							return e$3 && e$3 !== r$1.default.MEDIA_KEY_STATUSES.INTERNAL_ERROR && e$3 !== r$1.default.MEDIA_KEY_STATUSES.OUTPUT_RESTRICTED;
						}));
					} catch (t$4) {
						return A$1.error(t$4), !0;
					}
				},
				clearMediaInfoArray: function() {
					R$1 = [];
				},
				closeKeySession: function(t$3) {
					O$1(), M$1.closeKeySession(t$3);
				},
				createKeySession: j$1,
				getKeySystems: function() {
					return E$2 ? E$2.getKeySystems() : [];
				},
				getSupportedKeySystemMetadataFromContentProtection: function(t$3) {
					return O$1(), E$2.getSupportedKeySystemMetadataFromContentProtection(t$3, T$2, x$1);
				},
				handleKeySystemFromManifest: function() {
					if (!R$1 || 0 === R$1.length) return;
					let t$3 = [];
					R$1.forEach(((e$3) => {
						const n$3 = E$2.getSupportedKeySystemMetadataFromContentProtection(e$3.contentProtection, T$2, x$1);
						n$3.length > 0 && (0 === t$3.length && (t$3 = n$3), N$1.push(n$3));
					})), t$3 && t$3.length > 0 && P$1(t$3, !0);
				},
				initializeForMedia: function(t$3) {
					if (!t$3) throw new Error("mediaInfo can not be null or undefined");
					O$1(), R$1.push(t$3);
				},
				loadKeySession: U$1,
				removeKeySession: function(t$3) {
					O$1(), M$1.removeKeySession(t$3);
				},
				reset: function() {
					b$2.off(y$2.INTERNAL_KEY_MESSAGE, H$1, v$2), O$1(), K$1(), G$1(null), D$1 = null, S$2 = !1, w$2 = /* @__PURE__ */ new Map(), M$1 && (M$1.reset(), M$1 = null), z$1.forEach(((t$3) => clearTimeout(t$3))), z$1 = [], R$1 = [], N$1 = [];
				},
				setKeySystems: function(t$3) {
					E$2 && E$2.setKeySystems(t$3);
				},
				setMediaElement: G$1,
				setProtectionData: function(t$3) {
					T$2 = t$3, E$2.setProtectionData(t$3);
				},
				setRobustnessLevel: function(t$3) {
					C$1 = t$3;
				},
				setServerCertificate: function(t$3) {
					O$1(), M$1.setServerCertificate(t$3);
				},
				setSessionType: function(t$3) {
					x$1 = t$3;
				},
				stop: function() {
					K$1(), M$1 && M$1.stop();
				},
				updateKeyStatusesMap: function(t$3) {
					try {
						if (!t$3 || !t$3.sessionToken || !t$3.parsedKeyStatuses) return;
						t$3.sessionToken.hasTriggeredKeyStatusMapUpdate = !0;
						const e$3 = t$3.parsedKeyStatuses, n$3 = h$1.default.parseUserAgent(), a$3 = n$3 && n$3.browser && n$3.browser.name && "edge" === n$3.browser.name.toLowerCase();
						e$3.forEach(((t$4) => {
							a$3 && D$1.uuid === r$1.default.PLAYREADY_UUID && t$4.keyId && 16 === t$4.keyId.byteLength && function(t$5) {
								const e$5 = h$1.default.bufferSourceToDataView(t$5), n$4 = e$5.getUint32(0, !0), a$4 = e$5.getUint16(4, !0), r$2 = e$5.getUint16(6, !0);
								e$5.setUint32(0, n$4, !1), e$5.setUint16(4, a$4, !1), e$5.setUint16(6, r$2, !1);
							}(t$4.keyId);
							const e$4 = h$1.default.bufferSourceToHex(t$4.keyId).slice(0, 32);
							e$4 && "" !== e$4 && w$2.set(e$4, t$4.status);
						})), b$2.trigger(y$2.KEY_STATUSES_MAP_UPDATED, { keyStatusMap: w$2 });
					} catch (t$4) {
						A$1.error(t$4);
					}
				}
			}, A$1 = l$2.getLogger(v$2), N$1 = [], R$1 = [], x$1 = "temporary", C$1 = "", k$1 = null, I$1 = null, w$2 = /* @__PURE__ */ new Map(), b$2.on(y$2.INTERNAL_KEY_MESSAGE, H$1, v$2), v$2;
		}
		y$1.__dashjs_factory_name = "ProtectionController";
		var E$1 = b$1.default.getClassFactory(y$1), _$1 = class {
			constructor(t$2, e$2) {
				this.keyID = t$2, this.key = e$2;
			}
		}, T$1 = class {
			constructor(t$2, e$2) {
				if (e$2 && "persistent" !== e$2 && "temporary" !== e$2) throw new Error("Invalid ClearKey key set type!  Must be one of 'persistent' or 'temporary'");
				this.keyPairs = t$2, this.type = e$2;
			}
			toJWK() {
				let t$2, e$2 = this.keyPairs.length, n$2 = { keys: [] };
				for (t$2 = 0; t$2 < e$2; t$2++) {
					let e$3 = {
						kty: "oct",
						alg: "A128KW",
						kid: this.keyPairs[t$2].keyID,
						k: this.keyPairs[t$2].key
					};
					n$2.keys.push(e$3);
				}
				this.type && (n$2.type = this.type);
				let a$2 = JSON.stringify(n$2);
				const r$2 = a$2.length;
				let i$2 = new ArrayBuffer(r$2), l$2 = new Uint8Array(i$2);
				for (t$2 = 0; t$2 < r$2; t$2++) l$2[t$2] = a$2.charCodeAt(t$2);
				return i$2;
			}
		};
		const v$1 = r$1.default.CLEARKEY_UUID, w$1 = r$1.default.CLEARKEY_KEYSTEM_STRING, S$1 = "urn:uuid:" + v$1;
		function I(t$2) {
			let e$2;
			const n$2 = (t$2 = t$2 || {}).BASE64;
			return e$2 = {
				uuid: v$1,
				schemeIdURI: S$1,
				systemString: w$1,
				getInitData: function(t$3, e$3) {
					try {
						let a$2 = o$1.parseInitDataFromContentProtection(t$3, n$2);
						if (!a$2 && e$3) {
							const t$4 = { kids: [function(t$5) {
								try {
									let e$4 = t$5.replace(/-/g, "");
									return e$4 = btoa(e$4.match(/\w{2}/g).map(((t$6) => String.fromCharCode(parseInt(t$6, 16)))).join("")), e$4.replace(/=/g, "").replace(/\//g, "_").replace(/\+/g, "-");
								} catch (t$6) {
									return null;
								}
							}(e$3.cencDefaultKid)] };
							a$2 = new TextEncoder().encode(JSON.stringify(t$4));
						}
						return a$2;
					} catch (t$4) {
						return null;
					}
				},
				getRequestHeadersFromMessage: function() {
					return { "Content-Type": "application/json" };
				},
				getLicenseRequestFromMessage: function(t$3) {
					return JSON.stringify(JSON.parse(String.fromCharCode.apply(null, new Uint8Array(t$3))));
				},
				getLicenseServerURLFromInitData: function() {
					return null;
				},
				getCDMData: function() {
					return null;
				},
				getClearKeysFromProtectionData: function(t$3, e$3) {
					let n$3 = null;
					if (t$3) {
						const a$2 = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(e$3))), r$2 = [];
						for (let e$4 = 0; e$4 < a$2.kids.length; e$4++) {
							const n$4 = a$2.kids[e$4], i$2 = t$3.clearkeys && t$3.clearkeys.hasOwnProperty(n$4) ? t$3.clearkeys[n$4] : null;
							if (!i$2) throw new Error("DRM: ClearKey keyID (" + n$4 + ") is not known!");
							r$2.push(new _$1(n$4, i$2));
						}
						n$3 = new T$1(r$2);
					}
					return n$3;
				}
			}, e$2;
		}
		I.__dashjs_factory_name = "KeySystemClearKey";
		var k = b$1.default.getSingletonFactory(I);
		const A = r$1.default.W3C_CLEARKEY_UUID, R = r$1.default.CLEARKEY_KEYSTEM_STRING, N = "urn:uuid:" + A;
		function C(t$2) {
			let e$2;
			const n$2 = t$2.BASE64, a$2 = t$2.debug.getLogger(e$2);
			return e$2 = {
				uuid: A,
				schemeIdURI: N,
				systemString: R,
				getInitData: function(t$3) {
					return o$1.parseInitDataFromContentProtection(t$3, n$2);
				},
				getRequestHeadersFromMessage: function() {
					return null;
				},
				getLicenseRequestFromMessage: function(t$3) {
					return new Uint8Array(t$3);
				},
				getLicenseServerURLFromInitData: function() {
					return null;
				},
				getCDMData: function() {
					return null;
				},
				getClearKeysFromProtectionData: function(t$3, e$3) {
					let n$3 = null;
					if (t$3) {
						const r$2 = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(e$3))), i$2 = [];
						for (let e$4 = 0; e$4 < r$2.kids.length; e$4++) {
							const n$4 = r$2.kids[e$4], a$3 = t$3.clearkeys && t$3.clearkeys.hasOwnProperty(n$4) ? t$3.clearkeys[n$4] : null;
							if (!a$3) throw new Error("DRM: ClearKey keyID (" + n$4 + ") is not known!");
							i$2.push(new _$1(n$4, a$3));
						}
						n$3 = new T$1(i$2), a$2.warn("ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4");
					}
					return n$3;
				}
			}, e$2;
		}
		C.__dashjs_factory_name = "KeySystemW3CClearKey";
		var D = b$1.default.getSingletonFactory(C);
		const x = r$1.default.WIDEVINE_UUID, M = r$1.default.WIDEVINE_KEYSTEM_STRING, z = "urn:uuid:" + x;
		function O(t$2) {
			let e$2;
			const n$2 = (t$2 = t$2 || {}).BASE64;
			return e$2 = {
				uuid: x,
				schemeIdURI: z,
				systemString: M,
				getInitData: function(t$3) {
					return o$1.parseInitDataFromContentProtection(t$3, n$2);
				},
				getRequestHeadersFromMessage: function() {
					return null;
				},
				getLicenseRequestFromMessage: function(t$3) {
					return new Uint8Array(t$3);
				},
				getLicenseServerURLFromInitData: function() {
					return null;
				},
				getCDMData: function() {
					return null;
				}
			}, e$2;
		}
		O.__dashjs_factory_name = "KeySystemWidevine";
		var P = b$1.default.getSingletonFactory(O);
		const L = r$1.default.PLAYREADY_UUID, F = r$1.default.PLAYREADY_KEYSTEM_STRING, U = "urn:uuid:" + L;
		function j(t$2) {
			let e$2, n$2 = "utf-16";
			const a$2 = (t$2 = t$2 || {}).BASE64, r$2 = t$2.settings;
			function i$2() {
				if (!a$2 || !a$2.hasOwnProperty("decodeArray") || !a$2.hasOwnProperty("decodeArray")) throw new Error("Missing config parameter(s)");
			}
			return e$2 = {
				uuid: L,
				schemeIdURI: U,
				systemString: F,
				getInitData: function(t$3) {
					const e$3 = new Uint8Array([
						112,
						115,
						115,
						104,
						0,
						0,
						0,
						0
					]), n$3 = new Uint8Array([
						154,
						4,
						240,
						121,
						152,
						64,
						66,
						134,
						171,
						146,
						230,
						91,
						224,
						136,
						95,
						149
					]);
					let r$3, l$2, s$2, u$2, d$2, c$2 = 0, f$2 = null;
					if (i$2(), !t$3) return null;
					if ("pssh" in t$3 && t$3.pssh) return o$1.parseInitDataFromContentProtection(t$3, a$2);
					if ("pro" in t$3 && t$3.pro) f$2 = a$2.decodeArray(t$3.pro.__text);
					else {
						if (!("prheader" in t$3) || !t$3.prheader) return null;
						f$2 = a$2.decodeArray(t$3.prheader.__text);
					}
					return r$3 = f$2.length, l$2 = 4 + e$3.length + n$3.length + 4 + r$3, s$2 = new ArrayBuffer(l$2), u$2 = new Uint8Array(s$2), d$2 = new DataView(s$2), d$2.setUint32(c$2, l$2), c$2 += 4, u$2.set(e$3, c$2), c$2 += e$3.length, u$2.set(n$3, c$2), c$2 += n$3.length, d$2.setUint32(c$2, r$3), c$2 += 4, u$2.set(f$2, c$2), c$2 += r$3, u$2.buffer;
				},
				getRequestHeadersFromMessage: function(t$3) {
					let e$3, a$3;
					const i$3 = {}, l$2 = new DOMParser();
					if (r$2 && r$2.get().streaming.protection.detectPlayreadyMessageFormat && "utf-16" === n$2 && t$3 && t$3.byteLength % 2 == 1) return i$3["Content-Type"] = "text/xml; charset=utf-8", i$3;
					const o$2 = "utf-16" === n$2 ? new Uint16Array(t$3) : new Uint8Array(t$3);
					e$3 = String.fromCharCode.apply(null, o$2), a$3 = l$2.parseFromString(e$3, "application/xml");
					const s$2 = a$3.getElementsByTagName("name"), u$2 = a$3.getElementsByTagName("value");
					for (let t$4 = 0; t$4 < s$2.length; t$4++) i$3[s$2[t$4].childNodes[0].nodeValue] = u$2[t$4].childNodes[0].nodeValue;
					return i$3.hasOwnProperty("Content") && (i$3["Content-Type"] = i$3.Content, delete i$3.Content), i$3.hasOwnProperty("Content-Type") || (i$3["Content-Type"] = "text/xml; charset=utf-8"), i$3;
				},
				getLicenseRequestFromMessage: function(t$3) {
					let e$3 = null;
					const l$2 = new DOMParser();
					if (r$2 && r$2.get().streaming.protection.detectPlayreadyMessageFormat && "utf-16" === n$2 && t$3 && t$3.byteLength % 2 == 1) return t$3;
					const o$2 = "utf-16" === n$2 ? new Uint16Array(t$3) : new Uint8Array(t$3);
					i$2();
					const s$2 = String.fromCharCode.apply(null, o$2), u$2 = l$2.parseFromString(s$2, "application/xml");
					if (!u$2.getElementsByTagName("PlayReadyKeyMessage")[0]) return t$3;
					{
						const t$4 = u$2.getElementsByTagName("Challenge")[0].childNodes[0].nodeValue;
						t$4 && (e$3 = a$2.decode(t$4));
					}
					return e$3;
				},
				getLicenseServerURLFromInitData: function(t$3) {
					if (t$3) {
						const e$3 = new DataView(t$3), n$3 = e$3.getUint16(4, !0);
						let a$3 = 6;
						const r$3 = new DOMParser();
						for (let i$3 = 0; i$3 < n$3; i$3++) {
							const n$4 = e$3.getUint16(a$3, !0);
							a$3 += 2;
							const i$4 = e$3.getUint16(a$3, !0);
							if (a$3 += 2, 1 !== n$4) {
								a$3 += i$4;
								continue;
							}
							const l$2 = t$3.slice(a$3, a$3 + i$4), o$2 = String.fromCharCode.apply(null, new Uint16Array(l$2)), s$2 = r$3.parseFromString(o$2, "application/xml");
							if (s$2.getElementsByTagName("LA_URL")[0]) {
								const t$4 = s$2.getElementsByTagName("LA_URL")[0].childNodes[0].nodeValue;
								if (t$4) return t$4;
							}
							if (s$2.getElementsByTagName("LUI_URL")[0]) {
								const t$4 = s$2.getElementsByTagName("LUI_URL")[0].childNodes[0].nodeValue;
								if (t$4) return t$4;
							}
						}
					}
					return null;
				},
				getCDMData: function(t$3) {
					let e$3, n$3, r$3, l$2;
					if (i$2(), !t$3) return null;
					for (e$3 = [], l$2 = 0; l$2 < t$3.length; ++l$2) e$3.push(t$3.charCodeAt(l$2)), e$3.push(0);
					for (e$3 = String.fromCharCode.apply(null, e$3), e$3 = a$2.encode(e$3), n$3 = "<PlayReadyCDMData type=\"LicenseAcquisition\"><LicenseAcquisition version=\"1.0\" Proactive=\"false\"><CustomData encoding=\"base64encoded\">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>".replace("%CUSTOMDATA%", e$3), r$3 = [], l$2 = 0; l$2 < n$3.length; ++l$2) r$3.push(n$3.charCodeAt(l$2)), r$3.push(0);
					return new Uint8Array(r$3).buffer;
				},
				setPlayReadyMessageFormat: function(t$3) {
					if ("utf-8" !== t$3 && "utf-16" !== t$3) throw new Error("Specified message format is not one of \"utf-8\" or \"utf-16\"");
					n$2 = t$3;
				}
			}, e$2;
		}
		j.__dashjs_factory_name = "KeySystemPlayReady";
		var q = b$1.default.getSingletonFactory(j);
		function B(t$2) {
			const e$2 = (t$2 = t$2 || {}).BASE64, n$2 = {};
			let a$2;
			return n$2[r$1.default.WIDEVINE_KEYSTEM_STRING] = {
				responseType: "json",
				getLicenseMessage: function(t$3) {
					return e$2.decodeArray(t$3.license);
				},
				getErrorResponse: function(t$3) {
					return t$3;
				}
			}, n$2[r$1.default.PLAYREADY_KEYSTEM_STRING] = {
				responseType: "arraybuffer",
				getLicenseMessage: function(t$3) {
					return t$3;
				},
				getErrorResponse: function(t$3) {
					return String.fromCharCode.apply(null, new Uint8Array(t$3));
				}
			}, a$2 = {
				getServerURLFromMessage: function(t$3) {
					return t$3;
				},
				getHTTPMethod: function() {
					return "POST";
				},
				getResponseType: function(t$3) {
					return n$2[t$3].responseType;
				},
				getLicenseMessage: function(t$3, a$3) {
					return function() {
						if (!e$2 || !e$2.hasOwnProperty("decodeArray")) throw new Error("Missing config parameter(s)");
					}(), n$2[a$3].getLicenseMessage(t$3);
				},
				getErrorResponse: function(t$3, e$3) {
					return n$2[e$3].getErrorResponse(t$3);
				}
			}, a$2;
		}
		B.__dashjs_factory_name = "DRMToday";
		var G = b$1.default.getSingletonFactory(B);
		function H() {
			let t$2;
			const e$2 = "http://schemas.xmlsoap.org/soap/envelope/";
			function n$2(t$3) {
				const e$3 = String.fromCharCode.apply(null, new Uint8Array(t$3));
				return decodeURIComponent(escape(e$3));
			}
			function a$2(t$3) {
				if (window.DOMParser) {
					const a$3 = n$2(t$3), r$3 = new window.DOMParser().parseFromString(a$3, "text/xml"), i$2 = r$3 ? r$3.getElementsByTagNameNS(e$2, "Envelope")[0] : null, l$2 = i$2 ? i$2.getElementsByTagNameNS(e$2, "Body")[0] : null;
					if (l$2 && l$2.getElementsByTagNameNS(e$2, "Fault")[0]) return null;
				}
				return t$3;
			}
			function r$2(t$3) {
				let a$3 = "", r$3 = "", i$2 = "", l$2 = -1, o$2 = -1;
				if (window.DOMParser) {
					const s$3 = n$2(t$3), u$2 = new window.DOMParser().parseFromString(s$3, "text/xml"), d$2 = u$2 ? u$2.getElementsByTagNameNS(e$2, "Envelope")[0] : null, c$2 = d$2 ? d$2.getElementsByTagNameNS(e$2, "Body")[0] : null, f$2 = c$2 ? c$2.getElementsByTagNameNS(e$2, "Fault")[0] : null, g$2 = f$2 ? f$2.getElementsByTagName("detail")[0] : null, m$2 = g$2 ? g$2.getElementsByTagName("Exception")[0] : null;
					let h$2 = null;
					if (null === f$2) return s$3;
					h$2 = f$2.getElementsByTagName("faultstring")[0].firstChild, a$3 = h$2 ? h$2.nodeValue : null, null !== m$2 && (h$2 = m$2.getElementsByTagName("StatusCode")[0], r$3 = h$2 ? h$2.firstChild.nodeValue : null, h$2 = m$2.getElementsByTagName("Message")[0], i$2 = h$2 ? h$2.firstChild.nodeValue : null, l$2 = i$2 ? i$2.lastIndexOf("[") + 1 : -1, o$2 = i$2 ? i$2.indexOf("]") : -1, i$2 = i$2 ? i$2.substring(l$2, o$2) : "");
				}
				let s$2 = `code: ${r$3}, name: ${a$3}`;
				return i$2 && (s$2 += `, message: ${i$2}`), s$2;
			}
			return t$2 = {
				getServerURLFromMessage: function(t$3) {
					return t$3;
				},
				getHTTPMethod: function() {
					return "POST";
				},
				getResponseType: function() {
					return "arraybuffer";
				},
				getLicenseMessage: function(t$3) {
					return a$2.call(this, t$3);
				},
				getErrorResponse: function(t$3) {
					return r$2.call(this, t$3);
				}
			}, t$2;
		}
		H.__dashjs_factory_name = "PlayReady";
		var Y = b$1.default.getSingletonFactory(H);
		function V() {
			let t$2;
			return t$2 = {
				getServerURLFromMessage: function(t$3) {
					return t$3;
				},
				getHTTPMethod: function() {
					return "POST";
				},
				getResponseType: function() {
					return "arraybuffer";
				},
				getLicenseMessage: function(t$3) {
					return t$3;
				},
				getErrorResponse: function(t$3) {
					return String.fromCharCode.apply(null, new Uint8Array(t$3));
				}
			}, t$2;
		}
		V.__dashjs_factory_name = "Widevine";
		var K = b$1.default.getSingletonFactory(V);
		function W() {
			let t$2;
			return t$2 = {
				getServerURLFromMessage: function(t$3) {
					return t$3;
				},
				getHTTPMethod: function() {
					return "POST";
				},
				getResponseType: function() {
					return "json";
				},
				getLicenseMessage: function(t$3) {
					if (!t$3.hasOwnProperty("keys")) return null;
					let e$2 = [];
					for (let n$2 = 0; n$2 < t$3.keys.length; n$2++) {
						let a$2 = t$3.keys[n$2], r$2 = a$2.kid.replace(/=/g, ""), i$2 = a$2.k.replace(/=/g, "");
						e$2.push(new _$1(r$2, i$2));
					}
					return new T$1(e$2);
				},
				getErrorResponse: function(t$3) {
					return String.fromCharCode.apply(null, new Uint8Array(t$3));
				}
			}, t$2;
		}
		W.__dashjs_factory_name = "ClearKey";
		var $ = b$1.default.getSingletonFactory(W), X = class {
			constructor(t$2) {
				this.ks = t$2.ks, this.keyId = t$2.keyId, this.initData = t$2.initData, this.protData = t$2.protData, this.cdmData = t$2.cdmData, this.sessionId = t$2.sessionId, this.sessionType = t$2.sessionType;
			}
		};
		function Q() {
			let t$2, e$2, n$2, a$2, i$2, l$2, s$2, u$2, d$2 = this.context;
			function c$2(t$3, e$3) {
				return e$3 && t$3 in e$3 ? e$3[t$3] : null;
			}
			function f$2(t$3, e$3) {
				return t$3 && t$3.sessionId ? t$3.sessionId : e$3 && e$3.sessionId ? e$3.sessionId : null;
			}
			function g$2(t$3, e$3) {
				return t$3 && t$3.sessionType ? t$3.sessionType : e$3;
			}
			return t$2 = {
				getKeySystemBySystemString: function(t$3) {
					for (let e$3 = 0; e$3 < a$2.length; e$3++) if (a$2[e$3].systemString === t$3) return a$2[e$3];
					return null;
				},
				getKeySystems: function() {
					return a$2;
				},
				getLicenseServerModelInstance: function(t$3, e$3, n$3) {
					if (n$3 === r$1.default.MEDIA_KEY_MESSAGE_TYPES.LICENSE_RELEASE || n$3 === r$1.default.MEDIA_KEY_MESSAGE_TYPES.INDIVIDUALIZATION_REQUEST) return null;
					let a$3 = null;
					return e$3 && e$3.hasOwnProperty("drmtoday") ? a$3 = G(d$2).getInstance({ BASE64: i$2 }) : t$3.systemString === r$1.default.WIDEVINE_KEYSTEM_STRING ? a$3 = K(d$2).getInstance() : t$3.systemString === r$1.default.PLAYREADY_KEYSTEM_STRING ? a$3 = Y(d$2).getInstance() : t$3.systemString === r$1.default.CLEARKEY_KEYSTEM_STRING && (a$3 = $(d$2).getInstance()), a$3;
				},
				getSupportedKeySystemMetadataFromContentProtection: function(t$3, e$3, n$3) {
					let r$2, i$3, l$3, s$3, u$3 = [];
					if (!t$3 || !t$3.length) return u$3;
					const d$3 = o$1.findMp4ProtectionElement(t$3);
					for (l$3 = 0; l$3 < a$2.length; l$3++) {
						i$3 = a$2[l$3];
						const o$2 = c$2(i$3.systemString, e$3);
						for (s$3 = 0; s$3 < t$3.length; s$3++) if (r$2 = t$3[s$3], r$2.schemeIdUri.toLowerCase() === i$3.schemeIdURI) {
							let t$4 = i$3.getInitData(r$2, d$3);
							const e$4 = new X({
								ks: a$2[l$3],
								keyId: r$2.keyId,
								initData: t$4,
								protData: o$2,
								cdmData: i$3.getCDMData(o$2 ? o$2.cdmData : null),
								sessionId: f$2(o$2, r$2),
								sessionType: g$2(o$2, n$3)
							});
							o$2 ? u$3.unshift(e$4) : u$3.push(e$4);
						}
					}
					return u$3;
				},
				getSupportedKeySystemMetadataFromSegmentPssh: function(t$3, e$3, n$3) {
					let r$2, i$3, l$3 = [], s$3 = o$1.parsePSSHList(t$3);
					for (let t$4 = 0; t$4 < a$2.length; ++t$4) {
						r$2 = a$2[t$4], i$3 = r$2.systemString;
						const o$2 = c$2(i$3, e$3);
						r$2.uuid in s$3 && l$3.push({
							ks: r$2,
							initData: s$3[r$2.uuid],
							protData: o$2,
							cdmData: r$2.getCDMData(o$2 ? o$2.cdmData : null),
							sessionId: f$2(o$2),
							sessionType: g$2(o$2, n$3)
						});
					}
					return l$3;
				},
				initDataEquals: function(t$3, e$3) {
					if (t$3.byteLength === e$3.byteLength) {
						let n$3 = new Uint8Array(t$3), a$3 = new Uint8Array(e$3);
						for (let t$4 = 0; t$4 < n$3.length; t$4++) if (n$3[t$4] !== a$3[t$4]) return !1;
						return !0;
					}
					return !1;
				},
				initialize: function() {
					let t$3;
					a$2 = [], t$3 = q(d$2).getInstance({
						BASE64: i$2,
						settings: l$2
					}), a$2.push(t$3), t$3 = P(d$2).getInstance({ BASE64: i$2 }), a$2.push(t$3), t$3 = k(d$2).getInstance({ BASE64: i$2 }), a$2.push(t$3), s$2 = t$3, t$3 = D(d$2).getInstance({
						BASE64: i$2,
						debug: e$2
					}), a$2.push(t$3), u$2 = t$3;
				},
				isClearKey: function(t$3) {
					return t$3 === s$2 || t$3 === u$2;
				},
				processClearKeyLicenseRequest: function(t$3, e$3, a$3) {
					try {
						return t$3.getClearKeysFromProtectionData(e$3, a$3);
					} catch (t$4) {
						return n$2.error("Failed to retrieve clearkeys from ProtectionData"), null;
					}
				},
				setConfig: function(a$3) {
					a$3 && (a$3.debug && (e$2 = a$3.debug, n$2 = e$2.getLogger(t$2)), a$3.BASE64 && (i$2 = a$3.BASE64), a$3.settings && (l$2 = a$3.settings));
				},
				setKeySystems: function(t$3) {
					a$2 = t$3;
				},
				setProtectionData: function(t$3) {
					for (var e$3, n$3, r$2 = 0; r$2 < a$2.length; r$2++) {
						var i$3 = a$2[r$2];
						i$3.hasOwnProperty("init") && i$3.init((e$3 = i$3.systemString, n$3 = void 0, n$3 = null, t$3 && (n$3 = e$3 in t$3 ? t$3[e$3] : null), n$3));
					}
				}
			}, t$2;
		}
		Q.__dashjs_factory_name = "ProtectionKeyController";
		var Z = b$1.default.getSingletonFactory(Q), J = n$1(445), tt = class {
			constructor(t$2, e$2) {
				this.initData = t$2, this.initDataType = e$2;
			}
		}, et = class {
			constructor(t$2, e$2, n$2, a$2) {
				this.sessionToken = t$2, this.message = e$2, this.defaultURL = n$2, this.messageType = a$2 || r$1.default.MEDIA_KEY_MESSAGE_TYPES.LICENSE_REQUEST;
			}
		}, nt = class {
			constructor(t$2, e$2) {
				this.keySystem = t$2, this.ksConfiguration = e$2, this.nativeMediaKeySystemAccessObject = null, this.selectedSystemString = null;
			}
		};
		const at = {};
		function rt(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.eventBus, a$2 = t$2.events, i$2 = t$2.debug;
			let l$2, o$2, s$2, u$2, f$2, g$2, m$2, h$2;
			function p$2(t$3, e$3, r$2, i$3) {
				if (void 0 === navigator.requestMediaKeySystemAccess || "function" != typeof navigator.requestMediaKeySystemAccess) {
					const t$4 = "Insecure origins are not allowed";
					n$2.trigger(a$2.KEY_SYSTEM_ACCESS_COMPLETE, { error: t$4 }), i$3({ error: t$4 });
					return;
				}
				const l$3 = t$3[e$3].protData && t$3[e$3].protData.systemStringPriority ? t$3[e$3].protData.systemStringPriority : null, o$3 = t$3[e$3].configs, s$3 = t$3[e$3].ks;
				let u$3 = s$3.systemString;
				(function(t$4, e$4) {
					return new Promise(((n$3, a$3) => {
						b$2(t$4, e$4, 0, n$3, a$3);
					}));
				})(l$3 || (at[u$3] ? at[u$3] : [u$3]), o$3).then(((t$4) => {
					const e$4 = t$4 && t$4.nativeMediaKeySystemAccessObject && "function" == typeof t$4.nativeMediaKeySystemAccessObject.getConfiguration ? t$4.nativeMediaKeySystemAccessObject.getConfiguration() : null, i$4 = new nt(s$3, e$4);
					i$4.selectedSystemString = t$4.selectedSystemString, i$4.nativeMediaKeySystemAccessObject = t$4.nativeMediaKeySystemAccessObject, n$2.trigger(a$2.KEY_SYSTEM_ACCESS_COMPLETE, { data: i$4 }), r$2({ data: i$4 });
				})).catch(((l$4) => {
					if (e$3 + 1 < t$3.length) p$2(t$3, e$3 + 1, r$2, i$3);
					else {
						const t$4 = "Key system access denied! ";
						n$2.trigger(a$2.KEY_SYSTEM_ACCESS_COMPLETE, { error: t$4 + l$4.message }), i$3({ error: t$4 + l$4.message });
					}
				}));
			}
			function b$2(t$3, e$3, n$3, a$3, r$2) {
				const i$3 = t$3[n$3];
				o$2.debug(`Requesting key system access for system string ${i$3}`), navigator.requestMediaKeySystemAccess(i$3, e$3).then(((t$4) => {
					a$3({
						nativeMediaKeySystemAccessObject: t$4,
						selectedSystemString: i$3
					});
				})).catch(((i$4) => {
					n$3 + 1 < t$3.length ? b$2(t$3, e$3, n$3 + 1, a$3, r$2) : r$2(i$4);
				}));
			}
			function y$2(t$3) {
				if (!t$3 || !t$3.session) return Promise.resolve;
				const e$3 = t$3.session;
				return e$3.removeEventListener("keystatuseschange", t$3), e$3.removeEventListener("message", t$3), e$3.close();
			}
			function E$2(t$3) {
				for (let e$3 = 0; e$3 < g$2.length; e$3++) if (g$2[e$3] === t$3) {
					g$2.splice(e$3, 1);
					break;
				}
			}
			function _$2(t$3, e$3) {
				const i$3 = {
					session: t$3,
					keyId: e$3.keyId,
					normalizedKeyId: e$3 && e$3.keyId && "string" == typeof e$3.keyId ? e$3.keyId.replace(/-/g, "").toLowerCase() : "",
					initData: e$3.initData,
					sessionId: e$3.sessionId,
					sessionType: e$3.sessionType,
					hasTriggeredKeyStatusMapUpdate: !1,
					handleEvent: function(t$4) {
						switch (t$4.type) {
							case "keystatuseschange":
								this._onKeyStatusesChange(t$4);
								break;
							case "message": this._onKeyMessage(t$4);
						}
					},
					_onKeyStatusesChange: function(t$4) {
						n$2.trigger(a$2.KEY_STATUSES_CHANGED, { data: this });
						const e$4 = [];
						t$4.target.keyStatuses.forEach((function() {
							e$4.push(T$2(arguments));
						})), n$2.trigger(a$2.INTERNAL_KEY_STATUSES_CHANGED, {
							parsedKeyStatuses: e$4,
							sessionToken: i$3
						});
					},
					_onKeyMessage: function(t$4) {
						let e$4 = ArrayBuffer.isView(t$4.message) ? t$4.message.buffer : t$4.message;
						n$2.trigger(a$2.INTERNAL_KEY_MESSAGE, { data: new et(this, e$4, void 0, t$4.messageType) });
					},
					getKeyId: function() {
						return this.keyId;
					},
					getSessionId: function() {
						return t$3.sessionId;
					},
					getSessionType: function() {
						return this.sessionType;
					},
					getExpirationTime: function() {
						return t$3.expiration;
					},
					getKeyStatuses: function() {
						return t$3.keyStatuses;
					},
					getUsable: function() {
						let e$4 = !1;
						return t$3.keyStatuses.forEach((function() {
							T$2(arguments).status === r$1.default.MEDIA_KEY_STATUSES.USABLE && (e$4 = !0);
						})), e$4;
					}
				};
				return t$3.addEventListener("keystatuseschange", i$3), t$3.addEventListener("message", i$3), t$3.closed.then((() => {
					E$2(i$3), o$2.debug("DRM: Session closed.  SessionID = " + i$3.getSessionId()), n$2.trigger(a$2.KEY_SESSION_CLOSED, { data: i$3.getSessionId() });
				})), g$2.push(i$3), i$3;
			}
			function T$2(t$3) {
				let e$3, n$3;
				return t$3 && t$3.length > 0 && (t$3[0] && ("string" == typeof t$3[0] ? e$3 = t$3[0] : n$3 = t$3[0]), t$3[1] && ("string" == typeof t$3[1] ? e$3 = t$3[1] : n$3 = t$3[1])), {
					status: e$3,
					keyId: n$3
				};
			}
			return l$2 = {
				closeKeySession: function(t$3) {
					y$2(t$3).catch((function(e$3) {
						E$2(t$3), n$2.trigger(a$2.KEY_SESSION_CLOSED, {
							data: null,
							error: "Error closing session (" + t$3.getSessionId() + ") " + e$3.name
						});
					}));
				},
				createKeySession: function(t$3) {
					if (!s$2 || !f$2) throw new Error("Can not create sessions until you have selected a key system");
					const e$3 = f$2.createSession(t$3.sessionType), i$3 = _$2(e$3, t$3), l$3 = s$2.systemString === r$1.default.CLEARKEY_KEYSTEM_STRING && (t$3.initData || t$3.protData && t$3.protData.clearkeys) ? r$1.default.INITIALIZATION_DATA_TYPE_KEYIDS : r$1.default.INITIALIZATION_DATA_TYPE_CENC;
					e$3.generateRequest(l$3, t$3.initData).then((function() {
						o$2.debug("DRM: Session created.  SessionID = " + i$3.getSessionId()), n$2.trigger(a$2.KEY_SESSION_CREATED, { data: i$3 });
					})).catch((function(t$4) {
						E$2(i$3), n$2.trigger(a$2.KEY_SESSION_CREATED, {
							data: null,
							error: new c$1.default(d$1.default.KEY_SESSION_CREATED_ERROR_CODE, d$1.default.KEY_SESSION_CREATED_ERROR_MESSAGE + "Error generating key request -- " + t$4.name)
						});
					}));
				},
				getAllInitData: function() {
					const t$3 = [];
					for (let e$3 = 0; e$3 < g$2.length; e$3++) g$2[e$3].initData && t$3.push(g$2[e$3].initData);
					return t$3;
				},
				getSessionTokens: function() {
					return g$2;
				},
				loadKeySession: function(t$3) {
					if (!s$2 || !f$2) throw new Error("Can not load sessions until you have selected a key system");
					const e$3 = t$3.sessionId;
					for (let t$4 = 0; t$4 < g$2.length; t$4++) if (e$3 === g$2[t$4].sessionId) return void o$2.warn("DRM: Ignoring session ID because we have already seen it!");
					const r$2 = f$2.createSession(t$3.sessionType), i$3 = _$2(r$2, t$3);
					i$3.hasTriggeredKeyStatusMapUpdate = !0, r$2.load(e$3).then((function(t$4) {
						t$4 ? (o$2.debug("DRM: Session loaded.  SessionID = " + i$3.getSessionId()), n$2.trigger(a$2.KEY_SESSION_CREATED, { data: i$3 })) : (E$2(i$3), n$2.trigger(a$2.KEY_SESSION_CREATED, {
							data: null,
							error: new c$1.default(d$1.default.KEY_SESSION_CREATED_ERROR_CODE, d$1.default.KEY_SESSION_CREATED_ERROR_MESSAGE + "Could not load session! Invalid Session ID (" + e$3 + ")")
						}));
					})).catch((function(t$4) {
						E$2(i$3), n$2.trigger(a$2.KEY_SESSION_CREATED, {
							data: null,
							error: new c$1.default(d$1.default.KEY_SESSION_CREATED_ERROR_CODE, d$1.default.KEY_SESSION_CREATED_ERROR_MESSAGE + "Could not load session (" + e$3 + ")! " + t$4.name)
						});
					}));
				},
				removeKeySession: function(t$3) {
					t$3.session.remove().then((function() {
						o$2.debug("DRM: Session removed.  SessionID = " + t$3.getSessionId()), n$2.trigger(a$2.KEY_SESSION_REMOVED, { data: t$3.getSessionId() });
					}), (function(e$3) {
						n$2.trigger(a$2.KEY_SESSION_REMOVED, {
							data: null,
							error: "Error removing session (" + t$3.getSessionId() + "). " + e$3.name
						});
					}));
				},
				requestKeySystemAccess: function(t$3) {
					return new Promise(((e$3, n$3) => {
						p$2(t$3, 0, e$3, n$3);
					}));
				},
				reset: function() {
					const t$3 = g$2.length;
					let e$3;
					if (0 !== t$3) {
						const r$2 = function(t$4) {
							E$2(t$4), 0 === g$2.length && (u$2 ? (u$2.removeEventListener("encrypted", m$2), u$2.setMediaKeys(null).then((function() {
								n$2.trigger(a$2.TEARDOWN_COMPLETE);
							}))) : n$2.trigger(a$2.TEARDOWN_COMPLETE));
						};
						for (let n$3 = 0; n$3 < t$3; n$3++) e$3 = g$2[n$3], function(t$4) {
							y$2(e$3), r$2(t$4);
						}(e$3);
					} else n$2.trigger(a$2.TEARDOWN_COMPLETE);
				},
				selectKeySystem: function(t$3) {
					return new Promise(((e$3, n$3) => {
						t$3.nativeMediaKeySystemAccessObject.createMediaKeys().then(((e$4) => (s$2 = t$3.keySystem, f$2 = e$4, u$2 ? u$2.setMediaKeys(f$2) : Promise.resolve()))).then((() => {
							e$3(s$2);
						})).catch((function() {
							n$3({ error: "Error selecting keys system (" + t$3.keySystem.systemString + ")! Could not create MediaKeys -- TODO" });
						}));
					}));
				},
				setMediaElement: function(t$3) {
					u$2 !== t$3 && (u$2 && (u$2.removeEventListener("encrypted", m$2), u$2.setMediaKeys && u$2.setMediaKeys(null)), u$2 = t$3, u$2 && (u$2.addEventListener("encrypted", m$2), u$2.setMediaKeys && f$2 && u$2.setMediaKeys(f$2)));
				},
				setServerCertificate: function(t$3) {
					return new Promise(((e$3, r$2) => {
						f$2.setServerCertificate(t$3).then((function() {
							o$2.info("DRM: License server certificate successfully updated."), n$2.trigger(a$2.SERVER_CERTIFICATE_UPDATED), e$3();
						})).catch(((t$4) => {
							r$2(t$4), n$2.trigger(a$2.SERVER_CERTIFICATE_UPDATED, { error: new c$1.default(d$1.default.SERVER_CERTIFICATE_UPDATED_ERROR_CODE, d$1.default.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE + t$4.name) });
						}));
					}));
				},
				stop: function() {
					let t$3;
					for (let e$3 = 0; e$3 < g$2.length; e$3++) t$3 = g$2[e$3], t$3.getUsable() || (y$2(t$3), E$2(t$3));
				},
				updateKeySession: function(t$3, e$3) {
					const r$2 = t$3.session;
					h$2.isClearKey(s$2) && (e$3 = e$3.toJWK()), r$2.update(e$3).then((() => {
						n$2.trigger(a$2.KEY_SESSION_UPDATED);
					})).catch((function(e$4) {
						n$2.trigger(a$2.KEY_ERROR, { error: new c$1.default(d$1.default.MEDIA_KEYERR_CODE, "Error sending update() message! " + e$4.name, t$3) });
					}));
				}
			}, o$2 = i$2.getLogger(l$2), s$2 = null, u$2 = null, f$2 = null, g$2 = [], h$2 = Z(e$2).getInstance(), m$2 = { handleEvent: function(t$3) {
				if ("encrypted" === t$3.type && t$3.initData) {
					let e$3 = ArrayBuffer.isView(t$3.initData) ? t$3.initData.buffer : t$3.initData;
					n$2.trigger(a$2.NEED_KEY, { key: new tt(e$3, t$3.initDataType) });
				}
			} }, l$2;
		}
		at[r$1.default.PLAYREADY_KEYSTEM_STRING] = [r$1.default.PLAYREADY_KEYSTEM_STRING, r$1.default.PLAYREADY_RECOMMENDATION_KEYSTEM_STRING], at[r$1.default.WIDEVINE_KEYSTEM_STRING] = [r$1.default.WIDEVINE_KEYSTEM_STRING], at[r$1.default.CLEARKEY_KEYSTEM_STRING] = [r$1.default.CLEARKEY_KEYSTEM_STRING], rt.__dashjs_factory_name = "DefaultProtectionModel";
		var it = b$1.default.getClassFactory(rt);
		function lt(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.eventBus, a$2 = t$2.events, i$2 = t$2.debug, l$2 = t$2.api;
			let o$2, s$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2;
			function E$2() {
				try {
					for (let t$3 = 0; t$3 < p$2.length; t$3++) _$2(p$2[t$3]);
					f$2 && f$2.removeEventListener(l$2.needkey, b$2), n$2.trigger(a$2.TEARDOWN_COMPLETE);
				} catch (t$3) {
					n$2.trigger(a$2.TEARDOWN_COMPLETE, { error: "Error tearing down key sessions and MediaKeys! -- " + t$3.message });
				}
			}
			function _$2(t$3) {
				const e$3 = t$3.session;
				e$3.removeEventListener(l$2.error, t$3), e$3.removeEventListener(l$2.message, t$3), e$3.removeEventListener(l$2.ready, t$3), e$3.removeEventListener(l$2.close, t$3);
				for (let e$4 = 0; e$4 < p$2.length; e$4++) if (p$2[e$4] === t$3) {
					p$2.splice(e$4, 1);
					break;
				}
				e$3[l$2.release]();
			}
			function T$2() {
				let t$3 = null;
				const e$3 = function() {
					f$2.removeEventListener("loadedmetadata", t$3), f$2[l$2.setMediaKeys](m$2), n$2.trigger(a$2.VIDEO_ELEMENT_SELECTED);
				};
				f$2.readyState >= 1 ? e$3() : (t$3 = e$3.bind(this), f$2.addEventListener("loadedmetadata", t$3));
			}
			return o$2 = {
				getAllInitData: function() {
					const t$3 = [];
					for (let e$3 = 0; e$3 < p$2.length; e$3++) t$3.push(p$2[e$3].initData);
					return t$3;
				},
				getSessionTokens: function() {
					return p$2;
				},
				requestKeySystemAccess: function(t$3) {
					return new Promise(((e$3, r$2) => {
						let i$3 = !1;
						for (let r$3 = 0; r$3 < t$3.length; r$3++) {
							const o$3 = t$3[r$3].ks.systemString, s$3 = t$3[r$3].configs;
							let d$2 = null, c$2 = null;
							for (let t$4 = 0; t$4 < s$3.length; t$4++) {
								const r$4 = s$3[t$4].audioCapabilities, f$3 = s$3[t$4].videoCapabilities;
								if (r$4 && 0 !== r$4.length) {
									d$2 = [];
									for (let t$5 = 0; t$5 < r$4.length; t$5++) window[l$2.MediaKeys].isTypeSupported(o$3, r$4[t$5].contentType) && d$2.push(r$4[t$5]);
								}
								if (f$3 && 0 !== f$3.length) {
									c$2 = [];
									for (let t$5 = 0; t$5 < f$3.length; t$5++) window[l$2.MediaKeys].isTypeSupported(o$3, f$3[t$5].contentType) && c$2.push(f$3[t$5]);
								}
								if (!d$2 && !c$2 || d$2 && 0 === d$2.length || c$2 && 0 === c$2.length) continue;
								i$3 = !0;
								const g$3 = new u$1(d$2, c$2), m$3 = y$2.getKeySystemBySystemString(o$3), h$3 = new nt(m$3, g$3);
								n$2.trigger(a$2.KEY_SYSTEM_ACCESS_COMPLETE, { data: h$3 }), e$3({ data: h$3 });
								break;
							}
						}
						if (!i$3) {
							const t$4 = "Key system access denied! -- No valid audio/video content configurations detected!";
							n$2.trigger(a$2.KEY_SYSTEM_ACCESS_COMPLETE, { error: t$4 }), r$2({ error: t$4 });
						}
					}));
				},
				selectKeySystem: function(t$3) {
					return new Promise(((e$3, n$3) => {
						try {
							m$2 = t$3.mediaKeys = new window[l$2.MediaKeys](t$3.keySystem.systemString), g$2 = t$3.keySystem, h$2 = t$3, f$2 && T$2(), e$3(g$2);
						} catch (t$4) {
							n$3({ error: "Error selecting keys system (" + g$2.systemString + ")! Could not create MediaKeys -- TODO" });
						}
					}));
				},
				setMediaElement: function(t$3) {
					f$2 !== t$3 && (f$2 && f$2.removeEventListener(l$2.needkey, b$2), f$2 = t$3, f$2 && (f$2.addEventListener(l$2.needkey, b$2), m$2 && T$2()));
				},
				createKeySession: function(t$3) {
					if (!g$2 || !m$2 || !h$2) throw new Error("Can not create sessions until you have selected a key system");
					let e$3 = null;
					if (h$2.ksConfiguration.videoCapabilities && h$2.ksConfiguration.videoCapabilities.length > 0 && (e$3 = h$2.ksConfiguration.videoCapabilities[0]), null === e$3 && h$2.ksConfiguration.audioCapabilities && h$2.ksConfiguration.audioCapabilities.length > 0 && (e$3 = h$2.ksConfiguration.audioCapabilities[0]), null === e$3) throw new Error("Can not create sessions for unknown content types.");
					const r$2 = e$3.contentType, i$3 = m$2.createSession(r$2, new Uint8Array(t$3.initData), t$3.cdmData ? new Uint8Array(t$3.cdmData) : null), o$3 = function(t$4, e$4) {
						return {
							session: t$4,
							keyId: e$4.keyId,
							normalizedKeyId: e$4 && e$4.keyId && "string" == typeof e$4.keyId ? e$4.keyId.replace(/-/g, "").toLowerCase() : "",
							initData: e$4.initData,
							hasTriggeredKeyStatusMapUpdate: !1,
							getKeyId: function() {
								return this.keyId;
							},
							getSessionId: function() {
								return this.session.sessionId;
							},
							getExpirationTime: function() {
								return NaN;
							},
							getSessionType: function() {
								return "temporary";
							},
							getKeyStatuses: function() {
								return {
									size: 0,
									has: () => !1,
									get: () => {}
								};
							},
							handleEvent: function(t$5) {
								switch (t$5.type) {
									case l$2.error:
										n$2.trigger(a$2.KEY_ERROR, { error: new c$1.default(d$1.default.MEDIA_KEYERR_CODE, "KeyError", this) });
										break;
									case l$2.message:
										let r$3 = ArrayBuffer.isView(t$5.message) ? t$5.message.buffer : t$5.message;
										n$2.trigger(a$2.INTERNAL_KEY_MESSAGE, { data: new et(this, r$3, t$5.destinationURL) });
										break;
									case l$2.ready:
										s$2.debug("DRM: Key added."), n$2.trigger(a$2.KEY_ADDED);
										break;
									case l$2.close: s$2.debug("DRM: Session closed.  SessionID = " + this.getSessionId()), n$2.trigger(a$2.KEY_SESSION_CLOSED, { data: this.getSessionId() });
								}
							}
						};
					}(i$3, t$3);
					i$3.addEventListener(l$2.error, o$3), i$3.addEventListener(l$2.message, o$3), i$3.addEventListener(l$2.ready, o$3), i$3.addEventListener(l$2.close, o$3), p$2.push(o$3), s$2.debug("DRM: Session created.  SessionID = " + o$3.getSessionId()), n$2.trigger(a$2.KEY_SESSION_CREATED, { data: o$3 });
				},
				updateKeySession: function(t$3, e$3) {
					const r$2 = t$3.session;
					y$2.isClearKey(g$2) ? r$2.update(new Uint8Array(e$3.toJWK())) : r$2.update(new Uint8Array(e$3)), n$2.trigger(a$2.KEY_SESSION_UPDATED);
				},
				closeKeySession: _$2,
				setServerCertificate: function() {},
				loadKeySession: function() {},
				removeKeySession: function() {},
				stop: E$2,
				reset: E$2
			}, s$2 = i$2.getLogger(o$2), f$2 = null, g$2 = null, m$2 = null, h$2 = null, p$2 = [], y$2 = Z(e$2).getInstance(), b$2 = { handleEvent: function(t$3) {
				if (t$3.type === l$2.needkey && t$3.initData) {
					const e$3 = ArrayBuffer.isView(t$3.initData) ? t$3.initData.buffer : t$3.initData;
					n$2.trigger(a$2.NEED_KEY, { key: new tt(e$3, r$1.default.INITIALIZATION_DATA_TYPE_CENC) });
				}
			} }, o$2;
		}
		lt.__dashjs_factory_name = "ProtectionModel_3Feb2014";
		var ot = b$1.default.getClassFactory(lt);
		function st(t$2) {
			t$2 = t$2 || {};
			const e$2 = this.context, n$2 = t$2.eventBus, a$2 = t$2.events, i$2 = t$2.debug, l$2 = t$2.api, o$2 = t$2.errHandler;
			let s$2, f$2, g$2, m$2, h$2, p$2, b$2, y$2, E$2;
			function _$2() {
				g$2 && w$2();
				for (let t$3 = 0; t$3 < b$2.length; t$3++) T$2(b$2[t$3]);
				n$2.trigger(a$2.TEARDOWN_COMPLETE);
			}
			function T$2(t$3) {
				try {
					g$2[l$2.cancelKeyRequest](m$2.systemString, t$3.sessionId);
				} catch (e$3) {
					n$2.trigger(a$2.KEY_SESSION_CLOSED, {
						data: null,
						error: "Error closing session (" + t$3.sessionId + ") " + e$3.message
					});
				}
			}
			function v$2(t$3, e$3) {
				if (e$3 && t$3) {
					const n$3 = t$3.length;
					for (let a$3 = 0; a$3 < n$3; a$3++) if (t$3[a$3].sessionId == e$3) return t$3[a$3];
					return null;
				}
				return null;
			}
			function w$2() {
				g$2.removeEventListener(l$2.keyerror, E$2), g$2.removeEventListener(l$2.needkey, E$2), g$2.removeEventListener(l$2.keymessage, E$2), g$2.removeEventListener(l$2.keyadded, E$2);
			}
			return s$2 = {
				getAllInitData: function() {
					const t$3 = [];
					for (let e$3 = 0; e$3 < p$2.length; e$3++) t$3.push(p$2[e$3].initData);
					for (let e$3 = 0; e$3 < b$2.length; e$3++) t$3.push(b$2[e$3].initData);
					return t$3;
				},
				getSessionTokens: function() {
					return b$2.concat(p$2);
				},
				requestKeySystemAccess: function(t$3) {
					return new Promise(((e$3, r$2) => {
						let i$3 = g$2;
						i$3 || (i$3 = document.createElement("video"));
						let l$3 = !1;
						for (let r$3 = 0; r$3 < t$3.length; r$3++) {
							const o$3 = t$3[r$3].ks.systemString, s$3 = t$3[r$3].configs;
							let d$2 = null, c$2 = null;
							for (let t$4 = 0; t$4 < s$3.length; t$4++) {
								const r$4 = s$3[t$4].videoCapabilities;
								if (r$4 && 0 !== r$4.length) {
									c$2 = [];
									for (let t$5 = 0; t$5 < r$4.length; t$5++) "" !== i$3.canPlayType(r$4[t$5].contentType, o$3) && c$2.push(r$4[t$5]);
								}
								if (!c$2 || c$2 && 0 === c$2.length) continue;
								l$3 = !0;
								const f$3 = new u$1(d$2, c$2), g$3 = h$2.getKeySystemBySystemString(o$3), m$3 = new nt(g$3, f$3);
								n$2.trigger(a$2.KEY_SYSTEM_ACCESS_COMPLETE, { data: m$3 }), e$3({ data: m$3 });
								break;
							}
						}
						if (!l$3) {
							const t$4 = "Key system access denied! -- No valid audio/video content configurations detected!";
							n$2.trigger(a$2.KEY_SYSTEM_ACCESS_COMPLETE, { error: t$4 }), r$2({ error: t$4 });
						}
					}));
				},
				selectKeySystem: function(t$3) {
					return m$2 = t$3.keySystem, Promise.resolve(m$2);
				},
				setMediaElement: function(t$3) {
					if (g$2 !== t$3) {
						if (g$2) {
							w$2();
							for (var e$3 = 0; e$3 < b$2.length; e$3++) T$2(b$2[e$3]);
							b$2 = [];
						}
						g$2 = t$3, g$2 && (g$2.addEventListener(l$2.keyerror, E$2), g$2.addEventListener(l$2.needkey, E$2), g$2.addEventListener(l$2.keymessage, E$2), g$2.addEventListener(l$2.keyadded, E$2), n$2.trigger(a$2.VIDEO_ELEMENT_SELECTED));
					}
				},
				createKeySession: function(t$3) {
					if (!m$2) throw new Error("Can not create sessions until you have selected a key system");
					if (y$2 || 0 === b$2.length) {
						const e$3 = {
							sessionId: null,
							keyId: t$3.keyId,
							normalizedKeyId: t$3 && t$3.keyId && "string" == typeof t$3.keyId ? t$3.keyId.replace(/-/g, "").toLowerCase() : "",
							initData: t$3.initData,
							hasTriggeredKeyStatusMapUpdate: !1,
							getKeyId: function() {
								return this.keyId;
							},
							getSessionId: function() {
								return this.sessionId;
							},
							getExpirationTime: function() {
								return NaN;
							},
							getSessionType: function() {
								return "temporary";
							},
							getKeyStatuses: function() {
								return {
									size: 0,
									has: () => !1,
									get: () => {}
								};
							}
						};
						return p$2.push(e$3), g$2[l$2.generateKeyRequest](m$2.systemString, new Uint8Array(t$3.initData)), e$3;
					}
					throw new Error("Multiple sessions not allowed!");
				},
				updateKeySession: function(t$3, e$3) {
					const r$2 = t$3.sessionId;
					if (h$2.isClearKey(m$2)) for (let t$4 = 0; t$4 < e$3.keyPairs.length; t$4++) g$2[l$2.addKey](m$2.systemString, e$3.keyPairs[t$4].key, e$3.keyPairs[t$4].keyID, r$2);
					else g$2[l$2.addKey](m$2.systemString, new Uint8Array(e$3), new Uint8Array(t$3.initData), r$2);
					n$2.trigger(a$2.KEY_SESSION_UPDATED);
				},
				closeKeySession: T$2,
				setServerCertificate: function() {},
				loadKeySession: function() {},
				removeKeySession: function() {},
				stop: _$2,
				reset: _$2
			}, f$2 = i$2.getLogger(s$2), g$2 = null, m$2 = null, p$2 = [], b$2 = [], h$2 = Z(e$2).getInstance(), E$2 = { handleEvent: function(t$3) {
				let e$3 = null;
				switch (t$3.type) {
					case l$2.needkey:
						let i$3 = ArrayBuffer.isView(t$3.initData) ? t$3.initData.buffer : t$3.initData;
						n$2.trigger(a$2.NEED_KEY, { key: new tt(i$3, r$1.default.INITIALIZATION_DATA_TYPE_CENC) });
						break;
					case l$2.keyerror:
						if (e$3 = v$2(b$2, t$3.sessionId), e$3 || (e$3 = v$2(p$2, t$3.sessionId)), e$3) {
							let r$2 = d$1.default.MEDIA_KEYERR_CODE, i$4 = "";
							switch (t$3.errorCode.code) {
								case 1:
									r$2 = d$1.default.MEDIA_KEYERR_UNKNOWN_CODE, i$4 += "MEDIA_KEYERR_UNKNOWN - " + d$1.default.MEDIA_KEYERR_UNKNOWN_MESSAGE;
									break;
								case 2:
									r$2 = d$1.default.MEDIA_KEYERR_CLIENT_CODE, i$4 += "MEDIA_KEYERR_CLIENT - " + d$1.default.MEDIA_KEYERR_CLIENT_MESSAGE;
									break;
								case 3:
									r$2 = d$1.default.MEDIA_KEYERR_SERVICE_CODE, i$4 += "MEDIA_KEYERR_SERVICE - " + d$1.default.MEDIA_KEYERR_SERVICE_MESSAGE;
									break;
								case 4:
									r$2 = d$1.default.MEDIA_KEYERR_OUTPUT_CODE, i$4 += "MEDIA_KEYERR_OUTPUT - " + d$1.default.MEDIA_KEYERR_OUTPUT_MESSAGE;
									break;
								case 5:
									r$2 = d$1.default.MEDIA_KEYERR_HARDWARECHANGE_CODE, i$4 += "MEDIA_KEYERR_HARDWARECHANGE - " + d$1.default.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;
									break;
								case 6: r$2 = d$1.default.MEDIA_KEYERR_DOMAIN_CODE, i$4 += "MEDIA_KEYERR_DOMAIN - " + d$1.default.MEDIA_KEYERR_DOMAIN_MESSAGE;
							}
							i$4 += "  System Code = " + t$3.systemCode, n$2.trigger(a$2.KEY_ERROR, { error: new c$1.default(r$2, i$4, e$3) });
						} else f$2.error("No session token found for key error");
						break;
					case l$2.keyadded:
						e$3 = v$2(b$2, t$3.sessionId), e$3 || (e$3 = v$2(p$2, t$3.sessionId)), e$3 ? (f$2.debug("DRM: Key added."), n$2.trigger(a$2.KEY_ADDED, { data: e$3 })) : f$2.debug("No session token found for key added");
						break;
					case l$2.keymessage: if (y$2 = null !== t$3.sessionId && void 0 !== t$3.sessionId, y$2 ? (e$3 = v$2(b$2, t$3.sessionId), !e$3 && p$2.length > 0 && (e$3 = p$2.shift(), b$2.push(e$3), e$3.sessionId = t$3.sessionId, n$2.trigger(a$2.KEY_SESSION_CREATED, { data: e$3 }))) : p$2.length > 0 && (e$3 = p$2.shift(), b$2.push(e$3), 0 !== p$2.length && o$2.error(new c$1.default(d$1.default.MEDIA_KEY_MESSAGE_ERROR_CODE, d$1.default.MEDIA_KEY_MESSAGE_ERROR_MESSAGE))), e$3) {
						let r$2 = ArrayBuffer.isView(t$3.message) ? t$3.message.buffer : t$3.message;
						e$3.keyMessage = r$2, n$2.trigger(a$2.INTERNAL_KEY_MESSAGE, { data: new et(e$3, r$2, t$3.defaultURL) });
					} else f$2.warn("No session token found for key message");
				}
			} }, s$2;
		}
		st.__dashjs_factory_name = "ProtectionModel_01b";
		var ut = b$1.default.getClassFactory(st);
		const dt = [{
			generateKeyRequest: "generateKeyRequest",
			addKey: "addKey",
			cancelKeyRequest: "cancelKeyRequest",
			needkey: "needkey",
			keyerror: "keyerror",
			keyadded: "keyadded",
			keymessage: "keymessage"
		}, {
			generateKeyRequest: "webkitGenerateKeyRequest",
			addKey: "webkitAddKey",
			cancelKeyRequest: "webkitCancelKeyRequest",
			needkey: "webkitneedkey",
			keyerror: "webkitkeyerror",
			keyadded: "webkitkeyadded",
			keymessage: "webkitkeymessage"
		}], ct = [{
			setMediaKeys: "setMediaKeys",
			MediaKeys: "MediaKeys",
			release: "close",
			needkey: "needkey",
			error: "keyerror",
			message: "keymessage",
			ready: "keyadded",
			close: "keyclose"
		}, {
			setMediaKeys: "msSetMediaKeys",
			MediaKeys: "MSMediaKeys",
			release: "close",
			needkey: "msneedkey",
			error: "mskeyerror",
			message: "mskeymessage",
			ready: "mskeyadded",
			close: "mskeyclose"
		}];
		function ft() {
			let t$2;
			const e$2 = this.context;
			function n$2(t$3, e$3) {
				for (let n$3 = 0; n$3 < e$3.length; n$3++) {
					const a$2 = e$3[n$3];
					if ("function" == typeof t$3[a$2[Object.keys(a$2)[0]]]) return a$2;
				}
				return null;
			}
			return t$2 = { createProtectionSystem: function(a$2) {
				let r$2 = null;
				const i$2 = Z(e$2).getInstance();
				i$2.setConfig({
					debug: a$2.debug,
					BASE64: a$2.BASE64,
					settings: a$2.settings
				}), i$2.initialize();
				let l$2 = function(a$3) {
					const r$3 = a$3.debug, i$3 = r$3.getLogger(t$2), l$3 = a$3.eventBus, o$2 = a$3.errHandler, s$2 = a$3.videoModel ? a$3.videoModel.getElement() : null;
					return s$2 && void 0 === s$2.onencrypted || s$2 && void 0 === s$2.mediaKeys ? n$2(s$2, ct) ? (i$3.info("EME detected on this user agent! (ProtectionModel_3Feb2014)"), ot(e$2).create({
						debug: r$3,
						eventBus: l$3,
						events: a$3.events,
						api: n$2(s$2, ct)
					})) : n$2(s$2, dt) ? (i$3.info("EME detected on this user agent! (ProtectionModel_01b)"), ut(e$2).create({
						debug: r$3,
						eventBus: l$3,
						errHandler: o$2,
						events: a$3.events,
						api: n$2(s$2, dt)
					})) : (i$3.warn("No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!"), null) : (i$3.info("EME detected on this user agent! (DefaultProtectionModel"), it(e$2).create({
						debug: r$3,
						eventBus: l$3,
						events: a$3.events
					}));
				}(a$2);
				return l$2 && (r$2 = E$1(e$2).create({
					BASE64: a$2.BASE64,
					cmcdModel: a$2.cmcdModel,
					constants: a$2.constants,
					customParametersModel: a$2.customParametersModel,
					debug: a$2.debug,
					eventBus: a$2.eventBus,
					events: a$2.events,
					protectionKeyController: i$2,
					protectionModel: l$2,
					settings: a$2.settings
				}), a$2.capabilities.setEncryptedMediaSupported(!0)), r$2;
			} }, t$2;
		}
		ft.__dashjs_factory_name = "Protection";
		const gt = dashjs.FactoryMaker.getClassFactory(ft);
		gt.events = J.default, gt.errors = d$1.default, dashjs.FactoryMaker.updateClassFactory(ft.__dashjs_factory_name, gt);
		var mt = gt;
	},
	445: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(7252);
		class r$1 extends a$1.default {
			constructor() {
				super(), this.INTERNAL_KEY_MESSAGE = "internalKeyMessage", this.INTERNAL_KEY_STATUSES_CHANGED = "internalkeyStatusesChanged", this.KEY_ADDED = "public_keyAdded", this.KEY_ERROR = "public_keyError", this.KEY_MESSAGE = "public_keyMessage", this.KEY_SESSION_CLOSED = "public_keySessionClosed", this.KEY_SESSION_CREATED = "public_keySessionCreated", this.KEY_SESSION_REMOVED = "public_keySessionRemoved", this.KEY_STATUSES_CHANGED = "public_keyStatusesChanged", this.KEY_STATUSES_MAP_UPDATED = "keyStatusesMapUpdated", this.KEY_SYSTEM_ACCESS_COMPLETE = "public_keySystemAccessComplete", this.KEY_SYSTEM_SELECTED = "public_keySystemSelected", this.LICENSE_REQUEST_COMPLETE = "public_licenseRequestComplete", this.LICENSE_REQUEST_SENDING = "public_licenseRequestSending", this.NEED_KEY = "needkey", this.PROTECTION_CREATED = "public_protectioncreated", this.PROTECTION_DESTROYED = "public_protectiondestroyed", this.SERVER_CERTIFICATE_UPDATED = "serverCertificateUpdated", this.TEARDOWN_COMPLETE = "protectionTeardownComplete", this.VIDEO_ELEMENT_SELECTED = "videoElementSelected", this.KEY_SESSION_UPDATED = "public_keySessionUpdated";
			}
		}
		e$1.default = new r$1();
	},
	1923: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(8748);
		class r$1 extends a$1.default {
			constructor() {
				super(), this.MEDIA_KEYERR_CODE = 100, this.MEDIA_KEYERR_UNKNOWN_CODE = 101, this.MEDIA_KEYERR_CLIENT_CODE = 102, this.MEDIA_KEYERR_SERVICE_CODE = 103, this.MEDIA_KEYERR_OUTPUT_CODE = 104, this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105, this.MEDIA_KEYERR_DOMAIN_CODE = 106, this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107, this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108, this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109, this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110, this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111, this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112, this.KEY_SESSION_CREATED_ERROR_CODE = 113, this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114, this.MEDIA_KEYERR_UNKNOWN_MESSAGE = "An unspecified error occurred. This value is used for errors that don't match any of the other codes.", this.MEDIA_KEYERR_CLIENT_MESSAGE = "The Key System could not be installed or updated.", this.MEDIA_KEYERR_SERVICE_MESSAGE = "The message passed into update indicated an error from the license service.", this.MEDIA_KEYERR_OUTPUT_MESSAGE = "There is no available output device with the required characteristics for the content protection system.", this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = "A hardware configuration change caused a content protection error.", this.MEDIA_KEYERR_DOMAIN_MESSAGE = "An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.", this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = "Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!", this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = "DRM: Empty key message from CDM", this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = "Error updating server certificate -- ", this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = "DRM: KeyStatusChange error! -- License has expired", this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = "DRM: No license server URL specified!", this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = "DRM: KeySystem Access Denied! -- ", this.KEY_SESSION_CREATED_ERROR_MESSAGE = "DRM: unable to create session! --", this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = "DRM: licenser error! --";
			}
		}
		e$1.default = new r$1();
	},
	559: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, { supportsMediaSource: function() {
			return s$1;
		} });
		var a$1 = n$1(138), r$1 = n$1(5212), i$1 = n$1(2861), l$1 = n$1(7393), o$1 = n$1(649);
		function s$1() {
			let t$2 = "ManagedMediaSource" in window, e$2 = "WebKitMediaSource" in window, n$2 = "MediaSource" in window;
			return t$2 || e$2 || n$2;
		}
		function u$1() {
			let t$2, e$2, n$2, a$2, u$2, d$1;
			const c$1 = this.context, f$1 = (0, l$1.default)(c$1).getInstance();
			function g$1(t$3, e$3) {
				let n$3;
				e$3 === r$1.default.VIDEO ? n$3 = function(t$4) {
					const e$4 = { video: {} };
					return t$4 ? (t$4.width && (e$4.video.width = t$4.width), t$4.height && (e$4.video.height = t$4.height), t$4.framerate && (e$4.video.framerate = parseFloat(t$4.framerate)), t$4.hdrMetadataType && (e$4.video.hdrMetadataType = t$4.hdrMetadataType), t$4.colorGamut && (e$4.video.colorGamut = t$4.colorGamut), t$4.transferFunction && (e$4.video.transferFunction = t$4.transferFunction), e$4) : e$4;
				}(t$3) : e$3 === r$1.default.AUDIO && (n$3 = function(t$4) {
					const e$4 = { audio: {} };
					return t$4.samplerate && (e$4.audio.samplerate = t$4.samplerate), e$4;
				}(t$3)), n$3[e$3].contentType = t$3.codec, n$3[e$3].bitrate = parseInt(t$3.bitrate), n$3.type = "media-source";
				let a$3 = t$3.codec;
				return t$3.width && t$3.height && (a$3 += ";width=\"" + t$3.width + "\";height=\"" + t$3.height + "\""), n$3.mediaSourceCodecString = a$3, function(t$4, e$4, n$4) {
					return e$4 && e$4.keySystemsMetadata && 0 !== e$4.keySystemsMetadata.length ? e$4.keySystemsMetadata.map(((e$5) => {
						const a$4 = { ...t$4 };
						if (e$5.ks) {
							a$4.keySystemConfiguration = {}, e$5.ks.systemString && (a$4.keySystemConfiguration.keySystem = e$5.ks.systemString);
							let t$5 = "";
							e$5.ks.systemString === i$1.default.WIDEVINE_KEYSTEM_STRING && (t$5 = i$1.default.ROBUSTNESS_STRINGS.WIDEVINE.SW_SECURE_CRYPTO);
							const l$2 = e$5.protData, o$2 = l$2 && l$2.audioRobustness && l$2.audioRobustness.length > 0 ? l$2.audioRobustness : t$5, s$2 = l$2 && l$2.videoRobustness && l$2.videoRobustness.length > 0 ? l$2.videoRobustness : t$5;
							n$4 === r$1.default.AUDIO ? a$4.keySystemConfiguration[n$4] = { robustness: o$2 } : n$4 === r$1.default.VIDEO && (a$4.keySystemConfiguration[n$4] = { robustness: s$2 });
						}
						return a$4;
					})) : [t$4];
				}(n$3, t$3, e$3);
			}
			function m$1(t$3) {
				if (a$2 && 0 !== a$2.length && t$3) return a$2.find(((e$3) => {
					const n$3 = h$1(t$3, e$3, r$1.default.AUDIO), a$3 = h$1(t$3, e$3, r$1.default.VIDEO), i$2 = h$1(t$3, e$3, "keySystemConfiguration");
					return n$3 && a$3 && i$2;
				}));
			}
			function h$1(t$3, e$3, n$3) {
				return !t$3[n$3] && !e$3[n$3] || !(!t$3[n$3] || !e$3[n$3]) && f$1.areEqual(t$3[n$3], e$3[n$3]);
			}
			function p$1(t$3, e$3) {
				return (t$3 = t$3.filter(((t$4) => !(t$4.schemeIdUri && e$3.some(((e$4) => e$4.schemeIdUri === t$4.schemeIdUri)))))).push(...e$3), t$3;
			}
			return t$2 = {
				areKeyIdsExpired: function(t$3) {
					return !!(n$2 && t$3 && t$3.normalizedKeyIds && 0 !== t$3.normalizedKeyIds.size) && n$2.areKeyIdsExpired(t$3.normalizedKeyIds);
				},
				areKeyIdsUsable: function(t$3) {
					return !(n$2 && t$3 && t$3.normalizedKeyIds && 0 !== t$3.normalizedKeyIds.size) || n$2.areKeyIdsUsable(t$3.normalizedKeyIds);
				},
				isCodecSupportedBasedOnTestedConfigurations: function(t$3, e$3) {
					if (!t$3 || !t$3.codec || !1 === t$3.isSupported) return !1;
					const n$3 = g$1(t$3, e$3).map(((t$4) => m$1(t$4))).filter(((t$4) => null != t$4));
					return !(n$3 && n$3.length > 0) || function(t$4) {
						return t$4.some(((t$5) => t$5 && t$5.decodingInfo && t$5.decodingInfo.supported));
					}(n$3);
				},
				isProtectionCompatible: function(t$3, e$3) {
					return !e$3 || !(!t$3.isEncrypted && e$3.isEncrypted);
				},
				runCodecSupportCheck: function(t$3, n$3) {
					if (n$3 !== r$1.default.AUDIO && n$3 !== r$1.default.VIDEO) return Promise.resolve();
					const i$2 = g$1(t$3, n$3);
					return function(t$4, n$4) {
						return e$2.get().streaming.capabilities.useMediaCapabilitiesApi && navigator.mediaCapabilities && navigator.mediaCapabilities.decodingInfo && (t$4.codec && n$4 === r$1.default.AUDIO || n$4 === r$1.default.VIDEO && t$4.codec && t$4.width && t$4.height && t$4.bitrate && t$4.framerate);
					}(t$3, n$3) ? function(t$4) {
						return new Promise(((e$3) => {
							if (!t$4 || 0 === t$4.length) return void e$3();
							const n$4 = t$4.map(((t$5) => function(t$6) {
								return new Promise(((e$4) => {
									m$1(t$6) ? e$4() : navigator.mediaCapabilities.decodingInfo(t$6).then(((n$5) => {
										t$6.decodingInfo = n$5, a$2.push(t$6), e$4();
									})).catch(((n$5) => {
										t$6.decodingInfo = { supported: !1 }, a$2.push(t$6), d$1.error(n$5), e$4();
									}));
								}));
							}(t$5)));
							Promise.allSettled(n$4).then((() => {
								e$3();
							})).catch(((t$5) => {
								d$1.error(t$5), e$3();
							}));
						}));
					}(i$2) : (function(t$4) {
						if (!t$4 || !t$4.length) return;
						const e$3 = t$4[0];
						if (m$1(e$3)) return;
						let n$4 = { supported: !1 };
						("ManagedMediaSource" in window && ManagedMediaSource.isTypeSupported(e$3.mediaSourceCodecString) || "MediaSource" in window && MediaSource.isTypeSupported(e$3.mediaSourceCodecString) || "WebKitMediaSource" in window && WebKitMediaSource.isTypeSupported(e$3.mediaSourceCodecString)) && (n$4.supported = !0), e$3.decodingInfo = n$4, a$2.push(e$3);
					}(i$2), Promise.resolve());
				},
				setConfig: function(t$3) {
					t$3 && (t$3.settings && (e$2 = t$3.settings), t$3.protectionController && (n$2 = t$3.protectionController));
				},
				setEncryptedMediaSupported: function(t$3) {
					u$2 = t$3;
				},
				setProtectionController: function(t$3) {
					n$2 = t$3;
				},
				supportsChangeType: function() {
					return !!window.SourceBuffer && !!SourceBuffer.prototype && !!SourceBuffer.prototype.changeType;
				},
				supportsEncryptedMedia: function() {
					return u$2;
				},
				supportsEssentialProperty: function(t$3) {
					let n$3 = e$2.get().streaming.capabilities.supportedEssentialProperties;
					e$2.get().streaming.capabilities.useMediaCapabilitiesApi && e$2.get().streaming.capabilities.filterVideoColorimetryEssentialProperties && (n$3 = p$1(n$3, [
						{ schemeIdUri: r$1.default.COLOUR_PRIMARIES_SCHEME_ID_URI },
						{ schemeIdUri: r$1.default.MATRIX_COEFFICIENTS_SCHEME_ID_URI },
						{ schemeIdUri: r$1.default.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI }
					])), e$2.get().streaming.capabilities.useMediaCapabilitiesApi && e$2.get().streaming.capabilities.filterHDRMetadataFormatEssentialProperties && (n$3 = p$1(n$3, [{ schemeIdUri: r$1.default.HDR_METADATA_FORMAT_SCHEME_ID_URI }]));
					try {
						return t$3.inArray(n$3);
					} catch (t$4) {
						return !0;
					}
				},
				supportsMediaSource: s$1
			}, u$2 = !1, a$2 = [], d$1 = (0, o$1.default)(c$1).getInstance().getLogger(t$2), t$2;
		}
		u$1.__dashjs_factory_name = "Capabilities", e$1.default = a$1.default.getSingletonFactory(u$1);
	},
	7377: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(138), r$1 = n$1(656);
		function i$1() {
			return {
				customTimeRangeArray: [],
				length: 0,
				add: function(t$2, e$2) {
					let n$2;
					for (n$2 = 0; n$2 < this.customTimeRangeArray.length && t$2 > this.customTimeRangeArray[n$2].start; n$2++);
					for (this.customTimeRangeArray.splice(n$2, 0, {
						start: t$2,
						end: e$2
					}), n$2 = 0; n$2 < this.customTimeRangeArray.length - 1; n$2++) this.mergeRanges(n$2, n$2 + 1) && n$2--;
					this.length = this.customTimeRangeArray.length;
				},
				clear: function() {
					this.customTimeRangeArray = [], this.length = 0;
				},
				remove: function(t$2, e$2) {
					for (let n$2 = 0; n$2 < this.customTimeRangeArray.length; n$2++) if (t$2 <= this.customTimeRangeArray[n$2].start && e$2 >= this.customTimeRangeArray[n$2].end) this.customTimeRangeArray.splice(n$2, 1), n$2--;
					else {
						if (t$2 > this.customTimeRangeArray[n$2].start && e$2 < this.customTimeRangeArray[n$2].end) {
							this.customTimeRangeArray.splice(n$2 + 1, 0, {
								start: e$2,
								end: this.customTimeRangeArray[n$2].end
							}), this.customTimeRangeArray[n$2].end = t$2;
							break;
						}
						t$2 > this.customTimeRangeArray[n$2].start && t$2 < this.customTimeRangeArray[n$2].end ? this.customTimeRangeArray[n$2].end = t$2 : e$2 > this.customTimeRangeArray[n$2].start && e$2 < this.customTimeRangeArray[n$2].end && (this.customTimeRangeArray[n$2].start = e$2);
					}
					this.length = this.customTimeRangeArray.length;
				},
				mergeRanges: function(t$2, e$2) {
					let n$2 = this.customTimeRangeArray[t$2], a$2 = this.customTimeRangeArray[e$2];
					return n$2.start <= a$2.start && a$2.start <= n$2.end && n$2.end <= a$2.end ? (n$2.end = a$2.end, this.customTimeRangeArray.splice(e$2, 1), !0) : a$2.start <= n$2.start && n$2.start <= a$2.end && a$2.end <= n$2.end ? (n$2.start = a$2.start, this.customTimeRangeArray.splice(e$2, 1), !0) : a$2.start <= n$2.start && n$2.start <= a$2.end && n$2.end <= a$2.end ? (this.customTimeRangeArray.splice(t$2, 1), !0) : n$2.start <= a$2.start && a$2.start <= n$2.end && a$2.end <= n$2.end && (this.customTimeRangeArray.splice(e$2, 1), !0);
				},
				start: function(t$2) {
					return (0, r$1.checkInteger)(t$2), t$2 >= this.customTimeRangeArray.length || t$2 < 0 ? NaN : this.customTimeRangeArray[t$2].start;
				},
				end: function(t$2) {
					return (0, r$1.checkInteger)(t$2), t$2 >= this.customTimeRangeArray.length || t$2 < 0 ? NaN : this.customTimeRangeArray[t$2].end;
				}
			};
		}
		i$1.__dashjs_factory_name = "CustomTimeRanges", e$1.default = a$1.default.getClassFactory(i$1);
	},
	7393: function(t$1, e$1, n$1) {
		n$1.r(e$1);
		var a$1 = n$1(138), r$1 = n$1(7316);
		function i$1() {
			let t$2;
			return t$2 = { areEqual: function(t$3, e$2) {
				return r$1(t$3, e$2);
			} }, t$2;
		}
		i$1.__dashjs_factory_name = "ObjectUtils", e$1.default = a$1.default.getSingletonFactory(i$1);
	},
	656: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, {
			checkInteger: function() {
				return i$1;
			},
			checkIsVideoOrAudioType: function() {
				return o$1;
			},
			checkParameterType: function() {
				return r$1;
			},
			checkRange: function() {
				return l$1;
			}
		});
		var a$1 = n$1(5212);
		function r$1(t$2, e$2) {
			if (typeof t$2 !== e$2) throw a$1.default.BAD_ARGUMENT_ERROR;
		}
		function i$1(t$2) {
			if (null === t$2 || isNaN(t$2) || t$2 % 1 != 0) throw a$1.default.BAD_ARGUMENT_ERROR + " : argument is not an integer";
		}
		function l$1(t$2, e$2, n$2) {
			if (t$2 < e$2 || t$2 > n$2) throw a$1.default.BAD_ARGUMENT_ERROR + " : argument out of range";
		}
		function o$1(t$2) {
			if ("string" != typeof t$2 || t$2 !== a$1.default.AUDIO && t$2 !== a$1.default.VIDEO) throw a$1.default.BAD_ARGUMENT_ERROR;
		}
	},
	1944: function(t$1, e$1, n$1) {
		n$1.r(e$1), e$1.default = class {
			constructor(t$2, e$2, n$2) {
				this.code = t$2 || null, this.message = e$2 || null, this.data = n$2 || null;
			}
		};
	},
	7568: function(t$1, e$1, n$1) {
		n$1.r(e$1), n$1.d(e$1, {
			HTTPRequest: function() {
				return a$1;
			},
			HTTPRequestTrace: function() {
				return r$1;
			}
		});
		class a$1 {
			constructor() {
				this.tcpid = null, this.type = null, this.url = null, this.actualurl = null, this.range = null, this.trequest = null, this.tresponse = null, this.responsecode = null, this.interval = null, this.trace = [], this.cmsd = null, this._stream = null, this._tfinish = null, this._mediaduration = null, this._responseHeaders = null, this._serviceLocation = null, this._fileLoaderType = null, this._resourceTimingValues = null;
			}
		}
		class r$1 {
			constructor() {
				this.s = null, this.d = null, this.b = [];
			}
		}
		a$1.GET = "GET", a$1.HEAD = "HEAD", a$1.MPD_TYPE = "MPD", a$1.XLINK_EXPANSION_TYPE = "XLinkExpansion", a$1.INIT_SEGMENT_TYPE = "InitializationSegment", a$1.INDEX_SEGMENT_TYPE = "IndexSegment", a$1.MEDIA_SEGMENT_TYPE = "MediaSegment", a$1.BITSTREAM_SWITCHING_SEGMENT_TYPE = "BitstreamSwitchingSegment", a$1.MSS_FRAGMENT_INFO_SEGMENT_TYPE = "FragmentInfoSegment", a$1.DVB_REPORTING_TYPE = "DVBReporting", a$1.LICENSE = "license", a$1.CONTENT_STEERING_TYPE = "ContentSteering", a$1.OTHER_TYPE = "other";
	}
}, e = {};
function n(a$1) {
	var r$1 = e[a$1];
	if (void 0 !== r$1) return r$1.exports;
	var i$1 = e[a$1] = { exports: {} };
	return t[a$1].call(i$1.exports, i$1, i$1.exports, n), i$1.exports;
}
n.amdO = {}, n.d = function(t$1, e$1) {
	for (var a$1 in e$1) n.o(e$1, a$1) && !n.o(t$1, a$1) && Object.defineProperty(t$1, a$1, {
		enumerable: !0,
		get: e$1[a$1]
	});
}, n.g = function() {
	if ("object" == typeof globalThis) return globalThis;
	try {
		return this || new Function("return this")();
	} catch (t$1) {
		if ("object" == typeof window) return window;
	}
}(), n.o = function(t$1, e$1) {
	return Object.prototype.hasOwnProperty.call(t$1, e$1);
}, n.r = function(t$1) {
	"undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t$1, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t$1, "__esModule", { value: !0 });
};
var r = {};
n.r(r), n.d(r, {
	Constants: function() {
		return m.default;
	},
	Debug: function() {
		return g.default;
	},
	MediaPlayer: function() {
		return i.MediaPlayer;
	},
	MediaPlayerFactory: function() {
		return f;
	},
	MetricsReporting: function() {
		return l.default;
	},
	Protection: function() {
		return o.default;
	},
	default: function() {
		return p;
	},
	supportsMediaSource: function() {
		return h.supportsMediaSource;
	}
});
var i = n(5393), l = n(4469), o = n(3888), u = n(255);
var d, c = function() {
	const t$1 = "application/dash+xml";
	let e$1;
	function n$1(n$2, a$2, r$1) {
		if (!n$2 || !/^VIDEO$/i.test(n$2.nodeName)) return null;
		if (n$2._dashjs_player) return n$2._dashjs_player;
		let i$1, l$1 = n$2.id || n$2.name || "video element";
		if (!(a$2 = a$2 || [].slice.call(n$2.querySelectorAll("source")).filter((function(e$2) {
			return e$2.type == t$1;
		}))[0]) && n$2.src) (a$2 = document.createElement("source")).src = n$2.src;
		else if (!a$2 && !n$2.src) return null;
		return r$1 = r$1 || {}, i$1 = (0, u.default)(r$1).create(), i$1.initialize(n$2, a$2.src, n$2.autoplay), e$1 || (e$1 = i$1.getDebug().getLogger()), e$1.debug("Converted " + l$1 + " to dash.js player and added content: " + a$2.src), n$2._dashjs_player = i$1, i$1;
	}
	function a$1(t$2) {
		return /^VIDEO$/i.test(t$2.nodeName) ? t$2 : a$1(t$2.parentNode);
	}
	return {
		create: n$1,
		createAll: function(e$2, r$1) {
			let i$1 = [];
			e$2 = e$2 || "[data-dashjs-player]";
			let l$1 = (r$1 = r$1 || document).querySelectorAll(e$2);
			for (let t$2 = 0; t$2 < l$1.length; t$2++) {
				let e$3 = n$1(l$1[t$2], null);
				i$1.push(e$3);
			}
			let o$1 = r$1.querySelectorAll("source[type=\"" + t$1 + "\"]");
			for (let t$2 = 0; t$2 < o$1.length; t$2++) {
				let e$3 = n$1(a$1(o$1[t$2]), null);
				i$1.push(e$3);
			}
			return i$1;
		}
	};
}();
!("undefined" != typeof window && window && window.dashjs && window.dashjs.skipAutoCreate) && "undefined" != typeof window && window && window.addEventListener && ("complete" === window.document.readyState ? window.dashjs ? c.createAll() : d = window.setInterval((function() {
	window.dashjs && (window.clearInterval(d), c.createAll());
}), 500) : window.addEventListener("load", (function t$1() {
	window.removeEventListener("load", t$1), c.createAll();
})));
var f = c, g = n(649), m = n(5212), h = n(559);
dashjs.Protection = o.default, dashjs.MetricsReporting = l.default, dashjs.MediaPlayerFactory = f, dashjs.Debug = g.default, dashjs.supportsMediaSource = h.supportsMediaSource, dashjs.Constants = m.default;
var p = dashjs, b = (r = r.default).Constants, y = r.Debug, E = r.MediaPlayer, _ = r.MediaPlayerFactory, T = r.MetricsReporting, v = r.Protection, w = r.default, S = r.supportsMediaSource;

//#endregion
export { E as MediaPlayer };
//# sourceMappingURL=dash.all.min-BHKXzsSj.js.map