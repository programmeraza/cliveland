{"version":3,"file":"TransitionGroupContext-CJ4Ozc7E.js","names":["setPrototypeOf"],"sources":["../../@mui/utils/esm/useForkRef/useForkRef.js","../../@mui/material/esm/utils/useForkRef.js","../../@mui/utils/esm/chainPropTypes/chainPropTypes.js","../../@babel/runtime/helpers/esm/inheritsLoose.js","../../react-transition-group/esm/TransitionGroupContext.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\n/**\n * Merges refs into a single memoized callback ref or `null`.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  const cleanupRef = React.useRef(undefined);\n  const refEffect = React.useCallback(instance => {\n    const cleanups = refs.map(ref => {\n      if (ref == null) {\n        return null;\n      }\n      if (typeof ref === 'function') {\n        const refCallback = ref;\n        const refCleanup = refCallback(instance);\n        return typeof refCleanup === 'function' ? refCleanup : () => {\n          refCallback(null);\n        };\n      }\n      ref.current = instance;\n      return () => {\n        ref.current = null;\n      };\n    });\n    return () => {\n      cleanups.forEach(refCleanup => refCleanup?.());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return value => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n        cleanupRef.current = undefined;\n      }\n      if (value != null) {\n        cleanupRef.current = refEffect(value);\n      }\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nexport default useForkRef;","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","import React from 'react';\nexport default React.createContext(null);"],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,SAAwB,WAAW,GAAG,MAAM;CAC1C,MAAM,0BAAmB,OAAO,OAAU;CAC1C,MAAM,yBAAkB,aAAY,aAAY;EAC9C,MAAM,WAAW,KAAK,KAAI,QAAO;AAC/B,OAAI,OAAO,KACT,QAAO;AAET,OAAI,OAAO,QAAQ,YAAY;IAC7B,MAAM,cAAc;IACpB,MAAM,aAAa,YAAY,SAAS;AACxC,WAAO,OAAO,eAAe,aAAa,mBAAmB;AAC3D,iBAAY,KAAK;;;AAGrB,OAAI,UAAU;AACd,gBAAa;AACX,QAAI,UAAU;;IAEhB;AACF,eAAa;AACX,YAAS,SAAQ,eAAc,cAAc,CAAC;;IAG/C,KAAK;AACR,qBAAa,cAAc;AACzB,MAAI,KAAK,OAAM,QAAO,OAAO,KAAK,CAChC,QAAO;AAET,UAAO,UAAS;AACd,OAAI,WAAW,SAAS;AACtB,eAAW,SAAS;AACpB,eAAW,UAAU;;AAEvB,OAAI,SAAS,KACX,YAAW,UAAU,UAAU,MAAM;;IAKxC,KAAK;;;;;ACvDV,yBAAe;;;;ACHf,SAAwB,eAAe,WAAW,WAAW;AAI3D,QAAO,SAAS,SAAS,GAAG,MAAM;AAChC,SAAO,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK;;;;;;ACJnD,SAAS,eAAe,GAAG,GAAG;AAC5B,GAAE,YAAY,OAAO,OAAO,EAAE,UAAU,EAAE,EAAE,UAAU,cAAc,GAAGA,gBAAe,GAAG,EAAE;;;;;ACD7F,kDAAqB,cAAc,KAAK"}