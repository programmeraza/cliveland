{"version":3,"file":"useSlot-CXXi_ea1.js","names":["PropTypes","isHostComponent","joinedClasses","clsx","mergedStyle","props","extractEventHandlers","omitEventHandlers","resolveComponentProps","mergeSlotProps","appendOwnerState"],"sources":["../../@mui/utils/esm/useLazyRef/useLazyRef.js","../../@mui/utils/esm/useOnMount/useOnMount.js","../../@mui/utils/esm/useTimeout/useTimeout.js","../../@mui/utils/esm/elementTypeAcceptingRef/elementTypeAcceptingRef.js","../../@mui/material/esm/Accordion/AccordionContext.js","../../@mui/utils/esm/isHostComponent/isHostComponent.js","../../@mui/utils/esm/appendOwnerState/appendOwnerState.js","../../@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","../../@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","../../@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","../../@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","../../@mui/material/esm/utils/useSlot.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","'use client';\n\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\nimport useOnMount from \"../useOnMount/useOnMount.js\";\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = null;\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== null) {\n      clearTimeout(this.currentId);\n      this.currentId = null;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","import PropTypes from 'prop-types';\nimport chainPropTypes from \"../chainPropTypes/index.js\";\nfunction isClassComponent(elementType) {\n  // elementType.prototype?.isReactComponent\n  const {\n    prototype = {}\n  } = elementType;\n  return Boolean(prototype.isReactComponent);\n}\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\n  const propValue = props[propName];\n  const safePropName = propFullName || propName;\n  if (propValue == null ||\n  // When server-side rendering React doesn't warn either.\n  // This is not an accurate check for SSR.\n  // This is only in place for emotion compat.\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\n  typeof window === 'undefined') {\n    return null;\n  }\n  let warningHint;\n\n  /**\n   * Blacklisting instead of whitelisting\n   *\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\n   * trigger a warning in React.\n   * We can't whitelist because there is no safe way to detect React.forwardRef\n   * or class components. \"Safe\" means there's no public API.\n   *\n   */\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\n    warningHint = 'Did you accidentally provide a plain function component instead?';\n  }\n  if (warningHint !== undefined) {\n    return new Error(`Invalid ${location} \\`${safePropName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element type that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\n  }\n  return null;\n}\nexport default chainPropTypes(PropTypes.elementType, elementTypeAcceptingRef);","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\nconst AccordionContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\nexport default AccordionContext;","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n    className,\n    elementType: initialElementType,\n    ownerState,\n    externalForwardedProps,\n    internalForwardedProps,\n    shouldForwardComponentProp = false,\n    ...useSlotPropsParams\n  } = parameters;\n  const {\n    component: rootComponent,\n    slots = {\n      [name]: undefined\n    },\n    slotProps = {\n      [name]: undefined\n    },\n    ...other\n  } = externalForwardedProps;\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const {\n    props: {\n      component: slotComponent,\n      ...mergedProps\n    },\n    internalRef\n  } = mergeSlotProps({\n    className,\n    ...useSlotPropsParams,\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.ref);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, {\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\n    ...mergedProps,\n    ...(LeafComponent && !shouldForwardComponentProp && {\n      as: LeafComponent\n    }),\n    ...(LeafComponent && shouldForwardComponentProp && {\n      component: LeafComponent\n    }),\n    ref\n  }, ownerState);\n  return [elementType, props];\n}"],"mappings":"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"}